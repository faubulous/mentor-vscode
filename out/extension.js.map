{
  "version": 3,
  "sources": ["../node_modules/tslib/tslib.es6.js", "../node_modules/n3/src/IRIs.js", "../node_modules/queue-microtask/index.js", "../node_modules/n3/src/N3Lexer.js", "../node_modules/n3/src/N3Util.js", "../node_modules/n3/src/N3DataFactory.js", "../node_modules/n3/src/N3Parser.js", "../node_modules/n3/src/N3Writer.js", "../node_modules/readable-stream/lib/ours/primordials.js", "../node_modules/readable-stream/lib/ours/util.js", "../node_modules/event-target-shim/src/event.mjs", "../node_modules/event-target-shim/src/event-target.mjs", "../node_modules/abort-controller/src/abort-signal.ts", "../node_modules/abort-controller/src/abort-controller.ts", "../node_modules/readable-stream/lib/ours/errors.js", "../node_modules/readable-stream/lib/internal/validators.js", "../node_modules/process/index.js", "../node_modules/readable-stream/lib/internal/streams/utils.js", "../node_modules/readable-stream/lib/internal/streams/end-of-stream.js", "../node_modules/readable-stream/lib/internal/streams/destroy.js", "../node_modules/readable-stream/lib/internal/streams/legacy.js", "../node_modules/readable-stream/lib/internal/streams/add-abort-signal.js", "../node_modules/readable-stream/lib/internal/streams/buffer_list.js", "../node_modules/readable-stream/lib/internal/streams/state.js", "../node_modules/readable-stream/lib/internal/streams/from.js", "../node_modules/readable-stream/lib/internal/streams/readable.js", "../node_modules/readable-stream/lib/internal/streams/writable.js", "../node_modules/readable-stream/lib/internal/streams/duplexify.js", "../node_modules/readable-stream/lib/internal/streams/duplex.js", "../node_modules/readable-stream/lib/internal/streams/transform.js", "../node_modules/readable-stream/lib/internal/streams/passthrough.js", "../node_modules/readable-stream/lib/internal/streams/pipeline.js", "../node_modules/readable-stream/lib/internal/streams/compose.js", "../node_modules/readable-stream/lib/internal/streams/operators.js", "../node_modules/readable-stream/lib/stream/promises.js", "../node_modules/readable-stream/lib/stream.js", "../node_modules/readable-stream/lib/ours/index.js", "../node_modules/n3/src/N3Store.js", "../node_modules/n3/src/N3StreamParser.js", "../node_modules/n3/src/N3StreamWriter.js", "../node_modules/n3/src/index.js", "../node_modules/@faubulous/mentor-rdf/src/ontologies/owl.ts", "../node_modules/@faubulous/mentor-rdf/src/ontologies/rdf.ts", "../node_modules/@faubulous/mentor-rdf/src/ontologies/rdfa.ts", "../node_modules/@faubulous/mentor-rdf/src/ontologies/rdfs.ts", "../node_modules/@faubulous/mentor-rdf/src/ontologies/shacl.ts", "../node_modules/@faubulous/mentor-rdf/src/ontologies/skos.ts", "../node_modules/@faubulous/mentor-rdf/src/ontologies/xsd.ts", "../node_modules/@faubulous/mentor-rdf/src/ontologies/index.ts", "../node_modules/@faubulous/mentor-rdf/src/rdf/resource-repository.ts", "../node_modules/@faubulous/mentor-rdf/src/rdf/class-repository.ts", "../node_modules/@faubulous/mentor-rdf/src/rdf/property-repository.ts", "../node_modules/@faubulous/mentor-rdf/src/rdf/individual-repository.ts", "../node_modules/@faubulous/mentor-rdf/src/rdf/rdfs-reasoner.ts", "../node_modules/@faubulous/mentor-rdf/src/rdf/owl-reasoner.ts", "../node_modules/@faubulous/mentor-rdf/src/rdf/store-factory.ts", "../node_modules/@faubulous/mentor-rdf/src/rdf/vocabulary-generator.ts", "../node_modules/@faubulous/mentor-rdf/src/rdf/index.ts", "../node_modules/@faubulous/mentor-rdf/src/index.ts", "../node_modules/millan/dist/webpack:/millan/webpack/universalModuleDefinition", "../node_modules/millan/dist/webpack:/millan/webpack/bootstrap", "../node_modules/millan/dist/webpack:/millan/src/helpers/chevrotain/tokens.ts", "../node_modules/millan/dist/webpack:/millan/src/sparql/keywords.ts", "../node_modules/millan/dist/webpack:/millan/node_modules/chevrotain/lib/src/api.js", "../node_modules/millan/dist/webpack:/millan/src/helpers/regex.ts", "../node_modules/millan/dist/webpack:/millan/src/helpers/matchers.ts", "../node_modules/millan/dist/webpack:/millan/node_modules/chevrotain/lib/src/utils/utils.js", "../node_modules/millan/dist/webpack:/millan/src/sparql/terminals.ts", "../node_modules/millan/dist/webpack:/millan/node_modules/chevrotain/lib/src/parse/grammar/gast/gast_public.js", "../node_modules/millan/dist/webpack:/millan/node_modules/chevrotain/lib/src/scan/tokens_public.js", "../node_modules/millan/dist/webpack:/millan/node_modules/chevrotain/lib/src/parse/parser/parser.js", "../node_modules/millan/dist/webpack:/millan/src/sparql/tokens.ts", "../node_modules/millan/dist/webpack:/millan/node_modules/chevrotain/lib/src/lang/lang_extensions.js", "../node_modules/millan/dist/webpack:/millan/node_modules/chevrotain/lib/src/parse/grammar/gast/gast_visitor_public.js", "../node_modules/millan/dist/webpack:/millan/src/helpers/chevrotain/cst.ts", "../node_modules/millan/dist/webpack:/millan/node_modules/chevrotain/lib/src/parse/exceptions_public.js", "../node_modules/millan/dist/webpack:/millan/node_modules/chevrotain/lib/src/scan/tokens.js", "../node_modules/millan/dist/webpack:/millan/node_modules/chevrotain/lib/src/parse/grammar/gast/gast.js", "../node_modules/millan/dist/webpack:/millan/node_modules/chevrotain/lib/src/parse/grammar/keys.js", "../node_modules/millan/dist/webpack:/millan/node_modules/chevrotain/lib/src/parse/errors_public.js", "../node_modules/millan/dist/webpack:/millan/node_modules/chevrotain/lib/src/parse/grammar/checks.js", "../node_modules/millan/dist/webpack:/millan/node_modules/chevrotain/lib/src/parse/grammar/lookahead.js", "../node_modules/millan/dist/webpack:/millan/node_modules/chevrotain/lib/src/parse/grammar/interpreter.js", "../node_modules/millan/dist/webpack:/millan/src/sparql/BaseSparqlParser.ts", "../node_modules/millan/dist/webpack:/millan/node_modules/chevrotain/lib/src/parse/grammar/rest.js", "../node_modules/millan/dist/webpack:/millan/node_modules/chevrotain/lib/src/scan/lexer_public.js", "../node_modules/millan/dist/webpack:/millan/node_modules/chevrotain/lib/src/parse/cst/cst.js", "../node_modules/millan/dist/webpack:/millan/node_modules/chevrotain/lib/src/version.js", "../node_modules/millan/dist/webpack:/millan/src/helpers/chevrotain/types.ts", "../node_modules/millan/dist/webpack:/millan/src/helpers/unescape.ts", "../node_modules/millan/dist/webpack:/millan/src/turtle/tokens.ts", "../node_modules/millan/dist/webpack:/millan/node_modules/regexp-to-ast/lib/regexp-to-ast.js", "../node_modules/millan/dist/webpack:/millan/node_modules/chevrotain/lib/src/scan/lexer_errors_public.js", "../node_modules/millan/dist/webpack:/millan/node_modules/chevrotain/lib/src/parse/grammar/first.js", "../node_modules/millan/dist/webpack:/millan/node_modules/chevrotain/lib/src/parse/constants.js", "../node_modules/millan/dist/webpack:/millan/node_modules/chevrotain/lib/src/parse/gast_builder.js", "../node_modules/millan/dist/webpack:/millan/node_modules/chevrotain/lib/src/parse/grammar/gast/gast_resolver_public.js", "../node_modules/millan/dist/webpack:/millan/node_modules/chevrotain/lib/src/parse/parser/traits/recoverable.js", "../node_modules/millan/dist/webpack:/millan/src/turtle/TurtleParser.ts", "../node_modules/millan/dist/webpack:/millan/src/sparql/StardogSparqlParser.ts", "../node_modules/millan/dist/webpack:/millan/node_modules/chevrotain/lib/src/parse/grammar/follow.js", "../node_modules/millan/dist/webpack:/millan/node_modules/chevrotain/lib/src/scan/lexer.js", "../node_modules/millan/dist/webpack:/millan/node_modules/chevrotain/lib/src/scan/reg_exp.js", "../node_modules/millan/dist/webpack:/millan/node_modules/chevrotain/lib/src/text/range.js", "../node_modules/millan/dist/webpack:/millan/node_modules/chevrotain/lib/src/parse/grammar/resolver.js", "../node_modules/millan/dist/webpack:/millan/node_modules/chevrotain/lib/src/parse/parser/traits/looksahead.js", "../node_modules/millan/dist/webpack:/millan/node_modules/chevrotain/lib/src/parse/parser/traits/tree_builder.js", "../node_modules/millan/dist/webpack:/millan/node_modules/chevrotain/lib/src/parse/cst/cst_visitor.js", "../node_modules/millan/dist/webpack:/millan/node_modules/chevrotain/lib/src/parse/parser/traits/lexer_adapter.js", "../node_modules/millan/dist/webpack:/millan/node_modules/chevrotain/lib/src/parse/parser/traits/recognizer_api.js", "../node_modules/millan/dist/webpack:/millan/node_modules/chevrotain/lib/src/parse/parser/traits/recognizer_engine.js", "../node_modules/millan/dist/webpack:/millan/node_modules/chevrotain/lib/src/parse/parser/traits/error_handler.js", "../node_modules/millan/dist/webpack:/millan/node_modules/chevrotain/lib/src/parse/parser/traits/context_assist.js", "../node_modules/millan/dist/webpack:/millan/node_modules/chevrotain/lib/src/diagrams/render_public.js", "../node_modules/millan/dist/webpack:/millan/node_modules/chevrotain/lib/src/generate/generate_public.js", "../node_modules/millan/dist/webpack:/millan/node_modules/chevrotain/lib/src/generate/generate.js", "../node_modules/millan/dist/webpack:/millan/src/sparql/W3SpecSparqlParser.ts", "../node_modules/millan/dist/webpack:/millan/src/graphql/BaseGraphQlParser.ts", "../node_modules/millan/dist/webpack:/millan/src/graphql/utils.ts", "../node_modules/millan/dist/webpack:/millan/src/sparql/index.ts", "../node_modules/millan/dist/webpack:/millan/src/graphql/tokens.ts", "../node_modules/millan/dist/webpack:/millan/node_modules/lodash.isequal/index.js", "../node_modules/millan/dist/webpack:/millan/src/srs/tokens.ts", "../node_modules/millan/dist/webpack:/millan/src/trig/TrigParser.ts", "../node_modules/millan/dist/webpack:/millan/src/trig/tokens.ts", "../node_modules/millan/dist/webpack:/millan/src/sms/SmsParser.ts", "../node_modules/millan/dist/webpack:/millan/src/sms/tokens.ts", "../node_modules/millan/dist/webpack:/millan/src/graphql/StandardGraphQlParser.ts", "../node_modules/millan/dist/webpack:/millan/src/srs/visitor.ts", "../node_modules/millan/dist/webpack:/millan/src/turtle/defaultNamespaces.ts", "../node_modules/millan/dist/webpack:/millan/src/srs/customErrors.ts", "../node_modules/millan/dist/webpack:/millan/src/srs/SrsParser.ts", "../node_modules/millan/dist/webpack:/millan/src/shacl/visitor.ts", "../node_modules/millan/dist/webpack:/millan/src/shacl/ShaclParser.ts", "../node_modules/millan/dist/webpack:/millan/node_modules/memoize-one/dist/memoize-one.esm.js", "../node_modules/millan/dist/webpack:/millan/src/shacl/tokens.ts", "../node_modules/millan/dist/webpack:/millan/src/graphql/StardogGraphQlVisitor.ts", "../node_modules/millan/dist/webpack:/millan/src/graphql/StardogGraphQlParser.ts", "../node_modules/millan/dist/webpack:/millan/node_modules/escape-string-regexp/index.js", "../node_modules/millan/dist/webpack:/millan/(webpack)/buildin/global.js", "../node_modules/millan/dist/webpack:/millan/(webpack)/buildin/module.js", "../node_modules/millan/dist/webpack:/millan/src/index.ts", "../node_modules/vscode-languageclient/lib/common/utils/is.js", "../node_modules/vscode-jsonrpc/lib/common/is.js", "../node_modules/vscode-jsonrpc/lib/common/messages.js", "../node_modules/vscode-jsonrpc/lib/common/linkedMap.js", "../node_modules/vscode-jsonrpc/lib/common/disposable.js", "../node_modules/vscode-jsonrpc/lib/common/ral.js", "../node_modules/vscode-jsonrpc/lib/common/events.js", "../node_modules/vscode-jsonrpc/lib/common/cancellation.js", "../node_modules/vscode-jsonrpc/lib/common/sharedArrayCancellation.js", "../node_modules/vscode-jsonrpc/lib/common/semaphore.js", "../node_modules/vscode-jsonrpc/lib/common/messageReader.js", "../node_modules/vscode-jsonrpc/lib/common/messageWriter.js", "../node_modules/vscode-jsonrpc/lib/common/messageBuffer.js", "../node_modules/vscode-jsonrpc/lib/common/connection.js", "../node_modules/vscode-jsonrpc/lib/common/api.js", "../node_modules/vscode-jsonrpc/lib/node/ril.js", "../node_modules/vscode-jsonrpc/lib/node/main.js", "../node_modules/vscode-jsonrpc/node.js", "../node_modules/vscode-languageserver-types/lib/umd/main.js", "../node_modules/vscode-languageserver-protocol/lib/common/messages.js", "../node_modules/vscode-languageserver-protocol/lib/common/utils/is.js", "../node_modules/vscode-languageserver-protocol/lib/common/protocol.implementation.js", "../node_modules/vscode-languageserver-protocol/lib/common/protocol.typeDefinition.js", "../node_modules/vscode-languageserver-protocol/lib/common/protocol.workspaceFolder.js", "../node_modules/vscode-languageserver-protocol/lib/common/protocol.configuration.js", "../node_modules/vscode-languageserver-protocol/lib/common/protocol.colorProvider.js", "../node_modules/vscode-languageserver-protocol/lib/common/protocol.foldingRange.js", "../node_modules/vscode-languageserver-protocol/lib/common/protocol.declaration.js", "../node_modules/vscode-languageserver-protocol/lib/common/protocol.selectionRange.js", "../node_modules/vscode-languageserver-protocol/lib/common/protocol.progress.js", "../node_modules/vscode-languageserver-protocol/lib/common/protocol.callHierarchy.js", "../node_modules/vscode-languageserver-protocol/lib/common/protocol.semanticTokens.js", "../node_modules/vscode-languageserver-protocol/lib/common/protocol.showDocument.js", "../node_modules/vscode-languageserver-protocol/lib/common/protocol.linkedEditingRange.js", "../node_modules/vscode-languageserver-protocol/lib/common/protocol.fileOperations.js", "../node_modules/vscode-languageserver-protocol/lib/common/protocol.moniker.js", "../node_modules/vscode-languageserver-protocol/lib/common/protocol.typeHierarchy.js", "../node_modules/vscode-languageserver-protocol/lib/common/protocol.inlineValue.js", "../node_modules/vscode-languageserver-protocol/lib/common/protocol.inlayHint.js", "../node_modules/vscode-languageserver-protocol/lib/common/protocol.diagnostic.js", "../node_modules/vscode-languageserver-protocol/lib/common/protocol.notebook.js", "../node_modules/vscode-languageserver-protocol/lib/common/protocol.inlineCompletion.js", "../node_modules/vscode-languageserver-protocol/lib/common/protocol.js", "../node_modules/vscode-languageserver-protocol/lib/common/connection.js", "../node_modules/vscode-languageserver-protocol/lib/common/api.js", "../node_modules/vscode-languageserver-protocol/lib/node/main.js", "../node_modules/vscode-languageclient/lib/common/utils/async.js", "../node_modules/vscode-languageclient/lib/common/protocolCompletionItem.js", "../node_modules/vscode-languageclient/lib/common/protocolCodeLens.js", "../node_modules/vscode-languageclient/lib/common/protocolDocumentLink.js", "../node_modules/vscode-languageclient/lib/common/protocolCodeAction.js", "../node_modules/vscode-languageclient/lib/common/protocolDiagnostic.js", "../node_modules/vscode-languageclient/lib/common/protocolCallHierarchyItem.js", "../node_modules/vscode-languageclient/lib/common/protocolTypeHierarchyItem.js", "../node_modules/vscode-languageclient/lib/common/protocolWorkspaceSymbol.js", "../node_modules/vscode-languageclient/lib/common/protocolInlayHint.js", "../node_modules/vscode-languageclient/lib/common/codeConverter.js", "../node_modules/vscode-languageclient/lib/common/protocolConverter.js", "../node_modules/vscode-languageclient/lib/common/utils/uuid.js", "../node_modules/vscode-languageclient/lib/common/progressPart.js", "../node_modules/vscode-languageclient/lib/common/features.js", "../node_modules/vscode-languageclient/node_modules/minimatch/lib/path.js", "../node_modules/balanced-match/index.js", "../node_modules/vscode-languageclient/node_modules/brace-expansion/index.js", "../node_modules/vscode-languageclient/node_modules/minimatch/minimatch.js", "../node_modules/vscode-languageclient/lib/common/diagnostic.js", "../node_modules/vscode-languageclient/lib/common/notebook.js", "../node_modules/vscode-languageclient/lib/common/configuration.js", "../node_modules/vscode-languageclient/lib/common/textSynchronization.js", "../node_modules/vscode-languageclient/lib/common/completion.js", "../node_modules/vscode-languageclient/lib/common/hover.js", "../node_modules/vscode-languageclient/lib/common/definition.js", "../node_modules/vscode-languageclient/lib/common/signatureHelp.js", "../node_modules/vscode-languageclient/lib/common/documentHighlight.js", "../node_modules/vscode-languageclient/lib/common/documentSymbol.js", "../node_modules/vscode-languageclient/lib/common/workspaceSymbol.js", "../node_modules/vscode-languageclient/lib/common/reference.js", "../node_modules/vscode-languageclient/lib/common/codeAction.js", "../node_modules/vscode-languageclient/lib/common/codeLens.js", "../node_modules/vscode-languageclient/lib/common/formatting.js", "../node_modules/vscode-languageclient/lib/common/rename.js", "../node_modules/vscode-languageclient/lib/common/documentLink.js", "../node_modules/vscode-languageclient/lib/common/executeCommand.js", "../node_modules/vscode-languageclient/lib/common/fileSystemWatcher.js", "../node_modules/vscode-languageclient/lib/common/colorProvider.js", "../node_modules/vscode-languageclient/lib/common/implementation.js", "../node_modules/vscode-languageclient/lib/common/typeDefinition.js", "../node_modules/vscode-languageclient/lib/common/workspaceFolder.js", "../node_modules/vscode-languageclient/lib/common/foldingRange.js", "../node_modules/vscode-languageclient/lib/common/declaration.js", "../node_modules/vscode-languageclient/lib/common/selectionRange.js", "../node_modules/vscode-languageclient/lib/common/progress.js", "../node_modules/vscode-languageclient/lib/common/callHierarchy.js", "../node_modules/vscode-languageclient/lib/common/semanticTokens.js", "../node_modules/vscode-languageclient/lib/common/fileOperations.js", "../node_modules/vscode-languageclient/lib/common/linkedEditingRange.js", "../node_modules/vscode-languageclient/lib/common/typeHierarchy.js", "../node_modules/vscode-languageclient/lib/common/inlineValue.js", "../node_modules/vscode-languageclient/lib/common/inlayHint.js", "../node_modules/vscode-languageclient/lib/common/inlineCompletion.js", "../node_modules/vscode-languageclient/lib/common/client.js", "../node_modules/vscode-languageclient/lib/node/processes.js", "../node_modules/vscode-languageserver-protocol/node.js", "../node_modules/semver/internal/debug.js", "../node_modules/semver/internal/constants.js", "../node_modules/semver/internal/re.js", "../node_modules/semver/internal/parse-options.js", "../node_modules/semver/internal/identifiers.js", "../node_modules/semver/classes/semver.js", "../node_modules/semver/functions/parse.js", "../node_modules/semver/node_modules/yallist/iterator.js", "../node_modules/semver/node_modules/yallist/yallist.js", "../node_modules/semver/node_modules/lru-cache/index.js", "../node_modules/semver/functions/compare.js", "../node_modules/semver/functions/eq.js", "../node_modules/semver/functions/neq.js", "../node_modules/semver/functions/gt.js", "../node_modules/semver/functions/gte.js", "../node_modules/semver/functions/lt.js", "../node_modules/semver/functions/lte.js", "../node_modules/semver/functions/cmp.js", "../node_modules/semver/classes/comparator.js", "../node_modules/semver/classes/range.js", "../node_modules/semver/functions/satisfies.js", "../node_modules/vscode-languageclient/lib/common/api.js", "../node_modules/vscode-languageclient/lib/node/main.js", "../node_modules/vscode-languageclient/node.js", "../src/extension.ts", "../src/extension/resource-module.ts", "../src/extension/class-module.ts", "../src/extension/class-node-provider.ts", "../src/extension/class-node.ts", "../src/extension/resource-node.ts", "../src/utilities.ts", "../src/extension/resource-node-provider.ts", "../src/extension/mentor.ts", "../src/extension/property-module.ts", "../src/extension/property-node-provider.ts", "../src/extension/property-node.ts", "../src/extension/individual-module.ts", "../src/extension/individual-node-provider.ts", "../src/extension/individual-node.ts", "../src/extension/settings-module.ts", "../src/extension/panels/SettingsPanel.ts", "../src/extension/panels/SettingsViewProvider.ts", "../src/language-turtle/token-provider.ts", "../src/languages/language-client.ts", "../src/languages/language-client-turtle.ts", "../src/languages/language-client-trig.ts", "../src/languages/language-client-sparql.ts"],
  "sourcesContent": ["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n", "const RDF  = 'http://www.w3.org/1999/02/22-rdf-syntax-ns#',\n    XSD  = 'http://www.w3.org/2001/XMLSchema#',\n    SWAP = 'http://www.w3.org/2000/10/swap/';\n\nexport default {\n  xsd: {\n    decimal: `${XSD}decimal`,\n    boolean: `${XSD}boolean`,\n    double:  `${XSD}double`,\n    integer: `${XSD}integer`,\n    string:  `${XSD}string`,\n  },\n  rdf: {\n    type:       `${RDF}type`,\n    nil:        `${RDF}nil`,\n    first:      `${RDF}first`,\n    rest:       `${RDF}rest`,\n    langString: `${RDF}langString`,\n  },\n  owl: {\n    sameAs: 'http://www.w3.org/2002/07/owl#sameAs',\n  },\n  r: {\n    forSome: `${SWAP}reify#forSome`,\n    forAll:  `${SWAP}reify#forAll`,\n  },\n  log: {\n    implies: `${SWAP}log#implies`,\n  },\n};\n", "/*! queue-microtask. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\nlet promise\n\nmodule.exports = typeof queueMicrotask === 'function'\n  ? queueMicrotask.bind(typeof window !== 'undefined' ? window : global)\n  // reuse resolved promise, and allocate it lazily\n  : cb => (promise || (promise = Promise.resolve()))\n    .then(cb)\n    .catch(err => setTimeout(() => { throw err }, 0))\n", "// **N3Lexer** tokenizes N3 documents.\nimport namespaces from './IRIs';\nimport queueMicrotask from 'queue-microtask';\n\nconst { xsd } = namespaces;\n\n// Regular expression and replacement string to escape N3 strings\nconst escapeSequence = /\\\\u([a-fA-F0-9]{4})|\\\\U([a-fA-F0-9]{8})|\\\\([^])/g;\nconst escapeReplacements = {\n  '\\\\': '\\\\', \"'\": \"'\", '\"': '\"',\n  'n': '\\n', 'r': '\\r', 't': '\\t', 'f': '\\f', 'b': '\\b',\n  '_': '_', '~': '~', '.': '.', '-': '-', '!': '!', '$': '$', '&': '&',\n  '(': '(', ')': ')', '*': '*', '+': '+', ',': ',', ';': ';', '=': '=',\n  '/': '/', '?': '?', '#': '#', '@': '@', '%': '%',\n};\nconst illegalIriChars = /[\\x00-\\x20<>\\\\\"\\{\\}\\|\\^\\`]/;\n\nconst lineModeRegExps = {\n  _iri: true,\n  _unescapedIri: true,\n  _simpleQuotedString: true,\n  _langcode: true,\n  _blank: true,\n  _newline: true,\n  _comment: true,\n  _whitespace: true,\n  _endOfFile: true,\n};\nconst invalidRegExp = /$0^/;\n\n// ## Constructor\nexport default class N3Lexer {\n  constructor(options) {\n    // ## Regular expressions\n    // It's slightly faster to have these as properties than as in-scope variables\n    this._iri = /^<((?:[^ <>{}\\\\]|\\\\[uU])+)>[ \\t]*/; // IRI with escape sequences; needs sanity check after unescaping\n    this._unescapedIri = /^<([^\\x00-\\x20<>\\\\\"\\{\\}\\|\\^\\`]*)>[ \\t]*/; // IRI without escape sequences; no unescaping\n    this._simpleQuotedString = /^\"([^\"\\\\\\r\\n]*)\"(?=[^\"])/; // string without escape sequences\n    this._simpleApostropheString = /^'([^'\\\\\\r\\n]*)'(?=[^'])/;\n    this._langcode = /^@([a-z]+(?:-[a-z0-9]+)*)(?=[^a-z0-9\\-])/i;\n    this._prefix = /^((?:[A-Za-z\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02ff\\u0370-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff])(?:\\.?[\\-0-9A-Z_a-z\\xb7\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u203f\\u2040\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff])*)?:(?=[#\\s<])/;\n    this._prefixed = /^((?:[A-Za-z\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02ff\\u0370-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff])(?:\\.?[\\-0-9A-Z_a-z\\xb7\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u203f\\u2040\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff])*)?:((?:(?:[0-:A-Z_a-z\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02ff\\u0370-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff]|%[0-9a-fA-F]{2}|\\\\[!#-\\/;=?\\-@_~])(?:(?:[\\.\\-0-:A-Z_a-z\\xb7\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u203f\\u2040\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff]|%[0-9a-fA-F]{2}|\\\\[!#-\\/;=?\\-@_~])*(?:[\\-0-:A-Z_a-z\\xb7\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u203f\\u2040\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff]|%[0-9a-fA-F]{2}|\\\\[!#-\\/;=?\\-@_~]))?)?)(?:[ \\t]+|(?=\\.?[,;!\\^\\s#()\\[\\]\\{\\}\"'<>]))/;\n    this._variable = /^\\?(?:(?:[A-Z_a-z\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02ff\\u0370-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff])(?:[\\-0-:A-Z_a-z\\xb7\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u203f\\u2040\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff])*)(?=[.,;!\\^\\s#()\\[\\]\\{\\}\"'<>])/;\n    this._blank = /^_:((?:[0-9A-Z_a-z\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02ff\\u0370-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff])(?:\\.?[\\-0-9A-Z_a-z\\xb7\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u203f\\u2040\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff])*)(?:[ \\t]+|(?=\\.?[,;:\\s#()\\[\\]\\{\\}\"'<>]))/;\n    this._number = /^[\\-+]?(?:(\\d+\\.\\d*|\\.?\\d+)[eE][\\-+]?|\\d*(\\.)?)\\d+(?=\\.?[,;:\\s#()\\[\\]\\{\\}\"'<>])/;\n    this._boolean = /^(?:true|false)(?=[.,;\\s#()\\[\\]\\{\\}\"'<>])/;\n    this._keyword = /^@[a-z]+(?=[\\s#<:])/i;\n    this._sparqlKeyword = /^(?:PREFIX|BASE|GRAPH)(?=[\\s#<])/i;\n    this._shortPredicates = /^a(?=[\\s#()\\[\\]\\{\\}\"'<>])/;\n    this._newline = /^[ \\t]*(?:#[^\\n\\r]*)?(?:\\r\\n|\\n|\\r)[ \\t]*/;\n    this._comment = /#([^\\n\\r]*)/;\n    this._whitespace = /^[ \\t]+/;\n    this._endOfFile = /^(?:#[^\\n\\r]*)?$/;\n    options = options || {};\n\n    // In line mode (N-Triples or N-Quads), only simple features may be parsed\n    if (this._lineMode = !!options.lineMode) {\n      this._n3Mode = false;\n      // Don't tokenize special literals\n      for (const key in this) {\n        if (!(key in lineModeRegExps) && this[key] instanceof RegExp)\n          this[key] = invalidRegExp;\n      }\n    }\n    // When not in line mode, enable N3 functionality by default\n    else {\n      this._n3Mode = options.n3 !== false;\n    }\n    // Don't output comment tokens by default\n    this._comments = !!options.comments;\n    // Cache the last tested closing position of long literals\n    this._literalClosingPos = 0;\n  }\n\n  // ## Private methods\n\n  // ### `_tokenizeToEnd` tokenizes as for as possible, emitting tokens through the callback\n  _tokenizeToEnd(callback, inputFinished) {\n    // Continue parsing as far as possible; the loop will return eventually\n    let input = this._input;\n    let currentLineLength = input.length;\n    while (true) {\n      // Count and skip whitespace lines\n      let whiteSpaceMatch, comment;\n      while (whiteSpaceMatch = this._newline.exec(input)) {\n        // Try to find a comment\n        if (this._comments && (comment = this._comment.exec(whiteSpaceMatch[0])))\n          emitToken('comment', comment[1], '', this._line, whiteSpaceMatch[0].length);\n        // Advance the input\n        input = input.substr(whiteSpaceMatch[0].length, input.length);\n        currentLineLength = input.length;\n        this._line++;\n      }\n      // Skip whitespace on current line\n      if (!whiteSpaceMatch && (whiteSpaceMatch = this._whitespace.exec(input)))\n        input = input.substr(whiteSpaceMatch[0].length, input.length);\n\n      // Stop for now if we're at the end\n      if (this._endOfFile.test(input)) {\n        // If the input is finished, emit EOF\n        if (inputFinished) {\n          // Try to find a final comment\n          if (this._comments && (comment = this._comment.exec(input)))\n            emitToken('comment', comment[1], '', this._line, input.length);\n          input = null;\n          emitToken('eof', '', '', this._line, 0);\n        }\n        return this._input = input;\n      }\n\n      // Look for specific token types based on the first character\n      const line = this._line, firstChar = input[0];\n      let type = '', value = '', prefix = '',\n          match = null, matchLength = 0, inconclusive = false;\n      switch (firstChar) {\n      case '^':\n        // We need at least 3 tokens lookahead to distinguish ^^<IRI> and ^^pre:fixed\n        if (input.length < 3)\n          break;\n        // Try to match a type\n        else if (input[1] === '^') {\n          this._previousMarker = '^^';\n          // Move to type IRI or prefixed name\n          input = input.substr(2);\n          if (input[0] !== '<') {\n            inconclusive = true;\n            break;\n          }\n        }\n        // If no type, it must be a path expression\n        else {\n          if (this._n3Mode) {\n            matchLength = 1;\n            type = '^';\n          }\n          break;\n        }\n        // Fall through in case the type is an IRI\n      case '<':\n        // Try to find a full IRI without escape sequences\n        if (match = this._unescapedIri.exec(input))\n          type = 'IRI', value = match[1];\n        // Try to find a full IRI with escape sequences\n        else if (match = this._iri.exec(input)) {\n          value = this._unescape(match[1]);\n          if (value === null || illegalIriChars.test(value))\n            return reportSyntaxError(this);\n          type = 'IRI';\n        }\n        // Try to find a nested triple\n        else if (input.length > 1 && input[1] === '<')\n          type = '<<', matchLength = 2;\n        // Try to find a backwards implication arrow\n        else if (this._n3Mode && input.length > 1 && input[1] === '=')\n          type = 'inverse', matchLength = 2, value = '>';\n        break;\n\n      case '>':\n        if (input.length > 1 && input[1] === '>')\n          type = '>>', matchLength = 2;\n        break;\n\n      case '_':\n        // Try to find a blank node. Since it can contain (but not end with) a dot,\n        // we always need a non-dot character before deciding it is a blank node.\n        // Therefore, try inserting a space if we're at the end of the input.\n        if ((match = this._blank.exec(input)) ||\n            inputFinished && (match = this._blank.exec(`${input} `)))\n          type = 'blank', prefix = '_', value = match[1];\n        break;\n\n      case '\"':\n        // Try to find a literal without escape sequences\n        if (match = this._simpleQuotedString.exec(input))\n          value = match[1];\n        // Try to find a literal wrapped in three pairs of quotes\n        else {\n          ({ value, matchLength } = this._parseLiteral(input));\n          if (value === null)\n            return reportSyntaxError(this);\n        }\n        if (match !== null || matchLength !== 0) {\n          type = 'literal';\n          this._literalClosingPos = 0;\n        }\n        break;\n\n      case \"'\":\n        if (!this._lineMode) {\n          // Try to find a literal without escape sequences\n          if (match = this._simpleApostropheString.exec(input))\n            value = match[1];\n          // Try to find a literal wrapped in three pairs of quotes\n          else {\n            ({ value, matchLength } = this._parseLiteral(input));\n            if (value === null)\n              return reportSyntaxError(this);\n          }\n          if (match !== null || matchLength !== 0) {\n            type = 'literal';\n            this._literalClosingPos = 0;\n          }\n        }\n        break;\n\n      case '?':\n        // Try to find a variable\n        if (this._n3Mode && (match = this._variable.exec(input)))\n          type = 'var', value = match[0];\n        break;\n\n      case '@':\n        // Try to find a language code\n        if (this._previousMarker === 'literal' && (match = this._langcode.exec(input)))\n          type = 'langcode', value = match[1];\n        // Try to find a keyword\n        else if (match = this._keyword.exec(input))\n          type = match[0];\n        break;\n\n      case '.':\n        // Try to find a dot as punctuation\n        if (input.length === 1 ? inputFinished : (input[1] < '0' || input[1] > '9')) {\n          type = '.';\n          matchLength = 1;\n          break;\n        }\n        // Fall through to numerical case (could be a decimal dot)\n\n      case '0':\n      case '1':\n      case '2':\n      case '3':\n      case '4':\n      case '5':\n      case '6':\n      case '7':\n      case '8':\n      case '9':\n      case '+':\n      case '-':\n        // Try to find a number. Since it can contain (but not end with) a dot,\n        // we always need a non-dot character before deciding it is a number.\n        // Therefore, try inserting a space if we're at the end of the input.\n        if (match = this._number.exec(input) ||\n            inputFinished && (match = this._number.exec(`${input} `))) {\n          type = 'literal', value = match[0];\n          prefix = (typeof match[1] === 'string' ? xsd.double :\n                    (typeof match[2] === 'string' ? xsd.decimal : xsd.integer));\n        }\n        break;\n\n      case 'B':\n      case 'b':\n      case 'p':\n      case 'P':\n      case 'G':\n      case 'g':\n        // Try to find a SPARQL-style keyword\n        if (match = this._sparqlKeyword.exec(input))\n          type = match[0].toUpperCase();\n        else\n          inconclusive = true;\n        break;\n\n      case 'f':\n      case 't':\n        // Try to match a boolean\n        if (match = this._boolean.exec(input))\n          type = 'literal', value = match[0], prefix = xsd.boolean;\n        else\n          inconclusive = true;\n        break;\n\n      case 'a':\n        // Try to find an abbreviated predicate\n        if (match = this._shortPredicates.exec(input))\n          type = 'abbreviation', value = 'a';\n        else\n          inconclusive = true;\n        break;\n\n      case '=':\n        // Try to find an implication arrow or equals sign\n        if (this._n3Mode && input.length > 1) {\n          type = 'abbreviation';\n          if (input[1] !== '>')\n            matchLength = 1, value = '=';\n          else\n            matchLength = 2, value = '>';\n        }\n        break;\n\n      case '!':\n        if (!this._n3Mode)\n          break;\n      case ',':\n      case ';':\n      case '[':\n      case ']':\n      case '(':\n      case ')':\n      case '}':\n        if (!this._lineMode) {\n          matchLength = 1;\n          type = firstChar;\n        }\n        break;\n      case '{':\n        // We need at least 2 tokens lookahead to distinguish \"{|\" and \"{ \"\n        if (!this._lineMode && input.length >= 2) {\n          // Try to find a quoted triple annotation start\n          if (input[1] === '|')\n            type = '{|', matchLength = 2;\n          else\n            type = firstChar, matchLength = 1;\n        }\n        break;\n      case '|':\n        // We need 2 tokens lookahead to parse \"|}\"\n        // Try to find a quoted triple annotation end\n        if (input.length >= 2 && input[1] === '}')\n          type = '|}', matchLength = 2;\n        break;\n\n      default:\n        inconclusive = true;\n      }\n\n      // Some first characters do not allow an immediate decision, so inspect more\n      if (inconclusive) {\n        // Try to find a prefix\n        if ((this._previousMarker === '@prefix' || this._previousMarker === 'PREFIX') &&\n            (match = this._prefix.exec(input)))\n          type = 'prefix', value = match[1] || '';\n        // Try to find a prefixed name. Since it can contain (but not end with) a dot,\n        // we always need a non-dot character before deciding it is a prefixed name.\n        // Therefore, try inserting a space if we're at the end of the input.\n        else if ((match = this._prefixed.exec(input)) ||\n                 inputFinished && (match = this._prefixed.exec(`${input} `)))\n          type = 'prefixed', prefix = match[1] || '', value = this._unescape(match[2]);\n      }\n\n      // A type token is special: it can only be emitted after an IRI or prefixed name is read\n      if (this._previousMarker === '^^') {\n        switch (type) {\n        case 'prefixed': type = 'type';    break;\n        case 'IRI':      type = 'typeIRI'; break;\n        default:         type = '';\n        }\n      }\n\n      // What if nothing of the above was found?\n      if (!type) {\n        // We could be in streaming mode, and then we just wait for more input to arrive.\n        // Otherwise, a syntax error has occurred in the input.\n        // One exception: error on an unaccounted linebreak (= not inside a triple-quoted literal).\n        if (inputFinished || (!/^'''|^\"\"\"/.test(input) && /\\n|\\r/.test(input)))\n          return reportSyntaxError(this);\n        else\n          return this._input = input;\n      }\n\n      // Emit the parsed token\n      const length = matchLength || match[0].length;\n      const token = emitToken(type, value, prefix, line, length);\n      this.previousToken = token;\n      this._previousMarker = type;\n\n      // Advance to next part to tokenize\n      input = input.substr(length, input.length);\n    }\n\n    // Emits the token through the callback\n    function emitToken(type, value, prefix, line, length) {\n      const start = input ? currentLineLength - input.length : currentLineLength;\n      const end = start + length;\n      const token = { type, value, prefix, line, start, end };\n      callback(null, token);\n      return token;\n    }\n    // Signals the syntax error through the callback\n    function reportSyntaxError(self) { callback(self._syntaxError(/^\\S*/.exec(input)[0])); }\n  }\n\n  // ### `_unescape` replaces N3 escape codes by their corresponding characters\n  _unescape(item) {\n    let invalid = false;\n    const replaced = item.replace(escapeSequence, (sequence, unicode4, unicode8, escapedChar) => {\n      // 4-digit unicode character\n      if (typeof unicode4 === 'string')\n        return String.fromCharCode(Number.parseInt(unicode4, 16));\n      // 8-digit unicode character\n      if (typeof unicode8 === 'string') {\n        let charCode = Number.parseInt(unicode8, 16);\n        return charCode <= 0xFFFF ? String.fromCharCode(Number.parseInt(unicode8, 16)) :\n          String.fromCharCode(0xD800 + ((charCode -= 0x10000) >> 10), 0xDC00 + (charCode & 0x3FF));\n      }\n      // fixed escape sequence\n      if (escapedChar in escapeReplacements)\n        return escapeReplacements[escapedChar];\n      // invalid escape sequence\n      invalid = true;\n      return '';\n    });\n    return invalid ? null : replaced;\n  }\n\n  // ### `_parseLiteral` parses a literal into an unescaped value\n  _parseLiteral(input) {\n    // Ensure we have enough lookahead to identify triple-quoted strings\n    if (input.length >= 3) {\n      // Identify the opening quote(s)\n      const opening = input.match(/^(?:\"\"\"|\"|'''|'|)/)[0];\n      const openingLength = opening.length;\n\n      // Find the next candidate closing quotes\n      let closingPos = Math.max(this._literalClosingPos, openingLength);\n      while ((closingPos = input.indexOf(opening, closingPos)) > 0) {\n        // Count backslashes right before the closing quotes\n        let backslashCount = 0;\n        while (input[closingPos - backslashCount - 1] === '\\\\')\n          backslashCount++;\n\n        // An even number of backslashes (in particular 0)\n        // means these are actual, non-escaped closing quotes\n        if (backslashCount % 2 === 0) {\n          // Extract and unescape the value\n          const raw = input.substring(openingLength, closingPos);\n          const lines = raw.split(/\\r\\n|\\r|\\n/).length - 1;\n          const matchLength = closingPos + openingLength;\n          // Only triple-quoted strings can be multi-line\n          if (openingLength === 1 && lines !== 0 ||\n              openingLength === 3 && this._lineMode)\n            break;\n          this._line += lines;\n          return { value: this._unescape(raw), matchLength };\n        }\n        closingPos++;\n      }\n      this._literalClosingPos = input.length - openingLength + 1;\n    }\n    return { value: '', matchLength: 0 };\n  }\n\n  // ### `_syntaxError` creates a syntax error for the given issue\n  _syntaxError(issue) {\n    this._input = null;\n    const err = new Error(`Unexpected \"${issue}\" on line ${this._line}.`);\n    err.context = {\n      token: undefined,\n      line: this._line,\n      previousToken: this.previousToken,\n    };\n    return err;\n  }\n\n  // ### Strips off any starting UTF BOM mark.\n  _readStartingBom(input) {\n    return input.startsWith('\\ufeff') ? input.substr(1) : input;\n  }\n\n  // ## Public methods\n\n  // ### `tokenize` starts the transformation of an N3 document into an array of tokens.\n  // The input can be a string or a stream.\n  tokenize(input, callback) {\n    this._line = 1;\n\n    // If the input is a string, continuously emit tokens through the callback until the end\n    if (typeof input === 'string') {\n      this._input = this._readStartingBom(input);\n      // If a callback was passed, asynchronously call it\n      if (typeof callback === 'function')\n        queueMicrotask(() => this._tokenizeToEnd(callback, true));\n      // If no callback was passed, tokenize synchronously and return\n      else {\n        const tokens = [];\n        let error;\n        this._tokenizeToEnd((e, t) => e ? (error = e) : tokens.push(t), true);\n        if (error) throw error;\n        return tokens;\n      }\n    }\n    // Otherwise, the input must be a stream\n    else {\n      this._pendingBuffer = null;\n      if (typeof input.setEncoding === 'function')\n        input.setEncoding('utf8');\n      // Adds the data chunk to the buffer and parses as far as possible\n      input.on('data', data => {\n        if (this._input !== null && data.length !== 0) {\n          // Prepend any previous pending writes\n          if (this._pendingBuffer) {\n            data = Buffer.concat([this._pendingBuffer, data]);\n            this._pendingBuffer = null;\n          }\n          // Hold if the buffer ends in an incomplete unicode sequence\n          if (data[data.length - 1] & 0x80) {\n            this._pendingBuffer = data;\n          }\n          // Otherwise, tokenize as far as possible\n          else {\n            // Only read a BOM at the start\n            if (typeof this._input === 'undefined')\n              this._input = this._readStartingBom(typeof data === 'string' ? data : data.toString());\n            else\n              this._input += data;\n            this._tokenizeToEnd(callback, false);\n          }\n        }\n      });\n      // Parses until the end\n      input.on('end', () => {\n        if (typeof this._input === 'string')\n          this._tokenizeToEnd(callback, true);\n      });\n      input.on('error', callback);\n    }\n  }\n}\n", "// **N3Util** provides N3 utility functions.\n\nimport N3DataFactory from './N3DataFactory';\n\n// Tests whether the given term represents an IRI\nexport function isNamedNode(term) {\n  return !!term && term.termType === 'NamedNode';\n}\n\n// Tests whether the given term represents a blank node\nexport function isBlankNode(term) {\n  return !!term && term.termType === 'BlankNode';\n}\n\n// Tests whether the given term represents a literal\nexport function isLiteral(term) {\n  return !!term && term.termType === 'Literal';\n}\n\n// Tests whether the given term represents a variable\nexport function isVariable(term) {\n  return !!term && term.termType === 'Variable';\n}\n\n// Tests whether the given term represents the default graph\nexport function isDefaultGraph(term) {\n  return !!term && term.termType === 'DefaultGraph';\n}\n\n// Tests whether the given quad is in the default graph\nexport function inDefaultGraph(quad) {\n  return isDefaultGraph(quad.graph);\n}\n\n// Creates a function that prepends the given IRI to a local name\nexport function prefix(iri, factory) {\n  return prefixes({ '': iri.value || iri }, factory)('');\n}\n\n// Creates a function that allows registering and expanding prefixes\nexport function prefixes(defaultPrefixes, factory) {\n  // Add all of the default prefixes\n  const prefixes = Object.create(null);\n  for (const prefix in defaultPrefixes)\n    processPrefix(prefix, defaultPrefixes[prefix]);\n  // Set the default factory if none was specified\n  factory = factory || N3DataFactory;\n\n  // Registers a new prefix (if an IRI was specified)\n  // or retrieves a function that expands an existing prefix (if no IRI was specified)\n  function processPrefix(prefix, iri) {\n    // Create a new prefix if an IRI is specified or the prefix doesn't exist\n    if (typeof iri === 'string') {\n      // Create a function that expands the prefix\n      const cache = Object.create(null);\n      prefixes[prefix] = local => {\n        return cache[local] || (cache[local] = factory.namedNode(iri + local));\n      };\n    }\n    else if (!(prefix in prefixes)) {\n      throw new Error(`Unknown prefix: ${prefix}`);\n    }\n    return prefixes[prefix];\n  }\n  return processPrefix;\n}\n", "// N3.js implementations of the RDF/JS core data types\n// See https://github.com/rdfjs/representation-task-force/blob/master/interface-spec.md\n\nimport namespaces from './IRIs';\nimport { isDefaultGraph } from './N3Util';\nconst { rdf, xsd } = namespaces;\n\n// eslint-disable-next-line prefer-const\nlet DEFAULTGRAPH;\nlet _blankNodeCounter = 0;\n\nconst escapedLiteral = /^\"(.*\".*)(?=\"[^\"]*$)/;\n\n// ## DataFactory singleton\nconst DataFactory = {\n  namedNode,\n  blankNode,\n  variable,\n  literal,\n  defaultGraph,\n  quad,\n  triple: quad,\n};\nexport default DataFactory;\n\n// ## Term constructor\nexport class Term {\n  constructor(id) {\n    this.id = id;\n  }\n\n  // ### The value of this term\n  get value() {\n    return this.id;\n  }\n\n  // ### Returns whether this object represents the same term as the other\n  equals(other) {\n    // If both terms were created by this library,\n    // equality can be computed through ids\n    if (other instanceof Term)\n      return this.id === other.id;\n    // Otherwise, compare term type and value\n    return !!other && this.termType === other.termType &&\n                      this.value    === other.value;\n  }\n\n  // ### Implement hashCode for Immutable.js, since we implement `equals`\n  // https://immutable-js.com/docs/v4.0.0/ValueObject/#hashCode()\n  hashCode() {\n    return 0;\n  }\n\n  // ### Returns a plain object representation of this term\n  toJSON() {\n    return {\n      termType: this.termType,\n      value:    this.value,\n    };\n  }\n}\n\n\n// ## NamedNode constructor\nexport class NamedNode extends Term {\n  // ### The term type of this term\n  get termType() {\n    return 'NamedNode';\n  }\n}\n\n// ## Literal constructor\nexport class Literal extends Term {\n  // ### The term type of this term\n  get termType() {\n    return 'Literal';\n  }\n\n  // ### The text value of this literal\n  get value() {\n    return this.id.substring(1, this.id.lastIndexOf('\"'));\n  }\n\n  // ### The language of this literal\n  get language() {\n    // Find the last quotation mark (e.g., '\"abc\"@en-us')\n    const id = this.id;\n    let atPos = id.lastIndexOf('\"') + 1;\n    // If \"@\" it follows, return the remaining substring; empty otherwise\n    return atPos < id.length && id[atPos++] === '@' ? id.substr(atPos).toLowerCase() : '';\n  }\n\n  // ### The datatype IRI of this literal\n  get datatype() {\n    return new NamedNode(this.datatypeString);\n  }\n\n  // ### The datatype string of this literal\n  get datatypeString() {\n    // Find the last quotation mark (e.g., '\"abc\"^^http://ex.org/types#t')\n    const id = this.id, dtPos = id.lastIndexOf('\"') + 1;\n    const char = dtPos < id.length ? id[dtPos] : '';\n    // If \"^\" it follows, return the remaining substring\n    return char === '^' ? id.substr(dtPos + 2) :\n           // If \"@\" follows, return rdf:langString; xsd:string otherwise\n           (char !== '@' ? xsd.string : rdf.langString);\n  }\n\n  // ### Returns whether this object represents the same term as the other\n  equals(other) {\n    // If both literals were created by this library,\n    // equality can be computed through ids\n    if (other instanceof Literal)\n      return this.id === other.id;\n    // Otherwise, compare term type, value, language, and datatype\n    return !!other && !!other.datatype &&\n                      this.termType === other.termType &&\n                      this.value    === other.value    &&\n                      this.language === other.language &&\n                      this.datatype.value === other.datatype.value;\n  }\n\n  toJSON() {\n    return {\n      termType: this.termType,\n      value:    this.value,\n      language: this.language,\n      datatype: { termType: 'NamedNode', value: this.datatypeString },\n    };\n  }\n}\n\n// ## BlankNode constructor\nexport class BlankNode extends Term {\n  constructor(name) {\n    super(`_:${name}`);\n  }\n\n  // ### The term type of this term\n  get termType() {\n    return 'BlankNode';\n  }\n\n  // ### The name of this blank node\n  get value() {\n    return this.id.substr(2);\n  }\n}\n\nexport class Variable extends Term {\n  constructor(name) {\n    super(`?${name}`);\n  }\n\n  // ### The term type of this term\n  get termType() {\n    return 'Variable';\n  }\n\n  // ### The name of this variable\n  get value() {\n    return this.id.substr(1);\n  }\n}\n\n// ## DefaultGraph constructor\nexport class DefaultGraph extends Term {\n  constructor() {\n    super('');\n    return DEFAULTGRAPH || this;\n  }\n\n  // ### The term type of this term\n  get termType() {\n    return 'DefaultGraph';\n  }\n\n  // ### Returns whether this object represents the same term as the other\n  equals(other) {\n    // If both terms were created by this library,\n    // equality can be computed through strict equality;\n    // otherwise, compare term types.\n    return (this === other) || (!!other && (this.termType === other.termType));\n  }\n}\n\n// ## DefaultGraph singleton\nDEFAULTGRAPH = new DefaultGraph();\n\n// ### Constructs a term from the given internal string ID\n// The third 'nested' parameter of this function is to aid\n// with recursion over nested terms. It should not be used\n// by consumers of this library.\n// See https://github.com/rdfjs/N3.js/pull/311#discussion_r1061042725\nexport function termFromId(id, factory, nested) {\n  factory = factory || DataFactory;\n\n  // Falsy value or empty string indicate the default graph\n  if (!id)\n    return factory.defaultGraph();\n\n  // Identify the term type based on the first character\n  switch (id[0]) {\n  case '?':\n    return factory.variable(id.substr(1));\n  case '_':\n    return factory.blankNode(id.substr(2));\n  case '\"':\n    // Shortcut for internal literals\n    if (factory === DataFactory)\n      return new Literal(id);\n    // Literal without datatype or language\n    if (id[id.length - 1] === '\"')\n      return factory.literal(id.substr(1, id.length - 2));\n    // Literal with datatype or language\n    const endPos = id.lastIndexOf('\"', id.length - 1);\n    return factory.literal(id.substr(1, endPos - 1),\n            id[endPos + 1] === '@' ? id.substr(endPos + 2)\n                                   : factory.namedNode(id.substr(endPos + 3)));\n  case '[':\n    id = JSON.parse(id);\n    break;\n  default:\n    if (!nested || !Array.isArray(id)) {\n      return factory.namedNode(id);\n    }\n  }\n  return factory.quad(\n    termFromId(id[0], factory, true),\n    termFromId(id[1], factory, true),\n    termFromId(id[2], factory, true),\n    id[3] && termFromId(id[3], factory, true)\n  );\n}\n\n// ### Constructs an internal string ID from the given term or ID string\n// The third 'nested' parameter of this function is to aid\n// with recursion over nested terms. It should not be used\n// by consumers of this library.\n// See https://github.com/rdfjs/N3.js/pull/311#discussion_r1061042725\nexport function termToId(term, nested) {\n  if (typeof term === 'string')\n    return term;\n  if (term instanceof Term && term.termType !== 'Quad')\n    return term.id;\n  if (!term)\n    return DEFAULTGRAPH.id;\n\n  // Term instantiated with another library\n  switch (term.termType) {\n  case 'NamedNode':    return term.value;\n  case 'BlankNode':    return `_:${term.value}`;\n  case 'Variable':     return `?${term.value}`;\n  case 'DefaultGraph': return '';\n  case 'Literal':      return `\"${term.value}\"${\n    term.language ? `@${term.language}` :\n      (term.datatype && term.datatype.value !== xsd.string ? `^^${term.datatype.value}` : '')}`;\n  case 'Quad':\n    const res = [\n      termToId(term.subject, true),\n      termToId(term.predicate, true),\n      termToId(term.object, true),\n    ];\n    if (!isDefaultGraph(term.graph)) {\n      res.push(termToId(term.graph, true));\n    }\n    return nested ? res : JSON.stringify(res);\n  default: throw new Error(`Unexpected termType: ${term.termType}`);\n  }\n}\n\n\n// ## Quad constructor\nexport class Quad extends Term {\n  constructor(subject, predicate, object, graph) {\n    super('');\n    this._subject   = subject;\n    this._predicate = predicate;\n    this._object    = object;\n    this._graph     = graph || DEFAULTGRAPH;\n  }\n\n  // ### The term type of this term\n  get termType() {\n    return 'Quad';\n  }\n\n  get subject() {\n    return this._subject;\n  }\n\n  get predicate() {\n    return this._predicate;\n  }\n\n  get object() {\n    return this._object;\n  }\n\n  get graph() {\n    return this._graph;\n  }\n\n  // ### Returns a plain object representation of this quad\n  toJSON() {\n    return {\n      termType:  this.termType,\n      subject:   this._subject.toJSON(),\n      predicate: this._predicate.toJSON(),\n      object:    this._object.toJSON(),\n      graph:     this._graph.toJSON(),\n    };\n  }\n\n  // ### Returns whether this object represents the same quad as the other\n  equals(other) {\n    return !!other && this._subject.equals(other.subject)     &&\n                      this._predicate.equals(other.predicate) &&\n                      this._object.equals(other.object)       &&\n                      this._graph.equals(other.graph);\n  }\n}\nexport { Quad as Triple };\n\n// ### Escapes the quotes within the given literal\nexport function escapeQuotes(id) {\n  return id.replace(escapedLiteral, (_, quoted) => `\"${quoted.replace(/\"/g, '\"\"')}`);\n}\n\n// ### Unescapes the quotes within the given literal\nexport function unescapeQuotes(id) {\n  return id.replace(escapedLiteral, (_, quoted) => `\"${quoted.replace(/\"\"/g, '\"')}`);\n}\n\n// ### Creates an IRI\nfunction namedNode(iri) {\n  return new NamedNode(iri);\n}\n\n// ### Creates a blank node\nfunction blankNode(name) {\n  return new BlankNode(name || `n3-${_blankNodeCounter++}`);\n}\n\n// ### Creates a literal\nfunction literal(value, languageOrDataType) {\n  // Create a language-tagged string\n  if (typeof languageOrDataType === 'string')\n    return new Literal(`\"${value}\"@${languageOrDataType.toLowerCase()}`);\n\n  // Automatically determine datatype for booleans and numbers\n  let datatype = languageOrDataType ? languageOrDataType.value : '';\n  if (datatype === '') {\n    // Convert a boolean\n    if (typeof value === 'boolean')\n      datatype = xsd.boolean;\n    // Convert an integer or double\n    else if (typeof value === 'number') {\n      if (Number.isFinite(value))\n        datatype = Number.isInteger(value) ? xsd.integer : xsd.double;\n      else {\n        datatype = xsd.double;\n        if (!Number.isNaN(value))\n          value = value > 0 ? 'INF' : '-INF';\n      }\n    }\n  }\n\n  // Create a datatyped literal\n  return (datatype === '' || datatype === xsd.string) ?\n    new Literal(`\"${value}\"`) :\n    new Literal(`\"${value}\"^^${datatype}`);\n}\n\n// ### Creates a variable\nfunction variable(name) {\n  return new Variable(name);\n}\n\n// ### Returns the default graph\nfunction defaultGraph() {\n  return DEFAULTGRAPH;\n}\n\n// ### Creates a quad\nfunction quad(subject, predicate, object, graph) {\n  return new Quad(subject, predicate, object, graph);\n}\n", "// **N3Parser** parses N3 documents.\nimport N3Lexer from './N3Lexer';\nimport N3DataFactory from './N3DataFactory';\nimport namespaces from './IRIs';\n\nlet blankNodePrefix = 0;\n\n// ## Constructor\nexport default class N3Parser {\n  constructor(options) {\n    this._contextStack = [];\n    this._graph = null;\n\n    // Set the document IRI\n    options = options || {};\n    this._setBase(options.baseIRI);\n    options.factory && initDataFactory(this, options.factory);\n\n    // Set supported features depending on the format\n    const format = (typeof options.format === 'string') ?\n                 options.format.match(/\\w*$/)[0].toLowerCase() : '',\n        isTurtle = /turtle/.test(format), isTriG = /trig/.test(format),\n        isNTriples = /triple/.test(format), isNQuads = /quad/.test(format),\n        isN3 = this._n3Mode = /n3/.test(format),\n        isLineMode = isNTriples || isNQuads;\n    if (!(this._supportsNamedGraphs = !(isTurtle || isN3)))\n      this._readPredicateOrNamedGraph = this._readPredicate;\n    // Support triples in other graphs\n    this._supportsQuads = !(isTurtle || isTriG || isNTriples || isN3);\n    // Support nesting of triples\n    this._supportsRDFStar = format === '' || /star|\\*$/.test(format);\n    // Disable relative IRIs in N-Triples or N-Quads mode\n    if (isLineMode)\n      this._resolveRelativeIRI = iri => { return null; };\n    this._blankNodePrefix = typeof options.blankNodePrefix !== 'string' ? '' :\n                              options.blankNodePrefix.replace(/^(?!_:)/, '_:');\n    this._lexer = options.lexer || new N3Lexer({ lineMode: isLineMode, n3: isN3 });\n    // Disable explicit quantifiers by default\n    this._explicitQuantifiers = !!options.explicitQuantifiers;\n  }\n\n  // ## Static class methods\n\n  // ### `_resetBlankNodePrefix` restarts blank node prefix identification\n  static _resetBlankNodePrefix() {\n    blankNodePrefix = 0;\n  }\n\n  // ## Private methods\n\n  // ### `_setBase` sets the base IRI to resolve relative IRIs\n  _setBase(baseIRI) {\n    if (!baseIRI) {\n      this._base = '';\n      this._basePath = '';\n    }\n    else {\n      // Remove fragment if present\n      const fragmentPos = baseIRI.indexOf('#');\n      if (fragmentPos >= 0)\n        baseIRI = baseIRI.substr(0, fragmentPos);\n      // Set base IRI and its components\n      this._base = baseIRI;\n      this._basePath   = baseIRI.indexOf('/') < 0 ? baseIRI :\n                         baseIRI.replace(/[^\\/?]*(?:\\?.*)?$/, '');\n      baseIRI = baseIRI.match(/^(?:([a-z][a-z0-9+.-]*:))?(?:\\/\\/[^\\/]*)?/i);\n      this._baseRoot   = baseIRI[0];\n      this._baseScheme = baseIRI[1];\n    }\n  }\n\n  // ### `_saveContext` stores the current parsing context\n  // when entering a new scope (list, blank node, formula)\n  _saveContext(type, graph, subject, predicate, object) {\n    const n3Mode = this._n3Mode;\n    this._contextStack.push({\n      type,\n      subject, predicate, object, graph,\n      inverse: n3Mode ? this._inversePredicate : false,\n      blankPrefix: n3Mode ? this._prefixes._ : '',\n      quantified: n3Mode ? this._quantified : null,\n    });\n    // The settings below only apply to N3 streams\n    if (n3Mode) {\n      // Every new scope resets the predicate direction\n      this._inversePredicate = false;\n      // In N3, blank nodes are scoped to a formula\n      // (using a dot as separator, as a blank node label cannot start with it)\n      this._prefixes._ = (this._graph ? `${this._graph.value}.` : '.');\n      // Quantifiers are scoped to a formula\n      this._quantified = Object.create(this._quantified);\n    }\n  }\n\n  // ### `_restoreContext` restores the parent context\n  // when leaving a scope (list, blank node, formula)\n  _restoreContext(type, token) {\n    // Obtain the previous context\n    const context = this._contextStack.pop();\n    if (!context || context.type !== type)\n      return this._error(`Unexpected ${token.type}`, token);\n\n    // Restore the quad of the previous context\n    this._subject   = context.subject;\n    this._predicate = context.predicate;\n    this._object    = context.object;\n    this._graph     = context.graph;\n\n    // Restore N3 context settings\n    if (this._n3Mode) {\n      this._inversePredicate = context.inverse;\n      this._prefixes._ = context.blankPrefix;\n      this._quantified = context.quantified;\n    }\n  }\n\n  // ### `_readInTopContext` reads a token when in the top context\n  _readInTopContext(token) {\n    switch (token.type) {\n    // If an EOF token arrives in the top context, signal that we're done\n    case 'eof':\n      if (this._graph !== null)\n        return this._error('Unclosed graph', token);\n      delete this._prefixes._;\n      return this._callback(null, null, this._prefixes);\n    // It could be a prefix declaration\n    case 'PREFIX':\n      this._sparqlStyle = true;\n    case '@prefix':\n      return this._readPrefix;\n    // It could be a base declaration\n    case 'BASE':\n      this._sparqlStyle = true;\n    case '@base':\n      return this._readBaseIRI;\n    // It could be a graph\n    case '{':\n      if (this._supportsNamedGraphs) {\n        this._graph = '';\n        this._subject = null;\n        return this._readSubject;\n      }\n    case 'GRAPH':\n      if (this._supportsNamedGraphs)\n        return this._readNamedGraphLabel;\n    // Otherwise, the next token must be a subject\n    default:\n      return this._readSubject(token);\n    }\n  }\n\n  // ### `_readEntity` reads an IRI, prefixed name, blank node, or variable\n  _readEntity(token, quantifier) {\n    let value;\n    switch (token.type) {\n    // Read a relative or absolute IRI\n    case 'IRI':\n    case 'typeIRI':\n      const iri = this._resolveIRI(token.value);\n      if (iri === null)\n        return this._error('Invalid IRI', token);\n      value = this._namedNode(iri);\n      break;\n    // Read a prefixed name\n    case 'type':\n    case 'prefixed':\n      const prefix = this._prefixes[token.prefix];\n      if (prefix === undefined)\n        return this._error(`Undefined prefix \"${token.prefix}:\"`, token);\n      value = this._namedNode(prefix + token.value);\n      break;\n    // Read a blank node\n    case 'blank':\n      value = this._blankNode(this._prefixes[token.prefix] + token.value);\n      break;\n    // Read a variable\n    case 'var':\n      value = this._variable(token.value.substr(1));\n      break;\n    // Everything else is not an entity\n    default:\n      return this._error(`Expected entity but got ${token.type}`, token);\n    }\n    // In N3 mode, replace the entity if it is quantified\n    if (!quantifier && this._n3Mode && (value.id in this._quantified))\n      value = this._quantified[value.id];\n    return value;\n  }\n\n  // ### `_readSubject` reads a quad's subject\n  _readSubject(token) {\n    this._predicate = null;\n    switch (token.type) {\n    case '[':\n      // Start a new quad with a new blank node as subject\n      this._saveContext('blank', this._graph,\n                        this._subject = this._blankNode(), null, null);\n      return this._readBlankNodeHead;\n    case '(':\n      // Start a new list\n      this._saveContext('list', this._graph, this.RDF_NIL, null, null);\n      this._subject = null;\n      return this._readListItem;\n    case '{':\n      // Start a new formula\n      if (!this._n3Mode)\n        return this._error('Unexpected graph', token);\n      this._saveContext('formula', this._graph,\n                        this._graph = this._blankNode(), null, null);\n      return this._readSubject;\n    case '}':\n       // No subject; the graph in which we are reading is closed instead\n      return this._readPunctuation(token);\n    case '@forSome':\n      if (!this._n3Mode)\n        return this._error('Unexpected \"@forSome\"', token);\n      this._subject = null;\n      this._predicate = this.N3_FORSOME;\n      this._quantifier = this._blankNode;\n      return this._readQuantifierList;\n    case '@forAll':\n      if (!this._n3Mode)\n        return this._error('Unexpected \"@forAll\"', token);\n      this._subject = null;\n      this._predicate = this.N3_FORALL;\n      this._quantifier = this._variable;\n      return this._readQuantifierList;\n    case 'literal':\n      if (!this._n3Mode)\n        return this._error('Unexpected literal', token);\n\n      if (token.prefix.length === 0) {\n        this._literalValue = token.value;\n        return this._completeSubjectLiteral;\n      }\n      else\n        this._subject = this._literal(token.value, this._namedNode(token.prefix));\n\n      break;\n    case '<<':\n      if (!this._supportsRDFStar)\n        return this._error('Unexpected RDF* syntax', token);\n      this._saveContext('<<', this._graph, null, null, null);\n      this._graph = null;\n      return this._readSubject;\n    default:\n      // Read the subject entity\n      if ((this._subject = this._readEntity(token)) === undefined)\n        return;\n      // In N3 mode, the subject might be a path\n      if (this._n3Mode)\n        return this._getPathReader(this._readPredicateOrNamedGraph);\n    }\n\n    // The next token must be a predicate,\n    // or, if the subject was actually a graph IRI, a named graph\n    return this._readPredicateOrNamedGraph;\n  }\n\n  // ### `_readPredicate` reads a quad's predicate\n  _readPredicate(token) {\n    const type = token.type;\n    switch (type) {\n    case 'inverse':\n      this._inversePredicate = true;\n    case 'abbreviation':\n      this._predicate = this.ABBREVIATIONS[token.value];\n      break;\n    case '.':\n    case ']':\n    case '}':\n      // Expected predicate didn't come, must have been trailing semicolon\n      if (this._predicate === null)\n        return this._error(`Unexpected ${type}`, token);\n      this._subject = null;\n      return type === ']' ? this._readBlankNodeTail(token) : this._readPunctuation(token);\n    case ';':\n      // Additional semicolons can be safely ignored\n      return this._predicate !== null ? this._readPredicate :\n             this._error('Expected predicate but got ;', token);\n    case '[':\n      if (this._n3Mode) {\n        // Start a new quad with a new blank node as subject\n        this._saveContext('blank', this._graph, this._subject,\n                          this._subject = this._blankNode(), null);\n        return this._readBlankNodeHead;\n      }\n    case 'blank':\n      if (!this._n3Mode)\n        return this._error('Disallowed blank node as predicate', token);\n    default:\n      if ((this._predicate = this._readEntity(token)) === undefined)\n        return;\n    }\n    // The next token must be an object\n    return this._readObject;\n  }\n\n  // ### `_readObject` reads a quad's object\n  _readObject(token) {\n    switch (token.type) {\n    case 'literal':\n      // Regular literal, can still get a datatype or language\n      if (token.prefix.length === 0) {\n        this._literalValue = token.value;\n        return this._readDataTypeOrLang;\n      }\n      // Pre-datatyped string literal (prefix stores the datatype)\n      else\n        this._object = this._literal(token.value, this._namedNode(token.prefix));\n      break;\n    case '[':\n      // Start a new quad with a new blank node as subject\n      this._saveContext('blank', this._graph, this._subject, this._predicate,\n                        this._subject = this._blankNode());\n      return this._readBlankNodeHead;\n    case '(':\n      // Start a new list\n      this._saveContext('list', this._graph, this._subject, this._predicate, this.RDF_NIL);\n      this._subject = null;\n      return this._readListItem;\n    case '{':\n      // Start a new formula\n      if (!this._n3Mode)\n        return this._error('Unexpected graph', token);\n      this._saveContext('formula', this._graph, this._subject, this._predicate,\n                        this._graph = this._blankNode());\n      return this._readSubject;\n    case '<<':\n      if (!this._supportsRDFStar)\n        return this._error('Unexpected RDF* syntax', token);\n      this._saveContext('<<', this._graph, this._subject, this._predicate, null);\n      this._graph = null;\n      return this._readSubject;\n    default:\n      // Read the object entity\n      if ((this._object = this._readEntity(token)) === undefined)\n        return;\n      // In N3 mode, the object might be a path\n      if (this._n3Mode)\n        return this._getPathReader(this._getContextEndReader());\n    }\n    return this._getContextEndReader();\n  }\n\n  // ### `_readPredicateOrNamedGraph` reads a quad's predicate, or a named graph\n  _readPredicateOrNamedGraph(token) {\n    return token.type === '{' ? this._readGraph(token) : this._readPredicate(token);\n  }\n\n  // ### `_readGraph` reads a graph\n  _readGraph(token) {\n    if (token.type !== '{')\n      return this._error(`Expected graph but got ${token.type}`, token);\n    // The \"subject\" we read is actually the GRAPH's label\n    this._graph = this._subject, this._subject = null;\n    return this._readSubject;\n  }\n\n  // ### `_readBlankNodeHead` reads the head of a blank node\n  _readBlankNodeHead(token) {\n    if (token.type === ']') {\n      this._subject = null;\n      return this._readBlankNodeTail(token);\n    }\n    else {\n      this._predicate = null;\n      return this._readPredicate(token);\n    }\n  }\n\n  // ### `_readBlankNodeTail` reads the end of a blank node\n  _readBlankNodeTail(token) {\n    if (token.type !== ']')\n      return this._readBlankNodePunctuation(token);\n\n    // Store blank node quad\n    if (this._subject !== null)\n      this._emit(this._subject, this._predicate, this._object, this._graph);\n\n    // Restore the parent context containing this blank node\n    const empty = this._predicate === null;\n    this._restoreContext('blank', token);\n    // If the blank node was the object, restore previous context and read punctuation\n    if (this._object !== null)\n      return this._getContextEndReader();\n    // If the blank node was the predicate, continue reading the object\n    else if (this._predicate !== null)\n      return this._readObject;\n    // If the blank node was the subject, continue reading the predicate\n    else\n      // If the blank node was empty, it could be a named graph label\n      return empty ? this._readPredicateOrNamedGraph : this._readPredicateAfterBlank;\n  }\n\n  // ### `_readPredicateAfterBlank` reads a predicate after an anonymous blank node\n  _readPredicateAfterBlank(token) {\n    switch (token.type) {\n    case '.':\n    case '}':\n      // No predicate is coming if the triple is terminated here\n      this._subject = null;\n      return this._readPunctuation(token);\n    default:\n      return this._readPredicate(token);\n    }\n  }\n\n  // ### `_readListItem` reads items from a list\n  _readListItem(token) {\n    let item = null,                      // The item of the list\n        list = null,                      // The list itself\n        next = this._readListItem;        // The next function to execute\n    const previousList = this._subject,   // The previous list that contains this list\n        stack = this._contextStack,       // The stack of parent contexts\n        parent = stack[stack.length - 1]; // The parent containing the current list\n\n    switch (token.type) {\n    case '[':\n      // Stack the current list quad and start a new quad with a blank node as subject\n      this._saveContext('blank', this._graph,\n                        list = this._blankNode(), this.RDF_FIRST,\n                        this._subject = item = this._blankNode());\n      next = this._readBlankNodeHead;\n      break;\n    case '(':\n      // Stack the current list quad and start a new list\n      this._saveContext('list', this._graph,\n                        list = this._blankNode(), this.RDF_FIRST, this.RDF_NIL);\n      this._subject = null;\n      break;\n    case ')':\n      // Closing the list; restore the parent context\n      this._restoreContext('list', token);\n      // If this list is contained within a parent list, return the membership quad here.\n      // This will be `<parent list element> rdf:first <this list>.`.\n      if (stack.length !== 0 && stack[stack.length - 1].type === 'list')\n        this._emit(this._subject, this._predicate, this._object, this._graph);\n      // Was this list the parent's subject?\n      if (this._predicate === null) {\n        // The next token is the predicate\n        next = this._readPredicate;\n        // No list tail if this was an empty list\n        if (this._subject === this.RDF_NIL)\n          return next;\n      }\n      // The list was in the parent context's object\n      else {\n        next = this._getContextEndReader();\n        // No list tail if this was an empty list\n        if (this._object === this.RDF_NIL)\n          return next;\n      }\n      // Close the list by making the head nil\n      list = this.RDF_NIL;\n      break;\n    case 'literal':\n      // Regular literal, can still get a datatype or language\n      if (token.prefix.length === 0) {\n        this._literalValue = token.value;\n        next = this._readListItemDataTypeOrLang;\n      }\n      // Pre-datatyped string literal (prefix stores the datatype)\n      else {\n        item = this._literal(token.value, this._namedNode(token.prefix));\n        next = this._getContextEndReader();\n      }\n      break;\n    case '{':\n      // Start a new formula\n      if (!this._n3Mode)\n        return this._error('Unexpected graph', token);\n      this._saveContext('formula', this._graph, this._subject, this._predicate,\n                        this._graph = this._blankNode());\n      return this._readSubject;\n    default:\n      if ((item = this._readEntity(token)) === undefined)\n        return;\n    }\n\n     // Create a new blank node if no item head was assigned yet\n    if (list === null)\n      this._subject = list = this._blankNode();\n\n    // Is this the first element of the list?\n    if (previousList === null) {\n      // This list is either the subject or the object of its parent\n      if (parent.predicate === null)\n        parent.subject = list;\n      else\n        parent.object = list;\n    }\n    else {\n      // Continue the previous list with the current list\n      this._emit(previousList, this.RDF_REST, list, this._graph);\n    }\n    // If an item was read, add it to the list\n    if (item !== null) {\n      // In N3 mode, the item might be a path\n      if (this._n3Mode && (token.type === 'IRI' || token.type === 'prefixed')) {\n        // Create a new context to add the item's path\n        this._saveContext('item', this._graph, list, this.RDF_FIRST, item);\n        this._subject = item, this._predicate = null;\n        // _readPath will restore the context and output the item\n        return this._getPathReader(this._readListItem);\n      }\n      // Output the item\n      this._emit(list, this.RDF_FIRST, item, this._graph);\n    }\n    return next;\n  }\n\n  // ### `_readDataTypeOrLang` reads an _optional_ datatype or language\n  _readDataTypeOrLang(token) {\n    return this._completeObjectLiteral(token, false);\n  }\n\n\n  // ### `_readListItemDataTypeOrLang` reads an _optional_ datatype or language in a list\n  _readListItemDataTypeOrLang(token) {\n    return this._completeObjectLiteral(token, true);\n  }\n\n  // ### `_completeLiteral` completes a literal with an optional datatype or language\n  _completeLiteral(token) {\n    // Create a simple string literal by default\n    let literal = this._literal(this._literalValue);\n\n    switch (token.type) {\n    // Create a datatyped literal\n    case 'type':\n    case 'typeIRI':\n      const datatype = this._readEntity(token);\n      if (datatype === undefined) return; // No datatype means an error occurred\n      literal = this._literal(this._literalValue, datatype);\n      token = null;\n      break;\n    // Create a language-tagged string\n    case 'langcode':\n      literal = this._literal(this._literalValue, token.value);\n      token = null;\n      break;\n    }\n\n    return { token, literal };\n  }\n\n  // Completes a literal in subject position\n  _completeSubjectLiteral(token) {\n    this._subject = this._completeLiteral(token).literal;\n    return this._readPredicateOrNamedGraph;\n  }\n\n  // Completes a literal in object position\n  _completeObjectLiteral(token, listItem) {\n    const completed = this._completeLiteral(token);\n    if (!completed)\n      return;\n    this._object = completed.literal;\n\n    // If this literal was part of a list, write the item\n    // (we could also check the context stack, but passing in a flag is faster)\n    if (listItem)\n      this._emit(this._subject, this.RDF_FIRST, this._object, this._graph);\n    // If the token was consumed, continue with the rest of the input\n    if (completed.token === null)\n      return this._getContextEndReader();\n    // Otherwise, consume the token now\n    else {\n      this._readCallback = this._getContextEndReader();\n      return this._readCallback(completed.token);\n    }\n  }\n\n  // ### `_readFormulaTail` reads the end of a formula\n  _readFormulaTail(token) {\n    if (token.type !== '}')\n      return this._readPunctuation(token);\n\n    // Store the last quad of the formula\n    if (this._subject !== null)\n      this._emit(this._subject, this._predicate, this._object, this._graph);\n\n    // Restore the parent context containing this formula\n    this._restoreContext('formula', token);\n    // If the formula was the subject, continue reading the predicate.\n    // If the formula was the object, read punctuation.\n    return this._object === null ? this._readPredicate : this._getContextEndReader();\n  }\n\n  // ### `_readPunctuation` reads punctuation between quads or quad parts\n  _readPunctuation(token) {\n    let next, graph = this._graph;\n    const subject = this._subject, inversePredicate = this._inversePredicate;\n    switch (token.type) {\n    // A closing brace ends a graph\n    case '}':\n      if (this._graph === null)\n        return this._error('Unexpected graph closing', token);\n      if (this._n3Mode)\n        return this._readFormulaTail(token);\n      this._graph = null;\n    // A dot just ends the statement, without sharing anything with the next\n    case '.':\n      this._subject = null;\n      next = this._contextStack.length ? this._readSubject : this._readInTopContext;\n      if (inversePredicate) this._inversePredicate = false;\n      break;\n    // Semicolon means the subject is shared; predicate and object are different\n    case ';':\n      next = this._readPredicate;\n      break;\n    // Comma means both the subject and predicate are shared; the object is different\n    case ',':\n      next = this._readObject;\n      break;\n    // {| means that the current triple is annotated with predicate-object pairs.\n    case '{|':\n      if (!this._supportsRDFStar)\n        return this._error('Unexpected RDF* syntax', token);\n      // Continue using the last triple as quoted triple subject for the predicate-object pairs.\n      const predicate = this._predicate, object = this._object;\n      this._subject = this._quad(subject, predicate, object, this.DEFAULTGRAPH);\n      next = this._readPredicate;\n      break;\n    // |} means that the current quoted triple in annotation syntax is finalized.\n    case '|}':\n      if (this._subject.termType !== 'Quad')\n        return this._error('Unexpected asserted triple closing', token);\n      this._subject = null;\n      next = this._readPunctuation;\n      break;\n    default:\n      // An entity means this is a quad (only allowed if not already inside a graph)\n      if (this._supportsQuads && this._graph === null && (graph = this._readEntity(token)) !== undefined) {\n        next = this._readQuadPunctuation;\n        break;\n      }\n      return this._error(`Expected punctuation to follow \"${this._object.id}\"`, token);\n    }\n    // A quad has been completed now, so return it\n    if (subject !== null) {\n      const predicate = this._predicate, object = this._object;\n      if (!inversePredicate)\n        this._emit(subject, predicate, object,  graph);\n      else\n        this._emit(object,  predicate, subject, graph);\n    }\n    return next;\n  }\n\n    // ### `_readBlankNodePunctuation` reads punctuation in a blank node\n  _readBlankNodePunctuation(token) {\n    let next;\n    switch (token.type) {\n    // Semicolon means the subject is shared; predicate and object are different\n    case ';':\n      next = this._readPredicate;\n      break;\n    // Comma means both the subject and predicate are shared; the object is different\n    case ',':\n      next = this._readObject;\n      break;\n    default:\n      return this._error(`Expected punctuation to follow \"${this._object.id}\"`, token);\n    }\n    // A quad has been completed now, so return it\n    this._emit(this._subject, this._predicate, this._object, this._graph);\n    return next;\n  }\n\n  // ### `_readQuadPunctuation` reads punctuation after a quad\n  _readQuadPunctuation(token) {\n    if (token.type !== '.')\n      return this._error('Expected dot to follow quad', token);\n    return this._readInTopContext;\n  }\n\n  // ### `_readPrefix` reads the prefix of a prefix declaration\n  _readPrefix(token) {\n    if (token.type !== 'prefix')\n      return this._error('Expected prefix to follow @prefix', token);\n    this._prefix = token.value;\n    return this._readPrefixIRI;\n  }\n\n  // ### `_readPrefixIRI` reads the IRI of a prefix declaration\n  _readPrefixIRI(token) {\n    if (token.type !== 'IRI')\n      return this._error(`Expected IRI to follow prefix \"${this._prefix}:\"`, token);\n    const prefixNode = this._readEntity(token);\n    this._prefixes[this._prefix] = prefixNode.value;\n    this._prefixCallback(this._prefix, prefixNode);\n    return this._readDeclarationPunctuation;\n  }\n\n  // ### `_readBaseIRI` reads the IRI of a base declaration\n  _readBaseIRI(token) {\n    const iri = token.type === 'IRI' && this._resolveIRI(token.value);\n    if (!iri)\n      return this._error('Expected valid IRI to follow base declaration', token);\n    this._setBase(iri);\n    return this._readDeclarationPunctuation;\n  }\n\n  // ### `_readNamedGraphLabel` reads the label of a named graph\n  _readNamedGraphLabel(token) {\n    switch (token.type) {\n    case 'IRI':\n    case 'blank':\n    case 'prefixed':\n      return this._readSubject(token), this._readGraph;\n    case '[':\n      return this._readNamedGraphBlankLabel;\n    default:\n      return this._error('Invalid graph label', token);\n    }\n  }\n\n  // ### `_readNamedGraphLabel` reads a blank node label of a named graph\n  _readNamedGraphBlankLabel(token) {\n    if (token.type !== ']')\n      return this._error('Invalid graph label', token);\n    this._subject = this._blankNode();\n    return this._readGraph;\n  }\n\n  // ### `_readDeclarationPunctuation` reads the punctuation of a declaration\n  _readDeclarationPunctuation(token) {\n    // SPARQL-style declarations don't have punctuation\n    if (this._sparqlStyle) {\n      this._sparqlStyle = false;\n      return this._readInTopContext(token);\n    }\n\n    if (token.type !== '.')\n      return this._error('Expected declaration to end with a dot', token);\n    return this._readInTopContext;\n  }\n\n  // Reads a list of quantified symbols from a @forSome or @forAll statement\n  _readQuantifierList(token) {\n    let entity;\n    switch (token.type) {\n    case 'IRI':\n    case 'prefixed':\n      if ((entity = this._readEntity(token, true)) !== undefined)\n        break;\n    default:\n      return this._error(`Unexpected ${token.type}`, token);\n    }\n    // Without explicit quantifiers, map entities to a quantified entity\n    if (!this._explicitQuantifiers)\n      this._quantified[entity.id] = this._quantifier(this._blankNode().value);\n    // With explicit quantifiers, output the reified quantifier\n    else {\n      // If this is the first item, start a new quantifier list\n      if (this._subject === null)\n        this._emit(this._graph || this.DEFAULTGRAPH, this._predicate,\n                   this._subject = this._blankNode(), this.QUANTIFIERS_GRAPH);\n      // Otherwise, continue the previous list\n      else\n        this._emit(this._subject, this.RDF_REST,\n                   this._subject = this._blankNode(), this.QUANTIFIERS_GRAPH);\n      // Output the list item\n      this._emit(this._subject, this.RDF_FIRST, entity, this.QUANTIFIERS_GRAPH);\n    }\n    return this._readQuantifierPunctuation;\n  }\n\n  // Reads punctuation from a @forSome or @forAll statement\n  _readQuantifierPunctuation(token) {\n    // Read more quantifiers\n    if (token.type === ',')\n      return this._readQuantifierList;\n    // End of the quantifier list\n    else {\n      // With explicit quantifiers, close the quantifier list\n      if (this._explicitQuantifiers) {\n        this._emit(this._subject, this.RDF_REST, this.RDF_NIL, this.QUANTIFIERS_GRAPH);\n        this._subject = null;\n      }\n      // Read a dot\n      this._readCallback = this._getContextEndReader();\n      return this._readCallback(token);\n    }\n  }\n\n  // ### `_getPathReader` reads a potential path and then resumes with the given function\n  _getPathReader(afterPath) {\n    this._afterPath = afterPath;\n    return this._readPath;\n  }\n\n  // ### `_readPath` reads a potential path\n  _readPath(token) {\n    switch (token.type) {\n    // Forward path\n    case '!': return this._readForwardPath;\n    // Backward path\n    case '^': return this._readBackwardPath;\n    // Not a path; resume reading where we left off\n    default:\n      const stack = this._contextStack, parent = stack.length && stack[stack.length - 1];\n      // If we were reading a list item, we still need to output it\n      if (parent && parent.type === 'item') {\n        // The list item is the remaining subejct after reading the path\n        const item = this._subject;\n        // Switch back to the context of the list\n        this._restoreContext('item', token);\n        // Output the list item\n        this._emit(this._subject, this.RDF_FIRST, item, this._graph);\n      }\n      return this._afterPath(token);\n    }\n  }\n\n  // ### `_readForwardPath` reads a '!' path\n  _readForwardPath(token) {\n    let subject, predicate;\n    const object = this._blankNode();\n    // The next token is the predicate\n    if ((predicate = this._readEntity(token)) === undefined)\n      return;\n    // If we were reading a subject, replace the subject by the path's object\n    if (this._predicate === null)\n      subject = this._subject, this._subject = object;\n    // If we were reading an object, replace the subject by the path's object\n    else\n      subject = this._object,  this._object  = object;\n    // Emit the path's current quad and read its next section\n    this._emit(subject, predicate, object, this._graph);\n    return this._readPath;\n  }\n\n  // ### `_readBackwardPath` reads a '^' path\n  _readBackwardPath(token) {\n    const subject = this._blankNode();\n    let predicate, object;\n    // The next token is the predicate\n    if ((predicate = this._readEntity(token)) === undefined)\n      return;\n    // If we were reading a subject, replace the subject by the path's subject\n    if (this._predicate === null)\n      object = this._subject, this._subject = subject;\n    // If we were reading an object, replace the subject by the path's subject\n    else\n      object = this._object,  this._object  = subject;\n    // Emit the path's current quad and read its next section\n    this._emit(subject, predicate, object, this._graph);\n    return this._readPath;\n  }\n\n  // ### `_readRDFStarTailOrGraph` reads the graph of a nested RDF* quad or the end of a nested RDF* triple\n  _readRDFStarTailOrGraph(token) {\n    if (token.type !== '>>') {\n      // An entity means this is a quad (only allowed if not already inside a graph)\n      if (this._supportsQuads && this._graph === null && (this._graph = this._readEntity(token)) !== undefined)\n        return this._readRDFStarTail;\n      return this._error(`Expected >> to follow \"${this._object.id}\"`, token);\n    }\n    return this._readRDFStarTail(token);\n  }\n\n  // ### `_readRDFStarTail` reads the end of a nested RDF* triple\n  _readRDFStarTail(token) {\n    if (token.type !== '>>')\n      return this._error(`Expected >> but got ${token.type}`, token);\n    // Read the quad and restore the previous context\n    const quad = this._quad(this._subject, this._predicate, this._object,\n      this._graph || this.DEFAULTGRAPH);\n    this._restoreContext('<<', token);\n    // If the triple was the subject, continue by reading the predicate.\n    if (this._subject === null) {\n      this._subject = quad;\n      return this._readPredicate;\n    }\n    // If the triple was the object, read context end.\n    else {\n      this._object = quad;\n      return this._getContextEndReader();\n    }\n  }\n\n  // ### `_getContextEndReader` gets the next reader function at the end of a context\n  _getContextEndReader() {\n    const contextStack = this._contextStack;\n    if (!contextStack.length)\n      return this._readPunctuation;\n\n    switch (contextStack[contextStack.length - 1].type) {\n    case 'blank':\n      return this._readBlankNodeTail;\n    case 'list':\n      return this._readListItem;\n    case 'formula':\n      return this._readFormulaTail;\n    case '<<':\n      return this._readRDFStarTailOrGraph;\n    }\n  }\n\n  // ### `_emit` sends a quad through the callback\n  _emit(subject, predicate, object, graph) {\n    this._callback(null, this._quad(subject, predicate, object, graph || this.DEFAULTGRAPH));\n  }\n\n  // ### `_error` emits an error message through the callback\n  _error(message, token) {\n    const err = new Error(`${message} on line ${token.line}.`);\n    err.context = {\n      token: token,\n      line: token.line,\n      previousToken: this._lexer.previousToken,\n    };\n    this._callback(err);\n    this._callback = noop;\n  }\n\n  // ### `_resolveIRI` resolves an IRI against the base path\n  _resolveIRI(iri) {\n    return /^[a-z][a-z0-9+.-]*:/i.test(iri) ? iri : this._resolveRelativeIRI(iri);\n  }\n\n  // ### `_resolveRelativeIRI` resolves an IRI against the base path,\n  // assuming that a base path has been set and that the IRI is indeed relative\n  _resolveRelativeIRI(iri) {\n    // An empty relative IRI indicates the base IRI\n    if (!iri.length)\n      return this._base;\n    // Decide resolving strategy based in the first character\n    switch (iri[0]) {\n    // Resolve relative fragment IRIs against the base IRI\n    case '#': return this._base + iri;\n    // Resolve relative query string IRIs by replacing the query string\n    case '?': return this._base.replace(/(?:\\?.*)?$/, iri);\n    // Resolve root-relative IRIs at the root of the base IRI\n    case '/':\n      // Resolve scheme-relative IRIs to the scheme\n      return (iri[1] === '/' ? this._baseScheme : this._baseRoot) + this._removeDotSegments(iri);\n    // Resolve all other IRIs at the base IRI's path\n    default:\n      // Relative IRIs cannot contain a colon in the first path segment\n      return (/^[^/:]*:/.test(iri)) ? null : this._removeDotSegments(this._basePath + iri);\n    }\n  }\n\n  // ### `_removeDotSegments` resolves './' and '../' path segments in an IRI as per RFC3986\n  _removeDotSegments(iri) {\n    // Don't modify the IRI if it does not contain any dot segments\n    if (!/(^|\\/)\\.\\.?($|[/#?])/.test(iri))\n      return iri;\n\n    // Start with an imaginary slash before the IRI in order to resolve trailing './' and '../'\n    const length = iri.length;\n    let result = '', i = -1, pathStart = -1, segmentStart = 0, next = '/';\n\n    while (i < length) {\n      switch (next) {\n      // The path starts with the first slash after the authority\n      case ':':\n        if (pathStart < 0) {\n          // Skip two slashes before the authority\n          if (iri[++i] === '/' && iri[++i] === '/')\n            // Skip to slash after the authority\n            while ((pathStart = i + 1) < length && iri[pathStart] !== '/')\n              i = pathStart;\n        }\n        break;\n      // Don't modify a query string or fragment\n      case '?':\n      case '#':\n        i = length;\n        break;\n      // Handle '/.' or '/..' path segments\n      case '/':\n        if (iri[i + 1] === '.') {\n          next = iri[++i + 1];\n          switch (next) {\n          // Remove a '/.' segment\n          case '/':\n            result += iri.substring(segmentStart, i - 1);\n            segmentStart = i + 1;\n            break;\n          // Remove a trailing '/.' segment\n          case undefined:\n          case '?':\n          case '#':\n            return result + iri.substring(segmentStart, i) + iri.substr(i + 1);\n          // Remove a '/..' segment\n          case '.':\n            next = iri[++i + 1];\n            if (next === undefined || next === '/' || next === '?' || next === '#') {\n              result += iri.substring(segmentStart, i - 2);\n              // Try to remove the parent path from result\n              if ((segmentStart = result.lastIndexOf('/')) >= pathStart)\n                result = result.substr(0, segmentStart);\n              // Remove a trailing '/..' segment\n              if (next !== '/')\n                return `${result}/${iri.substr(i + 1)}`;\n              segmentStart = i + 1;\n            }\n          }\n        }\n      }\n      next = iri[++i];\n    }\n    return result + iri.substring(segmentStart);\n  }\n\n  // ## Public methods\n\n  // ### `parse` parses the N3 input and emits each parsed quad through the callback\n  parse(input, quadCallback, prefixCallback) {\n    // The read callback is the next function to be executed when a token arrives.\n    // We start reading in the top context.\n    this._readCallback = this._readInTopContext;\n    this._sparqlStyle = false;\n    this._prefixes = Object.create(null);\n    this._prefixes._ = this._blankNodePrefix ? this._blankNodePrefix.substr(2)\n                                             : `b${blankNodePrefix++}_`;\n    this._prefixCallback = prefixCallback || noop;\n    this._inversePredicate = false;\n    this._quantified = Object.create(null);\n\n    // Parse synchronously if no quad callback is given\n    if (!quadCallback) {\n      const quads = [];\n      let error;\n      this._callback = (e, t) => { e ? (error = e) : t && quads.push(t); };\n      this._lexer.tokenize(input).every(token => {\n        return this._readCallback = this._readCallback(token);\n      });\n      if (error) throw error;\n      return quads;\n    }\n\n    // Parse asynchronously otherwise, executing the read callback when a token arrives\n    this._callback = quadCallback;\n    this._lexer.tokenize(input, (error, token) => {\n      if (error !== null)\n        this._callback(error), this._callback = noop;\n      else if (this._readCallback)\n        this._readCallback = this._readCallback(token);\n    });\n  }\n}\n\n// The empty function\nfunction noop() {}\n\n// Initializes the parser with the given data factory\nfunction initDataFactory(parser, factory) {\n  // Set factory methods\n  const namedNode = factory.namedNode;\n  parser._namedNode   = namedNode;\n  parser._blankNode   = factory.blankNode;\n  parser._literal     = factory.literal;\n  parser._variable    = factory.variable;\n  parser._quad        = factory.quad;\n  parser.DEFAULTGRAPH = factory.defaultGraph();\n\n  // Set common named nodes\n  parser.RDF_FIRST  = namedNode(namespaces.rdf.first);\n  parser.RDF_REST   = namedNode(namespaces.rdf.rest);\n  parser.RDF_NIL    = namedNode(namespaces.rdf.nil);\n  parser.N3_FORALL  = namedNode(namespaces.r.forAll);\n  parser.N3_FORSOME = namedNode(namespaces.r.forSome);\n  parser.ABBREVIATIONS = {\n    'a': namedNode(namespaces.rdf.type),\n    '=': namedNode(namespaces.owl.sameAs),\n    '>': namedNode(namespaces.log.implies),\n  };\n  parser.QUANTIFIERS_GRAPH = namedNode('urn:n3:quantifiers');\n}\ninitDataFactory(N3Parser.prototype, N3DataFactory);\n", "// **N3Writer** writes N3 documents.\nimport namespaces from './IRIs';\nimport { default as N3DataFactory, Term } from './N3DataFactory';\nimport { isDefaultGraph } from './N3Util';\n\nconst DEFAULTGRAPH = N3DataFactory.defaultGraph();\n\nconst { rdf, xsd } = namespaces;\n\n// Characters in literals that require escaping\nconst escape    = /[\"\\\\\\t\\n\\r\\b\\f\\u0000-\\u0019\\ud800-\\udbff]/,\n    escapeAll = /[\"\\\\\\t\\n\\r\\b\\f\\u0000-\\u0019]|[\\ud800-\\udbff][\\udc00-\\udfff]/g,\n    escapedCharacters = {\n      '\\\\': '\\\\\\\\', '\"': '\\\\\"', '\\t': '\\\\t',\n      '\\n': '\\\\n', '\\r': '\\\\r', '\\b': '\\\\b', '\\f': '\\\\f',\n    };\n\n// ## Placeholder class to represent already pretty-printed terms\nclass SerializedTerm extends Term {\n  // Pretty-printed nodes are not equal to any other node\n  // (e.g., [] does not equal [])\n  equals(other) {\n    return other === this;\n  }\n}\n\n// ## Constructor\nexport default class N3Writer {\n  constructor(outputStream, options) {\n    // ### `_prefixRegex` matches a prefixed name or IRI that begins with one of the added prefixes\n    this._prefixRegex = /$0^/;\n\n    // Shift arguments if the first argument is not a stream\n    if (outputStream && typeof outputStream.write !== 'function')\n      options = outputStream, outputStream = null;\n    options = options || {};\n    this._lists = options.lists;\n\n    // If no output stream given, send the output as string through the end callback\n    if (!outputStream) {\n      let output = '';\n      this._outputStream = {\n        write(chunk, encoding, done) { output += chunk; done && done(); },\n        end: done => { done && done(null, output); },\n      };\n      this._endStream = true;\n    }\n    else {\n      this._outputStream = outputStream;\n      this._endStream = options.end === undefined ? true : !!options.end;\n    }\n\n    // Initialize writer, depending on the format\n    this._subject = null;\n    if (!(/triple|quad/i).test(options.format)) {\n      this._lineMode = false;\n      this._graph = DEFAULTGRAPH;\n      this._prefixIRIs = Object.create(null);\n      options.prefixes && this.addPrefixes(options.prefixes);\n      if (options.baseIRI) {\n        this._baseMatcher = new RegExp(`^${escapeRegex(options.baseIRI)\n            }${options.baseIRI.endsWith('/') ? '' : '[#?]'}`);\n        this._baseLength = options.baseIRI.length;\n      }\n    }\n    else {\n      this._lineMode = true;\n      this._writeQuad = this._writeQuadLine;\n    }\n  }\n\n  // ## Private methods\n\n  // ### Whether the current graph is the default graph\n  get _inDefaultGraph() {\n    return DEFAULTGRAPH.equals(this._graph);\n  }\n\n  // ### `_write` writes the argument to the output stream\n  _write(string, callback) {\n    this._outputStream.write(string, 'utf8', callback);\n  }\n\n  // ### `_writeQuad` writes the quad to the output stream\n  _writeQuad(subject, predicate, object, graph, done) {\n    try {\n      // Write the graph's label if it has changed\n      if (!graph.equals(this._graph)) {\n        // Close the previous graph and start the new one\n        this._write((this._subject === null ? '' : (this._inDefaultGraph ? '.\\n' : '\\n}\\n')) +\n                    (DEFAULTGRAPH.equals(graph) ? '' : `${this._encodeIriOrBlank(graph)} {\\n`));\n        this._graph = graph;\n        this._subject = null;\n      }\n      // Don't repeat the subject if it's the same\n      if (subject.equals(this._subject)) {\n        // Don't repeat the predicate if it's the same\n        if (predicate.equals(this._predicate))\n          this._write(`, ${this._encodeObject(object)}`, done);\n        // Same subject, different predicate\n        else\n          this._write(`;\\n    ${\n                      this._encodePredicate(this._predicate = predicate)} ${\n                      this._encodeObject(object)}`, done);\n      }\n      // Different subject; write the whole quad\n      else\n        this._write(`${(this._subject === null ? '' : '.\\n') +\n                    this._encodeSubject(this._subject = subject)} ${\n                    this._encodePredicate(this._predicate = predicate)} ${\n                    this._encodeObject(object)}`, done);\n    }\n    catch (error) { done && done(error); }\n  }\n\n  // ### `_writeQuadLine` writes the quad to the output stream as a single line\n  _writeQuadLine(subject, predicate, object, graph, done) {\n    // Write the quad without prefixes\n    delete this._prefixMatch;\n    this._write(this.quadToString(subject, predicate, object, graph), done);\n  }\n\n  // ### `quadToString` serializes a quad as a string\n  quadToString(subject, predicate, object, graph) {\n    return  `${this._encodeSubject(subject)} ${\n            this._encodeIriOrBlank(predicate)} ${\n            this._encodeObject(object)\n            }${graph && graph.value ? ` ${this._encodeIriOrBlank(graph)} .\\n` : ' .\\n'}`;\n  }\n\n  // ### `quadsToString` serializes an array of quads as a string\n  quadsToString(quads) {\n    return quads.map(t => {\n      return this.quadToString(t.subject, t.predicate, t.object, t.graph);\n    }).join('');\n  }\n\n  // ### `_encodeSubject` represents a subject\n  _encodeSubject(entity) {\n    return entity.termType === 'Quad' ?\n      this._encodeQuad(entity) : this._encodeIriOrBlank(entity);\n  }\n\n  // ### `_encodeIriOrBlank` represents an IRI or blank node\n  _encodeIriOrBlank(entity) {\n    // A blank node or list is represented as-is\n    if (entity.termType !== 'NamedNode') {\n      // If it is a list head, pretty-print it\n      if (this._lists && (entity.value in this._lists))\n        entity = this.list(this._lists[entity.value]);\n      return 'id' in entity ? entity.id : `_:${entity.value}`;\n    }\n    let iri = entity.value;\n    // Use relative IRIs if requested and possible\n    if (this._baseMatcher && this._baseMatcher.test(iri))\n      iri = iri.substr(this._baseLength);\n    // Escape special characters\n    if (escape.test(iri))\n      iri = iri.replace(escapeAll, characterReplacer);\n    // Try to represent the IRI as prefixed name\n    const prefixMatch = this._prefixRegex.exec(iri);\n    return !prefixMatch ? `<${iri}>` :\n           (!prefixMatch[1] ? iri : this._prefixIRIs[prefixMatch[1]] + prefixMatch[2]);\n  }\n\n  // ### `_encodeLiteral` represents a literal\n  _encodeLiteral(literal) {\n    // Escape special characters\n    let value = literal.value;\n    if (escape.test(value))\n      value = value.replace(escapeAll, characterReplacer);\n\n    // Write a language-tagged literal\n    if (literal.language)\n      return `\"${value}\"@${literal.language}`;\n\n    // Write dedicated literals per data type\n    if (this._lineMode) {\n      // Only abbreviate strings in N-Triples or N-Quads\n      if (literal.datatype.value === xsd.string)\n        return `\"${value}\"`;\n    }\n    else {\n      // Use common datatype abbreviations in Turtle or TriG\n      switch (literal.datatype.value) {\n      case xsd.string:\n        return `\"${value}\"`;\n      case xsd.boolean:\n        if (value === 'true' || value === 'false')\n          return value;\n        break;\n      case xsd.integer:\n        if (/^[+-]?\\d+$/.test(value))\n          return value;\n        break;\n      case xsd.decimal:\n        if (/^[+-]?\\d*\\.\\d+$/.test(value))\n          return value;\n        break;\n      case xsd.double:\n        if (/^[+-]?(?:\\d+\\.\\d*|\\.?\\d+)[eE][+-]?\\d+$/.test(value))\n          return value;\n        break;\n      }\n    }\n\n    // Write a regular datatyped literal\n    return `\"${value}\"^^${this._encodeIriOrBlank(literal.datatype)}`;\n  }\n\n  // ### `_encodePredicate` represents a predicate\n  _encodePredicate(predicate) {\n    return predicate.value === rdf.type ? 'a' : this._encodeIriOrBlank(predicate);\n  }\n\n  // ### `_encodeObject` represents an object\n  _encodeObject(object) {\n    switch (object.termType) {\n    case 'Quad':\n      return this._encodeQuad(object);\n    case 'Literal':\n      return this._encodeLiteral(object);\n    default:\n      return this._encodeIriOrBlank(object);\n    }\n  }\n\n  // ### `_encodeQuad` encodes an RDF* quad\n  _encodeQuad({ subject, predicate, object, graph }) {\n    return `<<${\n      this._encodeSubject(subject)} ${\n      this._encodePredicate(predicate)} ${\n      this._encodeObject(object)}${\n      isDefaultGraph(graph) ? '' : ` ${this._encodeIriOrBlank(graph)}`}>>`;\n  }\n\n  // ### `_blockedWrite` replaces `_write` after the writer has been closed\n  _blockedWrite() {\n    throw new Error('Cannot write because the writer has been closed.');\n  }\n\n  // ### `addQuad` adds the quad to the output stream\n  addQuad(subject, predicate, object, graph, done) {\n    // The quad was given as an object, so shift parameters\n    if (object === undefined)\n      this._writeQuad(subject.subject, subject.predicate, subject.object, subject.graph, predicate);\n    // The optional `graph` parameter was not provided\n    else if (typeof graph === 'function')\n      this._writeQuad(subject, predicate, object, DEFAULTGRAPH, graph);\n    // The `graph` parameter was provided\n    else\n      this._writeQuad(subject, predicate, object, graph || DEFAULTGRAPH, done);\n  }\n\n  // ### `addQuads` adds the quads to the output stream\n  addQuads(quads) {\n    for (let i = 0; i < quads.length; i++)\n      this.addQuad(quads[i]);\n  }\n\n  // ### `addPrefix` adds the prefix to the output stream\n  addPrefix(prefix, iri, done) {\n    const prefixes = {};\n    prefixes[prefix] = iri;\n    this.addPrefixes(prefixes, done);\n  }\n\n  // ### `addPrefixes` adds the prefixes to the output stream\n  addPrefixes(prefixes, done) {\n    // Ignore prefixes if not supported by the serialization\n    if (!this._prefixIRIs)\n      return done && done();\n\n    // Write all new prefixes\n    let hasPrefixes = false;\n    for (let prefix in prefixes) {\n      let iri = prefixes[prefix];\n      if (typeof iri !== 'string')\n        iri = iri.value;\n      hasPrefixes = true;\n      // Finish a possible pending quad\n      if (this._subject !== null) {\n        this._write(this._inDefaultGraph ? '.\\n' : '\\n}\\n');\n        this._subject = null, this._graph = '';\n      }\n      // Store and write the prefix\n      this._prefixIRIs[iri] = (prefix += ':');\n      this._write(`@prefix ${prefix} <${iri}>.\\n`);\n    }\n    // Recreate the prefix matcher\n    if (hasPrefixes) {\n      let IRIlist = '', prefixList = '';\n      for (const prefixIRI in this._prefixIRIs) {\n        IRIlist += IRIlist ? `|${prefixIRI}` : prefixIRI;\n        prefixList += (prefixList ? '|' : '') + this._prefixIRIs[prefixIRI];\n      }\n      IRIlist = escapeRegex(IRIlist, /[\\]\\/\\(\\)\\*\\+\\?\\.\\\\\\$]/g, '\\\\$&');\n      this._prefixRegex = new RegExp(`^(?:${prefixList})[^\\/]*$|` +\n                                     `^(${IRIlist})([_a-zA-Z][\\\\-_a-zA-Z0-9]*)$`);\n    }\n    // End a prefix block with a newline\n    this._write(hasPrefixes ? '\\n' : '', done);\n  }\n\n  // ### `blank` creates a blank node with the given content\n  blank(predicate, object) {\n    let children = predicate, child, length;\n    // Empty blank node\n    if (predicate === undefined)\n      children = [];\n    // Blank node passed as blank(Term(\"predicate\"), Term(\"object\"))\n    else if (predicate.termType)\n      children = [{ predicate: predicate, object: object }];\n    // Blank node passed as blank({ predicate: predicate, object: object })\n    else if (!('length' in predicate))\n      children = [predicate];\n\n    switch (length = children.length) {\n    // Generate an empty blank node\n    case 0:\n      return new SerializedTerm('[]');\n    // Generate a non-nested one-triple blank node\n    case 1:\n      child = children[0];\n      if (!(child.object instanceof SerializedTerm))\n        return new SerializedTerm(`[ ${this._encodePredicate(child.predicate)} ${\n                                  this._encodeObject(child.object)} ]`);\n    // Generate a multi-triple or nested blank node\n    default:\n      let contents = '[';\n      // Write all triples in order\n      for (let i = 0; i < length; i++) {\n        child = children[i];\n        // Write only the object is the predicate is the same as the previous\n        if (child.predicate.equals(predicate))\n          contents += `, ${this._encodeObject(child.object)}`;\n        // Otherwise, write the predicate and the object\n        else {\n          contents += `${(i ? ';\\n  ' : '\\n  ') +\n                      this._encodePredicate(child.predicate)} ${\n                      this._encodeObject(child.object)}`;\n          predicate = child.predicate;\n        }\n      }\n      return new SerializedTerm(`${contents}\\n]`);\n    }\n  }\n\n  // ### `list` creates a list node with the given content\n  list(elements) {\n    const length = elements && elements.length || 0, contents = new Array(length);\n    for (let i = 0; i < length; i++)\n      contents[i] = this._encodeObject(elements[i]);\n    return new SerializedTerm(`(${contents.join(' ')})`);\n  }\n\n  // ### `end` signals the end of the output stream\n  end(done) {\n    // Finish a possible pending quad\n    if (this._subject !== null) {\n      this._write(this._inDefaultGraph ? '.\\n' : '\\n}\\n');\n      this._subject = null;\n    }\n    // Disallow further writing\n    this._write = this._blockedWrite;\n\n    // Try to end the underlying stream, ensuring done is called exactly one time\n    let singleDone = done && ((error, result) => { singleDone = null, done(error, result); });\n    if (this._endStream) {\n      try { return this._outputStream.end(singleDone); }\n      catch (error) { /* error closing stream */ }\n    }\n    singleDone && singleDone();\n  }\n}\n\n// Replaces a character by its escaped version\nfunction characterReplacer(character) {\n  // Replace a single character by its escaped version\n  let result = escapedCharacters[character];\n  if (result === undefined) {\n    // Replace a single character with its 4-bit unicode escape sequence\n    if (character.length === 1) {\n      result = character.charCodeAt(0).toString(16);\n      result = '\\\\u0000'.substr(0, 6 - result.length) + result;\n    }\n    // Replace a surrogate pair with its 8-bit unicode escape sequence\n    else {\n      result = ((character.charCodeAt(0) - 0xD800) * 0x400 +\n                 character.charCodeAt(1) + 0x2400).toString(16);\n      result = '\\\\U00000000'.substr(0, 10 - result.length) + result;\n    }\n  }\n  return result;\n}\n\nfunction escapeRegex(regex) {\n  return regex.replace(/[\\]\\/\\(\\)\\*\\+\\?\\.\\\\\\$]/g, '\\\\$&');\n}\n", "'use strict'\n\n/*\n  This file is a reduced and adapted version of the main lib/internal/per_context/primordials.js file defined at\n\n  https://github.com/nodejs/node/blob/master/lib/internal/per_context/primordials.js\n\n  Don't try to replace with the original file and keep it up to date with the upstream file.\n*/\nmodule.exports = {\n  ArrayIsArray(self) {\n    return Array.isArray(self)\n  },\n  ArrayPrototypeIncludes(self, el) {\n    return self.includes(el)\n  },\n  ArrayPrototypeIndexOf(self, el) {\n    return self.indexOf(el)\n  },\n  ArrayPrototypeJoin(self, sep) {\n    return self.join(sep)\n  },\n  ArrayPrototypeMap(self, fn) {\n    return self.map(fn)\n  },\n  ArrayPrototypePop(self, el) {\n    return self.pop(el)\n  },\n  ArrayPrototypePush(self, el) {\n    return self.push(el)\n  },\n  ArrayPrototypeSlice(self, start, end) {\n    return self.slice(start, end)\n  },\n  Error,\n  FunctionPrototypeCall(fn, thisArgs, ...args) {\n    return fn.call(thisArgs, ...args)\n  },\n  FunctionPrototypeSymbolHasInstance(self, instance) {\n    return Function.prototype[Symbol.hasInstance].call(self, instance)\n  },\n  MathFloor: Math.floor,\n  Number,\n  NumberIsInteger: Number.isInteger,\n  NumberIsNaN: Number.isNaN,\n  NumberMAX_SAFE_INTEGER: Number.MAX_SAFE_INTEGER,\n  NumberMIN_SAFE_INTEGER: Number.MIN_SAFE_INTEGER,\n  NumberParseInt: Number.parseInt,\n  ObjectDefineProperties(self, props) {\n    return Object.defineProperties(self, props)\n  },\n  ObjectDefineProperty(self, name, prop) {\n    return Object.defineProperty(self, name, prop)\n  },\n  ObjectGetOwnPropertyDescriptor(self, name) {\n    return Object.getOwnPropertyDescriptor(self, name)\n  },\n  ObjectKeys(obj) {\n    return Object.keys(obj)\n  },\n  ObjectSetPrototypeOf(target, proto) {\n    return Object.setPrototypeOf(target, proto)\n  },\n  Promise,\n  PromisePrototypeCatch(self, fn) {\n    return self.catch(fn)\n  },\n  PromisePrototypeThen(self, thenFn, catchFn) {\n    return self.then(thenFn, catchFn)\n  },\n  PromiseReject(err) {\n    return Promise.reject(err)\n  },\n  ReflectApply: Reflect.apply,\n  RegExpPrototypeTest(self, value) {\n    return self.test(value)\n  },\n  SafeSet: Set,\n  String,\n  StringPrototypeSlice(self, start, end) {\n    return self.slice(start, end)\n  },\n  StringPrototypeToLowerCase(self) {\n    return self.toLowerCase()\n  },\n  StringPrototypeToUpperCase(self) {\n    return self.toUpperCase()\n  },\n  StringPrototypeTrim(self) {\n    return self.trim()\n  },\n  Symbol,\n  SymbolFor: Symbol.for,\n  SymbolAsyncIterator: Symbol.asyncIterator,\n  SymbolHasInstance: Symbol.hasInstance,\n  SymbolIterator: Symbol.iterator,\n  TypedArrayPrototypeSet(self, buf, len) {\n    return self.set(buf, len)\n  },\n  Uint8Array\n}\n", "'use strict'\n\nconst bufferModule = require('buffer')\nconst AsyncFunction = Object.getPrototypeOf(async function () {}).constructor\nconst Blob = globalThis.Blob || bufferModule.Blob\n/* eslint-disable indent */\nconst isBlob =\n  typeof Blob !== 'undefined'\n    ? function isBlob(b) {\n        // eslint-disable-next-line indent\n        return b instanceof Blob\n      }\n    : function isBlob(b) {\n        return false\n      }\n/* eslint-enable indent */\n\n// This is a simplified version of AggregateError\nclass AggregateError extends Error {\n  constructor(errors) {\n    if (!Array.isArray(errors)) {\n      throw new TypeError(`Expected input to be an Array, got ${typeof errors}`)\n    }\n    let message = ''\n    for (let i = 0; i < errors.length; i++) {\n      message += `    ${errors[i].stack}\\n`\n    }\n    super(message)\n    this.name = 'AggregateError'\n    this.errors = errors\n  }\n}\nmodule.exports = {\n  AggregateError,\n  kEmptyObject: Object.freeze({}),\n  once(callback) {\n    let called = false\n    return function (...args) {\n      if (called) {\n        return\n      }\n      called = true\n      callback.apply(this, args)\n    }\n  },\n  createDeferredPromise: function () {\n    let resolve\n    let reject\n\n    // eslint-disable-next-line promise/param-names\n    const promise = new Promise((res, rej) => {\n      resolve = res\n      reject = rej\n    })\n    return {\n      promise,\n      resolve,\n      reject\n    }\n  },\n  promisify(fn) {\n    return new Promise((resolve, reject) => {\n      fn((err, ...args) => {\n        if (err) {\n          return reject(err)\n        }\n        return resolve(...args)\n      })\n    })\n  },\n  debuglog() {\n    return function () {}\n  },\n  format(format, ...args) {\n    // Simplified version of https://nodejs.org/api/util.html#utilformatformat-args\n    return format.replace(/%([sdifj])/g, function (...[_unused, type]) {\n      const replacement = args.shift()\n      if (type === 'f') {\n        return replacement.toFixed(6)\n      } else if (type === 'j') {\n        return JSON.stringify(replacement)\n      } else if (type === 's' && typeof replacement === 'object') {\n        const ctor = replacement.constructor !== Object ? replacement.constructor.name : ''\n        return `${ctor} {}`.trim()\n      } else {\n        return replacement.toString()\n      }\n    })\n  },\n  inspect(value) {\n    // Vastly simplified version of https://nodejs.org/api/util.html#utilinspectobject-options\n    switch (typeof value) {\n      case 'string':\n        if (value.includes(\"'\")) {\n          if (!value.includes('\"')) {\n            return `\"${value}\"`\n          } else if (!value.includes('`') && !value.includes('${')) {\n            return `\\`${value}\\``\n          }\n        }\n        return `'${value}'`\n      case 'number':\n        if (isNaN(value)) {\n          return 'NaN'\n        } else if (Object.is(value, -0)) {\n          return String(value)\n        }\n        return value\n      case 'bigint':\n        return `${String(value)}n`\n      case 'boolean':\n      case 'undefined':\n        return String(value)\n      case 'object':\n        return '{}'\n    }\n  },\n  types: {\n    isAsyncFunction(fn) {\n      return fn instanceof AsyncFunction\n    },\n    isArrayBufferView(arr) {\n      return ArrayBuffer.isView(arr)\n    }\n  },\n  isBlob\n}\nmodule.exports.promisify.custom = Symbol.for('nodejs.util.promisify.custom')\n", "/**\n * @typedef {object} PrivateData\n * @property {EventTarget} eventTarget The event target.\n * @property {{type:string}} event The original event object.\n * @property {number} eventPhase The current event phase.\n * @property {EventTarget|null} currentTarget The current event target.\n * @property {boolean} canceled The flag to prevent default.\n * @property {boolean} stopped The flag to stop propagation.\n * @property {boolean} immediateStopped The flag to stop propagation immediately.\n * @property {Function|null} passiveListener The listener if the current listener is passive. Otherwise this is null.\n * @property {number} timeStamp The unix time.\n * @private\n */\n\n/**\n * Private data for event wrappers.\n * @type {WeakMap<Event, PrivateData>}\n * @private\n */\nconst privateData = new WeakMap()\n\n/**\n * Cache for wrapper classes.\n * @type {WeakMap<Object, Function>}\n * @private\n */\nconst wrappers = new WeakMap()\n\n/**\n * Get private data.\n * @param {Event} event The event object to get private data.\n * @returns {PrivateData} The private data of the event.\n * @private\n */\nfunction pd(event) {\n    const retv = privateData.get(event)\n    console.assert(\n        retv != null,\n        \"'this' is expected an Event object, but got\",\n        event\n    )\n    return retv\n}\n\n/**\n * https://dom.spec.whatwg.org/#set-the-canceled-flag\n * @param data {PrivateData} private data.\n */\nfunction setCancelFlag(data) {\n    if (data.passiveListener != null) {\n        if (\n            typeof console !== \"undefined\" &&\n            typeof console.error === \"function\"\n        ) {\n            console.error(\n                \"Unable to preventDefault inside passive event listener invocation.\",\n                data.passiveListener\n            )\n        }\n        return\n    }\n    if (!data.event.cancelable) {\n        return\n    }\n\n    data.canceled = true\n    if (typeof data.event.preventDefault === \"function\") {\n        data.event.preventDefault()\n    }\n}\n\n/**\n * @see https://dom.spec.whatwg.org/#interface-event\n * @private\n */\n/**\n * The event wrapper.\n * @constructor\n * @param {EventTarget} eventTarget The event target of this dispatching.\n * @param {Event|{type:string}} event The original event to wrap.\n */\nfunction Event(eventTarget, event) {\n    privateData.set(this, {\n        eventTarget,\n        event,\n        eventPhase: 2,\n        currentTarget: eventTarget,\n        canceled: false,\n        stopped: false,\n        immediateStopped: false,\n        passiveListener: null,\n        timeStamp: event.timeStamp || Date.now(),\n    })\n\n    // https://heycam.github.io/webidl/#Unforgeable\n    Object.defineProperty(this, \"isTrusted\", { value: false, enumerable: true })\n\n    // Define accessors\n    const keys = Object.keys(event)\n    for (let i = 0; i < keys.length; ++i) {\n        const key = keys[i]\n        if (!(key in this)) {\n            Object.defineProperty(this, key, defineRedirectDescriptor(key))\n        }\n    }\n}\n\n// Should be enumerable, but class methods are not enumerable.\nEvent.prototype = {\n    /**\n     * The type of this event.\n     * @type {string}\n     */\n    get type() {\n        return pd(this).event.type\n    },\n\n    /**\n     * The target of this event.\n     * @type {EventTarget}\n     */\n    get target() {\n        return pd(this).eventTarget\n    },\n\n    /**\n     * The target of this event.\n     * @type {EventTarget}\n     */\n    get currentTarget() {\n        return pd(this).currentTarget\n    },\n\n    /**\n     * @returns {EventTarget[]} The composed path of this event.\n     */\n    composedPath() {\n        const currentTarget = pd(this).currentTarget\n        if (currentTarget == null) {\n            return []\n        }\n        return [currentTarget]\n    },\n\n    /**\n     * Constant of NONE.\n     * @type {number}\n     */\n    get NONE() {\n        return 0\n    },\n\n    /**\n     * Constant of CAPTURING_PHASE.\n     * @type {number}\n     */\n    get CAPTURING_PHASE() {\n        return 1\n    },\n\n    /**\n     * Constant of AT_TARGET.\n     * @type {number}\n     */\n    get AT_TARGET() {\n        return 2\n    },\n\n    /**\n     * Constant of BUBBLING_PHASE.\n     * @type {number}\n     */\n    get BUBBLING_PHASE() {\n        return 3\n    },\n\n    /**\n     * The target of this event.\n     * @type {number}\n     */\n    get eventPhase() {\n        return pd(this).eventPhase\n    },\n\n    /**\n     * Stop event bubbling.\n     * @returns {void}\n     */\n    stopPropagation() {\n        const data = pd(this)\n\n        data.stopped = true\n        if (typeof data.event.stopPropagation === \"function\") {\n            data.event.stopPropagation()\n        }\n    },\n\n    /**\n     * Stop event bubbling.\n     * @returns {void}\n     */\n    stopImmediatePropagation() {\n        const data = pd(this)\n\n        data.stopped = true\n        data.immediateStopped = true\n        if (typeof data.event.stopImmediatePropagation === \"function\") {\n            data.event.stopImmediatePropagation()\n        }\n    },\n\n    /**\n     * The flag to be bubbling.\n     * @type {boolean}\n     */\n    get bubbles() {\n        return Boolean(pd(this).event.bubbles)\n    },\n\n    /**\n     * The flag to be cancelable.\n     * @type {boolean}\n     */\n    get cancelable() {\n        return Boolean(pd(this).event.cancelable)\n    },\n\n    /**\n     * Cancel this event.\n     * @returns {void}\n     */\n    preventDefault() {\n        setCancelFlag(pd(this))\n    },\n\n    /**\n     * The flag to indicate cancellation state.\n     * @type {boolean}\n     */\n    get defaultPrevented() {\n        return pd(this).canceled\n    },\n\n    /**\n     * The flag to be composed.\n     * @type {boolean}\n     */\n    get composed() {\n        return Boolean(pd(this).event.composed)\n    },\n\n    /**\n     * The unix time of this event.\n     * @type {number}\n     */\n    get timeStamp() {\n        return pd(this).timeStamp\n    },\n\n    /**\n     * The target of this event.\n     * @type {EventTarget}\n     * @deprecated\n     */\n    get srcElement() {\n        return pd(this).eventTarget\n    },\n\n    /**\n     * The flag to stop event bubbling.\n     * @type {boolean}\n     * @deprecated\n     */\n    get cancelBubble() {\n        return pd(this).stopped\n    },\n    set cancelBubble(value) {\n        if (!value) {\n            return\n        }\n        const data = pd(this)\n\n        data.stopped = true\n        if (typeof data.event.cancelBubble === \"boolean\") {\n            data.event.cancelBubble = true\n        }\n    },\n\n    /**\n     * The flag to indicate cancellation state.\n     * @type {boolean}\n     * @deprecated\n     */\n    get returnValue() {\n        return !pd(this).canceled\n    },\n    set returnValue(value) {\n        if (!value) {\n            setCancelFlag(pd(this))\n        }\n    },\n\n    /**\n     * Initialize this event object. But do nothing under event dispatching.\n     * @param {string} type The event type.\n     * @param {boolean} [bubbles=false] The flag to be possible to bubble up.\n     * @param {boolean} [cancelable=false] The flag to be possible to cancel.\n     * @deprecated\n     */\n    initEvent() {\n        // Do nothing.\n    },\n}\n\n// `constructor` is not enumerable.\nObject.defineProperty(Event.prototype, \"constructor\", {\n    value: Event,\n    configurable: true,\n    writable: true,\n})\n\n// Ensure `event instanceof window.Event` is `true`.\nif (typeof window !== \"undefined\" && typeof window.Event !== \"undefined\") {\n    Object.setPrototypeOf(Event.prototype, window.Event.prototype)\n\n    // Make association for wrappers.\n    wrappers.set(window.Event.prototype, Event)\n}\n\n/**\n * Get the property descriptor to redirect a given property.\n * @param {string} key Property name to define property descriptor.\n * @returns {PropertyDescriptor} The property descriptor to redirect the property.\n * @private\n */\nfunction defineRedirectDescriptor(key) {\n    return {\n        get() {\n            return pd(this).event[key]\n        },\n        set(value) {\n            pd(this).event[key] = value\n        },\n        configurable: true,\n        enumerable: true,\n    }\n}\n\n/**\n * Get the property descriptor to call a given method property.\n * @param {string} key Property name to define property descriptor.\n * @returns {PropertyDescriptor} The property descriptor to call the method property.\n * @private\n */\nfunction defineCallDescriptor(key) {\n    return {\n        value() {\n            const event = pd(this).event\n            return event[key].apply(event, arguments)\n        },\n        configurable: true,\n        enumerable: true,\n    }\n}\n\n/**\n * Define new wrapper class.\n * @param {Function} BaseEvent The base wrapper class.\n * @param {Object} proto The prototype of the original event.\n * @returns {Function} The defined wrapper class.\n * @private\n */\nfunction defineWrapper(BaseEvent, proto) {\n    const keys = Object.keys(proto)\n    if (keys.length === 0) {\n        return BaseEvent\n    }\n\n    /** CustomEvent */\n    function CustomEvent(eventTarget, event) {\n        BaseEvent.call(this, eventTarget, event)\n    }\n\n    CustomEvent.prototype = Object.create(BaseEvent.prototype, {\n        constructor: { value: CustomEvent, configurable: true, writable: true },\n    })\n\n    // Define accessors.\n    for (let i = 0; i < keys.length; ++i) {\n        const key = keys[i]\n        if (!(key in BaseEvent.prototype)) {\n            const descriptor = Object.getOwnPropertyDescriptor(proto, key)\n            const isFunc = typeof descriptor.value === \"function\"\n            Object.defineProperty(\n                CustomEvent.prototype,\n                key,\n                isFunc\n                    ? defineCallDescriptor(key)\n                    : defineRedirectDescriptor(key)\n            )\n        }\n    }\n\n    return CustomEvent\n}\n\n/**\n * Get the wrapper class of a given prototype.\n * @param {Object} proto The prototype of the original event to get its wrapper.\n * @returns {Function} The wrapper class.\n * @private\n */\nfunction getWrapper(proto) {\n    if (proto == null || proto === Object.prototype) {\n        return Event\n    }\n\n    let wrapper = wrappers.get(proto)\n    if (wrapper == null) {\n        wrapper = defineWrapper(getWrapper(Object.getPrototypeOf(proto)), proto)\n        wrappers.set(proto, wrapper)\n    }\n    return wrapper\n}\n\n/**\n * Wrap a given event to management a dispatching.\n * @param {EventTarget} eventTarget The event target of this dispatching.\n * @param {Object} event The event to wrap.\n * @returns {Event} The wrapper instance.\n * @private\n */\nexport function wrapEvent(eventTarget, event) {\n    const Wrapper = getWrapper(Object.getPrototypeOf(event))\n    return new Wrapper(eventTarget, event)\n}\n\n/**\n * Get the immediateStopped flag of a given event.\n * @param {Event} event The event to get.\n * @returns {boolean} The flag to stop propagation immediately.\n * @private\n */\nexport function isStopped(event) {\n    return pd(event).immediateStopped\n}\n\n/**\n * Set the current event phase of a given event.\n * @param {Event} event The event to set current target.\n * @param {number} eventPhase New event phase.\n * @returns {void}\n * @private\n */\nexport function setEventPhase(event, eventPhase) {\n    pd(event).eventPhase = eventPhase\n}\n\n/**\n * Set the current target of a given event.\n * @param {Event} event The event to set current target.\n * @param {EventTarget|null} currentTarget New current target.\n * @returns {void}\n * @private\n */\nexport function setCurrentTarget(event, currentTarget) {\n    pd(event).currentTarget = currentTarget\n}\n\n/**\n * Set a passive listener of a given event.\n * @param {Event} event The event to set current target.\n * @param {Function|null} passiveListener New passive listener.\n * @returns {void}\n * @private\n */\nexport function setPassiveListener(event, passiveListener) {\n    pd(event).passiveListener = passiveListener\n}\n", "import {\n    isStopped,\n    setCurrentTarget,\n    setEventPhase,\n    setPassiveListener,\n    wrapEvent,\n} from \"./event.mjs\"\n\n/**\n * @typedef {object} ListenerNode\n * @property {Function} listener\n * @property {1|2|3} listenerType\n * @property {boolean} passive\n * @property {boolean} once\n * @property {ListenerNode|null} next\n * @private\n */\n\n/**\n * @type {WeakMap<object, Map<string, ListenerNode>>}\n * @private\n */\nconst listenersMap = new WeakMap()\n\n// Listener types\nconst CAPTURE = 1\nconst BUBBLE = 2\nconst ATTRIBUTE = 3\n\n/**\n * Check whether a given value is an object or not.\n * @param {any} x The value to check.\n * @returns {boolean} `true` if the value is an object.\n */\nfunction isObject(x) {\n    return x !== null && typeof x === \"object\" //eslint-disable-line no-restricted-syntax\n}\n\n/**\n * Get listeners.\n * @param {EventTarget} eventTarget The event target to get.\n * @returns {Map<string, ListenerNode>} The listeners.\n * @private\n */\nfunction getListeners(eventTarget) {\n    const listeners = listenersMap.get(eventTarget)\n    if (listeners == null) {\n        throw new TypeError(\n            \"'this' is expected an EventTarget object, but got another value.\"\n        )\n    }\n    return listeners\n}\n\n/**\n * Get the property descriptor for the event attribute of a given event.\n * @param {string} eventName The event name to get property descriptor.\n * @returns {PropertyDescriptor} The property descriptor.\n * @private\n */\nfunction defineEventAttributeDescriptor(eventName) {\n    return {\n        get() {\n            const listeners = getListeners(this)\n            let node = listeners.get(eventName)\n            while (node != null) {\n                if (node.listenerType === ATTRIBUTE) {\n                    return node.listener\n                }\n                node = node.next\n            }\n            return null\n        },\n\n        set(listener) {\n            if (typeof listener !== \"function\" && !isObject(listener)) {\n                listener = null // eslint-disable-line no-param-reassign\n            }\n            const listeners = getListeners(this)\n\n            // Traverse to the tail while removing old value.\n            let prev = null\n            let node = listeners.get(eventName)\n            while (node != null) {\n                if (node.listenerType === ATTRIBUTE) {\n                    // Remove old value.\n                    if (prev !== null) {\n                        prev.next = node.next\n                    } else if (node.next !== null) {\n                        listeners.set(eventName, node.next)\n                    } else {\n                        listeners.delete(eventName)\n                    }\n                } else {\n                    prev = node\n                }\n\n                node = node.next\n            }\n\n            // Add new value.\n            if (listener !== null) {\n                const newNode = {\n                    listener,\n                    listenerType: ATTRIBUTE,\n                    passive: false,\n                    once: false,\n                    next: null,\n                }\n                if (prev === null) {\n                    listeners.set(eventName, newNode)\n                } else {\n                    prev.next = newNode\n                }\n            }\n        },\n        configurable: true,\n        enumerable: true,\n    }\n}\n\n/**\n * Define an event attribute (e.g. `eventTarget.onclick`).\n * @param {Object} eventTargetPrototype The event target prototype to define an event attrbite.\n * @param {string} eventName The event name to define.\n * @returns {void}\n */\nfunction defineEventAttribute(eventTargetPrototype, eventName) {\n    Object.defineProperty(\n        eventTargetPrototype,\n        `on${eventName}`,\n        defineEventAttributeDescriptor(eventName)\n    )\n}\n\n/**\n * Define a custom EventTarget with event attributes.\n * @param {string[]} eventNames Event names for event attributes.\n * @returns {EventTarget} The custom EventTarget.\n * @private\n */\nfunction defineCustomEventTarget(eventNames) {\n    /** CustomEventTarget */\n    function CustomEventTarget() {\n        EventTarget.call(this)\n    }\n\n    CustomEventTarget.prototype = Object.create(EventTarget.prototype, {\n        constructor: {\n            value: CustomEventTarget,\n            configurable: true,\n            writable: true,\n        },\n    })\n\n    for (let i = 0; i < eventNames.length; ++i) {\n        defineEventAttribute(CustomEventTarget.prototype, eventNames[i])\n    }\n\n    return CustomEventTarget\n}\n\n/**\n * EventTarget.\n *\n * - This is constructor if no arguments.\n * - This is a function which returns a CustomEventTarget constructor if there are arguments.\n *\n * For example:\n *\n *     class A extends EventTarget {}\n *     class B extends EventTarget(\"message\") {}\n *     class C extends EventTarget(\"message\", \"error\") {}\n *     class D extends EventTarget([\"message\", \"error\"]) {}\n */\nfunction EventTarget() {\n    /*eslint-disable consistent-return */\n    if (this instanceof EventTarget) {\n        listenersMap.set(this, new Map())\n        return\n    }\n    if (arguments.length === 1 && Array.isArray(arguments[0])) {\n        return defineCustomEventTarget(arguments[0])\n    }\n    if (arguments.length > 0) {\n        const types = new Array(arguments.length)\n        for (let i = 0; i < arguments.length; ++i) {\n            types[i] = arguments[i]\n        }\n        return defineCustomEventTarget(types)\n    }\n    throw new TypeError(\"Cannot call a class as a function\")\n    /*eslint-enable consistent-return */\n}\n\n// Should be enumerable, but class methods are not enumerable.\nEventTarget.prototype = {\n    /**\n     * Add a given listener to this event target.\n     * @param {string} eventName The event name to add.\n     * @param {Function} listener The listener to add.\n     * @param {boolean|{capture?:boolean,passive?:boolean,once?:boolean}} [options] The options for this listener.\n     * @returns {void}\n     */\n    addEventListener(eventName, listener, options) {\n        if (listener == null) {\n            return\n        }\n        if (typeof listener !== \"function\" && !isObject(listener)) {\n            throw new TypeError(\"'listener' should be a function or an object.\")\n        }\n\n        const listeners = getListeners(this)\n        const optionsIsObj = isObject(options)\n        const capture = optionsIsObj\n            ? Boolean(options.capture)\n            : Boolean(options)\n        const listenerType = capture ? CAPTURE : BUBBLE\n        const newNode = {\n            listener,\n            listenerType,\n            passive: optionsIsObj && Boolean(options.passive),\n            once: optionsIsObj && Boolean(options.once),\n            next: null,\n        }\n\n        // Set it as the first node if the first node is null.\n        let node = listeners.get(eventName)\n        if (node === undefined) {\n            listeners.set(eventName, newNode)\n            return\n        }\n\n        // Traverse to the tail while checking duplication..\n        let prev = null\n        while (node != null) {\n            if (\n                node.listener === listener &&\n                node.listenerType === listenerType\n            ) {\n                // Should ignore duplication.\n                return\n            }\n            prev = node\n            node = node.next\n        }\n\n        // Add it.\n        prev.next = newNode\n    },\n\n    /**\n     * Remove a given listener from this event target.\n     * @param {string} eventName The event name to remove.\n     * @param {Function} listener The listener to remove.\n     * @param {boolean|{capture?:boolean,passive?:boolean,once?:boolean}} [options] The options for this listener.\n     * @returns {void}\n     */\n    removeEventListener(eventName, listener, options) {\n        if (listener == null) {\n            return\n        }\n\n        const listeners = getListeners(this)\n        const capture = isObject(options)\n            ? Boolean(options.capture)\n            : Boolean(options)\n        const listenerType = capture ? CAPTURE : BUBBLE\n\n        let prev = null\n        let node = listeners.get(eventName)\n        while (node != null) {\n            if (\n                node.listener === listener &&\n                node.listenerType === listenerType\n            ) {\n                if (prev !== null) {\n                    prev.next = node.next\n                } else if (node.next !== null) {\n                    listeners.set(eventName, node.next)\n                } else {\n                    listeners.delete(eventName)\n                }\n                return\n            }\n\n            prev = node\n            node = node.next\n        }\n    },\n\n    /**\n     * Dispatch a given event.\n     * @param {Event|{type:string}} event The event to dispatch.\n     * @returns {boolean} `false` if canceled.\n     */\n    dispatchEvent(event) {\n        if (event == null || typeof event.type !== \"string\") {\n            throw new TypeError('\"event.type\" should be a string.')\n        }\n\n        // If listeners aren't registered, terminate.\n        const listeners = getListeners(this)\n        const eventName = event.type\n        let node = listeners.get(eventName)\n        if (node == null) {\n            return true\n        }\n\n        // Since we cannot rewrite several properties, so wrap object.\n        const wrappedEvent = wrapEvent(this, event)\n\n        // This doesn't process capturing phase and bubbling phase.\n        // This isn't participating in a tree.\n        let prev = null\n        while (node != null) {\n            // Remove this listener if it's once\n            if (node.once) {\n                if (prev !== null) {\n                    prev.next = node.next\n                } else if (node.next !== null) {\n                    listeners.set(eventName, node.next)\n                } else {\n                    listeners.delete(eventName)\n                }\n            } else {\n                prev = node\n            }\n\n            // Call this listener\n            setPassiveListener(\n                wrappedEvent,\n                node.passive ? node.listener : null\n            )\n            if (typeof node.listener === \"function\") {\n                try {\n                    node.listener.call(this, wrappedEvent)\n                } catch (err) {\n                    if (\n                        typeof console !== \"undefined\" &&\n                        typeof console.error === \"function\"\n                    ) {\n                        console.error(err)\n                    }\n                }\n            } else if (\n                node.listenerType !== ATTRIBUTE &&\n                typeof node.listener.handleEvent === \"function\"\n            ) {\n                node.listener.handleEvent(wrappedEvent)\n            }\n\n            // Break if `event.stopImmediatePropagation` was called.\n            if (isStopped(wrappedEvent)) {\n                break\n            }\n\n            node = node.next\n        }\n        setPassiveListener(wrappedEvent, null)\n        setEventPhase(wrappedEvent, 0)\n        setCurrentTarget(wrappedEvent, null)\n\n        return !wrappedEvent.defaultPrevented\n    },\n}\n\n// `constructor` is not enumerable.\nObject.defineProperty(EventTarget.prototype, \"constructor\", {\n    value: EventTarget,\n    configurable: true,\n    writable: true,\n})\n\n// Ensure `eventTarget instanceof window.EventTarget` is `true`.\nif (\n    typeof window !== \"undefined\" &&\n    typeof window.EventTarget !== \"undefined\"\n) {\n    Object.setPrototypeOf(EventTarget.prototype, window.EventTarget.prototype)\n}\n\nexport { defineEventAttribute, EventTarget }\nexport default EventTarget\n", "import {\n    // Event,\n    EventTarget,\n    // Type,\n    defineEventAttribute,\n} from \"event-target-shim\"\n\n// Known Limitation\n//   Use `any` because the type of `AbortSignal` in `lib.dom.d.ts` is wrong and\n//   to make assignable our `AbortSignal` into that.\n//   https://github.com/Microsoft/TSJS-lib-generator/pull/623\ntype Events = {\n    abort: any // Event & Type<\"abort\">\n}\ntype EventAttributes = {\n    onabort: any // Event & Type<\"abort\">\n}\n\n/**\n * The signal class.\n * @see https://dom.spec.whatwg.org/#abortsignal\n */\nexport default class AbortSignal extends EventTarget<Events, EventAttributes> {\n    /**\n     * AbortSignal cannot be constructed directly.\n     */\n    public constructor() {\n        super()\n        throw new TypeError(\"AbortSignal cannot be constructed directly\")\n    }\n\n    /**\n     * Returns `true` if this `AbortSignal`'s `AbortController` has signaled to abort, and `false` otherwise.\n     */\n    public get aborted(): boolean {\n        const aborted = abortedFlags.get(this)\n        if (typeof aborted !== \"boolean\") {\n            throw new TypeError(\n                `Expected 'this' to be an 'AbortSignal' object, but got ${\n                    this === null ? \"null\" : typeof this\n                }`,\n            )\n        }\n        return aborted\n    }\n}\ndefineEventAttribute(AbortSignal.prototype, \"abort\")\n\n/**\n * Create an AbortSignal object.\n */\nexport function createAbortSignal(): AbortSignal {\n    const signal = Object.create(AbortSignal.prototype)\n    EventTarget.call(signal)\n    abortedFlags.set(signal, false)\n    return signal\n}\n\n/**\n * Abort a given signal.\n */\nexport function abortSignal(signal: AbortSignal): void {\n    if (abortedFlags.get(signal) !== false) {\n        return\n    }\n\n    abortedFlags.set(signal, true)\n    signal.dispatchEvent<\"abort\">({ type: \"abort\" })\n}\n\n/**\n * Aborted flag for each instances.\n */\nconst abortedFlags = new WeakMap<AbortSignal, boolean>()\n\n// Properties should be enumerable.\nObject.defineProperties(AbortSignal.prototype, {\n    aborted: { enumerable: true },\n})\n\n// `toString()` should return `\"[object AbortSignal]\"`\nif (typeof Symbol === \"function\" && typeof Symbol.toStringTag === \"symbol\") {\n    Object.defineProperty(AbortSignal.prototype, Symbol.toStringTag, {\n        configurable: true,\n        value: \"AbortSignal\",\n    })\n}\n", "import AbortSignal, { abortSignal, createAbortSignal } from \"./abort-signal\"\n\n/**\n * The AbortController.\n * @see https://dom.spec.whatwg.org/#abortcontroller\n */\nexport default class AbortController {\n    /**\n     * Initialize this controller.\n     */\n    public constructor() {\n        signals.set(this, createAbortSignal())\n    }\n\n    /**\n     * Returns the `AbortSignal` object associated with this object.\n     */\n    public get signal(): AbortSignal {\n        return getSignal(this)\n    }\n\n    /**\n     * Abort and signal to any observers that the associated activity is to be aborted.\n     */\n    public abort(): void {\n        abortSignal(getSignal(this))\n    }\n}\n\n/**\n * Associated signals.\n */\nconst signals = new WeakMap<AbortController, AbortSignal>()\n\n/**\n * Get the associated signal of a given controller.\n */\nfunction getSignal(controller: AbortController): AbortSignal {\n    const signal = signals.get(controller)\n    if (signal == null) {\n        throw new TypeError(\n            `Expected 'this' to be an 'AbortController' object, but got ${\n                controller === null ? \"null\" : typeof controller\n            }`,\n        )\n    }\n    return signal\n}\n\n// Properties should be enumerable.\nObject.defineProperties(AbortController.prototype, {\n    signal: { enumerable: true },\n    abort: { enumerable: true },\n})\n\nif (typeof Symbol === \"function\" && typeof Symbol.toStringTag === \"symbol\") {\n    Object.defineProperty(AbortController.prototype, Symbol.toStringTag, {\n        configurable: true,\n        value: \"AbortController\",\n    })\n}\n\nexport { AbortController, AbortSignal }\n", "'use strict'\n\nconst { format, inspect, AggregateError: CustomAggregateError } = require('./util')\n\n/*\n  This file is a reduced and adapted version of the main lib/internal/errors.js file defined at\n\n  https://github.com/nodejs/node/blob/master/lib/internal/errors.js\n\n  Don't try to replace with the original file and keep it up to date (starting from E(...) definitions)\n  with the upstream file.\n*/\n\nconst AggregateError = globalThis.AggregateError || CustomAggregateError\nconst kIsNodeError = Symbol('kIsNodeError')\nconst kTypes = [\n  'string',\n  'function',\n  'number',\n  'object',\n  // Accept 'Function' and 'Object' as alternative to the lower cased version.\n  'Function',\n  'Object',\n  'boolean',\n  'bigint',\n  'symbol'\n]\nconst classRegExp = /^([A-Z][a-z0-9]*)+$/\nconst nodeInternalPrefix = '__node_internal_'\nconst codes = {}\nfunction assert(value, message) {\n  if (!value) {\n    throw new codes.ERR_INTERNAL_ASSERTION(message)\n  }\n}\n\n// Only use this for integers! Decimal numbers do not work with this function.\nfunction addNumericalSeparator(val) {\n  let res = ''\n  let i = val.length\n  const start = val[0] === '-' ? 1 : 0\n  for (; i >= start + 4; i -= 3) {\n    res = `_${val.slice(i - 3, i)}${res}`\n  }\n  return `${val.slice(0, i)}${res}`\n}\nfunction getMessage(key, msg, args) {\n  if (typeof msg === 'function') {\n    assert(\n      msg.length <= args.length,\n      // Default options do not count.\n      `Code: ${key}; The provided arguments length (${args.length}) does not match the required ones (${msg.length}).`\n    )\n    return msg(...args)\n  }\n  const expectedLength = (msg.match(/%[dfijoOs]/g) || []).length\n  assert(\n    expectedLength === args.length,\n    `Code: ${key}; The provided arguments length (${args.length}) does not match the required ones (${expectedLength}).`\n  )\n  if (args.length === 0) {\n    return msg\n  }\n  return format(msg, ...args)\n}\nfunction E(code, message, Base) {\n  if (!Base) {\n    Base = Error\n  }\n  class NodeError extends Base {\n    constructor(...args) {\n      super(getMessage(code, message, args))\n    }\n    toString() {\n      return `${this.name} [${code}]: ${this.message}`\n    }\n  }\n  Object.defineProperties(NodeError.prototype, {\n    name: {\n      value: Base.name,\n      writable: true,\n      enumerable: false,\n      configurable: true\n    },\n    toString: {\n      value() {\n        return `${this.name} [${code}]: ${this.message}`\n      },\n      writable: true,\n      enumerable: false,\n      configurable: true\n    }\n  })\n  NodeError.prototype.code = code\n  NodeError.prototype[kIsNodeError] = true\n  codes[code] = NodeError\n}\nfunction hideStackFrames(fn) {\n  // We rename the functions that will be hidden to cut off the stacktrace\n  // at the outermost one\n  const hidden = nodeInternalPrefix + fn.name\n  Object.defineProperty(fn, 'name', {\n    value: hidden\n  })\n  return fn\n}\nfunction aggregateTwoErrors(innerError, outerError) {\n  if (innerError && outerError && innerError !== outerError) {\n    if (Array.isArray(outerError.errors)) {\n      // If `outerError` is already an `AggregateError`.\n      outerError.errors.push(innerError)\n      return outerError\n    }\n    const err = new AggregateError([outerError, innerError], outerError.message)\n    err.code = outerError.code\n    return err\n  }\n  return innerError || outerError\n}\nclass AbortError extends Error {\n  constructor(message = 'The operation was aborted', options = undefined) {\n    if (options !== undefined && typeof options !== 'object') {\n      throw new codes.ERR_INVALID_ARG_TYPE('options', 'Object', options)\n    }\n    super(message, options)\n    this.code = 'ABORT_ERR'\n    this.name = 'AbortError'\n  }\n}\nE('ERR_ASSERTION', '%s', Error)\nE(\n  'ERR_INVALID_ARG_TYPE',\n  (name, expected, actual) => {\n    assert(typeof name === 'string', \"'name' must be a string\")\n    if (!Array.isArray(expected)) {\n      expected = [expected]\n    }\n    let msg = 'The '\n    if (name.endsWith(' argument')) {\n      // For cases like 'first argument'\n      msg += `${name} `\n    } else {\n      msg += `\"${name}\" ${name.includes('.') ? 'property' : 'argument'} `\n    }\n    msg += 'must be '\n    const types = []\n    const instances = []\n    const other = []\n    for (const value of expected) {\n      assert(typeof value === 'string', 'All expected entries have to be of type string')\n      if (kTypes.includes(value)) {\n        types.push(value.toLowerCase())\n      } else if (classRegExp.test(value)) {\n        instances.push(value)\n      } else {\n        assert(value !== 'object', 'The value \"object\" should be written as \"Object\"')\n        other.push(value)\n      }\n    }\n\n    // Special handle `object` in case other instances are allowed to outline\n    // the differences between each other.\n    if (instances.length > 0) {\n      const pos = types.indexOf('object')\n      if (pos !== -1) {\n        types.splice(types, pos, 1)\n        instances.push('Object')\n      }\n    }\n    if (types.length > 0) {\n      switch (types.length) {\n        case 1:\n          msg += `of type ${types[0]}`\n          break\n        case 2:\n          msg += `one of type ${types[0]} or ${types[1]}`\n          break\n        default: {\n          const last = types.pop()\n          msg += `one of type ${types.join(', ')}, or ${last}`\n        }\n      }\n      if (instances.length > 0 || other.length > 0) {\n        msg += ' or '\n      }\n    }\n    if (instances.length > 0) {\n      switch (instances.length) {\n        case 1:\n          msg += `an instance of ${instances[0]}`\n          break\n        case 2:\n          msg += `an instance of ${instances[0]} or ${instances[1]}`\n          break\n        default: {\n          const last = instances.pop()\n          msg += `an instance of ${instances.join(', ')}, or ${last}`\n        }\n      }\n      if (other.length > 0) {\n        msg += ' or '\n      }\n    }\n    switch (other.length) {\n      case 0:\n        break\n      case 1:\n        if (other[0].toLowerCase() !== other[0]) {\n          msg += 'an '\n        }\n        msg += `${other[0]}`\n        break\n      case 2:\n        msg += `one of ${other[0]} or ${other[1]}`\n        break\n      default: {\n        const last = other.pop()\n        msg += `one of ${other.join(', ')}, or ${last}`\n      }\n    }\n    if (actual == null) {\n      msg += `. Received ${actual}`\n    } else if (typeof actual === 'function' && actual.name) {\n      msg += `. Received function ${actual.name}`\n    } else if (typeof actual === 'object') {\n      var _actual$constructor\n      if (\n        (_actual$constructor = actual.constructor) !== null &&\n        _actual$constructor !== undefined &&\n        _actual$constructor.name\n      ) {\n        msg += `. Received an instance of ${actual.constructor.name}`\n      } else {\n        const inspected = inspect(actual, {\n          depth: -1\n        })\n        msg += `. Received ${inspected}`\n      }\n    } else {\n      let inspected = inspect(actual, {\n        colors: false\n      })\n      if (inspected.length > 25) {\n        inspected = `${inspected.slice(0, 25)}...`\n      }\n      msg += `. Received type ${typeof actual} (${inspected})`\n    }\n    return msg\n  },\n  TypeError\n)\nE(\n  'ERR_INVALID_ARG_VALUE',\n  (name, value, reason = 'is invalid') => {\n    let inspected = inspect(value)\n    if (inspected.length > 128) {\n      inspected = inspected.slice(0, 128) + '...'\n    }\n    const type = name.includes('.') ? 'property' : 'argument'\n    return `The ${type} '${name}' ${reason}. Received ${inspected}`\n  },\n  TypeError\n)\nE(\n  'ERR_INVALID_RETURN_VALUE',\n  (input, name, value) => {\n    var _value$constructor\n    const type =\n      value !== null &&\n      value !== undefined &&\n      (_value$constructor = value.constructor) !== null &&\n      _value$constructor !== undefined &&\n      _value$constructor.name\n        ? `instance of ${value.constructor.name}`\n        : `type ${typeof value}`\n    return `Expected ${input} to be returned from the \"${name}\"` + ` function but got ${type}.`\n  },\n  TypeError\n)\nE(\n  'ERR_MISSING_ARGS',\n  (...args) => {\n    assert(args.length > 0, 'At least one arg needs to be specified')\n    let msg\n    const len = args.length\n    args = (Array.isArray(args) ? args : [args]).map((a) => `\"${a}\"`).join(' or ')\n    switch (len) {\n      case 1:\n        msg += `The ${args[0]} argument`\n        break\n      case 2:\n        msg += `The ${args[0]} and ${args[1]} arguments`\n        break\n      default:\n        {\n          const last = args.pop()\n          msg += `The ${args.join(', ')}, and ${last} arguments`\n        }\n        break\n    }\n    return `${msg} must be specified`\n  },\n  TypeError\n)\nE(\n  'ERR_OUT_OF_RANGE',\n  (str, range, input) => {\n    assert(range, 'Missing \"range\" argument')\n    let received\n    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input))\n    } else if (typeof input === 'bigint') {\n      received = String(input)\n      if (input > 2n ** 32n || input < -(2n ** 32n)) {\n        received = addNumericalSeparator(received)\n      }\n      received += 'n'\n    } else {\n      received = inspect(input)\n    }\n    return `The value of \"${str}\" is out of range. It must be ${range}. Received ${received}`\n  },\n  RangeError\n)\nE('ERR_MULTIPLE_CALLBACK', 'Callback called multiple times', Error)\nE('ERR_METHOD_NOT_IMPLEMENTED', 'The %s method is not implemented', Error)\nE('ERR_STREAM_ALREADY_FINISHED', 'Cannot call %s after a stream was finished', Error)\nE('ERR_STREAM_CANNOT_PIPE', 'Cannot pipe, not readable', Error)\nE('ERR_STREAM_DESTROYED', 'Cannot call %s after a stream was destroyed', Error)\nE('ERR_STREAM_NULL_VALUES', 'May not write null values to stream', TypeError)\nE('ERR_STREAM_PREMATURE_CLOSE', 'Premature close', Error)\nE('ERR_STREAM_PUSH_AFTER_EOF', 'stream.push() after EOF', Error)\nE('ERR_STREAM_UNSHIFT_AFTER_END_EVENT', 'stream.unshift() after end event', Error)\nE('ERR_STREAM_WRITE_AFTER_END', 'write after end', Error)\nE('ERR_UNKNOWN_ENCODING', 'Unknown encoding: %s', TypeError)\nmodule.exports = {\n  AbortError,\n  aggregateTwoErrors: hideStackFrames(aggregateTwoErrors),\n  hideStackFrames,\n  codes\n}\n", "/* eslint jsdoc/require-jsdoc: \"error\" */\n\n'use strict'\n\nconst {\n  ArrayIsArray,\n  ArrayPrototypeIncludes,\n  ArrayPrototypeJoin,\n  ArrayPrototypeMap,\n  NumberIsInteger,\n  NumberIsNaN,\n  NumberMAX_SAFE_INTEGER,\n  NumberMIN_SAFE_INTEGER,\n  NumberParseInt,\n  ObjectPrototypeHasOwnProperty,\n  RegExpPrototypeExec,\n  String,\n  StringPrototypeToUpperCase,\n  StringPrototypeTrim\n} = require('../ours/primordials')\nconst {\n  hideStackFrames,\n  codes: { ERR_SOCKET_BAD_PORT, ERR_INVALID_ARG_TYPE, ERR_INVALID_ARG_VALUE, ERR_OUT_OF_RANGE, ERR_UNKNOWN_SIGNAL }\n} = require('../ours/errors')\nconst { normalizeEncoding } = require('../ours/util')\nconst { isAsyncFunction, isArrayBufferView } = require('../ours/util').types\nconst signals = {}\n\n/**\n * @param {*} value\n * @returns {boolean}\n */\nfunction isInt32(value) {\n  return value === (value | 0)\n}\n\n/**\n * @param {*} value\n * @returns {boolean}\n */\nfunction isUint32(value) {\n  return value === value >>> 0\n}\nconst octalReg = /^[0-7]+$/\nconst modeDesc = 'must be a 32-bit unsigned integer or an octal string'\n\n/**\n * Parse and validate values that will be converted into mode_t (the S_*\n * constants). Only valid numbers and octal strings are allowed. They could be\n * converted to 32-bit unsigned integers or non-negative signed integers in the\n * C++ land, but any value higher than 0o777 will result in platform-specific\n * behaviors.\n *\n * @param {*} value Values to be validated\n * @param {string} name Name of the argument\n * @param {number} [def] If specified, will be returned for invalid values\n * @returns {number}\n */\nfunction parseFileMode(value, name, def) {\n  if (typeof value === 'undefined') {\n    value = def\n  }\n  if (typeof value === 'string') {\n    if (RegExpPrototypeExec(octalReg, value) === null) {\n      throw new ERR_INVALID_ARG_VALUE(name, value, modeDesc)\n    }\n    value = NumberParseInt(value, 8)\n  }\n  validateUint32(value, name)\n  return value\n}\n\n/**\n * @callback validateInteger\n * @param {*} value\n * @param {string} name\n * @param {number} [min]\n * @param {number} [max]\n * @returns {asserts value is number}\n */\n\n/** @type {validateInteger} */\nconst validateInteger = hideStackFrames((value, name, min = NumberMIN_SAFE_INTEGER, max = NumberMAX_SAFE_INTEGER) => {\n  if (typeof value !== 'number') throw new ERR_INVALID_ARG_TYPE(name, 'number', value)\n  if (!NumberIsInteger(value)) throw new ERR_OUT_OF_RANGE(name, 'an integer', value)\n  if (value < min || value > max) throw new ERR_OUT_OF_RANGE(name, `>= ${min} && <= ${max}`, value)\n})\n\n/**\n * @callback validateInt32\n * @param {*} value\n * @param {string} name\n * @param {number} [min]\n * @param {number} [max]\n * @returns {asserts value is number}\n */\n\n/** @type {validateInt32} */\nconst validateInt32 = hideStackFrames((value, name, min = -2147483648, max = 2147483647) => {\n  // The defaults for min and max correspond to the limits of 32-bit integers.\n  if (typeof value !== 'number') {\n    throw new ERR_INVALID_ARG_TYPE(name, 'number', value)\n  }\n  if (!NumberIsInteger(value)) {\n    throw new ERR_OUT_OF_RANGE(name, 'an integer', value)\n  }\n  if (value < min || value > max) {\n    throw new ERR_OUT_OF_RANGE(name, `>= ${min} && <= ${max}`, value)\n  }\n})\n\n/**\n * @callback validateUint32\n * @param {*} value\n * @param {string} name\n * @param {number|boolean} [positive=false]\n * @returns {asserts value is number}\n */\n\n/** @type {validateUint32} */\nconst validateUint32 = hideStackFrames((value, name, positive = false) => {\n  if (typeof value !== 'number') {\n    throw new ERR_INVALID_ARG_TYPE(name, 'number', value)\n  }\n  if (!NumberIsInteger(value)) {\n    throw new ERR_OUT_OF_RANGE(name, 'an integer', value)\n  }\n  const min = positive ? 1 : 0\n  // 2 ** 32 === 4294967296\n  const max = 4294967295\n  if (value < min || value > max) {\n    throw new ERR_OUT_OF_RANGE(name, `>= ${min} && <= ${max}`, value)\n  }\n})\n\n/**\n * @callback validateString\n * @param {*} value\n * @param {string} name\n * @returns {asserts value is string}\n */\n\n/** @type {validateString} */\nfunction validateString(value, name) {\n  if (typeof value !== 'string') throw new ERR_INVALID_ARG_TYPE(name, 'string', value)\n}\n\n/**\n * @callback validateNumber\n * @param {*} value\n * @param {string} name\n * @param {number} [min]\n * @param {number} [max]\n * @returns {asserts value is number}\n */\n\n/** @type {validateNumber} */\nfunction validateNumber(value, name, min = undefined, max) {\n  if (typeof value !== 'number') throw new ERR_INVALID_ARG_TYPE(name, 'number', value)\n  if (\n    (min != null && value < min) ||\n    (max != null && value > max) ||\n    ((min != null || max != null) && NumberIsNaN(value))\n  ) {\n    throw new ERR_OUT_OF_RANGE(\n      name,\n      `${min != null ? `>= ${min}` : ''}${min != null && max != null ? ' && ' : ''}${max != null ? `<= ${max}` : ''}`,\n      value\n    )\n  }\n}\n\n/**\n * @callback validateOneOf\n * @template T\n * @param {T} value\n * @param {string} name\n * @param {T[]} oneOf\n */\n\n/** @type {validateOneOf} */\nconst validateOneOf = hideStackFrames((value, name, oneOf) => {\n  if (!ArrayPrototypeIncludes(oneOf, value)) {\n    const allowed = ArrayPrototypeJoin(\n      ArrayPrototypeMap(oneOf, (v) => (typeof v === 'string' ? `'${v}'` : String(v))),\n      ', '\n    )\n    const reason = 'must be one of: ' + allowed\n    throw new ERR_INVALID_ARG_VALUE(name, value, reason)\n  }\n})\n\n/**\n * @callback validateBoolean\n * @param {*} value\n * @param {string} name\n * @returns {asserts value is boolean}\n */\n\n/** @type {validateBoolean} */\nfunction validateBoolean(value, name) {\n  if (typeof value !== 'boolean') throw new ERR_INVALID_ARG_TYPE(name, 'boolean', value)\n}\n\n/**\n * @param {any} options\n * @param {string} key\n * @param {boolean} defaultValue\n * @returns {boolean}\n */\nfunction getOwnPropertyValueOrDefault(options, key, defaultValue) {\n  return options == null || !ObjectPrototypeHasOwnProperty(options, key) ? defaultValue : options[key]\n}\n\n/**\n * @callback validateObject\n * @param {*} value\n * @param {string} name\n * @param {{\n *   allowArray?: boolean,\n *   allowFunction?: boolean,\n *   nullable?: boolean\n * }} [options]\n */\n\n/** @type {validateObject} */\nconst validateObject = hideStackFrames((value, name, options = null) => {\n  const allowArray = getOwnPropertyValueOrDefault(options, 'allowArray', false)\n  const allowFunction = getOwnPropertyValueOrDefault(options, 'allowFunction', false)\n  const nullable = getOwnPropertyValueOrDefault(options, 'nullable', false)\n  if (\n    (!nullable && value === null) ||\n    (!allowArray && ArrayIsArray(value)) ||\n    (typeof value !== 'object' && (!allowFunction || typeof value !== 'function'))\n  ) {\n    throw new ERR_INVALID_ARG_TYPE(name, 'Object', value)\n  }\n})\n\n/**\n * @callback validateDictionary - We are using the Web IDL Standard definition\n *                                of \"dictionary\" here, which means any value\n *                                whose Type is either Undefined, Null, or\n *                                Object (which includes functions).\n * @param {*} value\n * @param {string} name\n * @see https://webidl.spec.whatwg.org/#es-dictionary\n * @see https://tc39.es/ecma262/#table-typeof-operator-results\n */\n\n/** @type {validateDictionary} */\nconst validateDictionary = hideStackFrames((value, name) => {\n  if (value != null && typeof value !== 'object' && typeof value !== 'function') {\n    throw new ERR_INVALID_ARG_TYPE(name, 'a dictionary', value)\n  }\n})\n\n/**\n * @callback validateArray\n * @param {*} value\n * @param {string} name\n * @param {number} [minLength]\n * @returns {asserts value is any[]}\n */\n\n/** @type {validateArray} */\nconst validateArray = hideStackFrames((value, name, minLength = 0) => {\n  if (!ArrayIsArray(value)) {\n    throw new ERR_INVALID_ARG_TYPE(name, 'Array', value)\n  }\n  if (value.length < minLength) {\n    const reason = `must be longer than ${minLength}`\n    throw new ERR_INVALID_ARG_VALUE(name, value, reason)\n  }\n})\n\n/**\n * @callback validateStringArray\n * @param {*} value\n * @param {string} name\n * @returns {asserts value is string[]}\n */\n\n/** @type {validateStringArray} */\nfunction validateStringArray(value, name) {\n  validateArray(value, name)\n  for (let i = 0; i < value.length; i++) {\n    validateString(value[i], `${name}[${i}]`)\n  }\n}\n\n/**\n * @callback validateBooleanArray\n * @param {*} value\n * @param {string} name\n * @returns {asserts value is boolean[]}\n */\n\n/** @type {validateBooleanArray} */\nfunction validateBooleanArray(value, name) {\n  validateArray(value, name)\n  for (let i = 0; i < value.length; i++) {\n    validateBoolean(value[i], `${name}[${i}]`)\n  }\n}\n\n/**\n * @param {*} signal\n * @param {string} [name='signal']\n * @returns {asserts signal is keyof signals}\n */\nfunction validateSignalName(signal, name = 'signal') {\n  validateString(signal, name)\n  if (signals[signal] === undefined) {\n    if (signals[StringPrototypeToUpperCase(signal)] !== undefined) {\n      throw new ERR_UNKNOWN_SIGNAL(signal + ' (signals must use all capital letters)')\n    }\n    throw new ERR_UNKNOWN_SIGNAL(signal)\n  }\n}\n\n/**\n * @callback validateBuffer\n * @param {*} buffer\n * @param {string} [name='buffer']\n * @returns {asserts buffer is ArrayBufferView}\n */\n\n/** @type {validateBuffer} */\nconst validateBuffer = hideStackFrames((buffer, name = 'buffer') => {\n  if (!isArrayBufferView(buffer)) {\n    throw new ERR_INVALID_ARG_TYPE(name, ['Buffer', 'TypedArray', 'DataView'], buffer)\n  }\n})\n\n/**\n * @param {string} data\n * @param {string} encoding\n */\nfunction validateEncoding(data, encoding) {\n  const normalizedEncoding = normalizeEncoding(encoding)\n  const length = data.length\n  if (normalizedEncoding === 'hex' && length % 2 !== 0) {\n    throw new ERR_INVALID_ARG_VALUE('encoding', encoding, `is invalid for data of length ${length}`)\n  }\n}\n\n/**\n * Check that the port number is not NaN when coerced to a number,\n * is an integer and that it falls within the legal range of port numbers.\n * @param {*} port\n * @param {string} [name='Port']\n * @param {boolean} [allowZero=true]\n * @returns {number}\n */\nfunction validatePort(port, name = 'Port', allowZero = true) {\n  if (\n    (typeof port !== 'number' && typeof port !== 'string') ||\n    (typeof port === 'string' && StringPrototypeTrim(port).length === 0) ||\n    +port !== +port >>> 0 ||\n    port > 0xffff ||\n    (port === 0 && !allowZero)\n  ) {\n    throw new ERR_SOCKET_BAD_PORT(name, port, allowZero)\n  }\n  return port | 0\n}\n\n/**\n * @callback validateAbortSignal\n * @param {*} signal\n * @param {string} name\n */\n\n/** @type {validateAbortSignal} */\nconst validateAbortSignal = hideStackFrames((signal, name) => {\n  if (signal !== undefined && (signal === null || typeof signal !== 'object' || !('aborted' in signal))) {\n    throw new ERR_INVALID_ARG_TYPE(name, 'AbortSignal', signal)\n  }\n})\n\n/**\n * @callback validateFunction\n * @param {*} value\n * @param {string} name\n * @returns {asserts value is Function}\n */\n\n/** @type {validateFunction} */\nconst validateFunction = hideStackFrames((value, name) => {\n  if (typeof value !== 'function') throw new ERR_INVALID_ARG_TYPE(name, 'Function', value)\n})\n\n/**\n * @callback validatePlainFunction\n * @param {*} value\n * @param {string} name\n * @returns {asserts value is Function}\n */\n\n/** @type {validatePlainFunction} */\nconst validatePlainFunction = hideStackFrames((value, name) => {\n  if (typeof value !== 'function' || isAsyncFunction(value)) throw new ERR_INVALID_ARG_TYPE(name, 'Function', value)\n})\n\n/**\n * @callback validateUndefined\n * @param {*} value\n * @param {string} name\n * @returns {asserts value is undefined}\n */\n\n/** @type {validateUndefined} */\nconst validateUndefined = hideStackFrames((value, name) => {\n  if (value !== undefined) throw new ERR_INVALID_ARG_TYPE(name, 'undefined', value)\n})\n\n/**\n * @template T\n * @param {T} value\n * @param {string} name\n * @param {T[]} union\n */\nfunction validateUnion(value, name, union) {\n  if (!ArrayPrototypeIncludes(union, value)) {\n    throw new ERR_INVALID_ARG_TYPE(name, `('${ArrayPrototypeJoin(union, '|')}')`, value)\n  }\n}\n\n/*\n  The rules for the Link header field are described here:\n  https://www.rfc-editor.org/rfc/rfc8288.html#section-3\n\n  This regex validates any string surrounded by angle brackets\n  (not necessarily a valid URI reference) followed by zero or more\n  link-params separated by semicolons.\n*/\nconst linkValueRegExp = /^(?:<[^>]*>)(?:\\s*;\\s*[^;\"\\s]+(?:=(\")?[^;\"\\s]*\\1)?)*$/\n\n/**\n * @param {any} value\n * @param {string} name\n */\nfunction validateLinkHeaderFormat(value, name) {\n  if (typeof value === 'undefined' || !RegExpPrototypeExec(linkValueRegExp, value)) {\n    throw new ERR_INVALID_ARG_VALUE(\n      name,\n      value,\n      'must be an array or string of format \"</styles.css>; rel=preload; as=style\"'\n    )\n  }\n}\n\n/**\n * @param {any} hints\n * @return {string}\n */\nfunction validateLinkHeaderValue(hints) {\n  if (typeof hints === 'string') {\n    validateLinkHeaderFormat(hints, 'hints')\n    return hints\n  } else if (ArrayIsArray(hints)) {\n    const hintsLength = hints.length\n    let result = ''\n    if (hintsLength === 0) {\n      return result\n    }\n    for (let i = 0; i < hintsLength; i++) {\n      const link = hints[i]\n      validateLinkHeaderFormat(link, 'hints')\n      result += link\n      if (i !== hintsLength - 1) {\n        result += ', '\n      }\n    }\n    return result\n  }\n  throw new ERR_INVALID_ARG_VALUE(\n    'hints',\n    hints,\n    'must be an array or string of format \"</styles.css>; rel=preload; as=style\"'\n  )\n}\nmodule.exports = {\n  isInt32,\n  isUint32,\n  parseFileMode,\n  validateArray,\n  validateStringArray,\n  validateBooleanArray,\n  validateBoolean,\n  validateBuffer,\n  validateDictionary,\n  validateEncoding,\n  validateFunction,\n  validateInt32,\n  validateInteger,\n  validateNumber,\n  validateObject,\n  validateOneOf,\n  validatePlainFunction,\n  validatePort,\n  validateSignalName,\n  validateString,\n  validateUint32,\n  validateUndefined,\n  validateUnion,\n  validateAbortSignal,\n  validateLinkHeaderValue\n}\n", "// for now just expose the builtin process global from node.js\nmodule.exports = global.process;\n", "'use strict'\n\nconst { Symbol, SymbolAsyncIterator, SymbolIterator, SymbolFor } = require('../../ours/primordials')\nconst kDestroyed = Symbol('kDestroyed')\nconst kIsErrored = Symbol('kIsErrored')\nconst kIsReadable = Symbol('kIsReadable')\nconst kIsDisturbed = Symbol('kIsDisturbed')\nconst kIsClosedPromise = SymbolFor('nodejs.webstream.isClosedPromise')\nconst kControllerErrorFunction = SymbolFor('nodejs.webstream.controllerErrorFunction')\nfunction isReadableNodeStream(obj, strict = false) {\n  var _obj$_readableState\n  return !!(\n    (\n      obj &&\n      typeof obj.pipe === 'function' &&\n      typeof obj.on === 'function' &&\n      (!strict || (typeof obj.pause === 'function' && typeof obj.resume === 'function')) &&\n      (!obj._writableState ||\n        ((_obj$_readableState = obj._readableState) === null || _obj$_readableState === undefined\n          ? undefined\n          : _obj$_readableState.readable) !== false) &&\n      // Duplex\n      (!obj._writableState || obj._readableState)\n    ) // Writable has .pipe.\n  )\n}\n\nfunction isWritableNodeStream(obj) {\n  var _obj$_writableState\n  return !!(\n    (\n      obj &&\n      typeof obj.write === 'function' &&\n      typeof obj.on === 'function' &&\n      (!obj._readableState ||\n        ((_obj$_writableState = obj._writableState) === null || _obj$_writableState === undefined\n          ? undefined\n          : _obj$_writableState.writable) !== false)\n    ) // Duplex\n  )\n}\n\nfunction isDuplexNodeStream(obj) {\n  return !!(\n    obj &&\n    typeof obj.pipe === 'function' &&\n    obj._readableState &&\n    typeof obj.on === 'function' &&\n    typeof obj.write === 'function'\n  )\n}\nfunction isNodeStream(obj) {\n  return (\n    obj &&\n    (obj._readableState ||\n      obj._writableState ||\n      (typeof obj.write === 'function' && typeof obj.on === 'function') ||\n      (typeof obj.pipe === 'function' && typeof obj.on === 'function'))\n  )\n}\nfunction isReadableStream(obj) {\n  return !!(\n    obj &&\n    !isNodeStream(obj) &&\n    typeof obj.pipeThrough === 'function' &&\n    typeof obj.getReader === 'function' &&\n    typeof obj.cancel === 'function'\n  )\n}\nfunction isWritableStream(obj) {\n  return !!(obj && !isNodeStream(obj) && typeof obj.getWriter === 'function' && typeof obj.abort === 'function')\n}\nfunction isTransformStream(obj) {\n  return !!(obj && !isNodeStream(obj) && typeof obj.readable === 'object' && typeof obj.writable === 'object')\n}\nfunction isWebStream(obj) {\n  return isReadableStream(obj) || isWritableStream(obj) || isTransformStream(obj)\n}\nfunction isIterable(obj, isAsync) {\n  if (obj == null) return false\n  if (isAsync === true) return typeof obj[SymbolAsyncIterator] === 'function'\n  if (isAsync === false) return typeof obj[SymbolIterator] === 'function'\n  return typeof obj[SymbolAsyncIterator] === 'function' || typeof obj[SymbolIterator] === 'function'\n}\nfunction isDestroyed(stream) {\n  if (!isNodeStream(stream)) return null\n  const wState = stream._writableState\n  const rState = stream._readableState\n  const state = wState || rState\n  return !!(stream.destroyed || stream[kDestroyed] || (state !== null && state !== undefined && state.destroyed))\n}\n\n// Have been end():d.\nfunction isWritableEnded(stream) {\n  if (!isWritableNodeStream(stream)) return null\n  if (stream.writableEnded === true) return true\n  const wState = stream._writableState\n  if (wState !== null && wState !== undefined && wState.errored) return false\n  if (typeof (wState === null || wState === undefined ? undefined : wState.ended) !== 'boolean') return null\n  return wState.ended\n}\n\n// Have emitted 'finish'.\nfunction isWritableFinished(stream, strict) {\n  if (!isWritableNodeStream(stream)) return null\n  if (stream.writableFinished === true) return true\n  const wState = stream._writableState\n  if (wState !== null && wState !== undefined && wState.errored) return false\n  if (typeof (wState === null || wState === undefined ? undefined : wState.finished) !== 'boolean') return null\n  return !!(wState.finished || (strict === false && wState.ended === true && wState.length === 0))\n}\n\n// Have been push(null):d.\nfunction isReadableEnded(stream) {\n  if (!isReadableNodeStream(stream)) return null\n  if (stream.readableEnded === true) return true\n  const rState = stream._readableState\n  if (!rState || rState.errored) return false\n  if (typeof (rState === null || rState === undefined ? undefined : rState.ended) !== 'boolean') return null\n  return rState.ended\n}\n\n// Have emitted 'end'.\nfunction isReadableFinished(stream, strict) {\n  if (!isReadableNodeStream(stream)) return null\n  const rState = stream._readableState\n  if (rState !== null && rState !== undefined && rState.errored) return false\n  if (typeof (rState === null || rState === undefined ? undefined : rState.endEmitted) !== 'boolean') return null\n  return !!(rState.endEmitted || (strict === false && rState.ended === true && rState.length === 0))\n}\nfunction isReadable(stream) {\n  if (stream && stream[kIsReadable] != null) return stream[kIsReadable]\n  if (typeof (stream === null || stream === undefined ? undefined : stream.readable) !== 'boolean') return null\n  if (isDestroyed(stream)) return false\n  return isReadableNodeStream(stream) && stream.readable && !isReadableFinished(stream)\n}\nfunction isWritable(stream) {\n  if (typeof (stream === null || stream === undefined ? undefined : stream.writable) !== 'boolean') return null\n  if (isDestroyed(stream)) return false\n  return isWritableNodeStream(stream) && stream.writable && !isWritableEnded(stream)\n}\nfunction isFinished(stream, opts) {\n  if (!isNodeStream(stream)) {\n    return null\n  }\n  if (isDestroyed(stream)) {\n    return true\n  }\n  if ((opts === null || opts === undefined ? undefined : opts.readable) !== false && isReadable(stream)) {\n    return false\n  }\n  if ((opts === null || opts === undefined ? undefined : opts.writable) !== false && isWritable(stream)) {\n    return false\n  }\n  return true\n}\nfunction isWritableErrored(stream) {\n  var _stream$_writableStat, _stream$_writableStat2\n  if (!isNodeStream(stream)) {\n    return null\n  }\n  if (stream.writableErrored) {\n    return stream.writableErrored\n  }\n  return (_stream$_writableStat =\n    (_stream$_writableStat2 = stream._writableState) === null || _stream$_writableStat2 === undefined\n      ? undefined\n      : _stream$_writableStat2.errored) !== null && _stream$_writableStat !== undefined\n    ? _stream$_writableStat\n    : null\n}\nfunction isReadableErrored(stream) {\n  var _stream$_readableStat, _stream$_readableStat2\n  if (!isNodeStream(stream)) {\n    return null\n  }\n  if (stream.readableErrored) {\n    return stream.readableErrored\n  }\n  return (_stream$_readableStat =\n    (_stream$_readableStat2 = stream._readableState) === null || _stream$_readableStat2 === undefined\n      ? undefined\n      : _stream$_readableStat2.errored) !== null && _stream$_readableStat !== undefined\n    ? _stream$_readableStat\n    : null\n}\nfunction isClosed(stream) {\n  if (!isNodeStream(stream)) {\n    return null\n  }\n  if (typeof stream.closed === 'boolean') {\n    return stream.closed\n  }\n  const wState = stream._writableState\n  const rState = stream._readableState\n  if (\n    typeof (wState === null || wState === undefined ? undefined : wState.closed) === 'boolean' ||\n    typeof (rState === null || rState === undefined ? undefined : rState.closed) === 'boolean'\n  ) {\n    return (\n      (wState === null || wState === undefined ? undefined : wState.closed) ||\n      (rState === null || rState === undefined ? undefined : rState.closed)\n    )\n  }\n  if (typeof stream._closed === 'boolean' && isOutgoingMessage(stream)) {\n    return stream._closed\n  }\n  return null\n}\nfunction isOutgoingMessage(stream) {\n  return (\n    typeof stream._closed === 'boolean' &&\n    typeof stream._defaultKeepAlive === 'boolean' &&\n    typeof stream._removedConnection === 'boolean' &&\n    typeof stream._removedContLen === 'boolean'\n  )\n}\nfunction isServerResponse(stream) {\n  return typeof stream._sent100 === 'boolean' && isOutgoingMessage(stream)\n}\nfunction isServerRequest(stream) {\n  var _stream$req\n  return (\n    typeof stream._consuming === 'boolean' &&\n    typeof stream._dumped === 'boolean' &&\n    ((_stream$req = stream.req) === null || _stream$req === undefined ? undefined : _stream$req.upgradeOrConnect) ===\n      undefined\n  )\n}\nfunction willEmitClose(stream) {\n  if (!isNodeStream(stream)) return null\n  const wState = stream._writableState\n  const rState = stream._readableState\n  const state = wState || rState\n  return (\n    (!state && isServerResponse(stream)) || !!(state && state.autoDestroy && state.emitClose && state.closed === false)\n  )\n}\nfunction isDisturbed(stream) {\n  var _stream$kIsDisturbed\n  return !!(\n    stream &&\n    ((_stream$kIsDisturbed = stream[kIsDisturbed]) !== null && _stream$kIsDisturbed !== undefined\n      ? _stream$kIsDisturbed\n      : stream.readableDidRead || stream.readableAborted)\n  )\n}\nfunction isErrored(stream) {\n  var _ref,\n    _ref2,\n    _ref3,\n    _ref4,\n    _ref5,\n    _stream$kIsErrored,\n    _stream$_readableStat3,\n    _stream$_writableStat3,\n    _stream$_readableStat4,\n    _stream$_writableStat4\n  return !!(\n    stream &&\n    ((_ref =\n      (_ref2 =\n        (_ref3 =\n          (_ref4 =\n            (_ref5 =\n              (_stream$kIsErrored = stream[kIsErrored]) !== null && _stream$kIsErrored !== undefined\n                ? _stream$kIsErrored\n                : stream.readableErrored) !== null && _ref5 !== undefined\n              ? _ref5\n              : stream.writableErrored) !== null && _ref4 !== undefined\n            ? _ref4\n            : (_stream$_readableStat3 = stream._readableState) === null || _stream$_readableStat3 === undefined\n            ? undefined\n            : _stream$_readableStat3.errorEmitted) !== null && _ref3 !== undefined\n          ? _ref3\n          : (_stream$_writableStat3 = stream._writableState) === null || _stream$_writableStat3 === undefined\n          ? undefined\n          : _stream$_writableStat3.errorEmitted) !== null && _ref2 !== undefined\n        ? _ref2\n        : (_stream$_readableStat4 = stream._readableState) === null || _stream$_readableStat4 === undefined\n        ? undefined\n        : _stream$_readableStat4.errored) !== null && _ref !== undefined\n      ? _ref\n      : (_stream$_writableStat4 = stream._writableState) === null || _stream$_writableStat4 === undefined\n      ? undefined\n      : _stream$_writableStat4.errored)\n  )\n}\nmodule.exports = {\n  kDestroyed,\n  isDisturbed,\n  kIsDisturbed,\n  isErrored,\n  kIsErrored,\n  isReadable,\n  kIsReadable,\n  kIsClosedPromise,\n  kControllerErrorFunction,\n  isClosed,\n  isDestroyed,\n  isDuplexNodeStream,\n  isFinished,\n  isIterable,\n  isReadableNodeStream,\n  isReadableStream,\n  isReadableEnded,\n  isReadableFinished,\n  isReadableErrored,\n  isNodeStream,\n  isWebStream,\n  isWritable,\n  isWritableNodeStream,\n  isWritableStream,\n  isWritableEnded,\n  isWritableFinished,\n  isWritableErrored,\n  isServerRequest,\n  isServerResponse,\n  willEmitClose,\n  isTransformStream\n}\n", "/* replacement start */\n\nconst process = require('process/')\n\n/* replacement end */\n// Ported from https://github.com/mafintosh/end-of-stream with\n// permission from the author, Mathias Buus (@mafintosh).\n\n;('use strict')\nconst { AbortError, codes } = require('../../ours/errors')\nconst { ERR_INVALID_ARG_TYPE, ERR_STREAM_PREMATURE_CLOSE } = codes\nconst { kEmptyObject, once } = require('../../ours/util')\nconst { validateAbortSignal, validateFunction, validateObject, validateBoolean } = require('../validators')\nconst { Promise, PromisePrototypeThen } = require('../../ours/primordials')\nconst {\n  isClosed,\n  isReadable,\n  isReadableNodeStream,\n  isReadableStream,\n  isReadableFinished,\n  isReadableErrored,\n  isWritable,\n  isWritableNodeStream,\n  isWritableStream,\n  isWritableFinished,\n  isWritableErrored,\n  isNodeStream,\n  willEmitClose: _willEmitClose,\n  kIsClosedPromise\n} = require('./utils')\nfunction isRequest(stream) {\n  return stream.setHeader && typeof stream.abort === 'function'\n}\nconst nop = () => {}\nfunction eos(stream, options, callback) {\n  var _options$readable, _options$writable\n  if (arguments.length === 2) {\n    callback = options\n    options = kEmptyObject\n  } else if (options == null) {\n    options = kEmptyObject\n  } else {\n    validateObject(options, 'options')\n  }\n  validateFunction(callback, 'callback')\n  validateAbortSignal(options.signal, 'options.signal')\n  callback = once(callback)\n  if (isReadableStream(stream) || isWritableStream(stream)) {\n    return eosWeb(stream, options, callback)\n  }\n  if (!isNodeStream(stream)) {\n    throw new ERR_INVALID_ARG_TYPE('stream', ['ReadableStream', 'WritableStream', 'Stream'], stream)\n  }\n  const readable =\n    (_options$readable = options.readable) !== null && _options$readable !== undefined\n      ? _options$readable\n      : isReadableNodeStream(stream)\n  const writable =\n    (_options$writable = options.writable) !== null && _options$writable !== undefined\n      ? _options$writable\n      : isWritableNodeStream(stream)\n  const wState = stream._writableState\n  const rState = stream._readableState\n  const onlegacyfinish = () => {\n    if (!stream.writable) {\n      onfinish()\n    }\n  }\n\n  // TODO (ronag): Improve soft detection to include core modules and\n  // common ecosystem modules that do properly emit 'close' but fail\n  // this generic check.\n  let willEmitClose =\n    _willEmitClose(stream) && isReadableNodeStream(stream) === readable && isWritableNodeStream(stream) === writable\n  let writableFinished = isWritableFinished(stream, false)\n  const onfinish = () => {\n    writableFinished = true\n    // Stream should not be destroyed here. If it is that\n    // means that user space is doing something differently and\n    // we cannot trust willEmitClose.\n    if (stream.destroyed) {\n      willEmitClose = false\n    }\n    if (willEmitClose && (!stream.readable || readable)) {\n      return\n    }\n    if (!readable || readableFinished) {\n      callback.call(stream)\n    }\n  }\n  let readableFinished = isReadableFinished(stream, false)\n  const onend = () => {\n    readableFinished = true\n    // Stream should not be destroyed here. If it is that\n    // means that user space is doing something differently and\n    // we cannot trust willEmitClose.\n    if (stream.destroyed) {\n      willEmitClose = false\n    }\n    if (willEmitClose && (!stream.writable || writable)) {\n      return\n    }\n    if (!writable || writableFinished) {\n      callback.call(stream)\n    }\n  }\n  const onerror = (err) => {\n    callback.call(stream, err)\n  }\n  let closed = isClosed(stream)\n  const onclose = () => {\n    closed = true\n    const errored = isWritableErrored(stream) || isReadableErrored(stream)\n    if (errored && typeof errored !== 'boolean') {\n      return callback.call(stream, errored)\n    }\n    if (readable && !readableFinished && isReadableNodeStream(stream, true)) {\n      if (!isReadableFinished(stream, false)) return callback.call(stream, new ERR_STREAM_PREMATURE_CLOSE())\n    }\n    if (writable && !writableFinished) {\n      if (!isWritableFinished(stream, false)) return callback.call(stream, new ERR_STREAM_PREMATURE_CLOSE())\n    }\n    callback.call(stream)\n  }\n  const onclosed = () => {\n    closed = true\n    const errored = isWritableErrored(stream) || isReadableErrored(stream)\n    if (errored && typeof errored !== 'boolean') {\n      return callback.call(stream, errored)\n    }\n    callback.call(stream)\n  }\n  const onrequest = () => {\n    stream.req.on('finish', onfinish)\n  }\n  if (isRequest(stream)) {\n    stream.on('complete', onfinish)\n    if (!willEmitClose) {\n      stream.on('abort', onclose)\n    }\n    if (stream.req) {\n      onrequest()\n    } else {\n      stream.on('request', onrequest)\n    }\n  } else if (writable && !wState) {\n    // legacy streams\n    stream.on('end', onlegacyfinish)\n    stream.on('close', onlegacyfinish)\n  }\n\n  // Not all streams will emit 'close' after 'aborted'.\n  if (!willEmitClose && typeof stream.aborted === 'boolean') {\n    stream.on('aborted', onclose)\n  }\n  stream.on('end', onend)\n  stream.on('finish', onfinish)\n  if (options.error !== false) {\n    stream.on('error', onerror)\n  }\n  stream.on('close', onclose)\n  if (closed) {\n    process.nextTick(onclose)\n  } else if (\n    (wState !== null && wState !== undefined && wState.errorEmitted) ||\n    (rState !== null && rState !== undefined && rState.errorEmitted)\n  ) {\n    if (!willEmitClose) {\n      process.nextTick(onclosed)\n    }\n  } else if (\n    !readable &&\n    (!willEmitClose || isReadable(stream)) &&\n    (writableFinished || isWritable(stream) === false)\n  ) {\n    process.nextTick(onclosed)\n  } else if (\n    !writable &&\n    (!willEmitClose || isWritable(stream)) &&\n    (readableFinished || isReadable(stream) === false)\n  ) {\n    process.nextTick(onclosed)\n  } else if (rState && stream.req && stream.aborted) {\n    process.nextTick(onclosed)\n  }\n  const cleanup = () => {\n    callback = nop\n    stream.removeListener('aborted', onclose)\n    stream.removeListener('complete', onfinish)\n    stream.removeListener('abort', onclose)\n    stream.removeListener('request', onrequest)\n    if (stream.req) stream.req.removeListener('finish', onfinish)\n    stream.removeListener('end', onlegacyfinish)\n    stream.removeListener('close', onlegacyfinish)\n    stream.removeListener('finish', onfinish)\n    stream.removeListener('end', onend)\n    stream.removeListener('error', onerror)\n    stream.removeListener('close', onclose)\n  }\n  if (options.signal && !closed) {\n    const abort = () => {\n      // Keep it because cleanup removes it.\n      const endCallback = callback\n      cleanup()\n      endCallback.call(\n        stream,\n        new AbortError(undefined, {\n          cause: options.signal.reason\n        })\n      )\n    }\n    if (options.signal.aborted) {\n      process.nextTick(abort)\n    } else {\n      const originalCallback = callback\n      callback = once((...args) => {\n        options.signal.removeEventListener('abort', abort)\n        originalCallback.apply(stream, args)\n      })\n      options.signal.addEventListener('abort', abort)\n    }\n  }\n  return cleanup\n}\nfunction eosWeb(stream, options, callback) {\n  let isAborted = false\n  let abort = nop\n  if (options.signal) {\n    abort = () => {\n      isAborted = true\n      callback.call(\n        stream,\n        new AbortError(undefined, {\n          cause: options.signal.reason\n        })\n      )\n    }\n    if (options.signal.aborted) {\n      process.nextTick(abort)\n    } else {\n      const originalCallback = callback\n      callback = once((...args) => {\n        options.signal.removeEventListener('abort', abort)\n        originalCallback.apply(stream, args)\n      })\n      options.signal.addEventListener('abort', abort)\n    }\n  }\n  const resolverFn = (...args) => {\n    if (!isAborted) {\n      process.nextTick(() => callback.apply(stream, args))\n    }\n  }\n  PromisePrototypeThen(stream[kIsClosedPromise].promise, resolverFn, resolverFn)\n  return nop\n}\nfunction finished(stream, opts) {\n  var _opts\n  let autoCleanup = false\n  if (opts === null) {\n    opts = kEmptyObject\n  }\n  if ((_opts = opts) !== null && _opts !== undefined && _opts.cleanup) {\n    validateBoolean(opts.cleanup, 'cleanup')\n    autoCleanup = opts.cleanup\n  }\n  return new Promise((resolve, reject) => {\n    const cleanup = eos(stream, opts, (err) => {\n      if (autoCleanup) {\n        cleanup()\n      }\n      if (err) {\n        reject(err)\n      } else {\n        resolve()\n      }\n    })\n  })\n}\nmodule.exports = eos\nmodule.exports.finished = finished\n", "'use strict'\n\n/* replacement start */\n\nconst process = require('process/')\n\n/* replacement end */\n\nconst {\n  aggregateTwoErrors,\n  codes: { ERR_MULTIPLE_CALLBACK },\n  AbortError\n} = require('../../ours/errors')\nconst { Symbol } = require('../../ours/primordials')\nconst { kDestroyed, isDestroyed, isFinished, isServerRequest } = require('./utils')\nconst kDestroy = Symbol('kDestroy')\nconst kConstruct = Symbol('kConstruct')\nfunction checkError(err, w, r) {\n  if (err) {\n    // Avoid V8 leak, https://github.com/nodejs/node/pull/34103#issuecomment-652002364\n    err.stack // eslint-disable-line no-unused-expressions\n\n    if (w && !w.errored) {\n      w.errored = err\n    }\n    if (r && !r.errored) {\n      r.errored = err\n    }\n  }\n}\n\n// Backwards compat. cb() is undocumented and unused in core but\n// unfortunately might be used by modules.\nfunction destroy(err, cb) {\n  const r = this._readableState\n  const w = this._writableState\n  // With duplex streams we use the writable side for state.\n  const s = w || r\n  if ((w !== null && w !== undefined && w.destroyed) || (r !== null && r !== undefined && r.destroyed)) {\n    if (typeof cb === 'function') {\n      cb()\n    }\n    return this\n  }\n\n  // We set destroyed to true before firing error callbacks in order\n  // to make it re-entrance safe in case destroy() is called within callbacks\n  checkError(err, w, r)\n  if (w) {\n    w.destroyed = true\n  }\n  if (r) {\n    r.destroyed = true\n  }\n\n  // If still constructing then defer calling _destroy.\n  if (!s.constructed) {\n    this.once(kDestroy, function (er) {\n      _destroy(this, aggregateTwoErrors(er, err), cb)\n    })\n  } else {\n    _destroy(this, err, cb)\n  }\n  return this\n}\nfunction _destroy(self, err, cb) {\n  let called = false\n  function onDestroy(err) {\n    if (called) {\n      return\n    }\n    called = true\n    const r = self._readableState\n    const w = self._writableState\n    checkError(err, w, r)\n    if (w) {\n      w.closed = true\n    }\n    if (r) {\n      r.closed = true\n    }\n    if (typeof cb === 'function') {\n      cb(err)\n    }\n    if (err) {\n      process.nextTick(emitErrorCloseNT, self, err)\n    } else {\n      process.nextTick(emitCloseNT, self)\n    }\n  }\n  try {\n    self._destroy(err || null, onDestroy)\n  } catch (err) {\n    onDestroy(err)\n  }\n}\nfunction emitErrorCloseNT(self, err) {\n  emitErrorNT(self, err)\n  emitCloseNT(self)\n}\nfunction emitCloseNT(self) {\n  const r = self._readableState\n  const w = self._writableState\n  if (w) {\n    w.closeEmitted = true\n  }\n  if (r) {\n    r.closeEmitted = true\n  }\n  if ((w !== null && w !== undefined && w.emitClose) || (r !== null && r !== undefined && r.emitClose)) {\n    self.emit('close')\n  }\n}\nfunction emitErrorNT(self, err) {\n  const r = self._readableState\n  const w = self._writableState\n  if ((w !== null && w !== undefined && w.errorEmitted) || (r !== null && r !== undefined && r.errorEmitted)) {\n    return\n  }\n  if (w) {\n    w.errorEmitted = true\n  }\n  if (r) {\n    r.errorEmitted = true\n  }\n  self.emit('error', err)\n}\nfunction undestroy() {\n  const r = this._readableState\n  const w = this._writableState\n  if (r) {\n    r.constructed = true\n    r.closed = false\n    r.closeEmitted = false\n    r.destroyed = false\n    r.errored = null\n    r.errorEmitted = false\n    r.reading = false\n    r.ended = r.readable === false\n    r.endEmitted = r.readable === false\n  }\n  if (w) {\n    w.constructed = true\n    w.destroyed = false\n    w.closed = false\n    w.closeEmitted = false\n    w.errored = null\n    w.errorEmitted = false\n    w.finalCalled = false\n    w.prefinished = false\n    w.ended = w.writable === false\n    w.ending = w.writable === false\n    w.finished = w.writable === false\n  }\n}\nfunction errorOrDestroy(stream, err, sync) {\n  // We have tests that rely on errors being emitted\n  // in the same tick, so changing this is semver major.\n  // For now when you opt-in to autoDestroy we allow\n  // the error to be emitted nextTick. In a future\n  // semver major update we should change the default to this.\n\n  const r = stream._readableState\n  const w = stream._writableState\n  if ((w !== null && w !== undefined && w.destroyed) || (r !== null && r !== undefined && r.destroyed)) {\n    return this\n  }\n  if ((r !== null && r !== undefined && r.autoDestroy) || (w !== null && w !== undefined && w.autoDestroy))\n    stream.destroy(err)\n  else if (err) {\n    // Avoid V8 leak, https://github.com/nodejs/node/pull/34103#issuecomment-652002364\n    err.stack // eslint-disable-line no-unused-expressions\n\n    if (w && !w.errored) {\n      w.errored = err\n    }\n    if (r && !r.errored) {\n      r.errored = err\n    }\n    if (sync) {\n      process.nextTick(emitErrorNT, stream, err)\n    } else {\n      emitErrorNT(stream, err)\n    }\n  }\n}\nfunction construct(stream, cb) {\n  if (typeof stream._construct !== 'function') {\n    return\n  }\n  const r = stream._readableState\n  const w = stream._writableState\n  if (r) {\n    r.constructed = false\n  }\n  if (w) {\n    w.constructed = false\n  }\n  stream.once(kConstruct, cb)\n  if (stream.listenerCount(kConstruct) > 1) {\n    // Duplex\n    return\n  }\n  process.nextTick(constructNT, stream)\n}\nfunction constructNT(stream) {\n  let called = false\n  function onConstruct(err) {\n    if (called) {\n      errorOrDestroy(stream, err !== null && err !== undefined ? err : new ERR_MULTIPLE_CALLBACK())\n      return\n    }\n    called = true\n    const r = stream._readableState\n    const w = stream._writableState\n    const s = w || r\n    if (r) {\n      r.constructed = true\n    }\n    if (w) {\n      w.constructed = true\n    }\n    if (s.destroyed) {\n      stream.emit(kDestroy, err)\n    } else if (err) {\n      errorOrDestroy(stream, err, true)\n    } else {\n      process.nextTick(emitConstructNT, stream)\n    }\n  }\n  try {\n    stream._construct((err) => {\n      process.nextTick(onConstruct, err)\n    })\n  } catch (err) {\n    process.nextTick(onConstruct, err)\n  }\n}\nfunction emitConstructNT(stream) {\n  stream.emit(kConstruct)\n}\nfunction isRequest(stream) {\n  return (stream === null || stream === undefined ? undefined : stream.setHeader) && typeof stream.abort === 'function'\n}\nfunction emitCloseLegacy(stream) {\n  stream.emit('close')\n}\nfunction emitErrorCloseLegacy(stream, err) {\n  stream.emit('error', err)\n  process.nextTick(emitCloseLegacy, stream)\n}\n\n// Normalize destroy for legacy.\nfunction destroyer(stream, err) {\n  if (!stream || isDestroyed(stream)) {\n    return\n  }\n  if (!err && !isFinished(stream)) {\n    err = new AbortError()\n  }\n\n  // TODO: Remove isRequest branches.\n  if (isServerRequest(stream)) {\n    stream.socket = null\n    stream.destroy(err)\n  } else if (isRequest(stream)) {\n    stream.abort()\n  } else if (isRequest(stream.req)) {\n    stream.req.abort()\n  } else if (typeof stream.destroy === 'function') {\n    stream.destroy(err)\n  } else if (typeof stream.close === 'function') {\n    // TODO: Don't lose err?\n    stream.close()\n  } else if (err) {\n    process.nextTick(emitErrorCloseLegacy, stream, err)\n  } else {\n    process.nextTick(emitCloseLegacy, stream)\n  }\n  if (!stream.destroyed) {\n    stream[kDestroyed] = true\n  }\n}\nmodule.exports = {\n  construct,\n  destroyer,\n  destroy,\n  undestroy,\n  errorOrDestroy\n}\n", "'use strict'\n\nconst { ArrayIsArray, ObjectSetPrototypeOf } = require('../../ours/primordials')\nconst { EventEmitter: EE } = require('events')\nfunction Stream(opts) {\n  EE.call(this, opts)\n}\nObjectSetPrototypeOf(Stream.prototype, EE.prototype)\nObjectSetPrototypeOf(Stream, EE)\nStream.prototype.pipe = function (dest, options) {\n  const source = this\n  function ondata(chunk) {\n    if (dest.writable && dest.write(chunk) === false && source.pause) {\n      source.pause()\n    }\n  }\n  source.on('data', ondata)\n  function ondrain() {\n    if (source.readable && source.resume) {\n      source.resume()\n    }\n  }\n  dest.on('drain', ondrain)\n\n  // If the 'end' option is not supplied, dest.end() will be called when\n  // source gets the 'end' or 'close' events.  Only dest.end() once.\n  if (!dest._isStdio && (!options || options.end !== false)) {\n    source.on('end', onend)\n    source.on('close', onclose)\n  }\n  let didOnEnd = false\n  function onend() {\n    if (didOnEnd) return\n    didOnEnd = true\n    dest.end()\n  }\n  function onclose() {\n    if (didOnEnd) return\n    didOnEnd = true\n    if (typeof dest.destroy === 'function') dest.destroy()\n  }\n\n  // Don't leave dangling pipes when there are errors.\n  function onerror(er) {\n    cleanup()\n    if (EE.listenerCount(this, 'error') === 0) {\n      this.emit('error', er)\n    }\n  }\n  prependListener(source, 'error', onerror)\n  prependListener(dest, 'error', onerror)\n\n  // Remove all the event listeners that were added.\n  function cleanup() {\n    source.removeListener('data', ondata)\n    dest.removeListener('drain', ondrain)\n    source.removeListener('end', onend)\n    source.removeListener('close', onclose)\n    source.removeListener('error', onerror)\n    dest.removeListener('error', onerror)\n    source.removeListener('end', cleanup)\n    source.removeListener('close', cleanup)\n    dest.removeListener('close', cleanup)\n  }\n  source.on('end', cleanup)\n  source.on('close', cleanup)\n  dest.on('close', cleanup)\n  dest.emit('pipe', source)\n\n  // Allow for unix-like usage: A.pipe(B).pipe(C)\n  return dest\n}\nfunction prependListener(emitter, event, fn) {\n  // Sadly this is not cacheable as some libraries bundle their own\n  // event emitter implementation with them.\n  if (typeof emitter.prependListener === 'function') return emitter.prependListener(event, fn)\n\n  // This is a hack to make sure that our error handler is attached before any\n  // userland ones.  NEVER DO THIS. This is here only because this code needs\n  // to continue to work with older versions of Node.js that do not include\n  // the prependListener() method. The goal is to eventually remove this hack.\n  if (!emitter._events || !emitter._events[event]) emitter.on(event, fn)\n  else if (ArrayIsArray(emitter._events[event])) emitter._events[event].unshift(fn)\n  else emitter._events[event] = [fn, emitter._events[event]]\n}\nmodule.exports = {\n  Stream,\n  prependListener\n}\n", "'use strict'\n\nconst { AbortError, codes } = require('../../ours/errors')\nconst { isNodeStream, isWebStream, kControllerErrorFunction } = require('./utils')\nconst eos = require('./end-of-stream')\nconst { ERR_INVALID_ARG_TYPE } = codes\n\n// This method is inlined here for readable-stream\n// It also does not allow for signal to not exist on the stream\n// https://github.com/nodejs/node/pull/36061#discussion_r533718029\nconst validateAbortSignal = (signal, name) => {\n  if (typeof signal !== 'object' || !('aborted' in signal)) {\n    throw new ERR_INVALID_ARG_TYPE(name, 'AbortSignal', signal)\n  }\n}\nmodule.exports.addAbortSignal = function addAbortSignal(signal, stream) {\n  validateAbortSignal(signal, 'signal')\n  if (!isNodeStream(stream) && !isWebStream(stream)) {\n    throw new ERR_INVALID_ARG_TYPE('stream', ['ReadableStream', 'WritableStream', 'Stream'], stream)\n  }\n  return module.exports.addAbortSignalNoValidate(signal, stream)\n}\nmodule.exports.addAbortSignalNoValidate = function (signal, stream) {\n  if (typeof signal !== 'object' || !('aborted' in signal)) {\n    return stream\n  }\n  const onAbort = isNodeStream(stream)\n    ? () => {\n        stream.destroy(\n          new AbortError(undefined, {\n            cause: signal.reason\n          })\n        )\n      }\n    : () => {\n        stream[kControllerErrorFunction](\n          new AbortError(undefined, {\n            cause: signal.reason\n          })\n        )\n      }\n  if (signal.aborted) {\n    onAbort()\n  } else {\n    signal.addEventListener('abort', onAbort)\n    eos(stream, () => signal.removeEventListener('abort', onAbort))\n  }\n  return stream\n}\n", "'use strict'\n\nconst { StringPrototypeSlice, SymbolIterator, TypedArrayPrototypeSet, Uint8Array } = require('../../ours/primordials')\nconst { Buffer } = require('buffer')\nconst { inspect } = require('../../ours/util')\nmodule.exports = class BufferList {\n  constructor() {\n    this.head = null\n    this.tail = null\n    this.length = 0\n  }\n  push(v) {\n    const entry = {\n      data: v,\n      next: null\n    }\n    if (this.length > 0) this.tail.next = entry\n    else this.head = entry\n    this.tail = entry\n    ++this.length\n  }\n  unshift(v) {\n    const entry = {\n      data: v,\n      next: this.head\n    }\n    if (this.length === 0) this.tail = entry\n    this.head = entry\n    ++this.length\n  }\n  shift() {\n    if (this.length === 0) return\n    const ret = this.head.data\n    if (this.length === 1) this.head = this.tail = null\n    else this.head = this.head.next\n    --this.length\n    return ret\n  }\n  clear() {\n    this.head = this.tail = null\n    this.length = 0\n  }\n  join(s) {\n    if (this.length === 0) return ''\n    let p = this.head\n    let ret = '' + p.data\n    while ((p = p.next) !== null) ret += s + p.data\n    return ret\n  }\n  concat(n) {\n    if (this.length === 0) return Buffer.alloc(0)\n    const ret = Buffer.allocUnsafe(n >>> 0)\n    let p = this.head\n    let i = 0\n    while (p) {\n      TypedArrayPrototypeSet(ret, p.data, i)\n      i += p.data.length\n      p = p.next\n    }\n    return ret\n  }\n\n  // Consumes a specified amount of bytes or characters from the buffered data.\n  consume(n, hasStrings) {\n    const data = this.head.data\n    if (n < data.length) {\n      // `slice` is the same for buffers and strings.\n      const slice = data.slice(0, n)\n      this.head.data = data.slice(n)\n      return slice\n    }\n    if (n === data.length) {\n      // First chunk is a perfect match.\n      return this.shift()\n    }\n    // Result spans more than one buffer.\n    return hasStrings ? this._getString(n) : this._getBuffer(n)\n  }\n  first() {\n    return this.head.data\n  }\n  *[SymbolIterator]() {\n    for (let p = this.head; p; p = p.next) {\n      yield p.data\n    }\n  }\n\n  // Consumes a specified amount of characters from the buffered data.\n  _getString(n) {\n    let ret = ''\n    let p = this.head\n    let c = 0\n    do {\n      const str = p.data\n      if (n > str.length) {\n        ret += str\n        n -= str.length\n      } else {\n        if (n === str.length) {\n          ret += str\n          ++c\n          if (p.next) this.head = p.next\n          else this.head = this.tail = null\n        } else {\n          ret += StringPrototypeSlice(str, 0, n)\n          this.head = p\n          p.data = StringPrototypeSlice(str, n)\n        }\n        break\n      }\n      ++c\n    } while ((p = p.next) !== null)\n    this.length -= c\n    return ret\n  }\n\n  // Consumes a specified amount of bytes from the buffered data.\n  _getBuffer(n) {\n    const ret = Buffer.allocUnsafe(n)\n    const retLen = n\n    let p = this.head\n    let c = 0\n    do {\n      const buf = p.data\n      if (n > buf.length) {\n        TypedArrayPrototypeSet(ret, buf, retLen - n)\n        n -= buf.length\n      } else {\n        if (n === buf.length) {\n          TypedArrayPrototypeSet(ret, buf, retLen - n)\n          ++c\n          if (p.next) this.head = p.next\n          else this.head = this.tail = null\n        } else {\n          TypedArrayPrototypeSet(ret, new Uint8Array(buf.buffer, buf.byteOffset, n), retLen - n)\n          this.head = p\n          p.data = buf.slice(n)\n        }\n        break\n      }\n      ++c\n    } while ((p = p.next) !== null)\n    this.length -= c\n    return ret\n  }\n\n  // Make sure the linked list only shows the minimal necessary information.\n  [Symbol.for('nodejs.util.inspect.custom')](_, options) {\n    return inspect(this, {\n      ...options,\n      // Only inspect one level.\n      depth: 0,\n      // It should not recurse.\n      customInspect: false\n    })\n  }\n}\n", "'use strict'\n\nconst { MathFloor, NumberIsInteger } = require('../../ours/primordials')\nconst { ERR_INVALID_ARG_VALUE } = require('../../ours/errors').codes\nfunction highWaterMarkFrom(options, isDuplex, duplexKey) {\n  return options.highWaterMark != null ? options.highWaterMark : isDuplex ? options[duplexKey] : null\n}\nfunction getDefaultHighWaterMark(objectMode) {\n  return objectMode ? 16 : 16 * 1024\n}\nfunction getHighWaterMark(state, options, duplexKey, isDuplex) {\n  const hwm = highWaterMarkFrom(options, isDuplex, duplexKey)\n  if (hwm != null) {\n    if (!NumberIsInteger(hwm) || hwm < 0) {\n      const name = isDuplex ? `options.${duplexKey}` : 'options.highWaterMark'\n      throw new ERR_INVALID_ARG_VALUE(name, hwm)\n    }\n    return MathFloor(hwm)\n  }\n\n  // Default value\n  return getDefaultHighWaterMark(state.objectMode)\n}\nmodule.exports = {\n  getHighWaterMark,\n  getDefaultHighWaterMark\n}\n", "'use strict'\n\n/* replacement start */\n\nconst process = require('process/')\n\n/* replacement end */\n\nconst { PromisePrototypeThen, SymbolAsyncIterator, SymbolIterator } = require('../../ours/primordials')\nconst { Buffer } = require('buffer')\nconst { ERR_INVALID_ARG_TYPE, ERR_STREAM_NULL_VALUES } = require('../../ours/errors').codes\nfunction from(Readable, iterable, opts) {\n  let iterator\n  if (typeof iterable === 'string' || iterable instanceof Buffer) {\n    return new Readable({\n      objectMode: true,\n      ...opts,\n      read() {\n        this.push(iterable)\n        this.push(null)\n      }\n    })\n  }\n  let isAsync\n  if (iterable && iterable[SymbolAsyncIterator]) {\n    isAsync = true\n    iterator = iterable[SymbolAsyncIterator]()\n  } else if (iterable && iterable[SymbolIterator]) {\n    isAsync = false\n    iterator = iterable[SymbolIterator]()\n  } else {\n    throw new ERR_INVALID_ARG_TYPE('iterable', ['Iterable'], iterable)\n  }\n  const readable = new Readable({\n    objectMode: true,\n    highWaterMark: 1,\n    // TODO(ronag): What options should be allowed?\n    ...opts\n  })\n\n  // Flag to protect against _read\n  // being called before last iteration completion.\n  let reading = false\n  readable._read = function () {\n    if (!reading) {\n      reading = true\n      next()\n    }\n  }\n  readable._destroy = function (error, cb) {\n    PromisePrototypeThen(\n      close(error),\n      () => process.nextTick(cb, error),\n      // nextTick is here in case cb throws\n      (e) => process.nextTick(cb, e || error)\n    )\n  }\n  async function close(error) {\n    const hadError = error !== undefined && error !== null\n    const hasThrow = typeof iterator.throw === 'function'\n    if (hadError && hasThrow) {\n      const { value, done } = await iterator.throw(error)\n      await value\n      if (done) {\n        return\n      }\n    }\n    if (typeof iterator.return === 'function') {\n      const { value } = await iterator.return()\n      await value\n    }\n  }\n  async function next() {\n    for (;;) {\n      try {\n        const { value, done } = isAsync ? await iterator.next() : iterator.next()\n        if (done) {\n          readable.push(null)\n        } else {\n          const res = value && typeof value.then === 'function' ? await value : value\n          if (res === null) {\n            reading = false\n            throw new ERR_STREAM_NULL_VALUES()\n          } else if (readable.push(res)) {\n            continue\n          } else {\n            reading = false\n          }\n        }\n      } catch (err) {\n        readable.destroy(err)\n      }\n      break\n    }\n  }\n  return readable\n}\nmodule.exports = from\n", "/* replacement start */\n\nconst process = require('process/')\n\n/* replacement end */\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n;('use strict')\nconst {\n  ArrayPrototypeIndexOf,\n  NumberIsInteger,\n  NumberIsNaN,\n  NumberParseInt,\n  ObjectDefineProperties,\n  ObjectKeys,\n  ObjectSetPrototypeOf,\n  Promise,\n  SafeSet,\n  SymbolAsyncIterator,\n  Symbol\n} = require('../../ours/primordials')\nmodule.exports = Readable\nReadable.ReadableState = ReadableState\nconst { EventEmitter: EE } = require('events')\nconst { Stream, prependListener } = require('./legacy')\nconst { Buffer } = require('buffer')\nconst { addAbortSignal } = require('./add-abort-signal')\nconst eos = require('./end-of-stream')\nlet debug = require('../../ours/util').debuglog('stream', (fn) => {\n  debug = fn\n})\nconst BufferList = require('./buffer_list')\nconst destroyImpl = require('./destroy')\nconst { getHighWaterMark, getDefaultHighWaterMark } = require('./state')\nconst {\n  aggregateTwoErrors,\n  codes: {\n    ERR_INVALID_ARG_TYPE,\n    ERR_METHOD_NOT_IMPLEMENTED,\n    ERR_OUT_OF_RANGE,\n    ERR_STREAM_PUSH_AFTER_EOF,\n    ERR_STREAM_UNSHIFT_AFTER_END_EVENT\n  }\n} = require('../../ours/errors')\nconst { validateObject } = require('../validators')\nconst kPaused = Symbol('kPaused')\nconst { StringDecoder } = require('string_decoder')\nconst from = require('./from')\nObjectSetPrototypeOf(Readable.prototype, Stream.prototype)\nObjectSetPrototypeOf(Readable, Stream)\nconst nop = () => {}\nconst { errorOrDestroy } = destroyImpl\nfunction ReadableState(options, stream, isDuplex) {\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n  if (typeof isDuplex !== 'boolean') isDuplex = stream instanceof require('./duplex')\n\n  // Object stream flag. Used to make read(n) ignore n and to\n  // make all the buffer merging and length checks go away.\n  this.objectMode = !!(options && options.objectMode)\n  if (isDuplex) this.objectMode = this.objectMode || !!(options && options.readableObjectMode)\n\n  // The point at which it stops calling _read() to fill the buffer\n  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n  this.highWaterMark = options\n    ? getHighWaterMark(this, options, 'readableHighWaterMark', isDuplex)\n    : getDefaultHighWaterMark(false)\n\n  // A linked list is used to store data chunks instead of an array because the\n  // linked list can remove elements from the beginning faster than\n  // array.shift().\n  this.buffer = new BufferList()\n  this.length = 0\n  this.pipes = []\n  this.flowing = null\n  this.ended = false\n  this.endEmitted = false\n  this.reading = false\n\n  // Stream is still being constructed and cannot be\n  // destroyed until construction finished or failed.\n  // Async construction is opt in, therefore we start as\n  // constructed.\n  this.constructed = true\n\n  // A flag to be able to tell if the event 'readable'/'data' is emitted\n  // immediately, or on a later tick.  We set this to true at first, because\n  // any actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first read call.\n  this.sync = true\n\n  // Whenever we return null, then we set a flag to say\n  // that we're awaiting a 'readable' event emission.\n  this.needReadable = false\n  this.emittedReadable = false\n  this.readableListening = false\n  this.resumeScheduled = false\n  this[kPaused] = null\n\n  // True if the error was already emitted and should not be thrown again.\n  this.errorEmitted = false\n\n  // Should close be emitted on destroy. Defaults to true.\n  this.emitClose = !options || options.emitClose !== false\n\n  // Should .destroy() be called after 'end' (and potentially 'finish').\n  this.autoDestroy = !options || options.autoDestroy !== false\n\n  // Has it been destroyed.\n  this.destroyed = false\n\n  // Indicates whether the stream has errored. When true no further\n  // _read calls, 'data' or 'readable' events should occur. This is needed\n  // since when autoDestroy is disabled we need a way to tell whether the\n  // stream has failed.\n  this.errored = null\n\n  // Indicates whether the stream has finished destroying.\n  this.closed = false\n\n  // True if close has been emitted or would have been emitted\n  // depending on emitClose.\n  this.closeEmitted = false\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = (options && options.defaultEncoding) || 'utf8'\n\n  // Ref the piped dest which we need a drain event on it\n  // type: null | Writable | Set<Writable>.\n  this.awaitDrainWriters = null\n  this.multiAwaitDrain = false\n\n  // If true, a maybeReadMore has been scheduled.\n  this.readingMore = false\n  this.dataEmitted = false\n  this.decoder = null\n  this.encoding = null\n  if (options && options.encoding) {\n    this.decoder = new StringDecoder(options.encoding)\n    this.encoding = options.encoding\n  }\n}\nfunction Readable(options) {\n  if (!(this instanceof Readable)) return new Readable(options)\n\n  // Checking for a Stream.Duplex instance is faster here instead of inside\n  // the ReadableState constructor, at least with V8 6.5.\n  const isDuplex = this instanceof require('./duplex')\n  this._readableState = new ReadableState(options, this, isDuplex)\n  if (options) {\n    if (typeof options.read === 'function') this._read = options.read\n    if (typeof options.destroy === 'function') this._destroy = options.destroy\n    if (typeof options.construct === 'function') this._construct = options.construct\n    if (options.signal && !isDuplex) addAbortSignal(options.signal, this)\n  }\n  Stream.call(this, options)\n  destroyImpl.construct(this, () => {\n    if (this._readableState.needReadable) {\n      maybeReadMore(this, this._readableState)\n    }\n  })\n}\nReadable.prototype.destroy = destroyImpl.destroy\nReadable.prototype._undestroy = destroyImpl.undestroy\nReadable.prototype._destroy = function (err, cb) {\n  cb(err)\n}\nReadable.prototype[EE.captureRejectionSymbol] = function (err) {\n  this.destroy(err)\n}\n\n// Manually shove something into the read() buffer.\n// This returns true if the highWaterMark has not been hit yet,\n// similar to how Writable.write() returns true if you should\n// write() some more.\nReadable.prototype.push = function (chunk, encoding) {\n  return readableAddChunk(this, chunk, encoding, false)\n}\n\n// Unshift should *always* be something directly out of read().\nReadable.prototype.unshift = function (chunk, encoding) {\n  return readableAddChunk(this, chunk, encoding, true)\n}\nfunction readableAddChunk(stream, chunk, encoding, addToFront) {\n  debug('readableAddChunk', chunk)\n  const state = stream._readableState\n  let err\n  if (!state.objectMode) {\n    if (typeof chunk === 'string') {\n      encoding = encoding || state.defaultEncoding\n      if (state.encoding !== encoding) {\n        if (addToFront && state.encoding) {\n          // When unshifting, if state.encoding is set, we have to save\n          // the string in the BufferList with the state encoding.\n          chunk = Buffer.from(chunk, encoding).toString(state.encoding)\n        } else {\n          chunk = Buffer.from(chunk, encoding)\n          encoding = ''\n        }\n      }\n    } else if (chunk instanceof Buffer) {\n      encoding = ''\n    } else if (Stream._isUint8Array(chunk)) {\n      chunk = Stream._uint8ArrayToBuffer(chunk)\n      encoding = ''\n    } else if (chunk != null) {\n      err = new ERR_INVALID_ARG_TYPE('chunk', ['string', 'Buffer', 'Uint8Array'], chunk)\n    }\n  }\n  if (err) {\n    errorOrDestroy(stream, err)\n  } else if (chunk === null) {\n    state.reading = false\n    onEofChunk(stream, state)\n  } else if (state.objectMode || (chunk && chunk.length > 0)) {\n    if (addToFront) {\n      if (state.endEmitted) errorOrDestroy(stream, new ERR_STREAM_UNSHIFT_AFTER_END_EVENT())\n      else if (state.destroyed || state.errored) return false\n      else addChunk(stream, state, chunk, true)\n    } else if (state.ended) {\n      errorOrDestroy(stream, new ERR_STREAM_PUSH_AFTER_EOF())\n    } else if (state.destroyed || state.errored) {\n      return false\n    } else {\n      state.reading = false\n      if (state.decoder && !encoding) {\n        chunk = state.decoder.write(chunk)\n        if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false)\n        else maybeReadMore(stream, state)\n      } else {\n        addChunk(stream, state, chunk, false)\n      }\n    }\n  } else if (!addToFront) {\n    state.reading = false\n    maybeReadMore(stream, state)\n  }\n\n  // We can push more data if we are below the highWaterMark.\n  // Also, if we have no data yet, we can stand some more bytes.\n  // This is to work around cases where hwm=0, such as the repl.\n  return !state.ended && (state.length < state.highWaterMark || state.length === 0)\n}\nfunction addChunk(stream, state, chunk, addToFront) {\n  if (state.flowing && state.length === 0 && !state.sync && stream.listenerCount('data') > 0) {\n    // Use the guard to avoid creating `Set()` repeatedly\n    // when we have multiple pipes.\n    if (state.multiAwaitDrain) {\n      state.awaitDrainWriters.clear()\n    } else {\n      state.awaitDrainWriters = null\n    }\n    state.dataEmitted = true\n    stream.emit('data', chunk)\n  } else {\n    // Update the buffer info.\n    state.length += state.objectMode ? 1 : chunk.length\n    if (addToFront) state.buffer.unshift(chunk)\n    else state.buffer.push(chunk)\n    if (state.needReadable) emitReadable(stream)\n  }\n  maybeReadMore(stream, state)\n}\nReadable.prototype.isPaused = function () {\n  const state = this._readableState\n  return state[kPaused] === true || state.flowing === false\n}\n\n// Backwards compatibility.\nReadable.prototype.setEncoding = function (enc) {\n  const decoder = new StringDecoder(enc)\n  this._readableState.decoder = decoder\n  // If setEncoding(null), decoder.encoding equals utf8.\n  this._readableState.encoding = this._readableState.decoder.encoding\n  const buffer = this._readableState.buffer\n  // Iterate over current buffer to convert already stored Buffers:\n  let content = ''\n  for (const data of buffer) {\n    content += decoder.write(data)\n  }\n  buffer.clear()\n  if (content !== '') buffer.push(content)\n  this._readableState.length = content.length\n  return this\n}\n\n// Don't raise the hwm > 1GB.\nconst MAX_HWM = 0x40000000\nfunction computeNewHighWaterMark(n) {\n  if (n > MAX_HWM) {\n    throw new ERR_OUT_OF_RANGE('size', '<= 1GiB', n)\n  } else {\n    // Get the next highest power of 2 to prevent increasing hwm excessively in\n    // tiny amounts.\n    n--\n    n |= n >>> 1\n    n |= n >>> 2\n    n |= n >>> 4\n    n |= n >>> 8\n    n |= n >>> 16\n    n++\n  }\n  return n\n}\n\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction howMuchToRead(n, state) {\n  if (n <= 0 || (state.length === 0 && state.ended)) return 0\n  if (state.objectMode) return 1\n  if (NumberIsNaN(n)) {\n    // Only flow one buffer at a time.\n    if (state.flowing && state.length) return state.buffer.first().length\n    return state.length\n  }\n  if (n <= state.length) return n\n  return state.ended ? state.length : 0\n}\n\n// You can override either this method, or the async _read(n) below.\nReadable.prototype.read = function (n) {\n  debug('read', n)\n  // Same as parseInt(undefined, 10), however V8 7.3 performance regressed\n  // in this scenario, so we are doing it manually.\n  if (n === undefined) {\n    n = NaN\n  } else if (!NumberIsInteger(n)) {\n    n = NumberParseInt(n, 10)\n  }\n  const state = this._readableState\n  const nOrig = n\n\n  // If we're asking for more than the current hwm, then raise the hwm.\n  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n)\n  if (n !== 0) state.emittedReadable = false\n\n  // If we're doing read(0) to trigger a readable event, but we\n  // already have a bunch of data in the buffer, then just trigger\n  // the 'readable' event and move on.\n  if (\n    n === 0 &&\n    state.needReadable &&\n    ((state.highWaterMark !== 0 ? state.length >= state.highWaterMark : state.length > 0) || state.ended)\n  ) {\n    debug('read: emitReadable', state.length, state.ended)\n    if (state.length === 0 && state.ended) endReadable(this)\n    else emitReadable(this)\n    return null\n  }\n  n = howMuchToRead(n, state)\n\n  // If we've ended, and we're now clear, then finish it up.\n  if (n === 0 && state.ended) {\n    if (state.length === 0) endReadable(this)\n    return null\n  }\n\n  // All the actual chunk generation logic needs to be\n  // *below* the call to _read.  The reason is that in certain\n  // synthetic stream cases, such as passthrough streams, _read\n  // may be a completely synchronous operation which may change\n  // the state of the read buffer, providing enough data when\n  // before there was *not* enough.\n  //\n  // So, the steps are:\n  // 1. Figure out what the state of things will be after we do\n  // a read from the buffer.\n  //\n  // 2. If that resulting state will trigger a _read, then call _read.\n  // Note that this may be asynchronous, or synchronous.  Yes, it is\n  // deeply ugly to write APIs this way, but that still doesn't mean\n  // that the Readable class should behave improperly, as streams are\n  // designed to be sync/async agnostic.\n  // Take note if the _read call is sync or async (ie, if the read call\n  // has returned yet), so that we know whether or not it's safe to emit\n  // 'readable' etc.\n  //\n  // 3. Actually pull the requested chunks out of the buffer and return.\n\n  // if we need a readable event, then we need to do some reading.\n  let doRead = state.needReadable\n  debug('need readable', doRead)\n\n  // If we currently have less than the highWaterMark, then also read some.\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\n    doRead = true\n    debug('length less than watermark', doRead)\n  }\n\n  // However, if we've ended, then there's no point, if we're already\n  // reading, then it's unnecessary, if we're constructing we have to wait,\n  // and if we're destroyed or errored, then it's not allowed,\n  if (state.ended || state.reading || state.destroyed || state.errored || !state.constructed) {\n    doRead = false\n    debug('reading, ended or constructing', doRead)\n  } else if (doRead) {\n    debug('do read')\n    state.reading = true\n    state.sync = true\n    // If the length is currently zero, then we *need* a readable event.\n    if (state.length === 0) state.needReadable = true\n\n    // Call internal read method\n    try {\n      this._read(state.highWaterMark)\n    } catch (err) {\n      errorOrDestroy(this, err)\n    }\n    state.sync = false\n    // If _read pushed data synchronously, then `reading` will be false,\n    // and we need to re-evaluate how much data we can return to the user.\n    if (!state.reading) n = howMuchToRead(nOrig, state)\n  }\n  let ret\n  if (n > 0) ret = fromList(n, state)\n  else ret = null\n  if (ret === null) {\n    state.needReadable = state.length <= state.highWaterMark\n    n = 0\n  } else {\n    state.length -= n\n    if (state.multiAwaitDrain) {\n      state.awaitDrainWriters.clear()\n    } else {\n      state.awaitDrainWriters = null\n    }\n  }\n  if (state.length === 0) {\n    // If we have nothing in the buffer, then we want to know\n    // as soon as we *do* get something into the buffer.\n    if (!state.ended) state.needReadable = true\n\n    // If we tried to read() past the EOF, then emit end on the next tick.\n    if (nOrig !== n && state.ended) endReadable(this)\n  }\n  if (ret !== null && !state.errorEmitted && !state.closeEmitted) {\n    state.dataEmitted = true\n    this.emit('data', ret)\n  }\n  return ret\n}\nfunction onEofChunk(stream, state) {\n  debug('onEofChunk')\n  if (state.ended) return\n  if (state.decoder) {\n    const chunk = state.decoder.end()\n    if (chunk && chunk.length) {\n      state.buffer.push(chunk)\n      state.length += state.objectMode ? 1 : chunk.length\n    }\n  }\n  state.ended = true\n  if (state.sync) {\n    // If we are sync, wait until next tick to emit the data.\n    // Otherwise we risk emitting data in the flow()\n    // the readable code triggers during a read() call.\n    emitReadable(stream)\n  } else {\n    // Emit 'readable' now to make sure it gets picked up.\n    state.needReadable = false\n    state.emittedReadable = true\n    // We have to emit readable now that we are EOF. Modules\n    // in the ecosystem (e.g. dicer) rely on this event being sync.\n    emitReadable_(stream)\n  }\n}\n\n// Don't emit readable right away in sync mode, because this can trigger\n// another read() call => stack overflow.  This way, it might trigger\n// a nextTick recursion warning, but that's not so bad.\nfunction emitReadable(stream) {\n  const state = stream._readableState\n  debug('emitReadable', state.needReadable, state.emittedReadable)\n  state.needReadable = false\n  if (!state.emittedReadable) {\n    debug('emitReadable', state.flowing)\n    state.emittedReadable = true\n    process.nextTick(emitReadable_, stream)\n  }\n}\nfunction emitReadable_(stream) {\n  const state = stream._readableState\n  debug('emitReadable_', state.destroyed, state.length, state.ended)\n  if (!state.destroyed && !state.errored && (state.length || state.ended)) {\n    stream.emit('readable')\n    state.emittedReadable = false\n  }\n\n  // The stream needs another readable event if:\n  // 1. It is not flowing, as the flow mechanism will take\n  //    care of it.\n  // 2. It is not ended.\n  // 3. It is below the highWaterMark, so we can schedule\n  //    another readable later.\n  state.needReadable = !state.flowing && !state.ended && state.length <= state.highWaterMark\n  flow(stream)\n}\n\n// At this point, the user has presumably seen the 'readable' event,\n// and called read() to consume some data.  that may have triggered\n// in turn another _read(n) call, in which case reading = true if\n// it's in progress.\n// However, if we're not ended, or reading, and the length < hwm,\n// then go ahead and try to read some more preemptively.\nfunction maybeReadMore(stream, state) {\n  if (!state.readingMore && state.constructed) {\n    state.readingMore = true\n    process.nextTick(maybeReadMore_, stream, state)\n  }\n}\nfunction maybeReadMore_(stream, state) {\n  // Attempt to read more data if we should.\n  //\n  // The conditions for reading more data are (one of):\n  // - Not enough data buffered (state.length < state.highWaterMark). The loop\n  //   is responsible for filling the buffer with enough data if such data\n  //   is available. If highWaterMark is 0 and we are not in the flowing mode\n  //   we should _not_ attempt to buffer any extra data. We'll get more data\n  //   when the stream consumer calls read() instead.\n  // - No data in the buffer, and the stream is in flowing mode. In this mode\n  //   the loop below is responsible for ensuring read() is called. Failing to\n  //   call read here would abort the flow and there's no other mechanism for\n  //   continuing the flow if the stream consumer has just subscribed to the\n  //   'data' event.\n  //\n  // In addition to the above conditions to keep reading data, the following\n  // conditions prevent the data from being read:\n  // - The stream has ended (state.ended).\n  // - There is already a pending 'read' operation (state.reading). This is a\n  //   case where the stream has called the implementation defined _read()\n  //   method, but they are processing the call asynchronously and have _not_\n  //   called push() with new data. In this case we skip performing more\n  //   read()s. The execution ends in this method again after the _read() ends\n  //   up calling push() with more data.\n  while (\n    !state.reading &&\n    !state.ended &&\n    (state.length < state.highWaterMark || (state.flowing && state.length === 0))\n  ) {\n    const len = state.length\n    debug('maybeReadMore read 0')\n    stream.read(0)\n    if (len === state.length)\n      // Didn't get any data, stop spinning.\n      break\n  }\n  state.readingMore = false\n}\n\n// Abstract method.  to be overridden in specific implementation classes.\n// call cb(er, data) where data is <= n in length.\n// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n// arbitrary, and perhaps not very meaningful.\nReadable.prototype._read = function (n) {\n  throw new ERR_METHOD_NOT_IMPLEMENTED('_read()')\n}\nReadable.prototype.pipe = function (dest, pipeOpts) {\n  const src = this\n  const state = this._readableState\n  if (state.pipes.length === 1) {\n    if (!state.multiAwaitDrain) {\n      state.multiAwaitDrain = true\n      state.awaitDrainWriters = new SafeSet(state.awaitDrainWriters ? [state.awaitDrainWriters] : [])\n    }\n  }\n  state.pipes.push(dest)\n  debug('pipe count=%d opts=%j', state.pipes.length, pipeOpts)\n  const doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr\n  const endFn = doEnd ? onend : unpipe\n  if (state.endEmitted) process.nextTick(endFn)\n  else src.once('end', endFn)\n  dest.on('unpipe', onunpipe)\n  function onunpipe(readable, unpipeInfo) {\n    debug('onunpipe')\n    if (readable === src) {\n      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {\n        unpipeInfo.hasUnpiped = true\n        cleanup()\n      }\n    }\n  }\n  function onend() {\n    debug('onend')\n    dest.end()\n  }\n  let ondrain\n  let cleanedUp = false\n  function cleanup() {\n    debug('cleanup')\n    // Cleanup event handlers once the pipe is broken.\n    dest.removeListener('close', onclose)\n    dest.removeListener('finish', onfinish)\n    if (ondrain) {\n      dest.removeListener('drain', ondrain)\n    }\n    dest.removeListener('error', onerror)\n    dest.removeListener('unpipe', onunpipe)\n    src.removeListener('end', onend)\n    src.removeListener('end', unpipe)\n    src.removeListener('data', ondata)\n    cleanedUp = true\n\n    // If the reader is waiting for a drain event from this\n    // specific writer, then it would cause it to never start\n    // flowing again.\n    // So, if this is awaiting a drain, then we just call it now.\n    // If we don't know, then assume that we are waiting for one.\n    if (ondrain && state.awaitDrainWriters && (!dest._writableState || dest._writableState.needDrain)) ondrain()\n  }\n  function pause() {\n    // If the user unpiped during `dest.write()`, it is possible\n    // to get stuck in a permanently paused state if that write\n    // also returned false.\n    // => Check whether `dest` is still a piping destination.\n    if (!cleanedUp) {\n      if (state.pipes.length === 1 && state.pipes[0] === dest) {\n        debug('false write response, pause', 0)\n        state.awaitDrainWriters = dest\n        state.multiAwaitDrain = false\n      } else if (state.pipes.length > 1 && state.pipes.includes(dest)) {\n        debug('false write response, pause', state.awaitDrainWriters.size)\n        state.awaitDrainWriters.add(dest)\n      }\n      src.pause()\n    }\n    if (!ondrain) {\n      // When the dest drains, it reduces the awaitDrain counter\n      // on the source.  This would be more elegant with a .once()\n      // handler in flow(), but adding and removing repeatedly is\n      // too slow.\n      ondrain = pipeOnDrain(src, dest)\n      dest.on('drain', ondrain)\n    }\n  }\n  src.on('data', ondata)\n  function ondata(chunk) {\n    debug('ondata')\n    const ret = dest.write(chunk)\n    debug('dest.write', ret)\n    if (ret === false) {\n      pause()\n    }\n  }\n\n  // If the dest has an error, then stop piping into it.\n  // However, don't suppress the throwing behavior for this.\n  function onerror(er) {\n    debug('onerror', er)\n    unpipe()\n    dest.removeListener('error', onerror)\n    if (dest.listenerCount('error') === 0) {\n      const s = dest._writableState || dest._readableState\n      if (s && !s.errorEmitted) {\n        // User incorrectly emitted 'error' directly on the stream.\n        errorOrDestroy(dest, er)\n      } else {\n        dest.emit('error', er)\n      }\n    }\n  }\n\n  // Make sure our error handler is attached before userland ones.\n  prependListener(dest, 'error', onerror)\n\n  // Both close and finish should trigger unpipe, but only once.\n  function onclose() {\n    dest.removeListener('finish', onfinish)\n    unpipe()\n  }\n  dest.once('close', onclose)\n  function onfinish() {\n    debug('onfinish')\n    dest.removeListener('close', onclose)\n    unpipe()\n  }\n  dest.once('finish', onfinish)\n  function unpipe() {\n    debug('unpipe')\n    src.unpipe(dest)\n  }\n\n  // Tell the dest that it's being piped to.\n  dest.emit('pipe', src)\n\n  // Start the flow if it hasn't been started already.\n\n  if (dest.writableNeedDrain === true) {\n    if (state.flowing) {\n      pause()\n    }\n  } else if (!state.flowing) {\n    debug('pipe resume')\n    src.resume()\n  }\n  return dest\n}\nfunction pipeOnDrain(src, dest) {\n  return function pipeOnDrainFunctionResult() {\n    const state = src._readableState\n\n    // `ondrain` will call directly,\n    // `this` maybe not a reference to dest,\n    // so we use the real dest here.\n    if (state.awaitDrainWriters === dest) {\n      debug('pipeOnDrain', 1)\n      state.awaitDrainWriters = null\n    } else if (state.multiAwaitDrain) {\n      debug('pipeOnDrain', state.awaitDrainWriters.size)\n      state.awaitDrainWriters.delete(dest)\n    }\n    if ((!state.awaitDrainWriters || state.awaitDrainWriters.size === 0) && src.listenerCount('data')) {\n      src.resume()\n    }\n  }\n}\nReadable.prototype.unpipe = function (dest) {\n  const state = this._readableState\n  const unpipeInfo = {\n    hasUnpiped: false\n  }\n\n  // If we're not piping anywhere, then do nothing.\n  if (state.pipes.length === 0) return this\n  if (!dest) {\n    // remove all.\n    const dests = state.pipes\n    state.pipes = []\n    this.pause()\n    for (let i = 0; i < dests.length; i++)\n      dests[i].emit('unpipe', this, {\n        hasUnpiped: false\n      })\n    return this\n  }\n\n  // Try to find the right one.\n  const index = ArrayPrototypeIndexOf(state.pipes, dest)\n  if (index === -1) return this\n  state.pipes.splice(index, 1)\n  if (state.pipes.length === 0) this.pause()\n  dest.emit('unpipe', this, unpipeInfo)\n  return this\n}\n\n// Set up data events if they are asked for\n// Ensure readable listeners eventually get something.\nReadable.prototype.on = function (ev, fn) {\n  const res = Stream.prototype.on.call(this, ev, fn)\n  const state = this._readableState\n  if (ev === 'data') {\n    // Update readableListening so that resume() may be a no-op\n    // a few lines down. This is needed to support once('readable').\n    state.readableListening = this.listenerCount('readable') > 0\n\n    // Try start flowing on next tick if stream isn't explicitly paused.\n    if (state.flowing !== false) this.resume()\n  } else if (ev === 'readable') {\n    if (!state.endEmitted && !state.readableListening) {\n      state.readableListening = state.needReadable = true\n      state.flowing = false\n      state.emittedReadable = false\n      debug('on readable', state.length, state.reading)\n      if (state.length) {\n        emitReadable(this)\n      } else if (!state.reading) {\n        process.nextTick(nReadingNextTick, this)\n      }\n    }\n  }\n  return res\n}\nReadable.prototype.addListener = Readable.prototype.on\nReadable.prototype.removeListener = function (ev, fn) {\n  const res = Stream.prototype.removeListener.call(this, ev, fn)\n  if (ev === 'readable') {\n    // We need to check if there is someone still listening to\n    // readable and reset the state. However this needs to happen\n    // after readable has been emitted but before I/O (nextTick) to\n    // support once('readable', fn) cycles. This means that calling\n    // resume within the same tick will have no\n    // effect.\n    process.nextTick(updateReadableListening, this)\n  }\n  return res\n}\nReadable.prototype.off = Readable.prototype.removeListener\nReadable.prototype.removeAllListeners = function (ev) {\n  const res = Stream.prototype.removeAllListeners.apply(this, arguments)\n  if (ev === 'readable' || ev === undefined) {\n    // We need to check if there is someone still listening to\n    // readable and reset the state. However this needs to happen\n    // after readable has been emitted but before I/O (nextTick) to\n    // support once('readable', fn) cycles. This means that calling\n    // resume within the same tick will have no\n    // effect.\n    process.nextTick(updateReadableListening, this)\n  }\n  return res\n}\nfunction updateReadableListening(self) {\n  const state = self._readableState\n  state.readableListening = self.listenerCount('readable') > 0\n  if (state.resumeScheduled && state[kPaused] === false) {\n    // Flowing needs to be set to true now, otherwise\n    // the upcoming resume will not flow.\n    state.flowing = true\n\n    // Crude way to check if we should resume.\n  } else if (self.listenerCount('data') > 0) {\n    self.resume()\n  } else if (!state.readableListening) {\n    state.flowing = null\n  }\n}\nfunction nReadingNextTick(self) {\n  debug('readable nexttick read 0')\n  self.read(0)\n}\n\n// pause() and resume() are remnants of the legacy readable stream API\n// If the user uses them, then switch into old mode.\nReadable.prototype.resume = function () {\n  const state = this._readableState\n  if (!state.flowing) {\n    debug('resume')\n    // We flow only if there is no one listening\n    // for readable, but we still have to call\n    // resume().\n    state.flowing = !state.readableListening\n    resume(this, state)\n  }\n  state[kPaused] = false\n  return this\n}\nfunction resume(stream, state) {\n  if (!state.resumeScheduled) {\n    state.resumeScheduled = true\n    process.nextTick(resume_, stream, state)\n  }\n}\nfunction resume_(stream, state) {\n  debug('resume', state.reading)\n  if (!state.reading) {\n    stream.read(0)\n  }\n  state.resumeScheduled = false\n  stream.emit('resume')\n  flow(stream)\n  if (state.flowing && !state.reading) stream.read(0)\n}\nReadable.prototype.pause = function () {\n  debug('call pause flowing=%j', this._readableState.flowing)\n  if (this._readableState.flowing !== false) {\n    debug('pause')\n    this._readableState.flowing = false\n    this.emit('pause')\n  }\n  this._readableState[kPaused] = true\n  return this\n}\nfunction flow(stream) {\n  const state = stream._readableState\n  debug('flow', state.flowing)\n  while (state.flowing && stream.read() !== null);\n}\n\n// Wrap an old-style stream as the async data source.\n// This is *not* part of the readable stream interface.\n// It is an ugly unfortunate mess of history.\nReadable.prototype.wrap = function (stream) {\n  let paused = false\n\n  // TODO (ronag): Should this.destroy(err) emit\n  // 'error' on the wrapped stream? Would require\n  // a static factory method, e.g. Readable.wrap(stream).\n\n  stream.on('data', (chunk) => {\n    if (!this.push(chunk) && stream.pause) {\n      paused = true\n      stream.pause()\n    }\n  })\n  stream.on('end', () => {\n    this.push(null)\n  })\n  stream.on('error', (err) => {\n    errorOrDestroy(this, err)\n  })\n  stream.on('close', () => {\n    this.destroy()\n  })\n  stream.on('destroy', () => {\n    this.destroy()\n  })\n  this._read = () => {\n    if (paused && stream.resume) {\n      paused = false\n      stream.resume()\n    }\n  }\n\n  // Proxy all the other methods. Important when wrapping filters and duplexes.\n  const streamKeys = ObjectKeys(stream)\n  for (let j = 1; j < streamKeys.length; j++) {\n    const i = streamKeys[j]\n    if (this[i] === undefined && typeof stream[i] === 'function') {\n      this[i] = stream[i].bind(stream)\n    }\n  }\n  return this\n}\nReadable.prototype[SymbolAsyncIterator] = function () {\n  return streamToAsyncIterator(this)\n}\nReadable.prototype.iterator = function (options) {\n  if (options !== undefined) {\n    validateObject(options, 'options')\n  }\n  return streamToAsyncIterator(this, options)\n}\nfunction streamToAsyncIterator(stream, options) {\n  if (typeof stream.read !== 'function') {\n    stream = Readable.wrap(stream, {\n      objectMode: true\n    })\n  }\n  const iter = createAsyncIterator(stream, options)\n  iter.stream = stream\n  return iter\n}\nasync function* createAsyncIterator(stream, options) {\n  let callback = nop\n  function next(resolve) {\n    if (this === stream) {\n      callback()\n      callback = nop\n    } else {\n      callback = resolve\n    }\n  }\n  stream.on('readable', next)\n  let error\n  const cleanup = eos(\n    stream,\n    {\n      writable: false\n    },\n    (err) => {\n      error = err ? aggregateTwoErrors(error, err) : null\n      callback()\n      callback = nop\n    }\n  )\n  try {\n    while (true) {\n      const chunk = stream.destroyed ? null : stream.read()\n      if (chunk !== null) {\n        yield chunk\n      } else if (error) {\n        throw error\n      } else if (error === null) {\n        return\n      } else {\n        await new Promise(next)\n      }\n    }\n  } catch (err) {\n    error = aggregateTwoErrors(error, err)\n    throw error\n  } finally {\n    if (\n      (error || (options === null || options === undefined ? undefined : options.destroyOnReturn) !== false) &&\n      (error === undefined || stream._readableState.autoDestroy)\n    ) {\n      destroyImpl.destroyer(stream, null)\n    } else {\n      stream.off('readable', next)\n      cleanup()\n    }\n  }\n}\n\n// Making it explicit these properties are not enumerable\n// because otherwise some prototype manipulation in\n// userland will fail.\nObjectDefineProperties(Readable.prototype, {\n  readable: {\n    __proto__: null,\n    get() {\n      const r = this._readableState\n      // r.readable === false means that this is part of a Duplex stream\n      // where the readable side was disabled upon construction.\n      // Compat. The user might manually disable readable side through\n      // deprecated setter.\n      return !!r && r.readable !== false && !r.destroyed && !r.errorEmitted && !r.endEmitted\n    },\n    set(val) {\n      // Backwards compat.\n      if (this._readableState) {\n        this._readableState.readable = !!val\n      }\n    }\n  },\n  readableDidRead: {\n    __proto__: null,\n    enumerable: false,\n    get: function () {\n      return this._readableState.dataEmitted\n    }\n  },\n  readableAborted: {\n    __proto__: null,\n    enumerable: false,\n    get: function () {\n      return !!(\n        this._readableState.readable !== false &&\n        (this._readableState.destroyed || this._readableState.errored) &&\n        !this._readableState.endEmitted\n      )\n    }\n  },\n  readableHighWaterMark: {\n    __proto__: null,\n    enumerable: false,\n    get: function () {\n      return this._readableState.highWaterMark\n    }\n  },\n  readableBuffer: {\n    __proto__: null,\n    enumerable: false,\n    get: function () {\n      return this._readableState && this._readableState.buffer\n    }\n  },\n  readableFlowing: {\n    __proto__: null,\n    enumerable: false,\n    get: function () {\n      return this._readableState.flowing\n    },\n    set: function (state) {\n      if (this._readableState) {\n        this._readableState.flowing = state\n      }\n    }\n  },\n  readableLength: {\n    __proto__: null,\n    enumerable: false,\n    get() {\n      return this._readableState.length\n    }\n  },\n  readableObjectMode: {\n    __proto__: null,\n    enumerable: false,\n    get() {\n      return this._readableState ? this._readableState.objectMode : false\n    }\n  },\n  readableEncoding: {\n    __proto__: null,\n    enumerable: false,\n    get() {\n      return this._readableState ? this._readableState.encoding : null\n    }\n  },\n  errored: {\n    __proto__: null,\n    enumerable: false,\n    get() {\n      return this._readableState ? this._readableState.errored : null\n    }\n  },\n  closed: {\n    __proto__: null,\n    get() {\n      return this._readableState ? this._readableState.closed : false\n    }\n  },\n  destroyed: {\n    __proto__: null,\n    enumerable: false,\n    get() {\n      return this._readableState ? this._readableState.destroyed : false\n    },\n    set(value) {\n      // We ignore the value if the stream\n      // has not been initialized yet.\n      if (!this._readableState) {\n        return\n      }\n\n      // Backward compatibility, the user is explicitly\n      // managing destroyed.\n      this._readableState.destroyed = value\n    }\n  },\n  readableEnded: {\n    __proto__: null,\n    enumerable: false,\n    get() {\n      return this._readableState ? this._readableState.endEmitted : false\n    }\n  }\n})\nObjectDefineProperties(ReadableState.prototype, {\n  // Legacy getter for `pipesCount`.\n  pipesCount: {\n    __proto__: null,\n    get() {\n      return this.pipes.length\n    }\n  },\n  // Legacy property for `paused`.\n  paused: {\n    __proto__: null,\n    get() {\n      return this[kPaused] !== false\n    },\n    set(value) {\n      this[kPaused] = !!value\n    }\n  }\n})\n\n// Exposed for testing purposes only.\nReadable._fromList = fromList\n\n// Pluck off n bytes from an array of buffers.\n// Length is the combined lengths of all the buffers in the list.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromList(n, state) {\n  // nothing buffered.\n  if (state.length === 0) return null\n  let ret\n  if (state.objectMode) ret = state.buffer.shift()\n  else if (!n || n >= state.length) {\n    // Read it all, truncate the list.\n    if (state.decoder) ret = state.buffer.join('')\n    else if (state.buffer.length === 1) ret = state.buffer.first()\n    else ret = state.buffer.concat(state.length)\n    state.buffer.clear()\n  } else {\n    // read part of list.\n    ret = state.buffer.consume(n, state.decoder)\n  }\n  return ret\n}\nfunction endReadable(stream) {\n  const state = stream._readableState\n  debug('endReadable', state.endEmitted)\n  if (!state.endEmitted) {\n    state.ended = true\n    process.nextTick(endReadableNT, state, stream)\n  }\n}\nfunction endReadableNT(state, stream) {\n  debug('endReadableNT', state.endEmitted, state.length)\n\n  // Check that we didn't get one last unshift.\n  if (!state.errored && !state.closeEmitted && !state.endEmitted && state.length === 0) {\n    state.endEmitted = true\n    stream.emit('end')\n    if (stream.writable && stream.allowHalfOpen === false) {\n      process.nextTick(endWritableNT, stream)\n    } else if (state.autoDestroy) {\n      // In case of duplex streams we need a way to detect\n      // if the writable side is ready for autoDestroy as well.\n      const wState = stream._writableState\n      const autoDestroy =\n        !wState ||\n        (wState.autoDestroy &&\n          // We don't expect the writable to ever 'finish'\n          // if writable is explicitly set to false.\n          (wState.finished || wState.writable === false))\n      if (autoDestroy) {\n        stream.destroy()\n      }\n    }\n  }\n}\nfunction endWritableNT(stream) {\n  const writable = stream.writable && !stream.writableEnded && !stream.destroyed\n  if (writable) {\n    stream.end()\n  }\n}\nReadable.from = function (iterable, opts) {\n  return from(Readable, iterable, opts)\n}\nlet webStreamsAdapters\n\n// Lazy to avoid circular references\nfunction lazyWebStreams() {\n  if (webStreamsAdapters === undefined) webStreamsAdapters = {}\n  return webStreamsAdapters\n}\nReadable.fromWeb = function (readableStream, options) {\n  return lazyWebStreams().newStreamReadableFromReadableStream(readableStream, options)\n}\nReadable.toWeb = function (streamReadable, options) {\n  return lazyWebStreams().newReadableStreamFromStreamReadable(streamReadable, options)\n}\nReadable.wrap = function (src, options) {\n  var _ref, _src$readableObjectMo\n  return new Readable({\n    objectMode:\n      (_ref =\n        (_src$readableObjectMo = src.readableObjectMode) !== null && _src$readableObjectMo !== undefined\n          ? _src$readableObjectMo\n          : src.objectMode) !== null && _ref !== undefined\n        ? _ref\n        : true,\n    ...options,\n    destroy(err, callback) {\n      destroyImpl.destroyer(src, err)\n      callback(err)\n    }\n  }).wrap(src)\n}\n", "/* replacement start */\n\nconst process = require('process/')\n\n/* replacement end */\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// A bit simpler than readable streams.\n// Implement an async ._write(chunk, encoding, cb), and it'll handle all\n// the drain event emission and buffering.\n\n;('use strict')\nconst {\n  ArrayPrototypeSlice,\n  Error,\n  FunctionPrototypeSymbolHasInstance,\n  ObjectDefineProperty,\n  ObjectDefineProperties,\n  ObjectSetPrototypeOf,\n  StringPrototypeToLowerCase,\n  Symbol,\n  SymbolHasInstance\n} = require('../../ours/primordials')\nmodule.exports = Writable\nWritable.WritableState = WritableState\nconst { EventEmitter: EE } = require('events')\nconst Stream = require('./legacy').Stream\nconst { Buffer } = require('buffer')\nconst destroyImpl = require('./destroy')\nconst { addAbortSignal } = require('./add-abort-signal')\nconst { getHighWaterMark, getDefaultHighWaterMark } = require('./state')\nconst {\n  ERR_INVALID_ARG_TYPE,\n  ERR_METHOD_NOT_IMPLEMENTED,\n  ERR_MULTIPLE_CALLBACK,\n  ERR_STREAM_CANNOT_PIPE,\n  ERR_STREAM_DESTROYED,\n  ERR_STREAM_ALREADY_FINISHED,\n  ERR_STREAM_NULL_VALUES,\n  ERR_STREAM_WRITE_AFTER_END,\n  ERR_UNKNOWN_ENCODING\n} = require('../../ours/errors').codes\nconst { errorOrDestroy } = destroyImpl\nObjectSetPrototypeOf(Writable.prototype, Stream.prototype)\nObjectSetPrototypeOf(Writable, Stream)\nfunction nop() {}\nconst kOnFinished = Symbol('kOnFinished')\nfunction WritableState(options, stream, isDuplex) {\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream,\n  // e.g. options.readableObjectMode vs. options.writableObjectMode, etc.\n  if (typeof isDuplex !== 'boolean') isDuplex = stream instanceof require('./duplex')\n\n  // Object stream flag to indicate whether or not this stream\n  // contains buffers or objects.\n  this.objectMode = !!(options && options.objectMode)\n  if (isDuplex) this.objectMode = this.objectMode || !!(options && options.writableObjectMode)\n\n  // The point at which write() starts returning false\n  // Note: 0 is a valid value, means that we always return false if\n  // the entire buffer is not flushed immediately on write().\n  this.highWaterMark = options\n    ? getHighWaterMark(this, options, 'writableHighWaterMark', isDuplex)\n    : getDefaultHighWaterMark(false)\n\n  // if _final has been called.\n  this.finalCalled = false\n\n  // drain event flag.\n  this.needDrain = false\n  // At the start of calling end()\n  this.ending = false\n  // When end() has been called, and returned.\n  this.ended = false\n  // When 'finish' is emitted.\n  this.finished = false\n\n  // Has it been destroyed\n  this.destroyed = false\n\n  // Should we decode strings into buffers before passing to _write?\n  // this is here so that some node-core streams can optimize string\n  // handling at a lower level.\n  const noDecode = !!(options && options.decodeStrings === false)\n  this.decodeStrings = !noDecode\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = (options && options.defaultEncoding) || 'utf8'\n\n  // Not an actual buffer we keep track of, but a measurement\n  // of how much we're waiting to get pushed to some underlying\n  // socket or file.\n  this.length = 0\n\n  // A flag to see when we're in the middle of a write.\n  this.writing = false\n\n  // When true all writes will be buffered until .uncork() call.\n  this.corked = 0\n\n  // A flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n  this.sync = true\n\n  // A flag to know if we're processing previously buffered items, which\n  // may call the _write() callback in the same tick, so that we don't\n  // end up in an overlapped onwrite situation.\n  this.bufferProcessing = false\n\n  // The callback that's passed to _write(chunk, cb).\n  this.onwrite = onwrite.bind(undefined, stream)\n\n  // The callback that the user supplies to write(chunk, encoding, cb).\n  this.writecb = null\n\n  // The amount that is being written when _write is called.\n  this.writelen = 0\n\n  // Storage for data passed to the afterWrite() callback in case of\n  // synchronous _write() completion.\n  this.afterWriteTickInfo = null\n  resetBuffer(this)\n\n  // Number of pending user-supplied write callbacks\n  // this must be 0 before 'finish' can be emitted.\n  this.pendingcb = 0\n\n  // Stream is still being constructed and cannot be\n  // destroyed until construction finished or failed.\n  // Async construction is opt in, therefore we start as\n  // constructed.\n  this.constructed = true\n\n  // Emit prefinish if the only thing we're waiting for is _write cbs\n  // This is relevant for synchronous Transform streams.\n  this.prefinished = false\n\n  // True if the error was already emitted and should not be thrown again.\n  this.errorEmitted = false\n\n  // Should close be emitted on destroy. Defaults to true.\n  this.emitClose = !options || options.emitClose !== false\n\n  // Should .destroy() be called after 'finish' (and potentially 'end').\n  this.autoDestroy = !options || options.autoDestroy !== false\n\n  // Indicates whether the stream has errored. When true all write() calls\n  // should return false. This is needed since when autoDestroy\n  // is disabled we need a way to tell whether the stream has failed.\n  this.errored = null\n\n  // Indicates whether the stream has finished destroying.\n  this.closed = false\n\n  // True if close has been emitted or would have been emitted\n  // depending on emitClose.\n  this.closeEmitted = false\n  this[kOnFinished] = []\n}\nfunction resetBuffer(state) {\n  state.buffered = []\n  state.bufferedIndex = 0\n  state.allBuffers = true\n  state.allNoop = true\n}\nWritableState.prototype.getBuffer = function getBuffer() {\n  return ArrayPrototypeSlice(this.buffered, this.bufferedIndex)\n}\nObjectDefineProperty(WritableState.prototype, 'bufferedRequestCount', {\n  __proto__: null,\n  get() {\n    return this.buffered.length - this.bufferedIndex\n  }\n})\nfunction Writable(options) {\n  // Writable ctor is applied to Duplexes, too.\n  // `realHasInstance` is necessary because using plain `instanceof`\n  // would return false, as no `_writableState` property is attached.\n\n  // Trying to use the custom `instanceof` for Writable here will also break the\n  // Node.js LazyTransform implementation, which has a non-trivial getter for\n  // `_writableState` that would lead to infinite recursion.\n\n  // Checking for a Stream.Duplex instance is faster here instead of inside\n  // the WritableState constructor, at least with V8 6.5.\n  const isDuplex = this instanceof require('./duplex')\n  if (!isDuplex && !FunctionPrototypeSymbolHasInstance(Writable, this)) return new Writable(options)\n  this._writableState = new WritableState(options, this, isDuplex)\n  if (options) {\n    if (typeof options.write === 'function') this._write = options.write\n    if (typeof options.writev === 'function') this._writev = options.writev\n    if (typeof options.destroy === 'function') this._destroy = options.destroy\n    if (typeof options.final === 'function') this._final = options.final\n    if (typeof options.construct === 'function') this._construct = options.construct\n    if (options.signal) addAbortSignal(options.signal, this)\n  }\n  Stream.call(this, options)\n  destroyImpl.construct(this, () => {\n    const state = this._writableState\n    if (!state.writing) {\n      clearBuffer(this, state)\n    }\n    finishMaybe(this, state)\n  })\n}\nObjectDefineProperty(Writable, SymbolHasInstance, {\n  __proto__: null,\n  value: function (object) {\n    if (FunctionPrototypeSymbolHasInstance(this, object)) return true\n    if (this !== Writable) return false\n    return object && object._writableState instanceof WritableState\n  }\n})\n\n// Otherwise people can pipe Writable streams, which is just wrong.\nWritable.prototype.pipe = function () {\n  errorOrDestroy(this, new ERR_STREAM_CANNOT_PIPE())\n}\nfunction _write(stream, chunk, encoding, cb) {\n  const state = stream._writableState\n  if (typeof encoding === 'function') {\n    cb = encoding\n    encoding = state.defaultEncoding\n  } else {\n    if (!encoding) encoding = state.defaultEncoding\n    else if (encoding !== 'buffer' && !Buffer.isEncoding(encoding)) throw new ERR_UNKNOWN_ENCODING(encoding)\n    if (typeof cb !== 'function') cb = nop\n  }\n  if (chunk === null) {\n    throw new ERR_STREAM_NULL_VALUES()\n  } else if (!state.objectMode) {\n    if (typeof chunk === 'string') {\n      if (state.decodeStrings !== false) {\n        chunk = Buffer.from(chunk, encoding)\n        encoding = 'buffer'\n      }\n    } else if (chunk instanceof Buffer) {\n      encoding = 'buffer'\n    } else if (Stream._isUint8Array(chunk)) {\n      chunk = Stream._uint8ArrayToBuffer(chunk)\n      encoding = 'buffer'\n    } else {\n      throw new ERR_INVALID_ARG_TYPE('chunk', ['string', 'Buffer', 'Uint8Array'], chunk)\n    }\n  }\n  let err\n  if (state.ending) {\n    err = new ERR_STREAM_WRITE_AFTER_END()\n  } else if (state.destroyed) {\n    err = new ERR_STREAM_DESTROYED('write')\n  }\n  if (err) {\n    process.nextTick(cb, err)\n    errorOrDestroy(stream, err, true)\n    return err\n  }\n  state.pendingcb++\n  return writeOrBuffer(stream, state, chunk, encoding, cb)\n}\nWritable.prototype.write = function (chunk, encoding, cb) {\n  return _write(this, chunk, encoding, cb) === true\n}\nWritable.prototype.cork = function () {\n  this._writableState.corked++\n}\nWritable.prototype.uncork = function () {\n  const state = this._writableState\n  if (state.corked) {\n    state.corked--\n    if (!state.writing) clearBuffer(this, state)\n  }\n}\nWritable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {\n  // node::ParseEncoding() requires lower case.\n  if (typeof encoding === 'string') encoding = StringPrototypeToLowerCase(encoding)\n  if (!Buffer.isEncoding(encoding)) throw new ERR_UNKNOWN_ENCODING(encoding)\n  this._writableState.defaultEncoding = encoding\n  return this\n}\n\n// If we're already writing something, then just put this\n// in the queue, and wait our turn.  Otherwise, call _write\n// If we return false, then we need a drain event, so set that flag.\nfunction writeOrBuffer(stream, state, chunk, encoding, callback) {\n  const len = state.objectMode ? 1 : chunk.length\n  state.length += len\n\n  // stream._write resets state.length\n  const ret = state.length < state.highWaterMark\n  // We must ensure that previous needDrain will not be reset to false.\n  if (!ret) state.needDrain = true\n  if (state.writing || state.corked || state.errored || !state.constructed) {\n    state.buffered.push({\n      chunk,\n      encoding,\n      callback\n    })\n    if (state.allBuffers && encoding !== 'buffer') {\n      state.allBuffers = false\n    }\n    if (state.allNoop && callback !== nop) {\n      state.allNoop = false\n    }\n  } else {\n    state.writelen = len\n    state.writecb = callback\n    state.writing = true\n    state.sync = true\n    stream._write(chunk, encoding, state.onwrite)\n    state.sync = false\n  }\n\n  // Return false if errored or destroyed in order to break\n  // any synchronous while(stream.write(data)) loops.\n  return ret && !state.errored && !state.destroyed\n}\nfunction doWrite(stream, state, writev, len, chunk, encoding, cb) {\n  state.writelen = len\n  state.writecb = cb\n  state.writing = true\n  state.sync = true\n  if (state.destroyed) state.onwrite(new ERR_STREAM_DESTROYED('write'))\n  else if (writev) stream._writev(chunk, state.onwrite)\n  else stream._write(chunk, encoding, state.onwrite)\n  state.sync = false\n}\nfunction onwriteError(stream, state, er, cb) {\n  --state.pendingcb\n  cb(er)\n  // Ensure callbacks are invoked even when autoDestroy is\n  // not enabled. Passing `er` here doesn't make sense since\n  // it's related to one specific write, not to the buffered\n  // writes.\n  errorBuffer(state)\n  // This can emit error, but error must always follow cb.\n  errorOrDestroy(stream, er)\n}\nfunction onwrite(stream, er) {\n  const state = stream._writableState\n  const sync = state.sync\n  const cb = state.writecb\n  if (typeof cb !== 'function') {\n    errorOrDestroy(stream, new ERR_MULTIPLE_CALLBACK())\n    return\n  }\n  state.writing = false\n  state.writecb = null\n  state.length -= state.writelen\n  state.writelen = 0\n  if (er) {\n    // Avoid V8 leak, https://github.com/nodejs/node/pull/34103#issuecomment-652002364\n    er.stack // eslint-disable-line no-unused-expressions\n\n    if (!state.errored) {\n      state.errored = er\n    }\n\n    // In case of duplex streams we need to notify the readable side of the\n    // error.\n    if (stream._readableState && !stream._readableState.errored) {\n      stream._readableState.errored = er\n    }\n    if (sync) {\n      process.nextTick(onwriteError, stream, state, er, cb)\n    } else {\n      onwriteError(stream, state, er, cb)\n    }\n  } else {\n    if (state.buffered.length > state.bufferedIndex) {\n      clearBuffer(stream, state)\n    }\n    if (sync) {\n      // It is a common case that the callback passed to .write() is always\n      // the same. In that case, we do not schedule a new nextTick(), but\n      // rather just increase a counter, to improve performance and avoid\n      // memory allocations.\n      if (state.afterWriteTickInfo !== null && state.afterWriteTickInfo.cb === cb) {\n        state.afterWriteTickInfo.count++\n      } else {\n        state.afterWriteTickInfo = {\n          count: 1,\n          cb,\n          stream,\n          state\n        }\n        process.nextTick(afterWriteTick, state.afterWriteTickInfo)\n      }\n    } else {\n      afterWrite(stream, state, 1, cb)\n    }\n  }\n}\nfunction afterWriteTick({ stream, state, count, cb }) {\n  state.afterWriteTickInfo = null\n  return afterWrite(stream, state, count, cb)\n}\nfunction afterWrite(stream, state, count, cb) {\n  const needDrain = !state.ending && !stream.destroyed && state.length === 0 && state.needDrain\n  if (needDrain) {\n    state.needDrain = false\n    stream.emit('drain')\n  }\n  while (count-- > 0) {\n    state.pendingcb--\n    cb()\n  }\n  if (state.destroyed) {\n    errorBuffer(state)\n  }\n  finishMaybe(stream, state)\n}\n\n// If there's something in the buffer waiting, then invoke callbacks.\nfunction errorBuffer(state) {\n  if (state.writing) {\n    return\n  }\n  for (let n = state.bufferedIndex; n < state.buffered.length; ++n) {\n    var _state$errored\n    const { chunk, callback } = state.buffered[n]\n    const len = state.objectMode ? 1 : chunk.length\n    state.length -= len\n    callback(\n      (_state$errored = state.errored) !== null && _state$errored !== undefined\n        ? _state$errored\n        : new ERR_STREAM_DESTROYED('write')\n    )\n  }\n  const onfinishCallbacks = state[kOnFinished].splice(0)\n  for (let i = 0; i < onfinishCallbacks.length; i++) {\n    var _state$errored2\n    onfinishCallbacks[i](\n      (_state$errored2 = state.errored) !== null && _state$errored2 !== undefined\n        ? _state$errored2\n        : new ERR_STREAM_DESTROYED('end')\n    )\n  }\n  resetBuffer(state)\n}\n\n// If there's something in the buffer waiting, then process it.\nfunction clearBuffer(stream, state) {\n  if (state.corked || state.bufferProcessing || state.destroyed || !state.constructed) {\n    return\n  }\n  const { buffered, bufferedIndex, objectMode } = state\n  const bufferedLength = buffered.length - bufferedIndex\n  if (!bufferedLength) {\n    return\n  }\n  let i = bufferedIndex\n  state.bufferProcessing = true\n  if (bufferedLength > 1 && stream._writev) {\n    state.pendingcb -= bufferedLength - 1\n    const callback = state.allNoop\n      ? nop\n      : (err) => {\n          for (let n = i; n < buffered.length; ++n) {\n            buffered[n].callback(err)\n          }\n        }\n    // Make a copy of `buffered` if it's going to be used by `callback` above,\n    // since `doWrite` will mutate the array.\n    const chunks = state.allNoop && i === 0 ? buffered : ArrayPrototypeSlice(buffered, i)\n    chunks.allBuffers = state.allBuffers\n    doWrite(stream, state, true, state.length, chunks, '', callback)\n    resetBuffer(state)\n  } else {\n    do {\n      const { chunk, encoding, callback } = buffered[i]\n      buffered[i++] = null\n      const len = objectMode ? 1 : chunk.length\n      doWrite(stream, state, false, len, chunk, encoding, callback)\n    } while (i < buffered.length && !state.writing)\n    if (i === buffered.length) {\n      resetBuffer(state)\n    } else if (i > 256) {\n      buffered.splice(0, i)\n      state.bufferedIndex = 0\n    } else {\n      state.bufferedIndex = i\n    }\n  }\n  state.bufferProcessing = false\n}\nWritable.prototype._write = function (chunk, encoding, cb) {\n  if (this._writev) {\n    this._writev(\n      [\n        {\n          chunk,\n          encoding\n        }\n      ],\n      cb\n    )\n  } else {\n    throw new ERR_METHOD_NOT_IMPLEMENTED('_write()')\n  }\n}\nWritable.prototype._writev = null\nWritable.prototype.end = function (chunk, encoding, cb) {\n  const state = this._writableState\n  if (typeof chunk === 'function') {\n    cb = chunk\n    chunk = null\n    encoding = null\n  } else if (typeof encoding === 'function') {\n    cb = encoding\n    encoding = null\n  }\n  let err\n  if (chunk !== null && chunk !== undefined) {\n    const ret = _write(this, chunk, encoding)\n    if (ret instanceof Error) {\n      err = ret\n    }\n  }\n\n  // .end() fully uncorks.\n  if (state.corked) {\n    state.corked = 1\n    this.uncork()\n  }\n  if (err) {\n    // Do nothing...\n  } else if (!state.errored && !state.ending) {\n    // This is forgiving in terms of unnecessary calls to end() and can hide\n    // logic errors. However, usually such errors are harmless and causing a\n    // hard error can be disproportionately destructive. It is not always\n    // trivial for the user to determine whether end() needs to be called\n    // or not.\n\n    state.ending = true\n    finishMaybe(this, state, true)\n    state.ended = true\n  } else if (state.finished) {\n    err = new ERR_STREAM_ALREADY_FINISHED('end')\n  } else if (state.destroyed) {\n    err = new ERR_STREAM_DESTROYED('end')\n  }\n  if (typeof cb === 'function') {\n    if (err || state.finished) {\n      process.nextTick(cb, err)\n    } else {\n      state[kOnFinished].push(cb)\n    }\n  }\n  return this\n}\nfunction needFinish(state) {\n  return (\n    state.ending &&\n    !state.destroyed &&\n    state.constructed &&\n    state.length === 0 &&\n    !state.errored &&\n    state.buffered.length === 0 &&\n    !state.finished &&\n    !state.writing &&\n    !state.errorEmitted &&\n    !state.closeEmitted\n  )\n}\nfunction callFinal(stream, state) {\n  let called = false\n  function onFinish(err) {\n    if (called) {\n      errorOrDestroy(stream, err !== null && err !== undefined ? err : ERR_MULTIPLE_CALLBACK())\n      return\n    }\n    called = true\n    state.pendingcb--\n    if (err) {\n      const onfinishCallbacks = state[kOnFinished].splice(0)\n      for (let i = 0; i < onfinishCallbacks.length; i++) {\n        onfinishCallbacks[i](err)\n      }\n      errorOrDestroy(stream, err, state.sync)\n    } else if (needFinish(state)) {\n      state.prefinished = true\n      stream.emit('prefinish')\n      // Backwards compat. Don't check state.sync here.\n      // Some streams assume 'finish' will be emitted\n      // asynchronously relative to _final callback.\n      state.pendingcb++\n      process.nextTick(finish, stream, state)\n    }\n  }\n  state.sync = true\n  state.pendingcb++\n  try {\n    stream._final(onFinish)\n  } catch (err) {\n    onFinish(err)\n  }\n  state.sync = false\n}\nfunction prefinish(stream, state) {\n  if (!state.prefinished && !state.finalCalled) {\n    if (typeof stream._final === 'function' && !state.destroyed) {\n      state.finalCalled = true\n      callFinal(stream, state)\n    } else {\n      state.prefinished = true\n      stream.emit('prefinish')\n    }\n  }\n}\nfunction finishMaybe(stream, state, sync) {\n  if (needFinish(state)) {\n    prefinish(stream, state)\n    if (state.pendingcb === 0) {\n      if (sync) {\n        state.pendingcb++\n        process.nextTick(\n          (stream, state) => {\n            if (needFinish(state)) {\n              finish(stream, state)\n            } else {\n              state.pendingcb--\n            }\n          },\n          stream,\n          state\n        )\n      } else if (needFinish(state)) {\n        state.pendingcb++\n        finish(stream, state)\n      }\n    }\n  }\n}\nfunction finish(stream, state) {\n  state.pendingcb--\n  state.finished = true\n  const onfinishCallbacks = state[kOnFinished].splice(0)\n  for (let i = 0; i < onfinishCallbacks.length; i++) {\n    onfinishCallbacks[i]()\n  }\n  stream.emit('finish')\n  if (state.autoDestroy) {\n    // In case of duplex streams we need a way to detect\n    // if the readable side is ready for autoDestroy as well.\n    const rState = stream._readableState\n    const autoDestroy =\n      !rState ||\n      (rState.autoDestroy &&\n        // We don't expect the readable to ever 'end'\n        // if readable is explicitly set to false.\n        (rState.endEmitted || rState.readable === false))\n    if (autoDestroy) {\n      stream.destroy()\n    }\n  }\n}\nObjectDefineProperties(Writable.prototype, {\n  closed: {\n    __proto__: null,\n    get() {\n      return this._writableState ? this._writableState.closed : false\n    }\n  },\n  destroyed: {\n    __proto__: null,\n    get() {\n      return this._writableState ? this._writableState.destroyed : false\n    },\n    set(value) {\n      // Backward compatibility, the user is explicitly managing destroyed.\n      if (this._writableState) {\n        this._writableState.destroyed = value\n      }\n    }\n  },\n  writable: {\n    __proto__: null,\n    get() {\n      const w = this._writableState\n      // w.writable === false means that this is part of a Duplex stream\n      // where the writable side was disabled upon construction.\n      // Compat. The user might manually disable writable side through\n      // deprecated setter.\n      return !!w && w.writable !== false && !w.destroyed && !w.errored && !w.ending && !w.ended\n    },\n    set(val) {\n      // Backwards compatible.\n      if (this._writableState) {\n        this._writableState.writable = !!val\n      }\n    }\n  },\n  writableFinished: {\n    __proto__: null,\n    get() {\n      return this._writableState ? this._writableState.finished : false\n    }\n  },\n  writableObjectMode: {\n    __proto__: null,\n    get() {\n      return this._writableState ? this._writableState.objectMode : false\n    }\n  },\n  writableBuffer: {\n    __proto__: null,\n    get() {\n      return this._writableState && this._writableState.getBuffer()\n    }\n  },\n  writableEnded: {\n    __proto__: null,\n    get() {\n      return this._writableState ? this._writableState.ending : false\n    }\n  },\n  writableNeedDrain: {\n    __proto__: null,\n    get() {\n      const wState = this._writableState\n      if (!wState) return false\n      return !wState.destroyed && !wState.ending && wState.needDrain\n    }\n  },\n  writableHighWaterMark: {\n    __proto__: null,\n    get() {\n      return this._writableState && this._writableState.highWaterMark\n    }\n  },\n  writableCorked: {\n    __proto__: null,\n    get() {\n      return this._writableState ? this._writableState.corked : 0\n    }\n  },\n  writableLength: {\n    __proto__: null,\n    get() {\n      return this._writableState && this._writableState.length\n    }\n  },\n  errored: {\n    __proto__: null,\n    enumerable: false,\n    get() {\n      return this._writableState ? this._writableState.errored : null\n    }\n  },\n  writableAborted: {\n    __proto__: null,\n    enumerable: false,\n    get: function () {\n      return !!(\n        this._writableState.writable !== false &&\n        (this._writableState.destroyed || this._writableState.errored) &&\n        !this._writableState.finished\n      )\n    }\n  }\n})\nconst destroy = destroyImpl.destroy\nWritable.prototype.destroy = function (err, cb) {\n  const state = this._writableState\n\n  // Invoke pending callbacks.\n  if (!state.destroyed && (state.bufferedIndex < state.buffered.length || state[kOnFinished].length)) {\n    process.nextTick(errorBuffer, state)\n  }\n  destroy.call(this, err, cb)\n  return this\n}\nWritable.prototype._undestroy = destroyImpl.undestroy\nWritable.prototype._destroy = function (err, cb) {\n  cb(err)\n}\nWritable.prototype[EE.captureRejectionSymbol] = function (err) {\n  this.destroy(err)\n}\nlet webStreamsAdapters\n\n// Lazy to avoid circular references\nfunction lazyWebStreams() {\n  if (webStreamsAdapters === undefined) webStreamsAdapters = {}\n  return webStreamsAdapters\n}\nWritable.fromWeb = function (writableStream, options) {\n  return lazyWebStreams().newStreamWritableFromWritableStream(writableStream, options)\n}\nWritable.toWeb = function (streamWritable) {\n  return lazyWebStreams().newWritableStreamFromStreamWritable(streamWritable)\n}\n", "/* replacement start */\n\nconst process = require('process/')\n\n/* replacement end */\n\n;('use strict')\nconst bufferModule = require('buffer')\nconst {\n  isReadable,\n  isWritable,\n  isIterable,\n  isNodeStream,\n  isReadableNodeStream,\n  isWritableNodeStream,\n  isDuplexNodeStream\n} = require('./utils')\nconst eos = require('./end-of-stream')\nconst {\n  AbortError,\n  codes: { ERR_INVALID_ARG_TYPE, ERR_INVALID_RETURN_VALUE }\n} = require('../../ours/errors')\nconst { destroyer } = require('./destroy')\nconst Duplex = require('./duplex')\nconst Readable = require('./readable')\nconst { createDeferredPromise } = require('../../ours/util')\nconst from = require('./from')\nconst Blob = globalThis.Blob || bufferModule.Blob\nconst isBlob =\n  typeof Blob !== 'undefined'\n    ? function isBlob(b) {\n        return b instanceof Blob\n      }\n    : function isBlob(b) {\n        return false\n      }\nconst AbortController = globalThis.AbortController || require('abort-controller').AbortController\nconst { FunctionPrototypeCall } = require('../../ours/primordials')\n\n// This is needed for pre node 17.\nclass Duplexify extends Duplex {\n  constructor(options) {\n    super(options)\n\n    // https://github.com/nodejs/node/pull/34385\n\n    if ((options === null || options === undefined ? undefined : options.readable) === false) {\n      this._readableState.readable = false\n      this._readableState.ended = true\n      this._readableState.endEmitted = true\n    }\n    if ((options === null || options === undefined ? undefined : options.writable) === false) {\n      this._writableState.writable = false\n      this._writableState.ending = true\n      this._writableState.ended = true\n      this._writableState.finished = true\n    }\n  }\n}\nmodule.exports = function duplexify(body, name) {\n  if (isDuplexNodeStream(body)) {\n    return body\n  }\n  if (isReadableNodeStream(body)) {\n    return _duplexify({\n      readable: body\n    })\n  }\n  if (isWritableNodeStream(body)) {\n    return _duplexify({\n      writable: body\n    })\n  }\n  if (isNodeStream(body)) {\n    return _duplexify({\n      writable: false,\n      readable: false\n    })\n  }\n\n  // TODO: Webstreams\n  // if (isReadableStream(body)) {\n  //   return _duplexify({ readable: Readable.fromWeb(body) });\n  // }\n\n  // TODO: Webstreams\n  // if (isWritableStream(body)) {\n  //   return _duplexify({ writable: Writable.fromWeb(body) });\n  // }\n\n  if (typeof body === 'function') {\n    const { value, write, final, destroy } = fromAsyncGen(body)\n    if (isIterable(value)) {\n      return from(Duplexify, value, {\n        // TODO (ronag): highWaterMark?\n        objectMode: true,\n        write,\n        final,\n        destroy\n      })\n    }\n    const then = value === null || value === undefined ? undefined : value.then\n    if (typeof then === 'function') {\n      let d\n      const promise = FunctionPrototypeCall(\n        then,\n        value,\n        (val) => {\n          if (val != null) {\n            throw new ERR_INVALID_RETURN_VALUE('nully', 'body', val)\n          }\n        },\n        (err) => {\n          destroyer(d, err)\n        }\n      )\n      return (d = new Duplexify({\n        // TODO (ronag): highWaterMark?\n        objectMode: true,\n        readable: false,\n        write,\n        final(cb) {\n          final(async () => {\n            try {\n              await promise\n              process.nextTick(cb, null)\n            } catch (err) {\n              process.nextTick(cb, err)\n            }\n          })\n        },\n        destroy\n      }))\n    }\n    throw new ERR_INVALID_RETURN_VALUE('Iterable, AsyncIterable or AsyncFunction', name, value)\n  }\n  if (isBlob(body)) {\n    return duplexify(body.arrayBuffer())\n  }\n  if (isIterable(body)) {\n    return from(Duplexify, body, {\n      // TODO (ronag): highWaterMark?\n      objectMode: true,\n      writable: false\n    })\n  }\n\n  // TODO: Webstreams.\n  // if (\n  //   isReadableStream(body?.readable) &&\n  //   isWritableStream(body?.writable)\n  // ) {\n  //   return Duplexify.fromWeb(body);\n  // }\n\n  if (\n    typeof (body === null || body === undefined ? undefined : body.writable) === 'object' ||\n    typeof (body === null || body === undefined ? undefined : body.readable) === 'object'\n  ) {\n    const readable =\n      body !== null && body !== undefined && body.readable\n        ? isReadableNodeStream(body === null || body === undefined ? undefined : body.readable)\n          ? body === null || body === undefined\n            ? undefined\n            : body.readable\n          : duplexify(body.readable)\n        : undefined\n    const writable =\n      body !== null && body !== undefined && body.writable\n        ? isWritableNodeStream(body === null || body === undefined ? undefined : body.writable)\n          ? body === null || body === undefined\n            ? undefined\n            : body.writable\n          : duplexify(body.writable)\n        : undefined\n    return _duplexify({\n      readable,\n      writable\n    })\n  }\n  const then = body === null || body === undefined ? undefined : body.then\n  if (typeof then === 'function') {\n    let d\n    FunctionPrototypeCall(\n      then,\n      body,\n      (val) => {\n        if (val != null) {\n          d.push(val)\n        }\n        d.push(null)\n      },\n      (err) => {\n        destroyer(d, err)\n      }\n    )\n    return (d = new Duplexify({\n      objectMode: true,\n      writable: false,\n      read() {}\n    }))\n  }\n  throw new ERR_INVALID_ARG_TYPE(\n    name,\n    [\n      'Blob',\n      'ReadableStream',\n      'WritableStream',\n      'Stream',\n      'Iterable',\n      'AsyncIterable',\n      'Function',\n      '{ readable, writable } pair',\n      'Promise'\n    ],\n    body\n  )\n}\nfunction fromAsyncGen(fn) {\n  let { promise, resolve } = createDeferredPromise()\n  const ac = new AbortController()\n  const signal = ac.signal\n  const value = fn(\n    (async function* () {\n      while (true) {\n        const _promise = promise\n        promise = null\n        const { chunk, done, cb } = await _promise\n        process.nextTick(cb)\n        if (done) return\n        if (signal.aborted)\n          throw new AbortError(undefined, {\n            cause: signal.reason\n          })\n        ;({ promise, resolve } = createDeferredPromise())\n        yield chunk\n      }\n    })(),\n    {\n      signal\n    }\n  )\n  return {\n    value,\n    write(chunk, encoding, cb) {\n      const _resolve = resolve\n      resolve = null\n      _resolve({\n        chunk,\n        done: false,\n        cb\n      })\n    },\n    final(cb) {\n      const _resolve = resolve\n      resolve = null\n      _resolve({\n        done: true,\n        cb\n      })\n    },\n    destroy(err, cb) {\n      ac.abort()\n      cb(err)\n    }\n  }\n}\nfunction _duplexify(pair) {\n  const r = pair.readable && typeof pair.readable.read !== 'function' ? Readable.wrap(pair.readable) : pair.readable\n  const w = pair.writable\n  let readable = !!isReadable(r)\n  let writable = !!isWritable(w)\n  let ondrain\n  let onfinish\n  let onreadable\n  let onclose\n  let d\n  function onfinished(err) {\n    const cb = onclose\n    onclose = null\n    if (cb) {\n      cb(err)\n    } else if (err) {\n      d.destroy(err)\n    }\n  }\n\n  // TODO(ronag): Avoid double buffering.\n  // Implement Writable/Readable/Duplex traits.\n  // See, https://github.com/nodejs/node/pull/33515.\n  d = new Duplexify({\n    // TODO (ronag): highWaterMark?\n    readableObjectMode: !!(r !== null && r !== undefined && r.readableObjectMode),\n    writableObjectMode: !!(w !== null && w !== undefined && w.writableObjectMode),\n    readable,\n    writable\n  })\n  if (writable) {\n    eos(w, (err) => {\n      writable = false\n      if (err) {\n        destroyer(r, err)\n      }\n      onfinished(err)\n    })\n    d._write = function (chunk, encoding, callback) {\n      if (w.write(chunk, encoding)) {\n        callback()\n      } else {\n        ondrain = callback\n      }\n    }\n    d._final = function (callback) {\n      w.end()\n      onfinish = callback\n    }\n    w.on('drain', function () {\n      if (ondrain) {\n        const cb = ondrain\n        ondrain = null\n        cb()\n      }\n    })\n    w.on('finish', function () {\n      if (onfinish) {\n        const cb = onfinish\n        onfinish = null\n        cb()\n      }\n    })\n  }\n  if (readable) {\n    eos(r, (err) => {\n      readable = false\n      if (err) {\n        destroyer(r, err)\n      }\n      onfinished(err)\n    })\n    r.on('readable', function () {\n      if (onreadable) {\n        const cb = onreadable\n        onreadable = null\n        cb()\n      }\n    })\n    r.on('end', function () {\n      d.push(null)\n    })\n    d._read = function () {\n      while (true) {\n        const buf = r.read()\n        if (buf === null) {\n          onreadable = d._read\n          return\n        }\n        if (!d.push(buf)) {\n          return\n        }\n      }\n    }\n  }\n  d._destroy = function (err, callback) {\n    if (!err && onclose !== null) {\n      err = new AbortError()\n    }\n    onreadable = null\n    ondrain = null\n    onfinish = null\n    if (onclose === null) {\n      callback(err)\n    } else {\n      onclose = callback\n      destroyer(w, err)\n      destroyer(r, err)\n    }\n  }\n  return d\n}\n", "// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a duplex stream is just a stream that is both readable and writable.\n// Since JS doesn't have multiple prototype inheritance, this class\n// prototypically inherits from Readable, and then parasitically from\n// Writable.\n\n'use strict'\n\nconst {\n  ObjectDefineProperties,\n  ObjectGetOwnPropertyDescriptor,\n  ObjectKeys,\n  ObjectSetPrototypeOf\n} = require('../../ours/primordials')\nmodule.exports = Duplex\nconst Readable = require('./readable')\nconst Writable = require('./writable')\nObjectSetPrototypeOf(Duplex.prototype, Readable.prototype)\nObjectSetPrototypeOf(Duplex, Readable)\n{\n  const keys = ObjectKeys(Writable.prototype)\n  // Allow the keys array to be GC'ed.\n  for (let i = 0; i < keys.length; i++) {\n    const method = keys[i]\n    if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method]\n  }\n}\nfunction Duplex(options) {\n  if (!(this instanceof Duplex)) return new Duplex(options)\n  Readable.call(this, options)\n  Writable.call(this, options)\n  if (options) {\n    this.allowHalfOpen = options.allowHalfOpen !== false\n    if (options.readable === false) {\n      this._readableState.readable = false\n      this._readableState.ended = true\n      this._readableState.endEmitted = true\n    }\n    if (options.writable === false) {\n      this._writableState.writable = false\n      this._writableState.ending = true\n      this._writableState.ended = true\n      this._writableState.finished = true\n    }\n  } else {\n    this.allowHalfOpen = true\n  }\n}\nObjectDefineProperties(Duplex.prototype, {\n  writable: {\n    __proto__: null,\n    ...ObjectGetOwnPropertyDescriptor(Writable.prototype, 'writable')\n  },\n  writableHighWaterMark: {\n    __proto__: null,\n    ...ObjectGetOwnPropertyDescriptor(Writable.prototype, 'writableHighWaterMark')\n  },\n  writableObjectMode: {\n    __proto__: null,\n    ...ObjectGetOwnPropertyDescriptor(Writable.prototype, 'writableObjectMode')\n  },\n  writableBuffer: {\n    __proto__: null,\n    ...ObjectGetOwnPropertyDescriptor(Writable.prototype, 'writableBuffer')\n  },\n  writableLength: {\n    __proto__: null,\n    ...ObjectGetOwnPropertyDescriptor(Writable.prototype, 'writableLength')\n  },\n  writableFinished: {\n    __proto__: null,\n    ...ObjectGetOwnPropertyDescriptor(Writable.prototype, 'writableFinished')\n  },\n  writableCorked: {\n    __proto__: null,\n    ...ObjectGetOwnPropertyDescriptor(Writable.prototype, 'writableCorked')\n  },\n  writableEnded: {\n    __proto__: null,\n    ...ObjectGetOwnPropertyDescriptor(Writable.prototype, 'writableEnded')\n  },\n  writableNeedDrain: {\n    __proto__: null,\n    ...ObjectGetOwnPropertyDescriptor(Writable.prototype, 'writableNeedDrain')\n  },\n  destroyed: {\n    __proto__: null,\n    get() {\n      if (this._readableState === undefined || this._writableState === undefined) {\n        return false\n      }\n      return this._readableState.destroyed && this._writableState.destroyed\n    },\n    set(value) {\n      // Backward compatibility, the user is explicitly\n      // managing destroyed.\n      if (this._readableState && this._writableState) {\n        this._readableState.destroyed = value\n        this._writableState.destroyed = value\n      }\n    }\n  }\n})\nlet webStreamsAdapters\n\n// Lazy to avoid circular references\nfunction lazyWebStreams() {\n  if (webStreamsAdapters === undefined) webStreamsAdapters = {}\n  return webStreamsAdapters\n}\nDuplex.fromWeb = function (pair, options) {\n  return lazyWebStreams().newStreamDuplexFromReadableWritablePair(pair, options)\n}\nDuplex.toWeb = function (duplex) {\n  return lazyWebStreams().newReadableWritablePairFromDuplex(duplex)\n}\nlet duplexify\nDuplex.from = function (body) {\n  if (!duplexify) {\n    duplexify = require('./duplexify')\n  }\n  return duplexify(body, 'body')\n}\n", "// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a transform stream is a readable/writable stream where you do\n// something with the data.  Sometimes it's called a \"filter\",\n// but that's not a great name for it, since that implies a thing where\n// some bits pass through, and others are simply ignored.  (That would\n// be a valid example of a transform, of course.)\n//\n// While the output is causally related to the input, it's not a\n// necessarily symmetric or synchronous transformation.  For example,\n// a zlib stream might take multiple plain-text writes(), and then\n// emit a single compressed chunk some time in the future.\n//\n// Here's how this works:\n//\n// The Transform stream has all the aspects of the readable and writable\n// stream classes.  When you write(chunk), that calls _write(chunk,cb)\n// internally, and returns false if there's a lot of pending writes\n// buffered up.  When you call read(), that calls _read(n) until\n// there's enough pending readable data buffered up.\n//\n// In a transform stream, the written data is placed in a buffer.  When\n// _read(n) is called, it transforms the queued up data, calling the\n// buffered _write cb's as it consumes chunks.  If consuming a single\n// written chunk would result in multiple output chunks, then the first\n// outputted bit calls the readcb, and subsequent chunks just go into\n// the read buffer, and will cause it to emit 'readable' if necessary.\n//\n// This way, back-pressure is actually determined by the reading side,\n// since _read has to be called to start processing a new chunk.  However,\n// a pathological inflate type of transform can cause excessive buffering\n// here.  For example, imagine a stream where every byte of input is\n// interpreted as an integer from 0-255, and then results in that many\n// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in\n// 1kb of data being output.  In this case, you could write a very small\n// amount of input, and end up with a very large amount of output.  In\n// such a pathological inflating mechanism, there'd be no way to tell\n// the system to stop doing the transform.  A single 4MB write could\n// cause the system to run out of memory.\n//\n// However, even in such a pathological case, only a single written chunk\n// would be consumed, and then the rest would wait (un-transformed) until\n// the results of the previous transformed chunk were consumed.\n\n'use strict'\n\nconst { ObjectSetPrototypeOf, Symbol } = require('../../ours/primordials')\nmodule.exports = Transform\nconst { ERR_METHOD_NOT_IMPLEMENTED } = require('../../ours/errors').codes\nconst Duplex = require('./duplex')\nconst { getHighWaterMark } = require('./state')\nObjectSetPrototypeOf(Transform.prototype, Duplex.prototype)\nObjectSetPrototypeOf(Transform, Duplex)\nconst kCallback = Symbol('kCallback')\nfunction Transform(options) {\n  if (!(this instanceof Transform)) return new Transform(options)\n\n  // TODO (ronag): This should preferably always be\n  // applied but would be semver-major. Or even better;\n  // make Transform a Readable with the Writable interface.\n  const readableHighWaterMark = options ? getHighWaterMark(this, options, 'readableHighWaterMark', true) : null\n  if (readableHighWaterMark === 0) {\n    // A Duplex will buffer both on the writable and readable side while\n    // a Transform just wants to buffer hwm number of elements. To avoid\n    // buffering twice we disable buffering on the writable side.\n    options = {\n      ...options,\n      highWaterMark: null,\n      readableHighWaterMark,\n      // TODO (ronag): 0 is not optimal since we have\n      // a \"bug\" where we check needDrain before calling _write and not after.\n      // Refs: https://github.com/nodejs/node/pull/32887\n      // Refs: https://github.com/nodejs/node/pull/35941\n      writableHighWaterMark: options.writableHighWaterMark || 0\n    }\n  }\n  Duplex.call(this, options)\n\n  // We have implemented the _read method, and done the other things\n  // that Readable wants before the first _read call, so unset the\n  // sync guard flag.\n  this._readableState.sync = false\n  this[kCallback] = null\n  if (options) {\n    if (typeof options.transform === 'function') this._transform = options.transform\n    if (typeof options.flush === 'function') this._flush = options.flush\n  }\n\n  // When the writable side finishes, then flush out anything remaining.\n  // Backwards compat. Some Transform streams incorrectly implement _final\n  // instead of or in addition to _flush. By using 'prefinish' instead of\n  // implementing _final we continue supporting this unfortunate use case.\n  this.on('prefinish', prefinish)\n}\nfunction final(cb) {\n  if (typeof this._flush === 'function' && !this.destroyed) {\n    this._flush((er, data) => {\n      if (er) {\n        if (cb) {\n          cb(er)\n        } else {\n          this.destroy(er)\n        }\n        return\n      }\n      if (data != null) {\n        this.push(data)\n      }\n      this.push(null)\n      if (cb) {\n        cb()\n      }\n    })\n  } else {\n    this.push(null)\n    if (cb) {\n      cb()\n    }\n  }\n}\nfunction prefinish() {\n  if (this._final !== final) {\n    final.call(this)\n  }\n}\nTransform.prototype._final = final\nTransform.prototype._transform = function (chunk, encoding, callback) {\n  throw new ERR_METHOD_NOT_IMPLEMENTED('_transform()')\n}\nTransform.prototype._write = function (chunk, encoding, callback) {\n  const rState = this._readableState\n  const wState = this._writableState\n  const length = rState.length\n  this._transform(chunk, encoding, (err, val) => {\n    if (err) {\n      callback(err)\n      return\n    }\n    if (val != null) {\n      this.push(val)\n    }\n    if (\n      wState.ended ||\n      // Backwards compat.\n      length === rState.length ||\n      // Backwards compat.\n      rState.length < rState.highWaterMark\n    ) {\n      callback()\n    } else {\n      this[kCallback] = callback\n    }\n  })\n}\nTransform.prototype._read = function () {\n  if (this[kCallback]) {\n    const callback = this[kCallback]\n    this[kCallback] = null\n    callback()\n  }\n}\n", "// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a passthrough stream.\n// basically just the most minimal sort of Transform stream.\n// Every written chunk gets output as-is.\n\n'use strict'\n\nconst { ObjectSetPrototypeOf } = require('../../ours/primordials')\nmodule.exports = PassThrough\nconst Transform = require('./transform')\nObjectSetPrototypeOf(PassThrough.prototype, Transform.prototype)\nObjectSetPrototypeOf(PassThrough, Transform)\nfunction PassThrough(options) {\n  if (!(this instanceof PassThrough)) return new PassThrough(options)\n  Transform.call(this, options)\n}\nPassThrough.prototype._transform = function (chunk, encoding, cb) {\n  cb(null, chunk)\n}\n", "/* replacement start */\n\nconst process = require('process/')\n\n/* replacement end */\n// Ported from https://github.com/mafintosh/pump with\n// permission from the author, Mathias Buus (@mafintosh).\n\n;('use strict')\nconst { ArrayIsArray, Promise, SymbolAsyncIterator } = require('../../ours/primordials')\nconst eos = require('./end-of-stream')\nconst { once } = require('../../ours/util')\nconst destroyImpl = require('./destroy')\nconst Duplex = require('./duplex')\nconst {\n  aggregateTwoErrors,\n  codes: {\n    ERR_INVALID_ARG_TYPE,\n    ERR_INVALID_RETURN_VALUE,\n    ERR_MISSING_ARGS,\n    ERR_STREAM_DESTROYED,\n    ERR_STREAM_PREMATURE_CLOSE\n  },\n  AbortError\n} = require('../../ours/errors')\nconst { validateFunction, validateAbortSignal } = require('../validators')\nconst {\n  isIterable,\n  isReadable,\n  isReadableNodeStream,\n  isNodeStream,\n  isTransformStream,\n  isWebStream,\n  isReadableStream,\n  isReadableEnded\n} = require('./utils')\nconst AbortController = globalThis.AbortController || require('abort-controller').AbortController\nlet PassThrough\nlet Readable\nfunction destroyer(stream, reading, writing) {\n  let finished = false\n  stream.on('close', () => {\n    finished = true\n  })\n  const cleanup = eos(\n    stream,\n    {\n      readable: reading,\n      writable: writing\n    },\n    (err) => {\n      finished = !err\n    }\n  )\n  return {\n    destroy: (err) => {\n      if (finished) return\n      finished = true\n      destroyImpl.destroyer(stream, err || new ERR_STREAM_DESTROYED('pipe'))\n    },\n    cleanup\n  }\n}\nfunction popCallback(streams) {\n  // Streams should never be an empty array. It should always contain at least\n  // a single stream. Therefore optimize for the average case instead of\n  // checking for length === 0 as well.\n  validateFunction(streams[streams.length - 1], 'streams[stream.length - 1]')\n  return streams.pop()\n}\nfunction makeAsyncIterable(val) {\n  if (isIterable(val)) {\n    return val\n  } else if (isReadableNodeStream(val)) {\n    // Legacy streams are not Iterable.\n    return fromReadable(val)\n  }\n  throw new ERR_INVALID_ARG_TYPE('val', ['Readable', 'Iterable', 'AsyncIterable'], val)\n}\nasync function* fromReadable(val) {\n  if (!Readable) {\n    Readable = require('./readable')\n  }\n  yield* Readable.prototype[SymbolAsyncIterator].call(val)\n}\nasync function pumpToNode(iterable, writable, finish, { end }) {\n  let error\n  let onresolve = null\n  const resume = (err) => {\n    if (err) {\n      error = err\n    }\n    if (onresolve) {\n      const callback = onresolve\n      onresolve = null\n      callback()\n    }\n  }\n  const wait = () =>\n    new Promise((resolve, reject) => {\n      if (error) {\n        reject(error)\n      } else {\n        onresolve = () => {\n          if (error) {\n            reject(error)\n          } else {\n            resolve()\n          }\n        }\n      }\n    })\n  writable.on('drain', resume)\n  const cleanup = eos(\n    writable,\n    {\n      readable: false\n    },\n    resume\n  )\n  try {\n    if (writable.writableNeedDrain) {\n      await wait()\n    }\n    for await (const chunk of iterable) {\n      if (!writable.write(chunk)) {\n        await wait()\n      }\n    }\n    if (end) {\n      writable.end()\n    }\n    await wait()\n    finish()\n  } catch (err) {\n    finish(error !== err ? aggregateTwoErrors(error, err) : err)\n  } finally {\n    cleanup()\n    writable.off('drain', resume)\n  }\n}\nasync function pumpToWeb(readable, writable, finish, { end }) {\n  if (isTransformStream(writable)) {\n    writable = writable.writable\n  }\n  // https://streams.spec.whatwg.org/#example-manual-write-with-backpressure\n  const writer = writable.getWriter()\n  try {\n    for await (const chunk of readable) {\n      await writer.ready\n      writer.write(chunk).catch(() => {})\n    }\n    await writer.ready\n    if (end) {\n      await writer.close()\n    }\n    finish()\n  } catch (err) {\n    try {\n      await writer.abort(err)\n      finish(err)\n    } catch (err) {\n      finish(err)\n    }\n  }\n}\nfunction pipeline(...streams) {\n  return pipelineImpl(streams, once(popCallback(streams)))\n}\nfunction pipelineImpl(streams, callback, opts) {\n  if (streams.length === 1 && ArrayIsArray(streams[0])) {\n    streams = streams[0]\n  }\n  if (streams.length < 2) {\n    throw new ERR_MISSING_ARGS('streams')\n  }\n  const ac = new AbortController()\n  const signal = ac.signal\n  const outerSignal = opts === null || opts === undefined ? undefined : opts.signal\n\n  // Need to cleanup event listeners if last stream is readable\n  // https://github.com/nodejs/node/issues/35452\n  const lastStreamCleanup = []\n  validateAbortSignal(outerSignal, 'options.signal')\n  function abort() {\n    finishImpl(new AbortError())\n  }\n  outerSignal === null || outerSignal === undefined ? undefined : outerSignal.addEventListener('abort', abort)\n  let error\n  let value\n  const destroys = []\n  let finishCount = 0\n  function finish(err) {\n    finishImpl(err, --finishCount === 0)\n  }\n  function finishImpl(err, final) {\n    if (err && (!error || error.code === 'ERR_STREAM_PREMATURE_CLOSE')) {\n      error = err\n    }\n    if (!error && !final) {\n      return\n    }\n    while (destroys.length) {\n      destroys.shift()(error)\n    }\n    outerSignal === null || outerSignal === undefined ? undefined : outerSignal.removeEventListener('abort', abort)\n    ac.abort()\n    if (final) {\n      if (!error) {\n        lastStreamCleanup.forEach((fn) => fn())\n      }\n      process.nextTick(callback, error, value)\n    }\n  }\n  let ret\n  for (let i = 0; i < streams.length; i++) {\n    const stream = streams[i]\n    const reading = i < streams.length - 1\n    const writing = i > 0\n    const end = reading || (opts === null || opts === undefined ? undefined : opts.end) !== false\n    const isLastStream = i === streams.length - 1\n    if (isNodeStream(stream)) {\n      if (end) {\n        const { destroy, cleanup } = destroyer(stream, reading, writing)\n        destroys.push(destroy)\n        if (isReadable(stream) && isLastStream) {\n          lastStreamCleanup.push(cleanup)\n        }\n      }\n\n      // Catch stream errors that occur after pipe/pump has completed.\n      function onError(err) {\n        if (err && err.name !== 'AbortError' && err.code !== 'ERR_STREAM_PREMATURE_CLOSE') {\n          finish(err)\n        }\n      }\n      stream.on('error', onError)\n      if (isReadable(stream) && isLastStream) {\n        lastStreamCleanup.push(() => {\n          stream.removeListener('error', onError)\n        })\n      }\n    }\n    if (i === 0) {\n      if (typeof stream === 'function') {\n        ret = stream({\n          signal\n        })\n        if (!isIterable(ret)) {\n          throw new ERR_INVALID_RETURN_VALUE('Iterable, AsyncIterable or Stream', 'source', ret)\n        }\n      } else if (isIterable(stream) || isReadableNodeStream(stream) || isTransformStream(stream)) {\n        ret = stream\n      } else {\n        ret = Duplex.from(stream)\n      }\n    } else if (typeof stream === 'function') {\n      if (isTransformStream(ret)) {\n        var _ret\n        ret = makeAsyncIterable((_ret = ret) === null || _ret === undefined ? undefined : _ret.readable)\n      } else {\n        ret = makeAsyncIterable(ret)\n      }\n      ret = stream(ret, {\n        signal\n      })\n      if (reading) {\n        if (!isIterable(ret, true)) {\n          throw new ERR_INVALID_RETURN_VALUE('AsyncIterable', `transform[${i - 1}]`, ret)\n        }\n      } else {\n        var _ret2\n        if (!PassThrough) {\n          PassThrough = require('./passthrough')\n        }\n\n        // If the last argument to pipeline is not a stream\n        // we must create a proxy stream so that pipeline(...)\n        // always returns a stream which can be further\n        // composed through `.pipe(stream)`.\n\n        const pt = new PassThrough({\n          objectMode: true\n        })\n\n        // Handle Promises/A+ spec, `then` could be a getter that throws on\n        // second use.\n        const then = (_ret2 = ret) === null || _ret2 === undefined ? undefined : _ret2.then\n        if (typeof then === 'function') {\n          finishCount++\n          then.call(\n            ret,\n            (val) => {\n              value = val\n              if (val != null) {\n                pt.write(val)\n              }\n              if (end) {\n                pt.end()\n              }\n              process.nextTick(finish)\n            },\n            (err) => {\n              pt.destroy(err)\n              process.nextTick(finish, err)\n            }\n          )\n        } else if (isIterable(ret, true)) {\n          finishCount++\n          pumpToNode(ret, pt, finish, {\n            end\n          })\n        } else if (isReadableStream(ret) || isTransformStream(ret)) {\n          const toRead = ret.readable || ret\n          finishCount++\n          pumpToNode(toRead, pt, finish, {\n            end\n          })\n        } else {\n          throw new ERR_INVALID_RETURN_VALUE('AsyncIterable or Promise', 'destination', ret)\n        }\n        ret = pt\n        const { destroy, cleanup } = destroyer(ret, false, true)\n        destroys.push(destroy)\n        if (isLastStream) {\n          lastStreamCleanup.push(cleanup)\n        }\n      }\n    } else if (isNodeStream(stream)) {\n      if (isReadableNodeStream(ret)) {\n        finishCount += 2\n        const cleanup = pipe(ret, stream, finish, {\n          end\n        })\n        if (isReadable(stream) && isLastStream) {\n          lastStreamCleanup.push(cleanup)\n        }\n      } else if (isTransformStream(ret) || isReadableStream(ret)) {\n        const toRead = ret.readable || ret\n        finishCount++\n        pumpToNode(toRead, stream, finish, {\n          end\n        })\n      } else if (isIterable(ret)) {\n        finishCount++\n        pumpToNode(ret, stream, finish, {\n          end\n        })\n      } else {\n        throw new ERR_INVALID_ARG_TYPE(\n          'val',\n          ['Readable', 'Iterable', 'AsyncIterable', 'ReadableStream', 'TransformStream'],\n          ret\n        )\n      }\n      ret = stream\n    } else if (isWebStream(stream)) {\n      if (isReadableNodeStream(ret)) {\n        finishCount++\n        pumpToWeb(makeAsyncIterable(ret), stream, finish, {\n          end\n        })\n      } else if (isReadableStream(ret) || isIterable(ret)) {\n        finishCount++\n        pumpToWeb(ret, stream, finish, {\n          end\n        })\n      } else if (isTransformStream(ret)) {\n        finishCount++\n        pumpToWeb(ret.readable, stream, finish, {\n          end\n        })\n      } else {\n        throw new ERR_INVALID_ARG_TYPE(\n          'val',\n          ['Readable', 'Iterable', 'AsyncIterable', 'ReadableStream', 'TransformStream'],\n          ret\n        )\n      }\n      ret = stream\n    } else {\n      ret = Duplex.from(stream)\n    }\n  }\n  if (\n    (signal !== null && signal !== undefined && signal.aborted) ||\n    (outerSignal !== null && outerSignal !== undefined && outerSignal.aborted)\n  ) {\n    process.nextTick(abort)\n  }\n  return ret\n}\nfunction pipe(src, dst, finish, { end }) {\n  let ended = false\n  dst.on('close', () => {\n    if (!ended) {\n      // Finish if the destination closes before the source has completed.\n      finish(new ERR_STREAM_PREMATURE_CLOSE())\n    }\n  })\n  src.pipe(dst, {\n    end: false\n  }) // If end is true we already will have a listener to end dst.\n\n  if (end) {\n    // Compat. Before node v10.12.0 stdio used to throw an error so\n    // pipe() did/does not end() stdio destinations.\n    // Now they allow it but \"secretly\" don't close the underlying fd.\n\n    function endFn() {\n      ended = true\n      dst.end()\n    }\n    if (isReadableEnded(src)) {\n      // End the destination if the source has already ended.\n      process.nextTick(endFn)\n    } else {\n      src.once('end', endFn)\n    }\n  } else {\n    finish()\n  }\n  eos(\n    src,\n    {\n      readable: true,\n      writable: false\n    },\n    (err) => {\n      const rState = src._readableState\n      if (\n        err &&\n        err.code === 'ERR_STREAM_PREMATURE_CLOSE' &&\n        rState &&\n        rState.ended &&\n        !rState.errored &&\n        !rState.errorEmitted\n      ) {\n        // Some readable streams will emit 'close' before 'end'. However, since\n        // this is on the readable side 'end' should still be emitted if the\n        // stream has been ended and no error emitted. This should be allowed in\n        // favor of backwards compatibility. Since the stream is piped to a\n        // destination this should not result in any observable difference.\n        // We don't need to check if this is a writable premature close since\n        // eos will only fail with premature close on the reading side for\n        // duplex streams.\n        src.once('end', finish).once('error', finish)\n      } else {\n        finish(err)\n      }\n    }\n  )\n  return eos(\n    dst,\n    {\n      readable: false,\n      writable: true\n    },\n    finish\n  )\n}\nmodule.exports = {\n  pipelineImpl,\n  pipeline\n}\n", "'use strict'\n\nconst { pipeline } = require('./pipeline')\nconst Duplex = require('./duplex')\nconst { destroyer } = require('./destroy')\nconst {\n  isNodeStream,\n  isReadable,\n  isWritable,\n  isWebStream,\n  isTransformStream,\n  isWritableStream,\n  isReadableStream\n} = require('./utils')\nconst {\n  AbortError,\n  codes: { ERR_INVALID_ARG_VALUE, ERR_MISSING_ARGS }\n} = require('../../ours/errors')\nconst eos = require('./end-of-stream')\nmodule.exports = function compose(...streams) {\n  if (streams.length === 0) {\n    throw new ERR_MISSING_ARGS('streams')\n  }\n  if (streams.length === 1) {\n    return Duplex.from(streams[0])\n  }\n  const orgStreams = [...streams]\n  if (typeof streams[0] === 'function') {\n    streams[0] = Duplex.from(streams[0])\n  }\n  if (typeof streams[streams.length - 1] === 'function') {\n    const idx = streams.length - 1\n    streams[idx] = Duplex.from(streams[idx])\n  }\n  for (let n = 0; n < streams.length; ++n) {\n    if (!isNodeStream(streams[n]) && !isWebStream(streams[n])) {\n      // TODO(ronag): Add checks for non streams.\n      continue\n    }\n    if (\n      n < streams.length - 1 &&\n      !(isReadable(streams[n]) || isReadableStream(streams[n]) || isTransformStream(streams[n]))\n    ) {\n      throw new ERR_INVALID_ARG_VALUE(`streams[${n}]`, orgStreams[n], 'must be readable')\n    }\n    if (n > 0 && !(isWritable(streams[n]) || isWritableStream(streams[n]) || isTransformStream(streams[n]))) {\n      throw new ERR_INVALID_ARG_VALUE(`streams[${n}]`, orgStreams[n], 'must be writable')\n    }\n  }\n  let ondrain\n  let onfinish\n  let onreadable\n  let onclose\n  let d\n  function onfinished(err) {\n    const cb = onclose\n    onclose = null\n    if (cb) {\n      cb(err)\n    } else if (err) {\n      d.destroy(err)\n    } else if (!readable && !writable) {\n      d.destroy()\n    }\n  }\n  const head = streams[0]\n  const tail = pipeline(streams, onfinished)\n  const writable = !!(isWritable(head) || isWritableStream(head) || isTransformStream(head))\n  const readable = !!(isReadable(tail) || isReadableStream(tail) || isTransformStream(tail))\n\n  // TODO(ronag): Avoid double buffering.\n  // Implement Writable/Readable/Duplex traits.\n  // See, https://github.com/nodejs/node/pull/33515.\n  d = new Duplex({\n    // TODO (ronag): highWaterMark?\n    writableObjectMode: !!(head !== null && head !== undefined && head.writableObjectMode),\n    readableObjectMode: !!(tail !== null && tail !== undefined && tail.writableObjectMode),\n    writable,\n    readable\n  })\n  if (writable) {\n    if (isNodeStream(head)) {\n      d._write = function (chunk, encoding, callback) {\n        if (head.write(chunk, encoding)) {\n          callback()\n        } else {\n          ondrain = callback\n        }\n      }\n      d._final = function (callback) {\n        head.end()\n        onfinish = callback\n      }\n      head.on('drain', function () {\n        if (ondrain) {\n          const cb = ondrain\n          ondrain = null\n          cb()\n        }\n      })\n    } else if (isWebStream(head)) {\n      const writable = isTransformStream(head) ? head.writable : head\n      const writer = writable.getWriter()\n      d._write = async function (chunk, encoding, callback) {\n        try {\n          await writer.ready\n          writer.write(chunk).catch(() => {})\n          callback()\n        } catch (err) {\n          callback(err)\n        }\n      }\n      d._final = async function (callback) {\n        try {\n          await writer.ready\n          writer.close().catch(() => {})\n          onfinish = callback\n        } catch (err) {\n          callback(err)\n        }\n      }\n    }\n    const toRead = isTransformStream(tail) ? tail.readable : tail\n    eos(toRead, () => {\n      if (onfinish) {\n        const cb = onfinish\n        onfinish = null\n        cb()\n      }\n    })\n  }\n  if (readable) {\n    if (isNodeStream(tail)) {\n      tail.on('readable', function () {\n        if (onreadable) {\n          const cb = onreadable\n          onreadable = null\n          cb()\n        }\n      })\n      tail.on('end', function () {\n        d.push(null)\n      })\n      d._read = function () {\n        while (true) {\n          const buf = tail.read()\n          if (buf === null) {\n            onreadable = d._read\n            return\n          }\n          if (!d.push(buf)) {\n            return\n          }\n        }\n      }\n    } else if (isWebStream(tail)) {\n      const readable = isTransformStream(tail) ? tail.readable : tail\n      const reader = readable.getReader()\n      d._read = async function () {\n        while (true) {\n          try {\n            const { value, done } = await reader.read()\n            if (!d.push(value)) {\n              return\n            }\n            if (done) {\n              d.push(null)\n              return\n            }\n          } catch {\n            return\n          }\n        }\n      }\n    }\n  }\n  d._destroy = function (err, callback) {\n    if (!err && onclose !== null) {\n      err = new AbortError()\n    }\n    onreadable = null\n    ondrain = null\n    onfinish = null\n    if (onclose === null) {\n      callback(err)\n    } else {\n      onclose = callback\n      if (isNodeStream(tail)) {\n        destroyer(tail, err)\n      }\n    }\n  }\n  return d\n}\n", "'use strict'\n\nconst AbortController = globalThis.AbortController || require('abort-controller').AbortController\nconst {\n  codes: { ERR_INVALID_ARG_VALUE, ERR_INVALID_ARG_TYPE, ERR_MISSING_ARGS, ERR_OUT_OF_RANGE },\n  AbortError\n} = require('../../ours/errors')\nconst { validateAbortSignal, validateInteger, validateObject } = require('../validators')\nconst kWeakHandler = require('../../ours/primordials').Symbol('kWeak')\nconst { finished } = require('./end-of-stream')\nconst staticCompose = require('./compose')\nconst { addAbortSignalNoValidate } = require('./add-abort-signal')\nconst { isWritable, isNodeStream } = require('./utils')\nconst {\n  ArrayPrototypePush,\n  MathFloor,\n  Number,\n  NumberIsNaN,\n  Promise,\n  PromiseReject,\n  PromisePrototypeThen,\n  Symbol\n} = require('../../ours/primordials')\nconst kEmpty = Symbol('kEmpty')\nconst kEof = Symbol('kEof')\nfunction compose(stream, options) {\n  if (options != null) {\n    validateObject(options, 'options')\n  }\n  if ((options === null || options === undefined ? undefined : options.signal) != null) {\n    validateAbortSignal(options.signal, 'options.signal')\n  }\n  if (isNodeStream(stream) && !isWritable(stream)) {\n    throw new ERR_INVALID_ARG_VALUE('stream', stream, 'must be writable')\n  }\n  const composedStream = staticCompose(this, stream)\n  if (options !== null && options !== undefined && options.signal) {\n    // Not validating as we already validated before\n    addAbortSignalNoValidate(options.signal, composedStream)\n  }\n  return composedStream\n}\nfunction map(fn, options) {\n  if (typeof fn !== 'function') {\n    throw new ERR_INVALID_ARG_TYPE('fn', ['Function', 'AsyncFunction'], fn)\n  }\n  if (options != null) {\n    validateObject(options, 'options')\n  }\n  if ((options === null || options === undefined ? undefined : options.signal) != null) {\n    validateAbortSignal(options.signal, 'options.signal')\n  }\n  let concurrency = 1\n  if ((options === null || options === undefined ? undefined : options.concurrency) != null) {\n    concurrency = MathFloor(options.concurrency)\n  }\n  validateInteger(concurrency, 'concurrency', 1)\n  return async function* map() {\n    var _options$signal, _options$signal2\n    const ac = new AbortController()\n    const stream = this\n    const queue = []\n    const signal = ac.signal\n    const signalOpt = {\n      signal\n    }\n    const abort = () => ac.abort()\n    if (\n      options !== null &&\n      options !== undefined &&\n      (_options$signal = options.signal) !== null &&\n      _options$signal !== undefined &&\n      _options$signal.aborted\n    ) {\n      abort()\n    }\n    options === null || options === undefined\n      ? undefined\n      : (_options$signal2 = options.signal) === null || _options$signal2 === undefined\n      ? undefined\n      : _options$signal2.addEventListener('abort', abort)\n    let next\n    let resume\n    let done = false\n    function onDone() {\n      done = true\n    }\n    async function pump() {\n      try {\n        for await (let val of stream) {\n          var _val\n          if (done) {\n            return\n          }\n          if (signal.aborted) {\n            throw new AbortError()\n          }\n          try {\n            val = fn(val, signalOpt)\n          } catch (err) {\n            val = PromiseReject(err)\n          }\n          if (val === kEmpty) {\n            continue\n          }\n          if (typeof ((_val = val) === null || _val === undefined ? undefined : _val.catch) === 'function') {\n            val.catch(onDone)\n          }\n          queue.push(val)\n          if (next) {\n            next()\n            next = null\n          }\n          if (!done && queue.length && queue.length >= concurrency) {\n            await new Promise((resolve) => {\n              resume = resolve\n            })\n          }\n        }\n        queue.push(kEof)\n      } catch (err) {\n        const val = PromiseReject(err)\n        PromisePrototypeThen(val, undefined, onDone)\n        queue.push(val)\n      } finally {\n        var _options$signal3\n        done = true\n        if (next) {\n          next()\n          next = null\n        }\n        options === null || options === undefined\n          ? undefined\n          : (_options$signal3 = options.signal) === null || _options$signal3 === undefined\n          ? undefined\n          : _options$signal3.removeEventListener('abort', abort)\n      }\n    }\n    pump()\n    try {\n      while (true) {\n        while (queue.length > 0) {\n          const val = await queue[0]\n          if (val === kEof) {\n            return\n          }\n          if (signal.aborted) {\n            throw new AbortError()\n          }\n          if (val !== kEmpty) {\n            yield val\n          }\n          queue.shift()\n          if (resume) {\n            resume()\n            resume = null\n          }\n        }\n        await new Promise((resolve) => {\n          next = resolve\n        })\n      }\n    } finally {\n      ac.abort()\n      done = true\n      if (resume) {\n        resume()\n        resume = null\n      }\n    }\n  }.call(this)\n}\nfunction asIndexedPairs(options = undefined) {\n  if (options != null) {\n    validateObject(options, 'options')\n  }\n  if ((options === null || options === undefined ? undefined : options.signal) != null) {\n    validateAbortSignal(options.signal, 'options.signal')\n  }\n  return async function* asIndexedPairs() {\n    let index = 0\n    for await (const val of this) {\n      var _options$signal4\n      if (\n        options !== null &&\n        options !== undefined &&\n        (_options$signal4 = options.signal) !== null &&\n        _options$signal4 !== undefined &&\n        _options$signal4.aborted\n      ) {\n        throw new AbortError({\n          cause: options.signal.reason\n        })\n      }\n      yield [index++, val]\n    }\n  }.call(this)\n}\nasync function some(fn, options = undefined) {\n  for await (const unused of filter.call(this, fn, options)) {\n    return true\n  }\n  return false\n}\nasync function every(fn, options = undefined) {\n  if (typeof fn !== 'function') {\n    throw new ERR_INVALID_ARG_TYPE('fn', ['Function', 'AsyncFunction'], fn)\n  }\n  // https://en.wikipedia.org/wiki/De_Morgan%27s_laws\n  return !(await some.call(\n    this,\n    async (...args) => {\n      return !(await fn(...args))\n    },\n    options\n  ))\n}\nasync function find(fn, options) {\n  for await (const result of filter.call(this, fn, options)) {\n    return result\n  }\n  return undefined\n}\nasync function forEach(fn, options) {\n  if (typeof fn !== 'function') {\n    throw new ERR_INVALID_ARG_TYPE('fn', ['Function', 'AsyncFunction'], fn)\n  }\n  async function forEachFn(value, options) {\n    await fn(value, options)\n    return kEmpty\n  }\n  // eslint-disable-next-line no-unused-vars\n  for await (const unused of map.call(this, forEachFn, options));\n}\nfunction filter(fn, options) {\n  if (typeof fn !== 'function') {\n    throw new ERR_INVALID_ARG_TYPE('fn', ['Function', 'AsyncFunction'], fn)\n  }\n  async function filterFn(value, options) {\n    if (await fn(value, options)) {\n      return value\n    }\n    return kEmpty\n  }\n  return map.call(this, filterFn, options)\n}\n\n// Specific to provide better error to reduce since the argument is only\n// missing if the stream has no items in it - but the code is still appropriate\nclass ReduceAwareErrMissingArgs extends ERR_MISSING_ARGS {\n  constructor() {\n    super('reduce')\n    this.message = 'Reduce of an empty stream requires an initial value'\n  }\n}\nasync function reduce(reducer, initialValue, options) {\n  var _options$signal5\n  if (typeof reducer !== 'function') {\n    throw new ERR_INVALID_ARG_TYPE('reducer', ['Function', 'AsyncFunction'], reducer)\n  }\n  if (options != null) {\n    validateObject(options, 'options')\n  }\n  if ((options === null || options === undefined ? undefined : options.signal) != null) {\n    validateAbortSignal(options.signal, 'options.signal')\n  }\n  let hasInitialValue = arguments.length > 1\n  if (\n    options !== null &&\n    options !== undefined &&\n    (_options$signal5 = options.signal) !== null &&\n    _options$signal5 !== undefined &&\n    _options$signal5.aborted\n  ) {\n    const err = new AbortError(undefined, {\n      cause: options.signal.reason\n    })\n    this.once('error', () => {}) // The error is already propagated\n    await finished(this.destroy(err))\n    throw err\n  }\n  const ac = new AbortController()\n  const signal = ac.signal\n  if (options !== null && options !== undefined && options.signal) {\n    const opts = {\n      once: true,\n      [kWeakHandler]: this\n    }\n    options.signal.addEventListener('abort', () => ac.abort(), opts)\n  }\n  let gotAnyItemFromStream = false\n  try {\n    for await (const value of this) {\n      var _options$signal6\n      gotAnyItemFromStream = true\n      if (\n        options !== null &&\n        options !== undefined &&\n        (_options$signal6 = options.signal) !== null &&\n        _options$signal6 !== undefined &&\n        _options$signal6.aborted\n      ) {\n        throw new AbortError()\n      }\n      if (!hasInitialValue) {\n        initialValue = value\n        hasInitialValue = true\n      } else {\n        initialValue = await reducer(initialValue, value, {\n          signal\n        })\n      }\n    }\n    if (!gotAnyItemFromStream && !hasInitialValue) {\n      throw new ReduceAwareErrMissingArgs()\n    }\n  } finally {\n    ac.abort()\n  }\n  return initialValue\n}\nasync function toArray(options) {\n  if (options != null) {\n    validateObject(options, 'options')\n  }\n  if ((options === null || options === undefined ? undefined : options.signal) != null) {\n    validateAbortSignal(options.signal, 'options.signal')\n  }\n  const result = []\n  for await (const val of this) {\n    var _options$signal7\n    if (\n      options !== null &&\n      options !== undefined &&\n      (_options$signal7 = options.signal) !== null &&\n      _options$signal7 !== undefined &&\n      _options$signal7.aborted\n    ) {\n      throw new AbortError(undefined, {\n        cause: options.signal.reason\n      })\n    }\n    ArrayPrototypePush(result, val)\n  }\n  return result\n}\nfunction flatMap(fn, options) {\n  const values = map.call(this, fn, options)\n  return async function* flatMap() {\n    for await (const val of values) {\n      yield* val\n    }\n  }.call(this)\n}\nfunction toIntegerOrInfinity(number) {\n  // We coerce here to align with the spec\n  // https://github.com/tc39/proposal-iterator-helpers/issues/169\n  number = Number(number)\n  if (NumberIsNaN(number)) {\n    return 0\n  }\n  if (number < 0) {\n    throw new ERR_OUT_OF_RANGE('number', '>= 0', number)\n  }\n  return number\n}\nfunction drop(number, options = undefined) {\n  if (options != null) {\n    validateObject(options, 'options')\n  }\n  if ((options === null || options === undefined ? undefined : options.signal) != null) {\n    validateAbortSignal(options.signal, 'options.signal')\n  }\n  number = toIntegerOrInfinity(number)\n  return async function* drop() {\n    var _options$signal8\n    if (\n      options !== null &&\n      options !== undefined &&\n      (_options$signal8 = options.signal) !== null &&\n      _options$signal8 !== undefined &&\n      _options$signal8.aborted\n    ) {\n      throw new AbortError()\n    }\n    for await (const val of this) {\n      var _options$signal9\n      if (\n        options !== null &&\n        options !== undefined &&\n        (_options$signal9 = options.signal) !== null &&\n        _options$signal9 !== undefined &&\n        _options$signal9.aborted\n      ) {\n        throw new AbortError()\n      }\n      if (number-- <= 0) {\n        yield val\n      }\n    }\n  }.call(this)\n}\nfunction take(number, options = undefined) {\n  if (options != null) {\n    validateObject(options, 'options')\n  }\n  if ((options === null || options === undefined ? undefined : options.signal) != null) {\n    validateAbortSignal(options.signal, 'options.signal')\n  }\n  number = toIntegerOrInfinity(number)\n  return async function* take() {\n    var _options$signal10\n    if (\n      options !== null &&\n      options !== undefined &&\n      (_options$signal10 = options.signal) !== null &&\n      _options$signal10 !== undefined &&\n      _options$signal10.aborted\n    ) {\n      throw new AbortError()\n    }\n    for await (const val of this) {\n      var _options$signal11\n      if (\n        options !== null &&\n        options !== undefined &&\n        (_options$signal11 = options.signal) !== null &&\n        _options$signal11 !== undefined &&\n        _options$signal11.aborted\n      ) {\n        throw new AbortError()\n      }\n      if (number-- > 0) {\n        yield val\n      } else {\n        return\n      }\n    }\n  }.call(this)\n}\nmodule.exports.streamReturningOperators = {\n  asIndexedPairs,\n  drop,\n  filter,\n  flatMap,\n  map,\n  take,\n  compose\n}\nmodule.exports.promiseReturningOperators = {\n  every,\n  forEach,\n  reduce,\n  toArray,\n  some,\n  find\n}\n", "'use strict'\n\nconst { ArrayPrototypePop, Promise } = require('../ours/primordials')\nconst { isIterable, isNodeStream, isWebStream } = require('../internal/streams/utils')\nconst { pipelineImpl: pl } = require('../internal/streams/pipeline')\nconst { finished } = require('../internal/streams/end-of-stream')\nrequire('../../lib/stream.js')\nfunction pipeline(...streams) {\n  return new Promise((resolve, reject) => {\n    let signal\n    let end\n    const lastArg = streams[streams.length - 1]\n    if (\n      lastArg &&\n      typeof lastArg === 'object' &&\n      !isNodeStream(lastArg) &&\n      !isIterable(lastArg) &&\n      !isWebStream(lastArg)\n    ) {\n      const options = ArrayPrototypePop(streams)\n      signal = options.signal\n      end = options.end\n    }\n    pl(\n      streams,\n      (err, value) => {\n        if (err) {\n          reject(err)\n        } else {\n          resolve(value)\n        }\n      },\n      {\n        signal,\n        end\n      }\n    )\n  })\n}\nmodule.exports = {\n  finished,\n  pipeline\n}\n", "/* replacement start */\n\nconst { Buffer } = require('buffer')\n\n/* replacement end */\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n;('use strict')\nconst { ObjectDefineProperty, ObjectKeys, ReflectApply } = require('./ours/primordials')\nconst {\n  promisify: { custom: customPromisify }\n} = require('./ours/util')\nconst { streamReturningOperators, promiseReturningOperators } = require('./internal/streams/operators')\nconst {\n  codes: { ERR_ILLEGAL_CONSTRUCTOR }\n} = require('./ours/errors')\nconst compose = require('./internal/streams/compose')\nconst { pipeline } = require('./internal/streams/pipeline')\nconst { destroyer } = require('./internal/streams/destroy')\nconst eos = require('./internal/streams/end-of-stream')\nconst internalBuffer = {}\nconst promises = require('./stream/promises')\nconst utils = require('./internal/streams/utils')\nconst Stream = (module.exports = require('./internal/streams/legacy').Stream)\nStream.isDisturbed = utils.isDisturbed\nStream.isErrored = utils.isErrored\nStream.isReadable = utils.isReadable\nStream.Readable = require('./internal/streams/readable')\nfor (const key of ObjectKeys(streamReturningOperators)) {\n  const op = streamReturningOperators[key]\n  function fn(...args) {\n    if (new.target) {\n      throw ERR_ILLEGAL_CONSTRUCTOR()\n    }\n    return Stream.Readable.from(ReflectApply(op, this, args))\n  }\n  ObjectDefineProperty(fn, 'name', {\n    __proto__: null,\n    value: op.name\n  })\n  ObjectDefineProperty(fn, 'length', {\n    __proto__: null,\n    value: op.length\n  })\n  ObjectDefineProperty(Stream.Readable.prototype, key, {\n    __proto__: null,\n    value: fn,\n    enumerable: false,\n    configurable: true,\n    writable: true\n  })\n}\nfor (const key of ObjectKeys(promiseReturningOperators)) {\n  const op = promiseReturningOperators[key]\n  function fn(...args) {\n    if (new.target) {\n      throw ERR_ILLEGAL_CONSTRUCTOR()\n    }\n    return ReflectApply(op, this, args)\n  }\n  ObjectDefineProperty(fn, 'name', {\n    __proto__: null,\n    value: op.name\n  })\n  ObjectDefineProperty(fn, 'length', {\n    __proto__: null,\n    value: op.length\n  })\n  ObjectDefineProperty(Stream.Readable.prototype, key, {\n    __proto__: null,\n    value: fn,\n    enumerable: false,\n    configurable: true,\n    writable: true\n  })\n}\nStream.Writable = require('./internal/streams/writable')\nStream.Duplex = require('./internal/streams/duplex')\nStream.Transform = require('./internal/streams/transform')\nStream.PassThrough = require('./internal/streams/passthrough')\nStream.pipeline = pipeline\nconst { addAbortSignal } = require('./internal/streams/add-abort-signal')\nStream.addAbortSignal = addAbortSignal\nStream.finished = eos\nStream.destroy = destroyer\nStream.compose = compose\nObjectDefineProperty(Stream, 'promises', {\n  __proto__: null,\n  configurable: true,\n  enumerable: true,\n  get() {\n    return promises\n  }\n})\nObjectDefineProperty(pipeline, customPromisify, {\n  __proto__: null,\n  enumerable: true,\n  get() {\n    return promises.pipeline\n  }\n})\nObjectDefineProperty(eos, customPromisify, {\n  __proto__: null,\n  enumerable: true,\n  get() {\n    return promises.finished\n  }\n})\n\n// Backwards-compat with node 0.4.x\nStream.Stream = Stream\nStream._isUint8Array = function isUint8Array(value) {\n  return value instanceof Uint8Array\n}\nStream._uint8ArrayToBuffer = function _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk.buffer, chunk.byteOffset, chunk.byteLength)\n}\n", "'use strict'\n\nconst Stream = require('stream')\nif (Stream && process.env.READABLE_STREAM === 'disable') {\n  const promises = Stream.promises\n\n  // Explicit export naming is needed for ESM\n  module.exports._uint8ArrayToBuffer = Stream._uint8ArrayToBuffer\n  module.exports._isUint8Array = Stream._isUint8Array\n  module.exports.isDisturbed = Stream.isDisturbed\n  module.exports.isErrored = Stream.isErrored\n  module.exports.isReadable = Stream.isReadable\n  module.exports.Readable = Stream.Readable\n  module.exports.Writable = Stream.Writable\n  module.exports.Duplex = Stream.Duplex\n  module.exports.Transform = Stream.Transform\n  module.exports.PassThrough = Stream.PassThrough\n  module.exports.addAbortSignal = Stream.addAbortSignal\n  module.exports.finished = Stream.finished\n  module.exports.destroy = Stream.destroy\n  module.exports.pipeline = Stream.pipeline\n  module.exports.compose = Stream.compose\n  Object.defineProperty(Stream, 'promises', {\n    configurable: true,\n    enumerable: true,\n    get() {\n      return promises\n    }\n  })\n  module.exports.Stream = Stream.Stream\n} else {\n  const CustomStream = require('../stream')\n  const promises = require('../stream/promises')\n  const originalDestroy = CustomStream.Readable.destroy\n  module.exports = CustomStream.Readable\n\n  // Explicit export naming is needed for ESM\n  module.exports._uint8ArrayToBuffer = CustomStream._uint8ArrayToBuffer\n  module.exports._isUint8Array = CustomStream._isUint8Array\n  module.exports.isDisturbed = CustomStream.isDisturbed\n  module.exports.isErrored = CustomStream.isErrored\n  module.exports.isReadable = CustomStream.isReadable\n  module.exports.Readable = CustomStream.Readable\n  module.exports.Writable = CustomStream.Writable\n  module.exports.Duplex = CustomStream.Duplex\n  module.exports.Transform = CustomStream.Transform\n  module.exports.PassThrough = CustomStream.PassThrough\n  module.exports.addAbortSignal = CustomStream.addAbortSignal\n  module.exports.finished = CustomStream.finished\n  module.exports.destroy = CustomStream.destroy\n  module.exports.destroy = originalDestroy\n  module.exports.pipeline = CustomStream.pipeline\n  module.exports.compose = CustomStream.compose\n  Object.defineProperty(CustomStream, 'promises', {\n    configurable: true,\n    enumerable: true,\n    get() {\n      return promises\n    }\n  })\n  module.exports.Stream = CustomStream.Stream\n}\n\n// Allow default importing\nmodule.exports.default = module.exports\n", "// **N3Store** objects store N3 quads by graph in memory.\nimport { default as N3DataFactory, termToId, termFromId } from './N3DataFactory';\nimport { Readable } from 'readable-stream';\nimport namespaces from './IRIs';\nimport { isDefaultGraph } from './N3Util';\n\n// ## Constructor\nexport default class N3Store {\n  constructor(quads, options) {\n    // The number of quads is initially zero\n    this._size = 0;\n    // `_graphs` contains subject, predicate, and object indexes per graph\n    this._graphs = Object.create(null);\n    // `_ids` maps entities such as `http://xmlns.com/foaf/0.1/name` to numbers,\n    // saving memory by using only numbers as keys in `_graphs`\n    this._id = 0;\n    this._ids = Object.create(null);\n    this._entities = Object.create(null); // inverse of `_ids`\n    // `_blankNodeIndex` is the index of the last automatically named blank node\n    this._blankNodeIndex = 0;\n\n    // Shift parameters if `quads` is not given\n    if (!options && quads && !quads[0])\n      options = quads, quads = null;\n    options = options || {};\n    this._factory = options.factory || N3DataFactory;\n\n    // Add quads if passed\n    if (quads)\n      this.addQuads(quads);\n  }\n\n  _termFromId(id, factory) {\n    if (id[0] === '.') {\n      const entities = this._entities;\n      const terms = id.split('.');\n      const q = this._factory.quad(\n        this._termFromId(entities[terms[1]]),\n        this._termFromId(entities[terms[2]]),\n        this._termFromId(entities[terms[3]]),\n        terms[4] && this._termFromId(entities[terms[4]])\n      );\n      return q;\n    }\n    return termFromId(id, factory);\n  }\n\n  _termToNumericId(term) {\n    if (term.termType === 'Quad') {\n      const s = this._termToNumericId(term.subject),\n          p = this._termToNumericId(term.predicate),\n          o = this._termToNumericId(term.object);\n      let g;\n\n      return s && p && o && (isDefaultGraph(term.graph) || (g = this._termToNumericId(term.graph))) &&\n        this._ids[g ? `.${s}.${p}.${o}.${g}` : `.${s}.${p}.${o}`];\n    }\n    return this._ids[termToId(term)];\n  }\n\n  _termToNewNumericId(term) {\n    // This assumes that no graph term is present - we may wish to error if there is one\n    const str = term && term.termType === 'Quad' ?\n      `.${this._termToNewNumericId(term.subject)}.${this._termToNewNumericId(term.predicate)}.${this._termToNewNumericId(term.object)}${\n        isDefaultGraph(term.graph) ? '' : `.${this._termToNewNumericId(term.graph)}`\n      }`\n      : termToId(term);\n\n    return this._ids[str] || (this._ids[this._entities[++this._id] = str] = this._id);\n  }\n\n  // ## Public properties\n\n  // ### `size` returns the number of quads in the store\n  get size() {\n    // Return the quad count if if was cached\n    let size = this._size;\n    if (size !== null)\n      return size;\n\n    // Calculate the number of quads by counting to the deepest level\n    size = 0;\n    const graphs = this._graphs;\n    let subjects, subject;\n    for (const graphKey in graphs)\n      for (const subjectKey in (subjects = graphs[graphKey].subjects))\n        for (const predicateKey in (subject = subjects[subjectKey]))\n          size += Object.keys(subject[predicateKey]).length;\n    return this._size = size;\n  }\n\n  // ## Private methods\n\n  // ### `_addToIndex` adds a quad to a three-layered index.\n  // Returns if the index has changed, if the entry did not already exist.\n  _addToIndex(index0, key0, key1, key2) {\n    // Create layers as necessary\n    const index1 = index0[key0] || (index0[key0] = {});\n    const index2 = index1[key1] || (index1[key1] = {});\n    // Setting the key to _any_ value signals the presence of the quad\n    const existed = key2 in index2;\n    if (!existed)\n      index2[key2] = null;\n    return !existed;\n  }\n\n  // ### `_removeFromIndex` removes a quad from a three-layered index\n  _removeFromIndex(index0, key0, key1, key2) {\n    // Remove the quad from the index\n    const index1 = index0[key0], index2 = index1[key1];\n    delete index2[key2];\n\n    // Remove intermediary index layers if they are empty\n    for (const key in index2) return;\n    delete index1[key1];\n    for (const key in index1) return;\n    delete index0[key0];\n  }\n\n  // ### `_findInIndex` finds a set of quads in a three-layered index.\n  // The index base is `index0` and the keys at each level are `key0`, `key1`, and `key2`.\n  // Any of these keys can be undefined, which is interpreted as a wildcard.\n  // `name0`, `name1`, and `name2` are the names of the keys at each level,\n  // used when reconstructing the resulting quad\n  // (for instance: _subject_, _predicate_, and _object_).\n  // Finally, `graphId` will be the graph of the created quads.\n  *_findInIndex(index0, key0, key1, key2, name0, name1, name2, graphId) {\n    let tmp, index1, index2;\n    const entityKeys = this._entities;\n    const graph = this._termFromId(graphId, this._factory);\n    const parts = { subject: null, predicate: null, object: null };\n\n    // If a key is specified, use only that part of index 0.\n    if (key0) (tmp = index0, index0 = {})[key0] = tmp[key0];\n    for (const value0 in index0) {\n      if (index1 = index0[value0]) {\n        parts[name0] = this._termFromId(entityKeys[value0], this._factory);\n        // If a key is specified, use only that part of index 1.\n        if (key1) (tmp = index1, index1 = {})[key1] = tmp[key1];\n        for (const value1 in index1) {\n          if (index2 = index1[value1]) {\n            parts[name1] = this._termFromId(entityKeys[value1], this._factory);\n            // If a key is specified, use only that part of index 2, if it exists.\n            const values = key2 ? (key2 in index2 ? [key2] : []) : Object.keys(index2);\n            // Create quads for all items found in index 2.\n            for (let l = 0; l < values.length; l++) {\n              parts[name2] = this._termFromId(entityKeys[values[l]], this._factory);\n              yield this._factory.quad(parts.subject, parts.predicate, parts.object, graph);\n            }\n          }\n        }\n      }\n    }\n  }\n\n  // ### `_loop` executes the callback on all keys of index 0\n  _loop(index0, callback) {\n    for (const key0 in index0)\n      callback(key0);\n  }\n\n  // ### `_loopByKey0` executes the callback on all keys of a certain entry in index 0\n  _loopByKey0(index0, key0, callback) {\n    let index1, key1;\n    if (index1 = index0[key0]) {\n      for (key1 in index1)\n        callback(key1);\n    }\n  }\n\n  // ### `_loopByKey1` executes the callback on given keys of all entries in index 0\n  _loopByKey1(index0, key1, callback) {\n    let key0, index1;\n    for (key0 in index0) {\n      index1 = index0[key0];\n      if (index1[key1])\n        callback(key0);\n    }\n  }\n\n  // ### `_loopBy2Keys` executes the callback on given keys of certain entries in index 2\n  _loopBy2Keys(index0, key0, key1, callback) {\n    let index1, index2, key2;\n    if ((index1 = index0[key0]) && (index2 = index1[key1])) {\n      for (key2 in index2)\n        callback(key2);\n    }\n  }\n\n  // ### `_countInIndex` counts matching quads in a three-layered index.\n  // The index base is `index0` and the keys at each level are `key0`, `key1`, and `key2`.\n  // Any of these keys can be undefined, which is interpreted as a wildcard.\n  _countInIndex(index0, key0, key1, key2) {\n    let count = 0, tmp, index1, index2;\n\n    // If a key is specified, count only that part of index 0\n    if (key0) (tmp = index0, index0 = {})[key0] = tmp[key0];\n    for (const value0 in index0) {\n      if (index1 = index0[value0]) {\n        // If a key is specified, count only that part of index 1\n        if (key1) (tmp = index1, index1 = {})[key1] = tmp[key1];\n        for (const value1 in index1) {\n          if (index2 = index1[value1]) {\n            // If a key is specified, count the quad if it exists\n            if (key2) (key2 in index2) && count++;\n            // Otherwise, count all quads\n            else count += Object.keys(index2).length;\n          }\n        }\n      }\n    }\n    return count;\n  }\n\n  // ### `_getGraphs` returns an array with the given graph,\n  // or all graphs if the argument is null or undefined.\n  _getGraphs(graph) {\n    if (!isString(graph))\n      return this._graphs;\n    const graphs = {};\n    graphs[graph] = this._graphs[graph];\n    return graphs;\n  }\n\n  // ### `_uniqueEntities` returns a function that accepts an entity ID\n  // and passes the corresponding entity to callback if it hasn't occurred before.\n  _uniqueEntities(callback) {\n    const uniqueIds = Object.create(null);\n    return id => {\n      if (!(id in uniqueIds)) {\n        uniqueIds[id] = true;\n        callback(this._termFromId(this._entities[id], this._factory));\n      }\n    };\n  }\n\n  // ## Public methods\n\n  // ### `add` adds the specified quad to the dataset.\n  // Returns the dataset instance it was called on.\n  // Existing quads, as defined in Quad.equals, will be ignored.\n  add(quad) {\n    this.addQuad(quad);\n    return this;\n  }\n\n  // ### `addQuad` adds a new quad to the store.\n  // Returns if the quad index has changed, if the quad did not already exist.\n  addQuad(subject, predicate, object, graph) {\n    // Shift arguments if a quad object is given instead of components\n    if (!predicate)\n      graph = subject.graph, object = subject.object,\n        predicate = subject.predicate, subject = subject.subject;\n\n    // Convert terms to internal string representation\n    graph = termToId(graph);\n\n    // Find the graph that will contain the triple\n    let graphItem = this._graphs[graph];\n    // Create the graph if it doesn't exist yet\n    if (!graphItem) {\n      graphItem = this._graphs[graph] = { subjects: {}, predicates: {}, objects: {} };\n      // Freezing a graph helps subsequent `add` performance,\n      // and properties will never be modified anyway\n      Object.freeze(graphItem);\n    }\n\n    // Since entities can often be long IRIs, we avoid storing them in every index.\n    // Instead, we have a separate index that maps entities to numbers,\n    // which are then used as keys in the other indexes.\n    subject   = this._termToNewNumericId(subject);\n    predicate = this._termToNewNumericId(predicate);\n    object    = this._termToNewNumericId(object);\n\n    const changed = this._addToIndex(graphItem.subjects,   subject,   predicate, object);\n    this._addToIndex(graphItem.predicates, predicate, object,    subject);\n    this._addToIndex(graphItem.objects,    object,    subject,   predicate);\n\n    // The cached quad count is now invalid\n    this._size = null;\n    return changed;\n  }\n\n  // ### `addQuads` adds multiple quads to the store\n  addQuads(quads) {\n    for (let i = 0; i < quads.length; i++)\n      this.addQuad(quads[i]);\n  }\n\n  // ### `delete` removes the specified quad from the dataset.\n  // Returns the dataset instance it was called on.\n  delete(quad) {\n    this.removeQuad(quad);\n    return this;\n  }\n\n  // ### `has` determines whether a dataset includes a certain quad or quad pattern.\n  has(subjectOrQuad, predicate, object, graph) {\n    if (subjectOrQuad && subjectOrQuad.subject)\n      ({ subject: subjectOrQuad, predicate, object, graph } = subjectOrQuad);\n    return !this.readQuads(subjectOrQuad, predicate, object, graph).next().done;\n  }\n\n  // ### `import` adds a stream of quads to the store\n  import(stream) {\n    stream.on('data', quad => { this.addQuad(quad); });\n    return stream;\n  }\n\n  // ### `removeQuad` removes a quad from the store if it exists\n  removeQuad(subject, predicate, object, graph) {\n    // Shift arguments if a quad object is given instead of components\n    if (!predicate)\n      graph = subject.graph, object = subject.object,\n        predicate = subject.predicate, subject = subject.subject;\n\n    // Convert terms to internal string representation\n    graph = termToId(graph);\n\n    // Find internal identifiers for all components\n    // and verify the quad exists.\n    const graphs = this._graphs;\n    let graphItem, subjects, predicates;\n    if (!(subject    = subject && this._termToNumericId(subject)) || !(predicate = predicate && this._termToNumericId(predicate)) ||\n        !(object     = object && this._termToNumericId(object))  || !(graphItem = graphs[graph])  ||\n        !(subjects   = graphItem.subjects[subject]) ||\n        !(predicates = subjects[predicate]) ||\n        !(object in predicates))\n      return false;\n\n    // Remove it from all indexes\n    this._removeFromIndex(graphItem.subjects,   subject,   predicate, object);\n    this._removeFromIndex(graphItem.predicates, predicate, object,    subject);\n    this._removeFromIndex(graphItem.objects,    object,    subject,   predicate);\n    if (this._size !== null) this._size--;\n\n    // Remove the graph if it is empty\n    for (subject in graphItem.subjects) return true;\n    delete graphs[graph];\n    return true;\n  }\n\n  // ### `removeQuads` removes multiple quads from the store\n  removeQuads(quads) {\n    for (let i = 0; i < quads.length; i++)\n      this.removeQuad(quads[i]);\n  }\n\n  // ### `remove` removes a stream of quads from the store\n  remove(stream) {\n    stream.on('data', quad => { this.removeQuad(quad); });\n    return stream;\n  }\n\n  // ### `removeMatches` removes all matching quads from the store\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  removeMatches(subject, predicate, object, graph) {\n    const stream = new Readable({ objectMode: true });\n\n    stream._read = () => {\n      for (const quad of this.readQuads(subject, predicate, object, graph))\n        stream.push(quad);\n      stream.push(null);\n    };\n\n    return this.remove(stream);\n  }\n\n  // ### `deleteGraph` removes all triples with the given graph from the store\n  deleteGraph(graph) {\n    return this.removeMatches(null, null, null, graph);\n  }\n\n  // ### `getQuads` returns an array of quads matching a pattern.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  getQuads(subject, predicate, object, graph) {\n    return [...this.readQuads(subject, predicate, object, graph)];\n  }\n\n  // ### `readQuads` returns an generator of quads matching a pattern.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  *readQuads(subject, predicate, object, graph) {\n    // Convert terms to internal string representation\n    graph = graph && termToId(graph);\n\n    const graphs = this._getGraphs(graph);\n    let content, subjectId, predicateId, objectId;\n\n    // Translate IRIs to internal index keys.\n    if (subject   && !(subjectId   = this._termToNumericId(subject))   ||\n        predicate && !(predicateId = this._termToNumericId(predicate)) ||\n        object    && !(objectId    = this._termToNumericId(object)))\n      return;\n\n    for (const graphId in graphs) {\n      // Only if the specified graph contains triples, there can be results\n      if (content = graphs[graphId]) {\n        // Choose the optimal index, based on what fields are present\n        if (subjectId) {\n          if (objectId)\n            // If subject and object are given, the object index will be the fastest\n            yield* this._findInIndex(content.objects, objectId, subjectId, predicateId,\n                              'object', 'subject', 'predicate', graphId);\n          else\n            // If only subject and possibly predicate are given, the subject index will be the fastest\n            yield* this._findInIndex(content.subjects, subjectId, predicateId, null,\n                              'subject', 'predicate', 'object', graphId);\n        }\n        else if (predicateId)\n          // If only predicate and possibly object are given, the predicate index will be the fastest\n          yield* this._findInIndex(content.predicates, predicateId, objectId, null,\n                            'predicate', 'object', 'subject', graphId);\n        else if (objectId)\n          // If only object is given, the object index will be the fastest\n          yield* this._findInIndex(content.objects, objectId, null, null,\n                            'object', 'subject', 'predicate', graphId);\n        else\n          // If nothing is given, iterate subjects and predicates first\n          yield* this._findInIndex(content.subjects, null, null, null,\n                            'subject', 'predicate', 'object', graphId);\n      }\n    }\n  }\n\n  // ### `match` returns a new dataset that is comprised of all quads in the current instance matching the given arguments.\n  // The logic described in Quad Matching is applied for each quad in this dataset to check if it should be included in the output dataset.\n  // Note: This method always returns a new DatasetCore, even if that dataset contains no quads.\n  // Note: Since a DatasetCore is an unordered set, the order of the quads within the returned sequence is arbitrary.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  // For backwards compatibility, the object return also implements the Readable stream interface.\n  match(subject, predicate, object, graph) {\n    return new DatasetCoreAndReadableStream(this, subject, predicate, object, graph);\n  }\n\n  // ### `countQuads` returns the number of quads matching a pattern.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  countQuads(subject, predicate, object, graph) {\n    // Convert terms to internal string representation\n    graph = graph && termToId(graph);\n\n    const graphs = this._getGraphs(graph);\n    let count = 0, content, subjectId, predicateId, objectId;\n\n    // Translate IRIs to internal index keys.\n    if (subject   && !(subjectId   = this._termToNumericId(subject))   ||\n        predicate && !(predicateId = this._termToNumericId(predicate)) ||\n        object    && !(objectId    = this._termToNumericId(object)))\n      return 0;\n\n    for (const graphId in graphs) {\n      // Only if the specified graph contains triples, there can be results\n      if (content = graphs[graphId]) {\n        // Choose the optimal index, based on what fields are present\n        if (subject) {\n          if (object)\n            // If subject and object are given, the object index will be the fastest\n            count += this._countInIndex(content.objects, objectId, subjectId, predicateId);\n          else\n            // If only subject and possibly predicate are given, the subject index will be the fastest\n            count += this._countInIndex(content.subjects, subjectId, predicateId, objectId);\n        }\n        else if (predicate) {\n          // If only predicate and possibly object are given, the predicate index will be the fastest\n          count += this._countInIndex(content.predicates, predicateId, objectId, subjectId);\n        }\n        else {\n          // If only object is possibly given, the object index will be the fastest\n          count += this._countInIndex(content.objects, objectId, subjectId, predicateId);\n        }\n      }\n    }\n    return count;\n  }\n\n  // ### `forEach` executes the callback on all quads.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  forEach(callback, subject, predicate, object, graph) {\n    this.some(quad => {\n      callback(quad);\n      return false;\n    }, subject, predicate, object, graph);\n  }\n\n  // ### `every` executes the callback on all quads,\n  // and returns `true` if it returns truthy for all them.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  every(callback, subject, predicate, object, graph) {\n    let some = false;\n    const every = !this.some(quad => {\n      some = true;\n      return !callback(quad);\n    }, subject, predicate, object, graph);\n    return some && every;\n  }\n\n  // ### `some` executes the callback on all quads,\n  // and returns `true` if it returns truthy for any of them.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  some(callback, subject, predicate, object, graph) {\n    for (const quad of this.readQuads(subject, predicate, object, graph))\n      if (callback(quad))\n        return true;\n    return false;\n  }\n\n  // ### `getSubjects` returns all subjects that match the pattern.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  getSubjects(predicate, object, graph) {\n    const results = [];\n    this.forSubjects(s => { results.push(s); }, predicate, object, graph);\n    return results;\n  }\n\n  // ### `forSubjects` executes the callback on all subjects that match the pattern.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  forSubjects(callback, predicate, object, graph) {\n    // Convert terms to internal string representation\n    graph = graph && termToId(graph);\n\n    const graphs = this._getGraphs(graph);\n    let content, predicateId, objectId;\n    callback = this._uniqueEntities(callback);\n\n    // Translate IRIs to internal index keys.\n    if (predicate && !(predicateId = this._termToNumericId(predicate)) ||\n        object    && !(objectId    = this._termToNumericId(object)))\n      return;\n\n    for (graph in graphs) {\n      // Only if the specified graph contains triples, there can be results\n      if (content = graphs[graph]) {\n        // Choose optimal index based on which fields are wildcards\n        if (predicateId) {\n          if (objectId)\n            // If predicate and object are given, the POS index is best.\n            this._loopBy2Keys(content.predicates, predicateId, objectId, callback);\n          else\n            // If only predicate is given, the SPO index is best.\n            this._loopByKey1(content.subjects, predicateId, callback);\n        }\n        else if (objectId)\n          // If only object is given, the OSP index is best.\n          this._loopByKey0(content.objects, objectId, callback);\n        else\n          // If no params given, iterate all the subjects\n          this._loop(content.subjects, callback);\n      }\n    }\n  }\n\n  // ### `getPredicates` returns all predicates that match the pattern.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  getPredicates(subject, object, graph) {\n    const results = [];\n    this.forPredicates(p => { results.push(p); }, subject, object, graph);\n    return results;\n  }\n\n  // ### `forPredicates` executes the callback on all predicates that match the pattern.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  forPredicates(callback, subject, object, graph) {\n    // Convert terms to internal string representation\n    graph = graph && termToId(graph);\n\n    const graphs = this._getGraphs(graph);\n    let content, subjectId, objectId;\n    callback = this._uniqueEntities(callback);\n\n    // Translate IRIs to internal index keys.\n    if (subject   && !(subjectId   = this._termToNumericId(subject))   ||\n        object    && !(objectId    = this._termToNumericId(object)))\n      return;\n\n    for (graph in graphs) {\n      // Only if the specified graph contains triples, there can be results\n      if (content = graphs[graph]) {\n        // Choose optimal index based on which fields are wildcards\n        if (subjectId) {\n          if (objectId)\n            // If subject and object are given, the OSP index is best.\n            this._loopBy2Keys(content.objects, objectId, subjectId, callback);\n          else\n            // If only subject is given, the SPO index is best.\n            this._loopByKey0(content.subjects, subjectId, callback);\n        }\n        else if (objectId)\n          // If only object is given, the POS index is best.\n          this._loopByKey1(content.predicates, objectId, callback);\n        else\n          // If no params given, iterate all the predicates.\n          this._loop(content.predicates, callback);\n      }\n    }\n  }\n\n  // ### `getObjects` returns all objects that match the pattern.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  getObjects(subject, predicate, graph) {\n    const results = [];\n    this.forObjects(o => { results.push(o); }, subject, predicate, graph);\n    return results;\n  }\n\n  // ### `forObjects` executes the callback on all objects that match the pattern.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  forObjects(callback, subject, predicate, graph) {\n    // Convert terms to internal string representation\n    graph = graph && termToId(graph);\n\n    const graphs = this._getGraphs(graph);\n    let content, subjectId, predicateId;\n    callback = this._uniqueEntities(callback);\n\n    // Translate IRIs to internal index keys.\n    if (subject   && !(subjectId   = this._termToNumericId(subject))   ||\n        predicate && !(predicateId = this._termToNumericId(predicate)))\n      return;\n\n    for (graph in graphs) {\n      // Only if the specified graph contains triples, there can be results\n      if (content = graphs[graph]) {\n        // Choose optimal index based on which fields are wildcards\n        if (subjectId) {\n          if (predicateId)\n            // If subject and predicate are given, the SPO index is best.\n            this._loopBy2Keys(content.subjects, subjectId, predicateId, callback);\n          else\n            // If only subject is given, the OSP index is best.\n            this._loopByKey1(content.objects, subjectId, callback);\n        }\n        else if (predicateId)\n          // If only predicate is given, the POS index is best.\n          this._loopByKey0(content.predicates, predicateId, callback);\n        else\n          // If no params given, iterate all the objects.\n          this._loop(content.objects, callback);\n      }\n    }\n  }\n\n  // ### `getGraphs` returns all graphs that match the pattern.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  getGraphs(subject, predicate, object) {\n    const results = [];\n    this.forGraphs(g => { results.push(g); }, subject, predicate, object);\n    return results;\n  }\n\n  // ### `forGraphs` executes the callback on all graphs that match the pattern.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  forGraphs(callback, subject, predicate, object) {\n    for (const graph in this._graphs) {\n      this.some(quad => {\n        callback(quad.graph);\n        return true; // Halt iteration of some()\n      }, subject, predicate, object, graph);\n    }\n  }\n\n  // ### `createBlankNode` creates a new blank node, returning its name\n  createBlankNode(suggestedName) {\n    let name, index;\n    // Generate a name based on the suggested name\n    if (suggestedName) {\n      name = suggestedName = `_:${suggestedName}`, index = 1;\n      while (this._ids[name])\n        name = suggestedName + index++;\n    }\n    // Generate a generic blank node name\n    else {\n      do { name = `_:b${this._blankNodeIndex++}`; }\n      while (this._ids[name]);\n    }\n    // Add the blank node to the entities, avoiding the generation of duplicates\n    this._ids[name] = ++this._id;\n    this._entities[this._id] = name;\n    return this._factory.blankNode(name.substr(2));\n  }\n\n  // ### `extractLists` finds and removes all list triples\n  // and returns the items per list.\n  extractLists({ remove = false, ignoreErrors = false } = {}) {\n    const lists = {}; // has scalar keys so could be a simple Object\n    const onError = ignoreErrors ? (() => true) :\n                  ((node, message) => { throw new Error(`${node.value} ${message}`); });\n\n    // Traverse each list from its tail\n    const tails = this.getQuads(null, namespaces.rdf.rest, namespaces.rdf.nil, null);\n    const toRemove = remove ? [...tails] : [];\n    tails.forEach(tailQuad => {\n      const items = [];             // the members found as objects of rdf:first quads\n      let malformed = false;      // signals whether the current list is malformed\n      let head;                   // the head of the list (_:b1 in above example)\n      let headPos;                // set to subject or object when head is set\n      const graph = tailQuad.graph; // make sure list is in exactly one graph\n\n      // Traverse the list from tail to end\n      let current = tailQuad.subject;\n      while (current && !malformed) {\n        const objectQuads = this.getQuads(null, null, current, null);\n        const subjectQuads = this.getQuads(current, null, null, null);\n        let quad, first = null, rest = null, parent = null;\n\n        // Find the first and rest of this list node\n        for (let i = 0; i < subjectQuads.length && !malformed; i++) {\n          quad = subjectQuads[i];\n          if (!quad.graph.equals(graph))\n            malformed = onError(current, 'not confined to single graph');\n          else if (head)\n            malformed = onError(current, 'has non-list arcs out');\n\n          // one rdf:first\n          else if (quad.predicate.value === namespaces.rdf.first) {\n            if (first)\n              malformed = onError(current, 'has multiple rdf:first arcs');\n            else\n              toRemove.push(first = quad);\n          }\n\n          // one rdf:rest\n          else if (quad.predicate.value === namespaces.rdf.rest) {\n            if (rest)\n              malformed = onError(current, 'has multiple rdf:rest arcs');\n            else\n              toRemove.push(rest = quad);\n          }\n\n          // alien triple\n          else if (objectQuads.length)\n            malformed = onError(current, 'can\\'t be subject and object');\n          else {\n            head = quad; // e.g. { (1 2 3) :p :o }\n            headPos = 'subject';\n          }\n        }\n\n        // { :s :p (1 2) } arrives here with no head\n        // { (1 2) :p :o } arrives here with head set to the list.\n        for (let i = 0; i < objectQuads.length && !malformed; ++i) {\n          quad = objectQuads[i];\n          if (head)\n            malformed = onError(current, 'can\\'t have coreferences');\n          // one rdf:rest\n          else if (quad.predicate.value === namespaces.rdf.rest) {\n            if (parent)\n              malformed = onError(current, 'has incoming rdf:rest arcs');\n            else\n              parent = quad;\n          }\n          else {\n            head = quad; // e.g. { :s :p (1 2) }\n            headPos = 'object';\n          }\n        }\n\n        // Store the list item and continue with parent\n        if (!first)\n          malformed = onError(current, 'has no list head');\n        else\n          items.unshift(first.object);\n        current = parent && parent.subject;\n      }\n\n      // Don't remove any quads if the list is malformed\n      if (malformed)\n        remove = false;\n      // Store the list under the value of its head\n      else if (head)\n        lists[head[headPos].value] = items;\n    });\n\n    // Remove list quads if requested\n    if (remove)\n      this.removeQuads(toRemove);\n    return lists;\n  }\n\n  // ### Store is an iterable.\n  // Can be used where iterables are expected: for...of loops, array spread operator,\n  // `yield*`, and destructuring assignment (order is not guaranteed).\n  *[Symbol.iterator]() {\n    yield* this.readQuads();\n  }\n}\n\n// Determines whether the argument is a string\nfunction isString(s) {\n  return typeof s === 'string' || s instanceof String;\n}\n\n/**\n * A class that implements both DatasetCore and Readable.\n */\nclass DatasetCoreAndReadableStream extends Readable {\n  constructor(n3Store, subject, predicate, object, graph) {\n    super({ objectMode: true });\n    Object.assign(this, { n3Store, subject, predicate, object, graph });\n  }\n\n  get filtered() {\n    if (!this._filtered) {\n      const { n3Store, graph, object, predicate, subject } = this;\n      const newStore = this._filtered = new N3Store({ factory: n3Store._factory });\n      for (const quad of n3Store.readQuads(subject, predicate, object, graph))\n        newStore.addQuad(quad);\n    }\n    return this._filtered;\n  }\n\n  get size() {\n    return this.filtered.size;\n  }\n\n  _read() {\n    for (const quad of this)\n      this.push(quad);\n    this.push(null);\n  }\n\n  add(quad) {\n    return this.filtered.add(quad);\n  }\n\n  delete(quad) {\n    return this.filtered.delete(quad);\n  }\n\n  has(quad) {\n    return this.filtered.has(quad);\n  }\n\n  match(subject, predicate, object, graph) {\n    return new DatasetCoreAndReadableStream(this.filtered, subject, predicate, object, graph);\n  }\n\n  *[Symbol.iterator]() {\n    yield* this._filtered || this.n3Store.readQuads(this.subject, this.predicate, this.object, this.graph);\n  }\n}\n", "// **N3StreamParser** parses a text stream into a quad stream.\nimport N3Parser from './N3Parser';\nimport { Transform } from 'readable-stream';\n\n// ## Constructor\nexport default class N3StreamParser extends Transform {\n  constructor(options) {\n    super({ decodeStrings: true });\n    this._readableState.objectMode = true;\n\n    // Set up parser with dummy stream to obtain `data` and `end` callbacks\n    const parser = new N3Parser(options);\n    let onData, onEnd;\n    parser.parse({\n      on: (event, callback) => {\n        switch (event) {\n        case 'data': onData = callback; break;\n        case 'end':   onEnd = callback; break;\n        }\n      },\n    },\n      // Handle quads by pushing them down the pipeline\n      (error, quad) => { error && this.emit('error', error) || quad && this.push(quad); },\n      // Emit prefixes through the `prefix` event\n      (prefix, uri) => { this.emit('prefix', prefix, uri); }\n    );\n\n    // Implement Transform methods through parser callbacks\n    this._transform = (chunk, encoding, done) => { onData(chunk); done(); };\n    this._flush = done => { onEnd(); done(); };\n  }\n\n  // ### Parses a stream of strings\n  import(stream) {\n    stream.on('data',  chunk => { this.write(chunk); });\n    stream.on('end',   ()      => { this.end(); });\n    stream.on('error', error => { this.emit('error', error); });\n    return this;\n  }\n}\n", "// **N3StreamWriter** serializes a quad stream into a text stream.\nimport { Transform } from 'readable-stream';\nimport N3Writer from './N3Writer';\n\n// ## Constructor\nexport default class N3StreamWriter extends Transform {\n  constructor(options) {\n    super({ encoding: 'utf8', writableObjectMode: true });\n\n    // Set up writer with a dummy stream object\n    const writer = this._writer = new N3Writer({\n      write: (quad, encoding, callback) => { this.push(quad); callback && callback(); },\n      end: callback => { this.push(null); callback && callback(); },\n    }, options);\n\n    // Implement Transform methods on top of writer\n    this._transform = (quad, encoding, done) => { writer.addQuad(quad, done); };\n    this._flush = done => { writer.end(done); };\n  }\n\n// ### Serializes a stream of quads\n  import(stream) {\n    stream.on('data',   quad => { this.write(quad); });\n    stream.on('end',    () => { this.end(); });\n    stream.on('error',  error => { this.emit('error', error); });\n    stream.on('prefix', (prefix, iri) => { this._writer.addPrefix(prefix, iri); });\n    return this;\n  }\n}\n", "import Lexer from './N3Lexer';\nimport Parser from './N3Parser';\nimport Writer from './N3Writer';\nimport Store from './N3Store';\nimport StreamParser from './N3StreamParser';\nimport StreamWriter from './N3StreamWriter';\nimport * as Util from './N3Util';\n\nimport {\n  default as DataFactory,\n\n  Term,\n  NamedNode,\n  Literal,\n  BlankNode,\n  Variable,\n  DefaultGraph,\n  Quad,\n  Triple,\n\n  termFromId,\n  termToId,\n} from './N3DataFactory';\n\n// Named exports\nexport {\n  Lexer,\n  Parser,\n  Writer,\n  Store,\n  StreamParser,\n  StreamWriter,\n  Util,\n\n  DataFactory,\n\n  Term,\n  NamedNode,\n  Literal,\n  BlankNode,\n  Variable,\n  DefaultGraph,\n  Quad,\n  Triple,\n\n  termFromId,\n  termToId,\n};\n\n// Export all named exports as a default object for backward compatibility\nexport default {\n  Lexer,\n  Parser,\n  Writer,\n  Store,\n  StreamParser,\n  StreamWriter,\n  Util,\n\n  DataFactory,\n\n  Term,\n  NamedNode,\n  Literal,\n  BlankNode,\n  Variable,\n  DefaultGraph,\n  Quad,\n  Triple,\n\n  termFromId,\n  termToId,\n};\n", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, "(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"millan\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"millan\"] = factory();\n\telse\n\t\troot[\"millan\"] = factory();\n})((typeof self !== 'undefined' ? self : this), function() {\nreturn ", " \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 72);\n", "var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\n            t[p[i]] = s[p[i]];\n    return t;\n};\nimport { createToken } from 'chevrotain';\nexport var createKeyword = function (_a) {\n    var name = _a.name, pattern = _a.pattern, props = __rest(_a, [\"name\", \"pattern\"]);\n    return createToken(__assign({ name: name, pattern: pattern || new RegExp(name, 'i') }, props));\n};\n", "var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\n            t[p[i]] = s[p[i]];\n    return t;\n};\nimport { createToken } from 'chevrotain';\nimport { createKeyword as createKeywordToken } from 'helpers/chevrotain/tokens';\nexport var createKeyword = function (_a) {\n    var _b = _a.longer_alt, longer_alt = _b === void 0 ? UNKNOWN : _b, props = __rest(_a, [\"longer_alt\"]);\n    return createKeywordToken(__assign({ longer_alt: longer_alt }, props));\n};\nvar UNKNOWN = createToken({ name: 'UNKNOWN', pattern: /\\w+/i });\nexport var keywords = {\n    SELECT: createKeyword({ name: 'SELECT' }),\n    CONSTRUCT: createKeyword({ name: 'CONSTRUCT' }),\n    DISTINCT: createKeyword({ name: 'DISTINCT' }),\n    START: createKeyword({ name: 'START' }),\n    END: createKeyword({ name: 'END' }),\n    VIA: createKeyword({ name: 'VIA' }),\n    PATHS: createKeyword({ name: 'PATHS' }),\n    PATHS_ALL: createKeyword({\n        name: 'PATHS_ALL',\n        pattern: /PATHS ALL/i,\n    }),\n    PATHS_SHORTEST: createKeyword({\n        name: 'PATHS_SHORTEST',\n        pattern: /PATHS SHORTEST/i,\n    }),\n    CYCLIC: createKeyword({ name: 'CYCLIC' }),\n    AS: createKeyword({ name: 'AS' }),\n    WHERE: createKeyword({ name: 'WHERE' }),\n    A: createKeyword({ name: 'A', pattern: /a/ }),\n    GROUP_BY: createKeyword({\n        name: 'GROUP_BY',\n        pattern: /GROUP BY/i,\n    }),\n    ORDER_BY: createKeyword({\n        name: 'ORDER_BY',\n        pattern: /ORDER BY/i,\n    }),\n    BY: createKeyword({ name: 'BY' }),\n    BASE: createKeyword({ name: 'BASE' }),\n    PREFIX: createKeyword({ name: 'PREFIX' }),\n    DESCRIBE: createKeyword({ name: 'DESCRIBE' }),\n    ASK: createKeyword({ name: 'ASK' }),\n    FROM: createKeyword({ name: 'FROM' }),\n    REDUCED: createKeyword({ name: 'REDUCED' }),\n    NAMED: createKeyword({ name: 'NAMED' }),\n    HAVING: createKeyword({ name: 'HAVING' }),\n    ASC: createKeyword({ name: 'ASC' }),\n    DESC: createKeyword({ name: 'DESC' }),\n    OFFSET: createKeyword({ name: 'OFFSET' }),\n    LIMIT: createKeyword({ name: 'LIMIT' }),\n    VALUES: createKeyword({ name: 'VALUES' }),\n    LOAD: createKeyword({ name: 'LOAD' }),\n    SILENT: createKeyword({ name: 'SILENT' }),\n    INTO: createKeyword({ name: 'INTO' }),\n    CLEAR: createKeyword({ name: 'CLEAR' }),\n    DROP: createKeyword({ name: 'DROP' }),\n    CREATE: createKeyword({ name: 'CREATE' }),\n    ADD: createKeyword({ name: 'ADD' }),\n    TO: createKeyword({ name: 'TO' }),\n    MOVE: createKeyword({ name: 'MOVE' }),\n    COPY: createKeyword({ name: 'COPY' }),\n    INSERT_DATA: createKeyword({\n        name: 'INSERT_DATA',\n        pattern: /INSERT +DATA/i,\n    }),\n    DELETE_DATA: createKeyword({\n        name: 'DELETE_DATA',\n        pattern: /DELETE +DATA/i,\n    }),\n    DELETE_WHERE: createKeyword({\n        name: 'DELETE_WHERE',\n        pattern: /DELETE +WHERE/i,\n    }),\n    WITH: createKeyword({ name: 'WITH' }),\n    DELETE: createKeyword({ name: 'DELETE' }),\n    INSERT: createKeyword({ name: 'INSERT' }),\n    USING: createKeyword({ name: 'USING' }),\n    DEFAULT: createKeyword({ name: 'DEFAULT' }),\n    GRAPH: createKeyword({ name: 'GRAPH' }),\n    ALL: createKeyword({ name: 'ALL' }),\n    OPTIONAL: createKeyword({ name: 'OPTIONAL' }),\n    SERVICE: createKeyword({ name: 'SERVICE' }),\n    BIND: createKeyword({ name: 'BIND' }),\n    UNNEST: createKeyword({ name: 'UNNEST' }),\n    UNDEF: createKeyword({ name: 'UNDEF' }),\n    MINUS: createKeyword({ name: 'MINUS' }),\n    UNION: createKeyword({ name: 'UNION' }),\n    FILTER: createKeyword({ name: 'FILTER' }),\n    STR: createKeyword({ name: 'STR' }),\n    LANG: createKeyword({ name: 'LANG' }),\n    LANGMATCHES: createKeyword({ name: 'LANGMATCHES' }),\n    DATATYPE: createKeyword({ name: 'DATATYPE' }),\n    BOUND: createKeyword({ name: 'BOUND' }),\n    IRI: createKeyword({ name: 'IRI' }),\n    URI: createKeyword({ name: 'URI' }),\n    BNODE: createKeyword({ name: 'BNODE' }),\n    RAND: createKeyword({ name: 'RAND' }),\n    ABS: createKeyword({ name: 'ABS' }),\n    CEIL: createKeyword({ name: 'CEIL' }),\n    FLOOR: createKeyword({ name: 'FLOOR' }),\n    ROUND: createKeyword({ name: 'ROUND' }),\n    CONCAT: createKeyword({ name: 'CONCAT' }),\n    STRLEN: createKeyword({ name: 'STRLEN' }),\n    UCASE: createKeyword({ name: 'UCASE' }),\n    LCASE: createKeyword({ name: 'LCASE' }),\n    ENCODE_FOR_URI: createKeyword({ name: 'ENCODE_FOR_URI' }),\n    CONTAINS: createKeyword({ name: 'CONTAINS' }),\n    STRSTARTS: createKeyword({ name: 'STRSTARTS' }),\n    STRENDS: createKeyword({ name: 'STRENDS' }),\n    STRBEFORE: createKeyword({ name: 'STRBEFORE' }),\n    STRAFTER: createKeyword({ name: 'STRAFTER' }),\n    YEAR: createKeyword({ name: 'YEAR' }),\n    MONTH: createKeyword({ name: 'MONTH' }),\n    DAY: createKeyword({ name: 'DAY' }),\n    HOURS: createKeyword({ name: 'HOURS' }),\n    MINUTES: createKeyword({ name: 'MINUTES' }),\n    SECONDS: createKeyword({ name: 'SECONDS' }),\n    TIMEZONE: createKeyword({ name: 'TIMEZONE' }),\n    TZ: createKeyword({ name: 'TZ' }),\n    NOW: createKeyword({ name: 'NOW' }),\n    UUID: createKeyword({ name: 'UUID' }),\n    STRUUID: createKeyword({ name: 'STRUUID' }),\n    MD5: createKeyword({ name: 'MD5' }),\n    SHA1: createKeyword({ name: 'SHA1' }),\n    SHA256: createKeyword({ name: 'SHA256' }),\n    SHA384: createKeyword({ name: 'SHA384' }),\n    SHA512: createKeyword({ name: 'SHA512' }),\n    COALESCE: createKeyword({ name: 'COALESCE' }),\n    IF: createKeyword({ name: 'IF' }),\n    STRLANG: createKeyword({ name: 'STRLANG' }),\n    STRDT: createKeyword({ name: 'STRDT' }),\n    sameTerm: createKeyword({ name: 'sameTerm' }),\n    isIRI: createKeyword({ name: 'isIRI' }),\n    isURI: createKeyword({ name: 'isURI' }),\n    isBLANK: createKeyword({ name: 'isBLANK' }),\n    isLITERAL: createKeyword({ name: 'isLITERAL' }),\n    isNUMERIC: createKeyword({ name: 'isNUMERIC' }),\n    REGEX: createKeyword({ name: 'REGEX' }),\n    SUBSTR: createKeyword({ name: 'SUBSTR' }),\n    REPLACE: createKeyword({ name: 'REPLACE' }),\n    EXISTS: createKeyword({ name: 'EXISTS' }),\n    NOT_EXISTS: createKeyword({\n        name: 'NOT_EXISTS',\n        pattern: /NOT EXISTS/i,\n    }),\n    COUNT: createKeyword({ name: 'COUNT' }),\n    SUM: createKeyword({ name: 'SUM' }),\n    MIN: createKeyword({ name: 'MIN' }),\n    AVG: createKeyword({ name: 'AVG' }),\n    SAMPLE: createKeyword({ name: 'SAMPLE' }),\n    GROUP_CONCAT: createKeyword({ name: 'GROUP_CONCAT' }),\n    SEPARATOR: createKeyword({ name: 'SEPARATOR' }),\n    TRUE: createKeyword({ name: 'TRUE' }),\n    FALSE: createKeyword({ name: 'FALSE' }),\n    IN: createKeyword({ name: 'IN' }),\n    NOT_IN: createKeyword({\n        name: 'NOT_IN',\n        pattern: /NOT IN/i,\n    }),\n    MAX_LENGTH: createKeyword({\n        name: 'MAX_LENGTH',\n        pattern: /MAX LENGTH/i,\n    }),\n    MAX: createKeyword({ name: 'MAX' }),\n    VALIDATE: createKeyword({ name: 'VALIDATE' }),\n    SHAPES: createKeyword({ name: 'SHAPES' }),\n    SHAPE: createKeyword({ name: 'SHAPE' }),\n    PER: createKeyword({ name: 'PER' }),\n    UNKNOWN: UNKNOWN,\n};\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar parser_1 = require(\"./parse/parser/parser\");\nvar lexer_public_1 = require(\"./scan/lexer_public\");\nvar tokens_public_1 = require(\"./scan/tokens_public\");\nvar exceptions_public_1 = require(\"./parse/exceptions_public\");\nvar version_1 = require(\"./version\");\nvar errors_public_1 = require(\"./parse/errors_public\");\nvar render_public_1 = require(\"./diagrams/render_public\");\nvar gast_visitor_public_1 = require(\"./parse/grammar/gast/gast_visitor_public\");\nvar gast_public_1 = require(\"./parse/grammar/gast/gast_public\");\nvar gast_resolver_public_1 = require(\"./parse/grammar/gast/gast_resolver_public\");\nvar generate_public_1 = require(\"./generate/generate_public\");\nvar lexer_errors_public_1 = require(\"./scan/lexer_errors_public\");\n/**\n * defines the public API of\n * changes here may require major version change. (semVer)\n */\nvar API = {};\n// semantic version\nAPI.VERSION = version_1.VERSION;\n// runtime API\nAPI.Parser = parser_1.Parser;\nAPI.CstParser = parser_1.CstParser;\nAPI.EmbeddedActionsParser = parser_1.EmbeddedActionsParser;\n// TypeCheck Multi Trait Parser API against official Chevrotain API\n// The only thing this does not check is the constructor signature.\nvar mixedDummyInstance = null;\nvar officalDummyInstance = mixedDummyInstance;\nAPI.ParserDefinitionErrorType = parser_1.ParserDefinitionErrorType;\nAPI.Lexer = lexer_public_1.Lexer;\nAPI.LexerDefinitionErrorType = lexer_public_1.LexerDefinitionErrorType;\nAPI.EOF = tokens_public_1.EOF;\n// Tokens utilities\nAPI.tokenName = tokens_public_1.tokenName;\nAPI.tokenLabel = tokens_public_1.tokenLabel;\nAPI.tokenMatcher = tokens_public_1.tokenMatcher;\nAPI.createToken = tokens_public_1.createToken;\nAPI.createTokenInstance = tokens_public_1.createTokenInstance;\n//\n// // Other Utilities\nAPI.EMPTY_ALT = parser_1.EMPTY_ALT;\nAPI.defaultParserErrorProvider = errors_public_1.defaultParserErrorProvider;\nAPI.isRecognitionException = exceptions_public_1.isRecognitionException;\nAPI.EarlyExitException = exceptions_public_1.EarlyExitException;\nAPI.MismatchedTokenException = exceptions_public_1.MismatchedTokenException;\nAPI.NotAllInputParsedException = exceptions_public_1.NotAllInputParsedException;\nAPI.NoViableAltException = exceptions_public_1.NoViableAltException;\nAPI.defaultLexerErrorProvider = lexer_errors_public_1.defaultLexerErrorProvider;\n//\n// // grammar reflection API\nAPI.Flat = gast_public_1.Flat;\nAPI.Repetition = gast_public_1.Repetition;\nAPI.RepetitionWithSeparator = gast_public_1.RepetitionWithSeparator;\nAPI.RepetitionMandatory = gast_public_1.RepetitionMandatory;\nAPI.RepetitionMandatoryWithSeparator = gast_public_1.RepetitionMandatoryWithSeparator;\nAPI.Option = gast_public_1.Option;\nAPI.Alternation = gast_public_1.Alternation;\nAPI.NonTerminal = gast_public_1.NonTerminal;\nAPI.Terminal = gast_public_1.Terminal;\nAPI.Rule = gast_public_1.Rule;\n// // GAST Utilities\nAPI.GAstVisitor = gast_visitor_public_1.GAstVisitor;\nAPI.serializeGrammar = gast_public_1.serializeGrammar;\nAPI.serializeProduction = gast_public_1.serializeProduction;\nAPI.resolveGrammar = gast_resolver_public_1.resolveGrammar;\nAPI.defaultGrammarResolverErrorProvider = errors_public_1.defaultGrammarResolverErrorProvider;\nAPI.validateGrammar = gast_resolver_public_1.validateGrammar;\nAPI.defaultGrammarValidatorErrorProvider = errors_public_1.defaultGrammarValidatorErrorProvider;\nAPI.assignOccurrenceIndices = gast_resolver_public_1.assignOccurrenceIndices;\n/* istanbul ignore next */\nAPI.clearCache = function () {\n    console.warn(\"The clearCache function was 'soft' removed from the Chevrotain API.\" +\n        \"\\n\\t It performs no action other than printing this message.\" +\n        \"\\n\\t Please avoid using it as it will be completely removed in the future\");\n};\nAPI.createSyntaxDiagramsCode = render_public_1.createSyntaxDiagramsCode;\nAPI.generateParserFactory = generate_public_1.generateParserFactory;\nAPI.generateParserModule = generate_public_1.generateParserModule;\nmodule.exports = API;\n//# sourceMappingURL=api.js.map", "export var regex = {\n    or: function () {\n        var r = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            r[_i] = arguments[_i];\n        }\n        return new RegExp(r.map(function (_a) {\n            var source = _a.source;\n            return \"(\" + source + \")\";\n        }).join('|'));\n    },\n    and: function () {\n        var r = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            r[_i] = arguments[_i];\n        }\n        return new RegExp(r.map(function (_a) {\n            var source = _a.source;\n            return \"(\" + source + \")\";\n        }).join(''));\n    },\n    option: function (r) {\n        return new RegExp(\"(\" + r.source + \")?\");\n    },\n    many: function (r) {\n        return new RegExp(\"(\" + r.source + \")*\");\n    },\n};\n", "import { regex } from './regex';\nexport var CATCH_ALL = /[\\s\\S]*/; // equivalent to /.*/s, which isn't a JS standard yet\nexport var CATCH_ALL_AT_LEAST_ONE = /[\\s\\S]+/; // equivalent to /.+/s, which isn't a JS standard yet\nexport var IRIREF = /<[^<>\\\\{}|\\^`\\u0000-\\u0020]*>/;\nexport var PN_CHARS_BASE = /[A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/;\nexport var LANGTAG = /@[a-zA-Z]+(-[a-zA-Z0-9]+)*/;\nexport var INTEGER = /\\d+/;\nexport var DECIMAL = /(\\d*\\.\\d+)|(\\d+\\.\\d*)/;\nexport var EXPONENT = /[eE][+-]?\\d+/;\nexport var ECHAR = /\\\\[tbnrf\"'\\\\]/;\nexport var WS = /[\\u0020\\u0009\\u000d\\u000a]/;\nexport var HEX = /[0-9A-Fa-f]/;\nexport var PN_LOCAL_ESC = /\\\\[_~.\\-!\\$&'()*+,=\\/?#@%;]/;\nexport var PN_CHARS_U = regex.or(PN_CHARS_BASE, /_/);\nexport var PN_CHARS = regex.or(PN_CHARS_U, /-/, /\\d/, /\\u00b7/, /[\\u0300-\\u036f]/, /[\\u203f-\\u2040]/);\nexport var PN_PREFIX = regex.and(PN_CHARS_BASE, regex.option(regex.and(regex.many(regex.or(PN_CHARS, /\\./)), PN_CHARS)));\nexport var PERCENT = regex.and(/%/, HEX, HEX);\nexport var PLX = regex.or(PERCENT, PN_LOCAL_ESC);\nexport var PN_LOCAL = regex.and(regex.or(PN_CHARS_U, /:/, /\\d/, PLX), regex.option(regex.and(regex.many(regex.or(PN_CHARS, /\\./, /:/, PLX)), regex.or(PN_CHARS, /:/, PLX))));\nexport var VARNAME = regex.and(regex.or(PN_CHARS_U, /\\d/), regex.many(regex.or(PN_CHARS_U, /\\d/, /\\u00b7/, /[\\u0300-\\u036f]/, /[\\u203f-\\u2040]/)));\nexport var ANON = regex.and(/\\[/, regex.many(WS), /\\]/);\nexport var NIL = regex.and(/\\(/, regex.many(WS), /\\)/);\nexport var STRING_LITERAL1 = regex.and(/'/, regex.many(regex.or(/[^\\u0027\\u005C\\u000A\\u000D]/, ECHAR)), /'/);\nexport var STRING_LITERAL2 = regex.and(/\"/, regex.many(regex.or(/[^\\u0022\\u005C\\u000A\\u000D]/, ECHAR)), /\"/);\nexport var STRING_LITERAL_LONG1 = regex.and(/'''/, regex.many(regex.and(regex.option(regex.or(/'/, /''/)), regex.or(/[^'\\\\]/, ECHAR))), /'''/);\nexport var STRING_LITERAL_LONG2 = regex.and(/\"\"\"/, regex.many(regex.and(regex.option(regex.or(/\"/, /\"\"/)), regex.or(/[^\"\\\\]/, ECHAR))), /\"\"\"/);\nexport var DOUBLE = regex.or(regex.and(/\\d+\\.\\d*/, EXPONENT), regex.and(/\\.\\d+/, EXPONENT), regex.and(/\\d+/, EXPONENT));\nexport var INTEGER_POSITIVE = regex.and(/\\+/, INTEGER);\nexport var DECIMAL_POSITIVE = regex.and(/\\+/, DECIMAL);\nexport var DOUBLE_POSITIVE = regex.and(/\\+/, DOUBLE);\nexport var INTEGER_NEGATIVE = regex.and(/-/, INTEGER);\nexport var DECIMAL_NEGATIVE = regex.and(/-/, DECIMAL);\nexport var DOUBLE_NEGATIVE = regex.and(/-/, DOUBLE);\nexport var VAR1 = regex.and(/\\?/, VARNAME);\nexport var VAR2 = regex.and(/\\$/, VARNAME);\nexport var BLANK_NODE_LABEL = regex.and(/_:/, regex.or(PN_CHARS_U, /\\d/), regex.option(regex.and(regex.many(regex.or(PN_CHARS, /\\./)), PN_CHARS)));\nexport var PNAME_NS = regex.and(regex.option(PN_PREFIX), /:/);\nexport var PNAME_LN = regex.and(PNAME_NS, PN_LOCAL);\n", "\"use strict\";\n/*\n Utils using lodash style API. (not necessarily 100% compliant) for functional and other utils.\n These utils should replace usage of lodash in the production code base. not because they are any better...\n but for the purpose of being a dependency free library.\n\n The hotspots in the code are already written in imperative style for performance reasons.\n so writing several dozen utils which may be slower than the original lodash, does not matter as much\n considering they will not be invoked in hotspots...\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction isEmpty(arr) {\n    return arr && arr.length === 0;\n}\nexports.isEmpty = isEmpty;\nfunction keys(obj) {\n    if (obj === undefined || obj === null) {\n        return [];\n    }\n    return Object.keys(obj);\n}\nexports.keys = keys;\nfunction values(obj) {\n    var vals = [];\n    var keys = Object.keys(obj);\n    for (var i = 0; i < keys.length; i++) {\n        vals.push(obj[keys[i]]);\n    }\n    return vals;\n}\nexports.values = values;\nfunction mapValues(obj, callback) {\n    var result = [];\n    var objKeys = keys(obj);\n    for (var idx = 0; idx < objKeys.length; idx++) {\n        var currKey = objKeys[idx];\n        result.push(callback.call(null, obj[currKey], currKey));\n    }\n    return result;\n}\nexports.mapValues = mapValues;\nfunction map(arr, callback) {\n    var result = [];\n    for (var idx = 0; idx < arr.length; idx++) {\n        result.push(callback.call(null, arr[idx], idx));\n    }\n    return result;\n}\nexports.map = map;\nfunction flatten(arr) {\n    var result = [];\n    for (var idx = 0; idx < arr.length; idx++) {\n        var currItem = arr[idx];\n        if (Array.isArray(currItem)) {\n            result = result.concat(flatten(currItem));\n        }\n        else {\n            result.push(currItem);\n        }\n    }\n    return result;\n}\nexports.flatten = flatten;\nfunction first(arr) {\n    return isEmpty(arr) ? undefined : arr[0];\n}\nexports.first = first;\nfunction last(arr) {\n    var len = arr && arr.length;\n    return len ? arr[len - 1] : undefined;\n}\nexports.last = last;\nfunction forEach(collection, iteratorCallback) {\n    /* istanbul ignore else */\n    if (Array.isArray(collection)) {\n        for (var i = 0; i < collection.length; i++) {\n            iteratorCallback.call(null, collection[i], i);\n        }\n    }\n    else if (isObject(collection)) {\n        var colKeys = keys(collection);\n        for (var i = 0; i < colKeys.length; i++) {\n            var key = colKeys[i];\n            var value = collection[key];\n            iteratorCallback.call(null, value, key);\n        }\n    }\n    else {\n        throw Error(\"non exhaustive match\");\n    }\n}\nexports.forEach = forEach;\nfunction isString(item) {\n    return typeof item === \"string\";\n}\nexports.isString = isString;\nfunction isUndefined(item) {\n    return item === undefined;\n}\nexports.isUndefined = isUndefined;\nfunction isFunction(item) {\n    return item instanceof Function;\n}\nexports.isFunction = isFunction;\nfunction drop(arr, howMuch) {\n    if (howMuch === void 0) { howMuch = 1; }\n    return arr.slice(howMuch, arr.length);\n}\nexports.drop = drop;\nfunction dropRight(arr, howMuch) {\n    if (howMuch === void 0) { howMuch = 1; }\n    return arr.slice(0, arr.length - howMuch);\n}\nexports.dropRight = dropRight;\nfunction filter(arr, predicate) {\n    var result = [];\n    if (Array.isArray(arr)) {\n        for (var i = 0; i < arr.length; i++) {\n            var item = arr[i];\n            if (predicate.call(null, item)) {\n                result.push(item);\n            }\n        }\n    }\n    return result;\n}\nexports.filter = filter;\nfunction reject(arr, predicate) {\n    return filter(arr, function (item) { return !predicate(item); });\n}\nexports.reject = reject;\nfunction pick(obj, predicate) {\n    var keys = Object.keys(obj);\n    var result = {};\n    for (var i = 0; i < keys.length; i++) {\n        var currKey = keys[i];\n        var currItem = obj[currKey];\n        if (predicate(currItem)) {\n            result[currKey] = currItem;\n        }\n    }\n    return result;\n}\nexports.pick = pick;\nfunction has(obj, prop) {\n    if (isObject(obj)) {\n        return obj.hasOwnProperty(prop);\n    }\n    return false;\n}\nexports.has = has;\nfunction contains(arr, item) {\n    return find(arr, function (currItem) { return currItem === item; }) !== undefined ? true : false;\n}\nexports.contains = contains;\n/**\n * shallow clone\n */\nfunction cloneArr(arr) {\n    var newArr = [];\n    for (var i = 0; i < arr.length; i++) {\n        newArr.push(arr[i]);\n    }\n    return newArr;\n}\nexports.cloneArr = cloneArr;\n/**\n * shallow clone\n */\nfunction cloneObj(obj) {\n    var clonedObj = {};\n    for (var key in obj) {\n        /* istanbul ignore else */\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n            clonedObj[key] = obj[key];\n        }\n    }\n    return clonedObj;\n}\nexports.cloneObj = cloneObj;\nfunction find(arr, predicate) {\n    for (var i = 0; i < arr.length; i++) {\n        var item = arr[i];\n        if (predicate.call(null, item)) {\n            return item;\n        }\n    }\n    return undefined;\n}\nexports.find = find;\nfunction findAll(arr, predicate) {\n    var found = [];\n    for (var i = 0; i < arr.length; i++) {\n        var item = arr[i];\n        if (predicate.call(null, item)) {\n            found.push(item);\n        }\n    }\n    return found;\n}\nexports.findAll = findAll;\nfunction reduce(arrOrObj, iterator, initial) {\n    var isArr = Array.isArray(arrOrObj);\n    var vals = isArr ? arrOrObj : values(arrOrObj);\n    var objKeys = isArr ? [] : keys(arrOrObj);\n    var accumulator = initial;\n    for (var i = 0; i < vals.length; i++) {\n        accumulator = iterator.call(null, accumulator, vals[i], isArr ? i : objKeys[i]);\n    }\n    return accumulator;\n}\nexports.reduce = reduce;\nfunction compact(arr) {\n    return reject(arr, function (item) { return item === null || item === undefined; });\n}\nexports.compact = compact;\nfunction uniq(arr, identity) {\n    if (identity === void 0) { identity = function (item) { return item; }; }\n    var identities = [];\n    return reduce(arr, function (result, currItem) {\n        var currIdentity = identity(currItem);\n        if (contains(identities, currIdentity)) {\n            return result;\n        }\n        else {\n            identities.push(currIdentity);\n            return result.concat(currItem);\n        }\n    }, []);\n}\nexports.uniq = uniq;\nfunction partial(func) {\n    var restArgs = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        restArgs[_i - 1] = arguments[_i];\n    }\n    var firstArg = [null];\n    var allArgs = firstArg.concat(restArgs);\n    return Function.bind.apply(func, allArgs);\n}\nexports.partial = partial;\nfunction isArray(obj) {\n    return Array.isArray(obj);\n}\nexports.isArray = isArray;\nfunction isRegExp(obj) {\n    return obj instanceof RegExp;\n}\nexports.isRegExp = isRegExp;\nfunction isObject(obj) {\n    return obj instanceof Object;\n}\nexports.isObject = isObject;\nfunction every(arr, predicate) {\n    for (var i = 0; i < arr.length; i++) {\n        if (!predicate(arr[i], i)) {\n            return false;\n        }\n    }\n    return true;\n}\nexports.every = every;\nfunction difference(arr, values) {\n    return reject(arr, function (item) { return contains(values, item); });\n}\nexports.difference = difference;\nfunction some(arr, predicate) {\n    for (var i = 0; i < arr.length; i++) {\n        if (predicate(arr[i])) {\n            return true;\n        }\n    }\n    return false;\n}\nexports.some = some;\nfunction indexOf(arr, value) {\n    for (var i = 0; i < arr.length; i++) {\n        if (arr[i] === value) {\n            return i;\n        }\n    }\n    return -1;\n}\nexports.indexOf = indexOf;\nfunction sortBy(arr, orderFunc) {\n    var result = cloneArr(arr);\n    result.sort(function (a, b) { return orderFunc(a) - orderFunc(b); });\n    return result;\n}\nexports.sortBy = sortBy;\nfunction zipObject(keys, values) {\n    if (keys.length !== values.length) {\n        throw Error(\"can't zipObject with different number of keys and values!\");\n    }\n    var result = {};\n    for (var i = 0; i < keys.length; i++) {\n        result[keys[i]] = values[i];\n    }\n    return result;\n}\nexports.zipObject = zipObject;\n/**\n * mutates! (and returns) target\n */\nfunction assign(target) {\n    var sources = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        sources[_i - 1] = arguments[_i];\n    }\n    for (var i = 0; i < sources.length; i++) {\n        var curSource = sources[i];\n        var currSourceKeys = keys(curSource);\n        for (var j = 0; j < currSourceKeys.length; j++) {\n            var currKey = currSourceKeys[j];\n            target[currKey] = curSource[currKey];\n        }\n    }\n    return target;\n}\nexports.assign = assign;\n/**\n * mutates! (and returns) target\n */\nfunction assignNoOverwrite(target) {\n    var sources = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        sources[_i - 1] = arguments[_i];\n    }\n    for (var i = 0; i < sources.length; i++) {\n        var curSource = sources[i];\n        if (isUndefined(curSource)) {\n            continue;\n        }\n        var currSourceKeys = keys(curSource);\n        for (var j = 0; j < currSourceKeys.length; j++) {\n            var currKey = currSourceKeys[j];\n            if (!has(target, currKey)) {\n                target[currKey] = curSource[currKey];\n            }\n        }\n    }\n    return target;\n}\nexports.assignNoOverwrite = assignNoOverwrite;\nfunction defaults() {\n    var sources = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        sources[_i] = arguments[_i];\n    }\n    return assignNoOverwrite.apply(null, [{}].concat(sources));\n}\nexports.defaults = defaults;\nfunction groupBy(arr, groupKeyFunc) {\n    var result = {};\n    forEach(arr, function (item) {\n        var currGroupKey = groupKeyFunc(item);\n        var currGroupArr = result[currGroupKey];\n        if (currGroupArr) {\n            currGroupArr.push(item);\n        }\n        else {\n            result[currGroupKey] = [item];\n        }\n    });\n    return result;\n}\nexports.groupBy = groupBy;\n/**\n * Merge obj2 into obj1.\n * Will overwrite existing properties with the same name\n */\nfunction merge(obj1, obj2) {\n    var result = cloneObj(obj1);\n    var keys2 = keys(obj2);\n    for (var i = 0; i < keys2.length; i++) {\n        var key = keys2[i];\n        var value = obj2[key];\n        result[key] = value;\n    }\n    return result;\n}\nexports.merge = merge;\nfunction NOOP() { }\nexports.NOOP = NOOP;\nfunction IDENTITY(item) {\n    return item;\n}\nexports.IDENTITY = IDENTITY;\n/**\n * Will return a new packed array with same values.\n */\nfunction packArray(holeyArr) {\n    var result = [];\n    for (var i = 0; i < holeyArr.length; i++) {\n        var orgValue = holeyArr[i];\n        result.push(orgValue !== undefined ? orgValue : undefined);\n    }\n    return result;\n}\nexports.packArray = packArray;\nfunction PRINT_ERROR(msg) {\n    /* istanbul ignore else - can't override global.console in node.js */\n    if (console && console.error) {\n        console.error(\"Error: \" + msg);\n    }\n}\nexports.PRINT_ERROR = PRINT_ERROR;\nfunction PRINT_WARNING(msg) {\n    /* istanbul ignore else - can't override global.console in node.js*/\n    if (console && console.warn) {\n        // TODO: modify docs accordingly\n        console.warn(\"Warning: \" + msg);\n    }\n}\nexports.PRINT_WARNING = PRINT_WARNING;\nfunction isES2015MapSupported() {\n    return typeof Map === \"function\";\n}\nexports.isES2015MapSupported = isES2015MapSupported;\nfunction applyMixins(derivedCtor, baseCtors) {\n    baseCtors.forEach(function (baseCtor) {\n        var baseProto = baseCtor.prototype;\n        Object.getOwnPropertyNames(baseProto).forEach(function (propName) {\n            if (propName === \"constructor\") {\n                return;\n            }\n            var basePropDescriptor = Object.getOwnPropertyDescriptor(baseProto, propName);\n            // Handle Accessors\n            if (basePropDescriptor &&\n                (basePropDescriptor.get || basePropDescriptor.set)) {\n                Object.defineProperty(derivedCtor.prototype, propName, basePropDescriptor);\n            }\n            else {\n                derivedCtor.prototype[propName] = baseCtor.prototype[propName];\n            }\n        });\n    });\n}\nexports.applyMixins = applyMixins;\n// base on: https://github.com/petkaantonov/bluebird/blob/b97c0d2d487e8c5076e8bd897e0dcd4622d31846/src/util.js#L201-L216\nfunction toFastProperties(toBecomeFast) {\n    function FakeConstructor() { }\n    // If our object is used as a constructor it would receive\n    FakeConstructor.prototype = toBecomeFast;\n    var fakeInstance = new FakeConstructor();\n    function fakeAccess() {\n        return typeof fakeInstance.bar;\n    }\n    // help V8 understand this is a \"real\" prototype by actually using\n    // the fake instance.\n    fakeAccess();\n    fakeAccess();\n    return toBecomeFast;\n    // Eval prevents optimization of this method (even though this is dead code)\n    /* istanbul ignore next */\n    // tslint:disable-next-line\n    eval(toBecomeFast);\n}\nexports.toFastProperties = toFastProperties;\n//# sourceMappingURL=utils.js.map", "// @ts-ignore: import types for declarations\nimport { createToken } from 'chevrotain';\nimport { STRING_LITERAL_LONG1, STRING_LITERAL_LONG2, PNAME_LN, IRIREF, LANGTAG, INTEGER, DECIMAL, DOUBLE, INTEGER_POSITIVE, DECIMAL_POSITIVE, DOUBLE_POSITIVE, INTEGER_NEGATIVE, DECIMAL_NEGATIVE, DOUBLE_NEGATIVE, STRING_LITERAL1, STRING_LITERAL2, NIL, ANON, PNAME_NS, BLANK_NODE_LABEL, VAR1, VAR2, PERCENT, } from 'helpers/matchers';\nvar STRING_LITERAL_LONG1_TOKEN = createToken({\n    name: 'STRING_LITERAL_LONG1',\n    pattern: STRING_LITERAL_LONG1,\n});\nvar STRING_LITERAL_LONG2_TOKEN = createToken({\n    name: 'STRING_LITERAL_LONG2',\n    pattern: STRING_LITERAL_LONG2,\n});\nvar PNAME_LN_TOKEN = createToken({\n    name: 'PNAME_LN',\n    pattern: PNAME_LN,\n});\nexport var terminals = {\n    IRIREF: createToken({\n        name: 'IRIREF',\n        pattern: IRIREF,\n        label: '<http://example.com>',\n    }),\n    LANGTAG: createToken({\n        name: 'LANGTAG',\n        pattern: LANGTAG,\n    }),\n    INTEGER: createToken({\n        name: 'INTEGER',\n        pattern: INTEGER,\n    }),\n    DECIMAL: createToken({\n        name: 'DECIMAL',\n        pattern: DECIMAL,\n    }),\n    DOUBLE: createToken({\n        name: 'DOUBLE',\n        pattern: DOUBLE,\n    }),\n    INTEGER_POSITIVE: createToken({\n        name: 'INTEGER_POSITIVE',\n        pattern: INTEGER_POSITIVE,\n    }),\n    DECIMAL_POSITIVE: createToken({\n        name: 'DECIMAL_POSITIVE',\n        pattern: DECIMAL_POSITIVE,\n    }),\n    DOUBLE_POSITIVE: createToken({\n        name: 'DOUBLE_POSITIVE',\n        pattern: DOUBLE_POSITIVE,\n    }),\n    INTEGER_NEGATIVE: createToken({\n        name: 'INTEGER_NEGATIVE',\n        pattern: INTEGER_NEGATIVE,\n    }),\n    DECIMAL_NEGATIVE: createToken({\n        name: 'DECIMAL_NEGATIVE',\n        pattern: DECIMAL_NEGATIVE,\n    }),\n    DOUBLE_NEGATIVE: createToken({\n        name: 'DOUBLE_NEGATIVE',\n        pattern: DOUBLE_NEGATIVE,\n    }),\n    STRING_LITERAL_LONG1: STRING_LITERAL_LONG1_TOKEN,\n    STRING_LITERAL_LONG2: STRING_LITERAL_LONG2_TOKEN,\n    STRING_LITERAL1: createToken({\n        name: 'STRING_LITERAL1',\n        pattern: STRING_LITERAL1,\n        longer_alt: STRING_LITERAL_LONG1_TOKEN,\n    }),\n    STRING_LITERAL2: createToken({\n        name: 'STRING_LITERAL2',\n        pattern: STRING_LITERAL2,\n        longer_alt: STRING_LITERAL_LONG2_TOKEN,\n    }),\n    NIL: createToken({\n        name: 'NIL',\n        pattern: NIL,\n        label: '()',\n    }),\n    ANON: createToken({\n        name: 'ANON',\n        pattern: ANON,\n        label: '[]',\n    }),\n    PNAME_LN: PNAME_LN_TOKEN,\n    PNAME_NS: createToken({\n        name: 'PNAME_NS',\n        pattern: PNAME_NS,\n        longer_alt: PNAME_LN_TOKEN,\n    }),\n    BLANK_NODE_LABEL: createToken({\n        name: 'BLANK_NODE_LABEL',\n        pattern: BLANK_NODE_LABEL,\n    }),\n    VAR1: createToken({\n        name: 'VAR1',\n        pattern: VAR1,\n        label: '?foo',\n    }),\n    VAR2: createToken({\n        name: 'VAR2',\n        pattern: VAR2,\n        label: '?bar',\n    }),\n    PERCENT: createToken({\n        name: 'PERCENT',\n        pattern: PERCENT,\n    }),\n};\n", "\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar utils_1 = require(\"../../../utils/utils\");\nvar tokens_public_1 = require(\"../../../scan/tokens_public\");\nvar AbstractProduction = /** @class */ (function () {\n    function AbstractProduction(definition) {\n        this.definition = definition;\n    }\n    AbstractProduction.prototype.accept = function (visitor) {\n        visitor.visit(this);\n        utils_1.forEach(this.definition, function (prod) {\n            prod.accept(visitor);\n        });\n    };\n    return AbstractProduction;\n}());\nexports.AbstractProduction = AbstractProduction;\nvar NonTerminal = /** @class */ (function (_super) {\n    __extends(NonTerminal, _super);\n    function NonTerminal(options) {\n        var _this = _super.call(this, []) || this;\n        _this.idx = 1;\n        utils_1.assign(_this, utils_1.pick(options, function (v) { return v !== undefined; }));\n        return _this;\n    }\n    Object.defineProperty(NonTerminal.prototype, \"definition\", {\n        get: function () {\n            if (this.referencedRule !== undefined) {\n                return this.referencedRule.definition;\n            }\n            return [];\n        },\n        set: function (definition) {\n            // immutable\n        },\n        enumerable: true,\n        configurable: true\n    });\n    NonTerminal.prototype.accept = function (visitor) {\n        visitor.visit(this);\n        // don't visit children of a reference, we will get cyclic infinite loops if we do so\n    };\n    return NonTerminal;\n}(AbstractProduction));\nexports.NonTerminal = NonTerminal;\nvar Rule = /** @class */ (function (_super) {\n    __extends(Rule, _super);\n    function Rule(options) {\n        var _this = _super.call(this, options.definition) || this;\n        _this.orgText = \"\";\n        utils_1.assign(_this, utils_1.pick(options, function (v) { return v !== undefined; }));\n        return _this;\n    }\n    return Rule;\n}(AbstractProduction));\nexports.Rule = Rule;\nvar Flat = /** @class */ (function (_super) {\n    __extends(Flat, _super);\n    // A named Flat production is used to indicate a Nested Rule in an alternation\n    function Flat(options) {\n        var _this = _super.call(this, options.definition) || this;\n        utils_1.assign(_this, utils_1.pick(options, function (v) { return v !== undefined; }));\n        return _this;\n    }\n    return Flat;\n}(AbstractProduction));\nexports.Flat = Flat;\nvar Option = /** @class */ (function (_super) {\n    __extends(Option, _super);\n    function Option(options) {\n        var _this = _super.call(this, options.definition) || this;\n        _this.idx = 1;\n        utils_1.assign(_this, utils_1.pick(options, function (v) { return v !== undefined; }));\n        return _this;\n    }\n    return Option;\n}(AbstractProduction));\nexports.Option = Option;\nvar RepetitionMandatory = /** @class */ (function (_super) {\n    __extends(RepetitionMandatory, _super);\n    function RepetitionMandatory(options) {\n        var _this = _super.call(this, options.definition) || this;\n        _this.idx = 1;\n        utils_1.assign(_this, utils_1.pick(options, function (v) { return v !== undefined; }));\n        return _this;\n    }\n    return RepetitionMandatory;\n}(AbstractProduction));\nexports.RepetitionMandatory = RepetitionMandatory;\nvar RepetitionMandatoryWithSeparator = /** @class */ (function (_super) {\n    __extends(RepetitionMandatoryWithSeparator, _super);\n    function RepetitionMandatoryWithSeparator(options) {\n        var _this = _super.call(this, options.definition) || this;\n        _this.idx = 1;\n        utils_1.assign(_this, utils_1.pick(options, function (v) { return v !== undefined; }));\n        return _this;\n    }\n    return RepetitionMandatoryWithSeparator;\n}(AbstractProduction));\nexports.RepetitionMandatoryWithSeparator = RepetitionMandatoryWithSeparator;\nvar Repetition = /** @class */ (function (_super) {\n    __extends(Repetition, _super);\n    function Repetition(options) {\n        var _this = _super.call(this, options.definition) || this;\n        _this.idx = 1;\n        utils_1.assign(_this, utils_1.pick(options, function (v) { return v !== undefined; }));\n        return _this;\n    }\n    return Repetition;\n}(AbstractProduction));\nexports.Repetition = Repetition;\nvar RepetitionWithSeparator = /** @class */ (function (_super) {\n    __extends(RepetitionWithSeparator, _super);\n    function RepetitionWithSeparator(options) {\n        var _this = _super.call(this, options.definition) || this;\n        _this.idx = 1;\n        utils_1.assign(_this, utils_1.pick(options, function (v) { return v !== undefined; }));\n        return _this;\n    }\n    return RepetitionWithSeparator;\n}(AbstractProduction));\nexports.RepetitionWithSeparator = RepetitionWithSeparator;\nvar Alternation = /** @class */ (function (_super) {\n    __extends(Alternation, _super);\n    function Alternation(options) {\n        var _this = _super.call(this, options.definition) || this;\n        _this.idx = 1;\n        utils_1.assign(_this, utils_1.pick(options, function (v) { return v !== undefined; }));\n        return _this;\n    }\n    return Alternation;\n}(AbstractProduction));\nexports.Alternation = Alternation;\nvar Terminal = /** @class */ (function () {\n    function Terminal(options) {\n        this.idx = 1;\n        utils_1.assign(this, utils_1.pick(options, function (v) { return v !== undefined; }));\n    }\n    Terminal.prototype.accept = function (visitor) {\n        visitor.visit(this);\n    };\n    return Terminal;\n}());\nexports.Terminal = Terminal;\nfunction serializeGrammar(topRules) {\n    return utils_1.map(topRules, serializeProduction);\n}\nexports.serializeGrammar = serializeGrammar;\nfunction serializeProduction(node) {\n    function convertDefinition(definition) {\n        return utils_1.map(definition, serializeProduction);\n    }\n    /* istanbul ignore else */\n    if (node instanceof NonTerminal) {\n        return {\n            type: \"NonTerminal\",\n            name: node.nonTerminalName,\n            idx: node.idx\n        };\n    }\n    else if (node instanceof Flat) {\n        return {\n            type: \"Flat\",\n            definition: convertDefinition(node.definition)\n        };\n    }\n    else if (node instanceof Option) {\n        return {\n            type: \"Option\",\n            idx: node.idx,\n            definition: convertDefinition(node.definition)\n        };\n    }\n    else if (node instanceof RepetitionMandatory) {\n        return {\n            type: \"RepetitionMandatory\",\n            name: node.name,\n            idx: node.idx,\n            definition: convertDefinition(node.definition)\n        };\n    }\n    else if (node instanceof RepetitionMandatoryWithSeparator) {\n        return {\n            type: \"RepetitionMandatoryWithSeparator\",\n            name: node.name,\n            idx: node.idx,\n            separator: (serializeProduction(new Terminal({ terminalType: node.separator }))),\n            definition: convertDefinition(node.definition)\n        };\n    }\n    else if (node instanceof RepetitionWithSeparator) {\n        return {\n            type: \"RepetitionWithSeparator\",\n            name: node.name,\n            idx: node.idx,\n            separator: (serializeProduction(new Terminal({ terminalType: node.separator }))),\n            definition: convertDefinition(node.definition)\n        };\n    }\n    else if (node instanceof Repetition) {\n        return {\n            type: \"Repetition\",\n            name: node.name,\n            idx: node.idx,\n            definition: convertDefinition(node.definition)\n        };\n    }\n    else if (node instanceof Alternation) {\n        return {\n            type: \"Alternation\",\n            name: node.name,\n            idx: node.idx,\n            definition: convertDefinition(node.definition)\n        };\n    }\n    else if (node instanceof Terminal) {\n        var serializedTerminal = {\n            type: \"Terminal\",\n            name: tokens_public_1.tokenName(node.terminalType),\n            label: tokens_public_1.tokenLabel(node.terminalType),\n            idx: node.idx\n        };\n        var pattern = node.terminalType.PATTERN;\n        if (node.terminalType.PATTERN) {\n            serializedTerminal.pattern = utils_1.isRegExp(pattern)\n                ? pattern.source\n                : pattern;\n        }\n        return serializedTerminal;\n    }\n    else if (node instanceof Rule) {\n        return {\n            type: \"Rule\",\n            name: node.name,\n            orgText: node.orgText,\n            definition: convertDefinition(node.definition)\n        };\n    }\n    else {\n        throw Error(\"non exhaustive match\");\n    }\n}\nexports.serializeProduction = serializeProduction;\n//# sourceMappingURL=gast_public.js.map", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar utils_1 = require(\"../utils/utils\");\nvar lang_extensions_1 = require(\"../lang/lang_extensions\");\nvar lexer_public_1 = require(\"./lexer_public\");\nvar tokens_1 = require(\"./tokens\");\nfunction tokenLabel(clazz) {\n    if (hasTokenLabel(clazz)) {\n        return clazz.LABEL;\n    }\n    else {\n        return tokenName(clazz);\n    }\n}\nexports.tokenLabel = tokenLabel;\nfunction hasTokenLabel(obj) {\n    return utils_1.isString(obj.LABEL) && obj.LABEL !== \"\";\n}\nexports.hasTokenLabel = hasTokenLabel;\nfunction tokenName(obj) {\n    // The tokenName property is needed under some old versions of node.js (0.10/0.12)\n    // where the Function.prototype.name property is not defined as a 'configurable' property\n    // enable producing readable error messages.\n    /* istanbul ignore if -> will only run in old versions of node.js */\n    if (utils_1.isObject(obj) &&\n        obj.hasOwnProperty(\"tokenName\") &&\n        utils_1.isString(obj.tokenName)) {\n        return obj.tokenName;\n    }\n    else {\n        return lang_extensions_1.functionName(obj);\n    }\n}\nexports.tokenName = tokenName;\nvar PARENT = \"parent\";\nvar CATEGORIES = \"categories\";\nvar LABEL = \"label\";\nvar GROUP = \"group\";\nvar PUSH_MODE = \"push_mode\";\nvar POP_MODE = \"pop_mode\";\nvar LONGER_ALT = \"longer_alt\";\nvar LINE_BREAKS = \"line_breaks\";\nvar START_CHARS_HINT = \"start_chars_hint\";\nfunction createToken(config) {\n    return createTokenInternal(config);\n}\nexports.createToken = createToken;\nfunction createTokenInternal(config) {\n    var tokenName = config.name;\n    var pattern = config.pattern;\n    var tokenType = {};\n    // can be overwritten according to:\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/\n    // name?redirectlocale=en-US&redirectslug=JavaScript%2FReference%2FGlobal_Objects%2FFunction%2Fname\n    /* istanbul ignore if -> will only run in old versions of node.js */\n    if (!lang_extensions_1.defineNameProp(tokenType, tokenName)) {\n        // hack to save the tokenName in situations where the constructor's name property cannot be reconfigured\n        tokenType.tokenName = tokenName;\n    }\n    if (!utils_1.isUndefined(pattern)) {\n        tokenType.PATTERN = pattern;\n    }\n    if (utils_1.has(config, PARENT)) {\n        throw \"The parent property is no longer supported.\\n\" +\n            \"See: https://github.com/SAP/chevrotain/issues/564#issuecomment-349062346 for details.\";\n    }\n    if (utils_1.has(config, CATEGORIES)) {\n        tokenType.CATEGORIES = config[CATEGORIES];\n    }\n    tokens_1.augmentTokenTypes([tokenType]);\n    if (utils_1.has(config, LABEL)) {\n        tokenType.LABEL = config[LABEL];\n    }\n    if (utils_1.has(config, GROUP)) {\n        tokenType.GROUP = config[GROUP];\n    }\n    if (utils_1.has(config, POP_MODE)) {\n        tokenType.POP_MODE = config[POP_MODE];\n    }\n    if (utils_1.has(config, PUSH_MODE)) {\n        tokenType.PUSH_MODE = config[PUSH_MODE];\n    }\n    if (utils_1.has(config, LONGER_ALT)) {\n        tokenType.LONGER_ALT = config[LONGER_ALT];\n    }\n    if (utils_1.has(config, LINE_BREAKS)) {\n        tokenType.LINE_BREAKS = config[LINE_BREAKS];\n    }\n    if (utils_1.has(config, START_CHARS_HINT)) {\n        tokenType.START_CHARS_HINT = config[START_CHARS_HINT];\n    }\n    return tokenType;\n}\nexports.EOF = createToken({ name: \"EOF\", pattern: lexer_public_1.Lexer.NA });\ntokens_1.augmentTokenTypes([exports.EOF]);\nfunction createTokenInstance(tokType, image, startOffset, endOffset, startLine, endLine, startColumn, endColumn) {\n    return {\n        image: image,\n        startOffset: startOffset,\n        endOffset: endOffset,\n        startLine: startLine,\n        endLine: endLine,\n        startColumn: startColumn,\n        endColumn: endColumn,\n        tokenTypeIdx: tokType.tokenTypeIdx,\n        tokenType: tokType\n    };\n}\nexports.createTokenInstance = createTokenInstance;\nfunction tokenMatcher(token, tokType) {\n    return tokens_1.tokenStructuredMatcher(token, tokType);\n}\nexports.tokenMatcher = tokenMatcher;\n//# sourceMappingURL=tokens_public.js.map", "\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar lang_extensions_1 = require(\"../../lang/lang_extensions\");\nvar utils_1 = require(\"../../utils/utils\");\nvar follow_1 = require(\"../grammar/follow\");\nvar tokens_public_1 = require(\"../../scan/tokens_public\");\nvar gast_builder_1 = require(\"../gast_builder\");\nvar cst_1 = require(\"../cst/cst\");\nvar errors_public_1 = require(\"../errors_public\");\nvar gast_resolver_public_1 = require(\"../grammar/gast/gast_resolver_public\");\nvar recoverable_1 = require(\"./traits/recoverable\");\nvar looksahead_1 = require(\"./traits/looksahead\");\nvar tree_builder_1 = require(\"./traits/tree_builder\");\nvar lexer_adapter_1 = require(\"./traits/lexer_adapter\");\nvar recognizer_api_1 = require(\"./traits/recognizer_api\");\nvar recognizer_engine_1 = require(\"./traits/recognizer_engine\");\nvar error_handler_1 = require(\"./traits/error_handler\");\nvar context_assist_1 = require(\"./traits/context_assist\");\nexports.END_OF_FILE = tokens_public_1.createTokenInstance(tokens_public_1.EOF, \"\", NaN, NaN, NaN, NaN, NaN, NaN);\nObject.freeze(exports.END_OF_FILE);\nexports.DEFAULT_PARSER_CONFIG = Object.freeze({\n    recoveryEnabled: false,\n    maxLookahead: 4,\n    ignoredIssues: {},\n    dynamicTokensEnabled: false,\n    outputCst: true,\n    errorMessageProvider: errors_public_1.defaultParserErrorProvider,\n    serializedGrammar: null,\n    nodeLocationTracking: \"none\"\n});\nexports.DEFAULT_RULE_CONFIG = Object.freeze({\n    recoveryValueFunc: function () { return undefined; },\n    resyncEnabled: true\n});\nvar ParserDefinitionErrorType;\n(function (ParserDefinitionErrorType) {\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"INVALID_RULE_NAME\"] = 0] = \"INVALID_RULE_NAME\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"DUPLICATE_RULE_NAME\"] = 1] = \"DUPLICATE_RULE_NAME\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"INVALID_RULE_OVERRIDE\"] = 2] = \"INVALID_RULE_OVERRIDE\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"DUPLICATE_PRODUCTIONS\"] = 3] = \"DUPLICATE_PRODUCTIONS\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"UNRESOLVED_SUBRULE_REF\"] = 4] = \"UNRESOLVED_SUBRULE_REF\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"LEFT_RECURSION\"] = 5] = \"LEFT_RECURSION\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"NONE_LAST_EMPTY_ALT\"] = 6] = \"NONE_LAST_EMPTY_ALT\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"AMBIGUOUS_ALTS\"] = 7] = \"AMBIGUOUS_ALTS\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"CONFLICT_TOKENS_RULES_NAMESPACE\"] = 8] = \"CONFLICT_TOKENS_RULES_NAMESPACE\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"INVALID_TOKEN_NAME\"] = 9] = \"INVALID_TOKEN_NAME\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"INVALID_NESTED_RULE_NAME\"] = 10] = \"INVALID_NESTED_RULE_NAME\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"DUPLICATE_NESTED_NAME\"] = 11] = \"DUPLICATE_NESTED_NAME\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"NO_NON_EMPTY_LOOKAHEAD\"] = 12] = \"NO_NON_EMPTY_LOOKAHEAD\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"AMBIGUOUS_PREFIX_ALTS\"] = 13] = \"AMBIGUOUS_PREFIX_ALTS\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"TOO_MANY_ALTS\"] = 14] = \"TOO_MANY_ALTS\";\n})(ParserDefinitionErrorType = exports.ParserDefinitionErrorType || (exports.ParserDefinitionErrorType = {}));\nfunction EMPTY_ALT(value) {\n    if (value === void 0) { value = undefined; }\n    return function () {\n        return value;\n    };\n}\nexports.EMPTY_ALT = EMPTY_ALT;\nvar Parser = /** @class */ (function () {\n    function Parser(tokenVocabulary, config) {\n        if (config === void 0) { config = exports.DEFAULT_PARSER_CONFIG; }\n        this.ignoredIssues = exports.DEFAULT_PARSER_CONFIG.ignoredIssues;\n        this.definitionErrors = [];\n        this.selfAnalysisDone = false;\n        var that = this;\n        that.initErrorHandler(config);\n        that.initLexerAdapter();\n        that.initLooksAhead(config);\n        that.initRecognizerEngine(tokenVocabulary, config);\n        that.initRecoverable(config);\n        that.initTreeBuilder(config);\n        that.initContentAssist();\n        this.ignoredIssues = utils_1.has(config, \"ignoredIssues\")\n            ? config.ignoredIssues\n            : exports.DEFAULT_PARSER_CONFIG.ignoredIssues;\n        // Avoid performance regressions in newer versions of V8\n        utils_1.toFastProperties(this);\n    }\n    /**\n     *  @deprecated use the **instance** method with the same name instead\n     */\n    Parser.performSelfAnalysis = function (parserInstance) {\n        ;\n        parserInstance.performSelfAnalysis();\n    };\n    Parser.prototype.performSelfAnalysis = function () {\n        var _this = this;\n        var defErrorsMsgs;\n        this.selfAnalysisDone = true;\n        var className = lang_extensions_1.classNameFromInstance(this);\n        var productions = this.gastProductionsCache;\n        if (this.serializedGrammar) {\n            var rules = gast_builder_1.deserializeGrammar(this.serializedGrammar, this.tokensMap);\n            utils_1.forEach(rules, function (rule) {\n                _this.gastProductionsCache.put(rule.name, rule);\n            });\n        }\n        var resolverErrors = gast_resolver_public_1.resolveGrammar({\n            rules: productions.values()\n        });\n        this.definitionErrors.push.apply(this.definitionErrors, resolverErrors); // mutability for the win?\n        // only perform additional grammar validations IFF no resolving errors have occurred.\n        // as unresolved grammar may lead to unhandled runtime exceptions in the follow up validations.\n        if (utils_1.isEmpty(resolverErrors)) {\n            var validationErrors = gast_resolver_public_1.validateGrammar({\n                rules: productions.values(),\n                maxLookahead: this.maxLookahead,\n                tokenTypes: utils_1.values(this.tokensMap),\n                ignoredIssues: this.ignoredIssues,\n                errMsgProvider: errors_public_1.defaultGrammarValidatorErrorProvider,\n                grammarName: className\n            });\n            this.definitionErrors.push.apply(this.definitionErrors, validationErrors); // mutability for the win?\n        }\n        if (utils_1.isEmpty(this.definitionErrors)) {\n            // this analysis may fail if the grammar is not perfectly valid\n            var allFollows = follow_1.computeAllProdsFollows(productions.values());\n            this.resyncFollows = allFollows;\n        }\n        var cstAnalysisResult = cst_1.analyzeCst(productions.values(), this.fullRuleNameToShort);\n        this.allRuleNames = cstAnalysisResult.allRuleNames;\n        if (!Parser.DEFER_DEFINITION_ERRORS_HANDLING &&\n            !utils_1.isEmpty(this.definitionErrors)) {\n            defErrorsMsgs = utils_1.map(this.definitionErrors, function (defError) { return defError.message; });\n            throw new Error(\"Parser Definition Errors detected:\\n \" + defErrorsMsgs.join(\"\\n-------------------------------\\n\"));\n        }\n    };\n    // Set this flag to true if you don't want the Parser to throw error when problems in it's definition are detected.\n    // (normally during the parser's constructor).\n    // This is a design time flag, it will not affect the runtime error handling of the parser, just design time errors,\n    // for example: duplicate rule names, referencing an unresolved subrule, ect...\n    // This flag should not be enabled during normal usage, it is used in special situations, for example when\n    // needing to display the parser definition errors in some GUI(online playground).\n    Parser.DEFER_DEFINITION_ERRORS_HANDLING = false;\n    return Parser;\n}());\nexports.Parser = Parser;\nutils_1.applyMixins(Parser, [\n    recoverable_1.Recoverable,\n    looksahead_1.LooksAhead,\n    tree_builder_1.TreeBuilder,\n    lexer_adapter_1.LexerAdapter,\n    recognizer_engine_1.RecognizerEngine,\n    recognizer_api_1.RecognizerApi,\n    error_handler_1.ErrorHandler,\n    context_assist_1.ContentAssist\n]);\nvar CstParser = /** @class */ (function (_super) {\n    __extends(CstParser, _super);\n    function CstParser(tokenVocabulary, config) {\n        if (config === void 0) { config = exports.DEFAULT_PARSER_CONFIG; }\n        var _this = this;\n        var configClone = utils_1.cloneObj(config);\n        configClone.outputCst = true;\n        _this = _super.call(this, tokenVocabulary, configClone) || this;\n        return _this;\n    }\n    return CstParser;\n}(Parser));\nexports.CstParser = CstParser;\nvar EmbeddedActionsParser = /** @class */ (function (_super) {\n    __extends(EmbeddedActionsParser, _super);\n    function EmbeddedActionsParser(tokenVocabulary, config) {\n        if (config === void 0) { config = exports.DEFAULT_PARSER_CONFIG; }\n        var _this = this;\n        var configClone = utils_1.cloneObj(config);\n        configClone.outputCst = false;\n        _this = _super.call(this, tokenVocabulary, configClone) || this;\n        return _this;\n    }\n    return EmbeddedActionsParser;\n}(Parser));\nexports.EmbeddedActionsParser = EmbeddedActionsParser;\n//# sourceMappingURL=parser.js.map", "// @ts-ignore: import types for declarations\nimport { createToken, Lexer } from 'chevrotain';\nimport { terminals } from './terminals';\nimport { keywords } from './keywords';\nexport var sparqlTokenMap = {\n    IRIREF: terminals.IRIREF,\n    LANGTAG: terminals.LANGTAG,\n    INTEGER: terminals.INTEGER,\n    DECIMAL: terminals.DECIMAL,\n    DOUBLE: terminals.DOUBLE,\n    INTEGER_POSITIVE: terminals.INTEGER_POSITIVE,\n    DECIMAL_POSITIVE: terminals.DECIMAL_POSITIVE,\n    DOUBLE_POSITIVE: terminals.DOUBLE_POSITIVE,\n    INTEGER_NEGATIVE: terminals.INTEGER_NEGATIVE,\n    DECIMAL_NEGATIVE: terminals.DECIMAL_NEGATIVE,\n    DOUBLE_NEGATIVE: terminals.DOUBLE_NEGATIVE,\n    STRING_LITERAL1: terminals.STRING_LITERAL1,\n    STRING_LITERAL2: terminals.STRING_LITERAL2,\n    STRING_LITERAL_LONG1: terminals.STRING_LITERAL_LONG1,\n    STRING_LITERAL_LONG2: terminals.STRING_LITERAL_LONG2,\n    NIL: terminals.NIL,\n    ANON: terminals.ANON,\n    PNAME_NS: terminals.PNAME_NS,\n    PNAME_LN: terminals.PNAME_LN,\n    BLANK_NODE_LABEL: terminals.BLANK_NODE_LABEL,\n    VAR1: terminals.VAR1,\n    VAR2: terminals.VAR2,\n    PERCENT: terminals.PERCENT,\n    Comment: createToken({\n        name: 'Comment',\n        pattern: /#[^\\n]*/,\n        group: 'comments',\n    }),\n    LCurly: createToken({ name: 'LCurly', pattern: '{' }),\n    RCurly: createToken({ name: 'RCurly', pattern: '}' }),\n    LParen: createToken({ name: 'LParen', pattern: '(' }),\n    RParen: createToken({ name: 'RParen', pattern: ')' }),\n    WhiteSpace: createToken({\n        name: 'WhiteSpace',\n        pattern: /\\s+/,\n        group: Lexer.SKIPPED,\n        line_breaks: true,\n    }),\n    Star: createToken({\n        name: 'Star',\n        pattern: '*',\n    }),\n    UNKNOWN: keywords.UNKNOWN,\n    Period: createToken({\n        name: 'Period',\n        pattern: '.',\n    }),\n    QuestionMark: createToken({\n        name: 'QuestionMark',\n        pattern: '?',\n    }),\n    Plus: createToken({\n        name: 'Plus',\n        pattern: '+',\n    }),\n    Minus: createToken({\n        name: 'Minus',\n        pattern: '-',\n    }),\n    LBracket: createToken({\n        name: 'LBracket',\n        pattern: '[',\n    }),\n    RBracket: createToken({\n        name: 'RBracket',\n        pattern: ']',\n    }),\n    Semicolon: createToken({\n        name: 'Semicolon',\n        pattern: ';',\n    }),\n    Comma: createToken({\n        name: 'Comma',\n        pattern: ',',\n    }),\n    Pipe: createToken({\n        name: 'Pipe',\n        pattern: '|',\n    }),\n    ForwardSlash: createToken({\n        name: 'ForwardSlash',\n        pattern: '/',\n    }),\n    Caret: createToken({\n        name: 'Caret',\n        pattern: '^',\n    }),\n    DoubleCaret: createToken({\n        name: 'DoubleCaret',\n        pattern: '^^',\n    }),\n    Bang: createToken({\n        name: 'Bang',\n        pattern: '!',\n    }),\n    LogicalOr: createToken({\n        name: 'LogicalOr',\n        pattern: '||',\n    }),\n    LogicalAnd: createToken({\n        name: 'LogicalAnd',\n        pattern: '&&',\n    }),\n    Equals: createToken({\n        name: 'Equals',\n        pattern: '=',\n    }),\n    NotEquals: createToken({\n        name: 'NotEquals',\n        pattern: '!=',\n    }),\n    LessThan: createToken({\n        name: 'LessThan',\n        pattern: '<',\n    }),\n    GreaterThan: createToken({\n        name: 'GreaterThan',\n        pattern: '>',\n    }),\n    LessThanEquals: createToken({\n        name: 'LessThanEquals',\n        pattern: '<=',\n    }),\n    GreaterThanEquals: createToken({\n        name: 'GreaterThanEquals',\n        pattern: '>=',\n    }),\n    LEmbed: createToken({\n        name: 'LEmbed',\n        pattern: '<<',\n    }),\n    REmbed: createToken({\n        name: 'REmbed',\n        pattern: '>>',\n    }),\n    SELECT: keywords.SELECT,\n    CONSTRUCT: keywords.CONSTRUCT,\n    DISTINCT: keywords.DISTINCT,\n    START: keywords.START,\n    END: keywords.END,\n    VIA: keywords.VIA,\n    CYCLIC: keywords.CYCLIC,\n    PATHS_SHORTEST: keywords.PATHS_SHORTEST,\n    PATHS_ALL: keywords.PATHS_ALL,\n    PATHS: keywords.PATHS,\n    AS: keywords.AS,\n    WHERE: keywords.WHERE,\n    A: keywords.A,\n    GROUP_BY: keywords.GROUP_BY,\n    ORDER_BY: keywords.ORDER_BY,\n    BY: keywords.BY,\n    BASE: keywords.BASE,\n    PREFIX: keywords.PREFIX,\n    DESCRIBE: keywords.DESCRIBE,\n    ASK: keywords.ASK,\n    FROM: keywords.FROM,\n    REDUCED: keywords.REDUCED,\n    NAMED: keywords.NAMED,\n    HAVING: keywords.HAVING,\n    ASC: keywords.ASC,\n    DESC: keywords.DESC,\n    OFFSET: keywords.OFFSET,\n    LIMIT: keywords.LIMIT,\n    VALUES: keywords.VALUES,\n    LOAD: keywords.LOAD,\n    SILENT: keywords.SILENT,\n    INTO: keywords.INTO,\n    CLEAR: keywords.CLEAR,\n    DROP: keywords.DROP,\n    CREATE: keywords.CREATE,\n    ADD: keywords.ADD,\n    TO: keywords.TO,\n    MOVE: keywords.MOVE,\n    COPY: keywords.COPY,\n    INSERT_DATA: keywords.INSERT_DATA,\n    DELETE_DATA: keywords.DELETE_DATA,\n    DELETE_WHERE: keywords.DELETE_WHERE,\n    WITH: keywords.WITH,\n    DELETE: keywords.DELETE,\n    INSERT: keywords.INSERT,\n    USING: keywords.USING,\n    DEFAULT: keywords.DEFAULT,\n    GRAPH: keywords.GRAPH,\n    ALL: keywords.ALL,\n    OPTIONAL: keywords.OPTIONAL,\n    SERVICE: keywords.SERVICE,\n    BIND: keywords.BIND,\n    UNNEST: keywords.UNNEST,\n    UNDEF: keywords.UNDEF,\n    MINUS: keywords.MINUS,\n    UNION: keywords.UNION,\n    FILTER: keywords.FILTER,\n    STR: keywords.STR,\n    LANG: keywords.LANG,\n    LANGMATCHES: keywords.LANGMATCHES,\n    DATATYPE: keywords.DATATYPE,\n    BOUND: keywords.BOUND,\n    IRI: keywords.IRI,\n    URI: keywords.URI,\n    BNODE: keywords.BNODE,\n    RAND: keywords.RAND,\n    ABS: keywords.ABS,\n    CEIL: keywords.CEIL,\n    FLOOR: keywords.FLOOR,\n    ROUND: keywords.ROUND,\n    CONCAT: keywords.CONCAT,\n    STRLEN: keywords.STRLEN,\n    UCASE: keywords.UCASE,\n    LCASE: keywords.LCASE,\n    ENCODE_FOR_URI: keywords.ENCODE_FOR_URI,\n    CONTAINS: keywords.CONTAINS,\n    STRSTARTS: keywords.STRSTARTS,\n    STRENDS: keywords.STRENDS,\n    STRBEFORE: keywords.STRBEFORE,\n    STRAFTER: keywords.STRAFTER,\n    YEAR: keywords.YEAR,\n    MONTH: keywords.MONTH,\n    DAY: keywords.DAY,\n    HOURS: keywords.HOURS,\n    MINUTES: keywords.MINUTES,\n    SECONDS: keywords.SECONDS,\n    TIMEZONE: keywords.TIMEZONE,\n    TZ: keywords.TZ,\n    NOW: keywords.NOW,\n    UUID: keywords.UUID,\n    STRUUID: keywords.STRUUID,\n    MD5: keywords.MD5,\n    SHA1: keywords.SHA1,\n    SHA256: keywords.SHA256,\n    SHA384: keywords.SHA384,\n    SHA512: keywords.SHA512,\n    COALESCE: keywords.COALESCE,\n    IF: keywords.IF,\n    STRLANG: keywords.STRLANG,\n    STRDT: keywords.STRDT,\n    sameTerm: keywords.sameTerm,\n    isIRI: keywords.isIRI,\n    isURI: keywords.isURI,\n    isBLANK: keywords.isBLANK,\n    isLITERAL: keywords.isLITERAL,\n    isNUMERIC: keywords.isNUMERIC,\n    REGEX: keywords.REGEX,\n    SUBSTR: keywords.SUBSTR,\n    REPLACE: keywords.REPLACE,\n    EXISTS: keywords.EXISTS,\n    NOT_EXISTS: keywords.NOT_EXISTS,\n    COUNT: keywords.COUNT,\n    SUM: keywords.SUM,\n    MIN: keywords.MIN,\n    AVG: keywords.AVG,\n    SAMPLE: keywords.SAMPLE,\n    GROUP_CONCAT: keywords.GROUP_CONCAT,\n    SEPARATOR: keywords.SEPARATOR,\n    TRUE: keywords.TRUE,\n    FALSE: keywords.FALSE,\n    IN: keywords.IN,\n    NOT_IN: keywords.NOT_IN,\n    MAX_LENGTH: keywords.MAX_LENGTH,\n    MAX: keywords.MAX,\n    VALIDATE: keywords.VALIDATE,\n    SHAPES: keywords.SHAPES,\n    SHAPE: keywords.SHAPE,\n    PER: keywords.PER,\n};\nexport var baseTokens = [\n    sparqlTokenMap.NIL,\n    sparqlTokenMap.ANON,\n    sparqlTokenMap.LCurly,\n    sparqlTokenMap.RCurly,\n    sparqlTokenMap.LParen,\n    sparqlTokenMap.RParen,\n    sparqlTokenMap.WhiteSpace,\n    sparqlTokenMap.IRIREF,\n    sparqlTokenMap.LANGTAG,\n    sparqlTokenMap.DOUBLE,\n    sparqlTokenMap.DECIMAL,\n    sparqlTokenMap.INTEGER,\n    sparqlTokenMap.DOUBLE_POSITIVE,\n    sparqlTokenMap.DECIMAL_POSITIVE,\n    sparqlTokenMap.INTEGER_POSITIVE,\n    sparqlTokenMap.DOUBLE_NEGATIVE,\n    sparqlTokenMap.DECIMAL_NEGATIVE,\n    sparqlTokenMap.INTEGER_NEGATIVE,\n    sparqlTokenMap.STRING_LITERAL1,\n    sparqlTokenMap.STRING_LITERAL2,\n    sparqlTokenMap.STRING_LITERAL_LONG1,\n    sparqlTokenMap.STRING_LITERAL_LONG2,\n    sparqlTokenMap.PNAME_NS,\n    sparqlTokenMap.PNAME_LN,\n    sparqlTokenMap.BLANK_NODE_LABEL,\n    sparqlTokenMap.VAR1,\n    sparqlTokenMap.VAR2,\n    sparqlTokenMap.Comment,\n    sparqlTokenMap.SELECT,\n    sparqlTokenMap.CONSTRUCT,\n    sparqlTokenMap.DISTINCT,\n    sparqlTokenMap.Star,\n    sparqlTokenMap.WHERE,\n    sparqlTokenMap.GROUP_BY,\n    sparqlTokenMap.ORDER_BY,\n    sparqlTokenMap.BY,\n    sparqlTokenMap.Period,\n    sparqlTokenMap.QuestionMark,\n    sparqlTokenMap.Plus,\n    sparqlTokenMap.Minus,\n    sparqlTokenMap.LBracket,\n    sparqlTokenMap.RBracket,\n    sparqlTokenMap.PERCENT,\n    sparqlTokenMap.BASE,\n    sparqlTokenMap.PREFIX,\n    sparqlTokenMap.DESCRIBE,\n    sparqlTokenMap.ASK,\n    sparqlTokenMap.FROM,\n    sparqlTokenMap.REDUCED,\n    sparqlTokenMap.NAMED,\n    sparqlTokenMap.HAVING,\n    sparqlTokenMap.ASC,\n    sparqlTokenMap.DESC,\n    sparqlTokenMap.OFFSET,\n    sparqlTokenMap.LIMIT,\n    sparqlTokenMap.VALUES,\n    sparqlTokenMap.LOAD,\n    sparqlTokenMap.SILENT,\n    sparqlTokenMap.INTO,\n    sparqlTokenMap.AS,\n    sparqlTokenMap.CLEAR,\n    sparqlTokenMap.DROP,\n    sparqlTokenMap.CREATE,\n    sparqlTokenMap.ADD,\n    sparqlTokenMap.TO,\n    sparqlTokenMap.MOVE,\n    sparqlTokenMap.COPY,\n    sparqlTokenMap.INSERT_DATA,\n    sparqlTokenMap.DELETE_DATA,\n    sparqlTokenMap.DELETE_WHERE,\n    sparqlTokenMap.WITH,\n    sparqlTokenMap.DELETE,\n    sparqlTokenMap.INSERT,\n    sparqlTokenMap.USING,\n    sparqlTokenMap.DEFAULT,\n    sparqlTokenMap.GRAPH,\n    sparqlTokenMap.ALL,\n    sparqlTokenMap.OPTIONAL,\n    sparqlTokenMap.SERVICE,\n    sparqlTokenMap.BIND,\n    sparqlTokenMap.UNDEF,\n    sparqlTokenMap.MINUS,\n    sparqlTokenMap.UNION,\n    sparqlTokenMap.FILTER,\n    sparqlTokenMap.LANGMATCHES,\n    sparqlTokenMap.LANG,\n    sparqlTokenMap.DATATYPE,\n    sparqlTokenMap.BOUND,\n    sparqlTokenMap.IRI,\n    sparqlTokenMap.URI,\n    sparqlTokenMap.BNODE,\n    sparqlTokenMap.RAND,\n    sparqlTokenMap.ABS,\n    sparqlTokenMap.CEIL,\n    sparqlTokenMap.FLOOR,\n    sparqlTokenMap.ROUND,\n    sparqlTokenMap.CONCAT,\n    sparqlTokenMap.STRLEN,\n    sparqlTokenMap.UCASE,\n    sparqlTokenMap.LCASE,\n    sparqlTokenMap.ENCODE_FOR_URI,\n    sparqlTokenMap.CONTAINS,\n    sparqlTokenMap.STRSTARTS,\n    sparqlTokenMap.STRENDS,\n    sparqlTokenMap.STRBEFORE,\n    sparqlTokenMap.STRAFTER,\n    sparqlTokenMap.YEAR,\n    sparqlTokenMap.MONTH,\n    sparqlTokenMap.DAY,\n    sparqlTokenMap.HOURS,\n    sparqlTokenMap.MINUTES,\n    sparqlTokenMap.SECONDS,\n    sparqlTokenMap.TIMEZONE,\n    sparqlTokenMap.TZ,\n    sparqlTokenMap.NOW,\n    sparqlTokenMap.UUID,\n    sparqlTokenMap.STRUUID,\n    sparqlTokenMap.MD5,\n    sparqlTokenMap.SHA1,\n    sparqlTokenMap.SHA256,\n    sparqlTokenMap.SHA384,\n    sparqlTokenMap.SHA512,\n    sparqlTokenMap.COALESCE,\n    sparqlTokenMap.IF,\n    sparqlTokenMap.STRLANG,\n    sparqlTokenMap.STRDT,\n    sparqlTokenMap.STR,\n    sparqlTokenMap.sameTerm,\n    sparqlTokenMap.isIRI,\n    sparqlTokenMap.isURI,\n    sparqlTokenMap.isBLANK,\n    sparqlTokenMap.isLITERAL,\n    sparqlTokenMap.isNUMERIC,\n    sparqlTokenMap.REGEX,\n    sparqlTokenMap.SUBSTR,\n    sparqlTokenMap.REPLACE,\n    sparqlTokenMap.EXISTS,\n    sparqlTokenMap.NOT_EXISTS,\n    sparqlTokenMap.COUNT,\n    sparqlTokenMap.SUM,\n    sparqlTokenMap.MIN,\n    sparqlTokenMap.MAX_LENGTH,\n    sparqlTokenMap.MAX,\n    sparqlTokenMap.AVG,\n    sparqlTokenMap.SAMPLE,\n    sparqlTokenMap.GROUP_CONCAT,\n    sparqlTokenMap.SEPARATOR,\n    sparqlTokenMap.TRUE,\n    sparqlTokenMap.FALSE,\n    sparqlTokenMap.Semicolon,\n    sparqlTokenMap.Comma,\n    sparqlTokenMap.ForwardSlash,\n    sparqlTokenMap.DoubleCaret,\n    sparqlTokenMap.Caret,\n    sparqlTokenMap.LogicalOr,\n    sparqlTokenMap.Pipe,\n    sparqlTokenMap.LogicalAnd,\n    sparqlTokenMap.NotEquals,\n    sparqlTokenMap.Bang,\n    sparqlTokenMap.Equals,\n    sparqlTokenMap.LessThanEquals,\n    sparqlTokenMap.GreaterThanEquals,\n    sparqlTokenMap.LEmbed,\n    sparqlTokenMap.REmbed,\n    sparqlTokenMap.LessThan,\n    sparqlTokenMap.GreaterThan,\n    sparqlTokenMap.IN,\n    sparqlTokenMap.NOT_IN,\n    sparqlTokenMap.A,\n    sparqlTokenMap.UNKNOWN,\n];\nexport var pathsTokens = [\n    sparqlTokenMap.START,\n    sparqlTokenMap.END,\n    sparqlTokenMap.VIA,\n    sparqlTokenMap.CYCLIC,\n    sparqlTokenMap.PATHS_SHORTEST,\n    sparqlTokenMap.PATHS_ALL,\n    sparqlTokenMap.PATHS,\n];\nexport var nonStandardTokens = pathsTokens.concat([\n    sparqlTokenMap.UNNEST,\n    sparqlTokenMap.VALIDATE,\n    sparqlTokenMap.SHAPES,\n    sparqlTokenMap.SHAPE,\n    sparqlTokenMap.PER,\n]);\nvar indexOfSelect = baseTokens.indexOf(sparqlTokenMap.SELECT);\nexport var stardogSparqlTokens = baseTokens.slice(0, indexOfSelect).concat(nonStandardTokens, baseTokens.slice(indexOfSelect));\nexport var sparqlTokenTypes = baseTokens.concat(nonStandardTokens);\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar utils_1 = require(\"../utils/utils\");\nfunction classNameFromInstance(instance) {\n    return functionName(instance.constructor);\n}\nexports.classNameFromInstance = classNameFromInstance;\nvar FUNC_NAME_REGEXP = /^\\s*function\\s*(\\S*)\\s*\\(/;\nvar NAME = \"name\";\n/* istanbul ignore next too many hacks for IE/old versions of node.js here*/\nfunction functionName(func) {\n    // Engines that support Function.prototype.name OR the nth (n>1) time after\n    // the name has been computed in the following else block.\n    var existingNameProp = func.name;\n    if (existingNameProp) {\n        return existingNameProp;\n    }\n    // hack for IE and engines that do not support Object.defineProperty on function.name (Node.js 0.10 && 0.12)\n    var computedName = func.toString().match(FUNC_NAME_REGEXP)[1];\n    return computedName;\n}\nexports.functionName = functionName;\n/**\n * @returns {boolean} - has the property been successfully defined\n */\nfunction defineNameProp(obj, nameValue) {\n    var namePropDescriptor = Object.getOwnPropertyDescriptor(obj, NAME);\n    /* istanbul ignore else -> will only run in old versions of node.js */\n    if (utils_1.isUndefined(namePropDescriptor) || namePropDescriptor.configurable) {\n        Object.defineProperty(obj, NAME, {\n            enumerable: false,\n            configurable: true,\n            writable: false,\n            value: nameValue\n        });\n        return true;\n    }\n    /* istanbul ignore next -> will only run in old versions of node.js */\n    return false;\n}\nexports.defineNameProp = defineNameProp;\n/**\n * simple Hashtable between a string and some generic value\n * this should be removed once typescript supports ES6 style Hashtable\n */\nvar HashTable = /** @class */ (function () {\n    function HashTable() {\n        this._state = {};\n    }\n    HashTable.prototype.keys = function () {\n        return utils_1.keys(this._state);\n    };\n    HashTable.prototype.values = function () {\n        return utils_1.values(this._state);\n    };\n    HashTable.prototype.put = function (key, value) {\n        this._state[key] = value;\n    };\n    HashTable.prototype.putAll = function (other) {\n        this._state = utils_1.assign(this._state, other._state);\n    };\n    HashTable.prototype.get = function (key) {\n        // To avoid edge case with a key called \"hasOwnProperty\" we need to perform the commented out check below\n        // -> if (Object.prototype.hasOwnProperty.call(this._state, key)) { ... } <-\n        // however this costs nearly 25% of the parser's runtime.\n        // if someone decides to name their Parser class \"hasOwnProperty\" they deserve what they will get :)\n        return this._state[key];\n    };\n    HashTable.prototype.containsKey = function (key) {\n        return utils_1.has(this._state, key);\n    };\n    HashTable.prototype.clear = function () {\n        this._state = {};\n    };\n    return HashTable;\n}());\nexports.HashTable = HashTable;\n//# sourceMappingURL=lang_extensions.js.map", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar gast_public_1 = require(\"./gast_public\");\nvar GAstVisitor = /** @class */ (function () {\n    function GAstVisitor() {\n    }\n    GAstVisitor.prototype.visit = function (node) {\n        /* istanbul ignore next */\n        if (node instanceof gast_public_1.NonTerminal) {\n            return this.visitNonTerminal(node);\n        }\n        else if (node instanceof gast_public_1.Flat) {\n            return this.visitFlat(node);\n        }\n        else if (node instanceof gast_public_1.Option) {\n            return this.visitOption(node);\n        }\n        else if (node instanceof gast_public_1.RepetitionMandatory) {\n            return this.visitRepetitionMandatory(node);\n        }\n        else if (node instanceof gast_public_1.RepetitionMandatoryWithSeparator) {\n            return this.visitRepetitionMandatoryWithSeparator(node);\n        }\n        else if (node instanceof gast_public_1.RepetitionWithSeparator) {\n            return this.visitRepetitionWithSeparator(node);\n        }\n        else if (node instanceof gast_public_1.Repetition) {\n            return this.visitRepetition(node);\n        }\n        else if (node instanceof gast_public_1.Alternation) {\n            return this.visitAlternation(node);\n        }\n        else if (node instanceof gast_public_1.Terminal) {\n            return this.visitTerminal(node);\n        }\n        else if (node instanceof gast_public_1.Rule) {\n            return this.visitRule(node);\n        }\n        else {\n            throw Error(\"non exhaustive match\");\n        }\n    };\n    GAstVisitor.prototype.visitNonTerminal = function (node) { };\n    GAstVisitor.prototype.visitFlat = function (node) { };\n    GAstVisitor.prototype.visitOption = function (node) { };\n    GAstVisitor.prototype.visitRepetition = function (node) { };\n    GAstVisitor.prototype.visitRepetitionMandatory = function (node) { };\n    GAstVisitor.prototype.visitRepetitionMandatoryWithSeparator = function (node) { };\n    GAstVisitor.prototype.visitRepetitionWithSeparator = function (node) { };\n    GAstVisitor.prototype.visitAlternation = function (node) { };\n    GAstVisitor.prototype.visitTerminal = function (node) { };\n    GAstVisitor.prototype.visitRule = function (node) { };\n    return GAstVisitor;\n}());\nexports.GAstVisitor = GAstVisitor;\n//# sourceMappingURL=gast_visitor_public.js.map", "var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nexport var traverse = function (root, visit) {\n    _traverse(root, null, visit);\n};\nexport var unsafeTraverse = function (root, visit) {\n    _traverse(root, null, visit, false);\n};\nexport function isCstNode(object) {\n    return Boolean(object && 'name' in object);\n}\nexport function isIToken(object) {\n    return Boolean(object && 'tokenType' in object);\n}\n// Given a chevrotain ruleStack (array of rule parser rule names) and a root\n// CstNode, attempts to walk down the tree branching out from that node by\n// following the rule stack to its end, and returns the first CstElement found\n// at that point (or undefined if the ruleStack path cannot be completed).\n// Useful to avoid lots of boilerplate.\nexport function getFirstChildCstElementByRuleStack(ruleStack, rootCstNode) {\n    if (!ruleStack || !ruleStack.length) {\n        // No stack to follow, so just return the root node provided.\n        return rootCstNode;\n    }\n    var currentCstElement = rootCstNode;\n    for (var _i = 0, ruleStack_1 = ruleStack; _i < ruleStack_1.length; _i++) {\n        var ruleName = ruleStack_1[_i];\n        if (!isCstNode(currentCstElement) ||\n            !currentCstElement.children[ruleName]) {\n            // The ruleStack was not exhausted and yet we can go no further; return\n            // `undefined`, since there is no value at the specified path.\n            return;\n        }\n        currentCstElement = currentCstElement.children[ruleName][0];\n    }\n    return currentCstElement;\n}\nvar TraverseContext = /** @class */ (function () {\n    function TraverseContext(_a) {\n        var node = _a.node, parentCtx = _a.parentCtx;\n        this.node = __assign({}, node);\n        this.parentCtx = __assign({}, parentCtx);\n    }\n    return TraverseContext;\n}());\nvar _traverse = function (root, ctx, visit, visitSafely) {\n    if (ctx === void 0) { ctx = new TraverseContext({ node: root }); }\n    if (visitSafely === void 0) { visitSafely = true; }\n    if (!isCstNode(root)) {\n        // must be a token\n        return visit(visitSafely ? __assign({}, ctx) : ctx);\n    }\n    // is a grammar rule node\n    var children = root.children;\n    Object.keys(children).forEach(function (key) {\n        var childType = children[key];\n        if (!childType.length) {\n            return;\n        }\n        childType.forEach(function (child) {\n            var childCtx = visitSafely\n                ? new TraverseContext({ node: child, parentCtx: ctx })\n                : { node: child, parentCtx: ctx };\n            var afterVisit = function (transformedCtx) {\n                var nextCtx = childCtx;\n                if (transformedCtx) {\n                    nextCtx = visitSafely\n                        ? new TraverseContext({\n                            node: transformedCtx.node,\n                            parentCtx: transformedCtx.parentCtx,\n                        })\n                        : {\n                            node: transformedCtx.node,\n                            parentCtx: transformedCtx.parentCtx,\n                        };\n                }\n                _traverse(child, nextCtx, visit, visitSafely);\n            };\n            visit(childCtx, afterVisit);\n        });\n    });\n};\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar utils_1 = require(\"../utils/utils\");\nvar MISMATCHED_TOKEN_EXCEPTION = \"MismatchedTokenException\";\nvar NO_VIABLE_ALT_EXCEPTION = \"NoViableAltException\";\nvar EARLY_EXIT_EXCEPTION = \"EarlyExitException\";\nvar NOT_ALL_INPUT_PARSED_EXCEPTION = \"NotAllInputParsedException\";\nvar RECOGNITION_EXCEPTION_NAMES = [\n    MISMATCHED_TOKEN_EXCEPTION,\n    NO_VIABLE_ALT_EXCEPTION,\n    EARLY_EXIT_EXCEPTION,\n    NOT_ALL_INPUT_PARSED_EXCEPTION\n];\nObject.freeze(RECOGNITION_EXCEPTION_NAMES);\n// hacks to bypass no support for custom Errors in javascript/typescript\nfunction isRecognitionException(error) {\n    // can't do instanceof on hacked custom js exceptions\n    return utils_1.contains(RECOGNITION_EXCEPTION_NAMES, error.name);\n}\nexports.isRecognitionException = isRecognitionException;\nfunction MismatchedTokenException(message, token, previousToken) {\n    this.name = MISMATCHED_TOKEN_EXCEPTION;\n    this.message = message;\n    this.token = token;\n    this.previousToken = previousToken;\n    this.resyncedTokens = [];\n}\nexports.MismatchedTokenException = MismatchedTokenException;\n// must use the \"Error.prototype\" instead of \"new Error\"\n// because the stack trace points to where \"new Error\" was invoked\"\nMismatchedTokenException.prototype = Error.prototype;\nfunction NoViableAltException(message, token, previousToken) {\n    this.name = NO_VIABLE_ALT_EXCEPTION;\n    this.message = message;\n    this.token = token;\n    this.previousToken = previousToken;\n    this.resyncedTokens = [];\n}\nexports.NoViableAltException = NoViableAltException;\nNoViableAltException.prototype = Error.prototype;\nfunction NotAllInputParsedException(message, token) {\n    this.name = NOT_ALL_INPUT_PARSED_EXCEPTION;\n    this.message = message;\n    this.token = token;\n    this.resyncedTokens = [];\n}\nexports.NotAllInputParsedException = NotAllInputParsedException;\nNotAllInputParsedException.prototype = Error.prototype;\nfunction EarlyExitException(message, token, previousToken) {\n    this.name = EARLY_EXIT_EXCEPTION;\n    this.message = message;\n    this.token = token;\n    this.previousToken = previousToken;\n    this.resyncedTokens = [];\n}\nexports.EarlyExitException = EarlyExitException;\nEarlyExitException.prototype = Error.prototype;\n//# sourceMappingURL=exceptions_public.js.map", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar utils_1 = require(\"../utils/utils\");\nvar lang_extensions_1 = require(\"../lang/lang_extensions\");\nvar tokens_public_1 = require(\"./tokens_public\");\nfunction tokenStructuredMatcher(tokInstance, tokConstructor) {\n    var instanceType = tokInstance.tokenTypeIdx;\n    if (instanceType === tokConstructor.tokenTypeIdx) {\n        return true;\n    }\n    else {\n        return (tokConstructor.isParent === true &&\n            tokConstructor.categoryMatchesMap[instanceType] === true);\n    }\n}\nexports.tokenStructuredMatcher = tokenStructuredMatcher;\n// Optimized tokenMatcher in case our grammar does not use token categories\n// Being so tiny it is much more likely to be in-lined and this avoid the function call overhead\nfunction tokenStructuredMatcherNoCategories(token, tokType) {\n    return token.tokenTypeIdx === tokType.tokenTypeIdx;\n}\nexports.tokenStructuredMatcherNoCategories = tokenStructuredMatcherNoCategories;\nexports.tokenShortNameIdx = 1;\nexports.tokenIdxToClass = new lang_extensions_1.HashTable();\nfunction augmentTokenTypes(tokenTypes) {\n    // collect the parent Token Types as well.\n    var tokenTypesAndParents = expandCategories(tokenTypes);\n    // add required tokenType and categoryMatches properties\n    assignTokenDefaultProps(tokenTypesAndParents);\n    // fill up the categoryMatches\n    assignCategoriesMapProp(tokenTypesAndParents);\n    assignCategoriesTokensProp(tokenTypesAndParents);\n    utils_1.forEach(tokenTypesAndParents, function (tokType) {\n        tokType.isParent = tokType.categoryMatches.length > 0;\n    });\n}\nexports.augmentTokenTypes = augmentTokenTypes;\nfunction expandCategories(tokenTypes) {\n    var result = utils_1.cloneArr(tokenTypes);\n    var categories = tokenTypes;\n    var searching = true;\n    while (searching) {\n        categories = utils_1.compact(utils_1.flatten(utils_1.map(categories, function (currTokType) { return currTokType.CATEGORIES; })));\n        var newCategories = utils_1.difference(categories, result);\n        result = result.concat(newCategories);\n        if (utils_1.isEmpty(newCategories)) {\n            searching = false;\n        }\n        else {\n            categories = newCategories;\n        }\n    }\n    return result;\n}\nexports.expandCategories = expandCategories;\nfunction assignTokenDefaultProps(tokenTypes) {\n    utils_1.forEach(tokenTypes, function (currTokType) {\n        if (!hasShortKeyProperty(currTokType)) {\n            exports.tokenIdxToClass.put(exports.tokenShortNameIdx, currTokType);\n            currTokType.tokenTypeIdx = exports.tokenShortNameIdx++;\n        }\n        // CATEGORIES? : TokenType | TokenType[]\n        if (hasCategoriesProperty(currTokType) &&\n            !utils_1.isArray(currTokType.CATEGORIES)\n        // &&\n        // !isUndefined(currTokType.CATEGORIES.PATTERN)\n        ) {\n            currTokType.CATEGORIES = [currTokType.CATEGORIES];\n        }\n        if (!hasCategoriesProperty(currTokType)) {\n            currTokType.CATEGORIES = [];\n        }\n        if (!hasExtendingTokensTypesProperty(currTokType)) {\n            currTokType.categoryMatches = [];\n        }\n        if (!hasExtendingTokensTypesMapProperty(currTokType)) {\n            currTokType.categoryMatchesMap = {};\n        }\n        if (!hasTokenNameProperty(currTokType)) {\n            // saved for fast access during CST building.\n            currTokType.tokenName = tokens_public_1.tokenName(currTokType);\n        }\n    });\n}\nexports.assignTokenDefaultProps = assignTokenDefaultProps;\nfunction assignCategoriesTokensProp(tokenTypes) {\n    utils_1.forEach(tokenTypes, function (currTokType) {\n        // avoid duplications\n        currTokType.categoryMatches = [];\n        utils_1.forEach(currTokType.categoryMatchesMap, function (val, key) {\n            currTokType.categoryMatches.push(exports.tokenIdxToClass.get(key).tokenTypeIdx);\n        });\n    });\n}\nexports.assignCategoriesTokensProp = assignCategoriesTokensProp;\nfunction assignCategoriesMapProp(tokenTypes) {\n    utils_1.forEach(tokenTypes, function (currTokType) {\n        singleAssignCategoriesToksMap([], currTokType);\n    });\n}\nexports.assignCategoriesMapProp = assignCategoriesMapProp;\nfunction singleAssignCategoriesToksMap(path, nextNode) {\n    utils_1.forEach(path, function (pathNode) {\n        nextNode.categoryMatchesMap[pathNode.tokenTypeIdx] = true;\n    });\n    utils_1.forEach(nextNode.CATEGORIES, function (nextCategory) {\n        var newPath = path.concat(nextNode);\n        // avoids infinite loops due to cyclic categories.\n        if (!utils_1.contains(newPath, nextCategory)) {\n            singleAssignCategoriesToksMap(newPath, nextCategory);\n        }\n    });\n}\nexports.singleAssignCategoriesToksMap = singleAssignCategoriesToksMap;\nfunction hasShortKeyProperty(tokType) {\n    return utils_1.has(tokType, \"tokenTypeIdx\");\n}\nexports.hasShortKeyProperty = hasShortKeyProperty;\nfunction hasCategoriesProperty(tokType) {\n    return utils_1.has(tokType, \"CATEGORIES\");\n}\nexports.hasCategoriesProperty = hasCategoriesProperty;\nfunction hasExtendingTokensTypesProperty(tokType) {\n    return utils_1.has(tokType, \"categoryMatches\");\n}\nexports.hasExtendingTokensTypesProperty = hasExtendingTokensTypesProperty;\nfunction hasExtendingTokensTypesMapProperty(tokType) {\n    return utils_1.has(tokType, \"categoryMatchesMap\");\n}\nexports.hasExtendingTokensTypesMapProperty = hasExtendingTokensTypesMapProperty;\nfunction hasTokenNameProperty(tokType) {\n    return utils_1.has(tokType, \"tokenName\");\n}\nexports.hasTokenNameProperty = hasTokenNameProperty;\nfunction isTokenType(tokType) {\n    return utils_1.has(tokType, \"tokenTypeIdx\");\n}\nexports.isTokenType = isTokenType;\n//# sourceMappingURL=tokens.js.map", "\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar utils_1 = require(\"../../../utils/utils\");\nvar gast_public_1 = require(\"./gast_public\");\nvar gast_visitor_public_1 = require(\"./gast_visitor_public\");\nvar tokens_public_1 = require(\"../../../scan/tokens_public\");\nfunction isSequenceProd(prod) {\n    return (prod instanceof gast_public_1.Flat ||\n        prod instanceof gast_public_1.Option ||\n        prod instanceof gast_public_1.Repetition ||\n        prod instanceof gast_public_1.RepetitionMandatory ||\n        prod instanceof gast_public_1.RepetitionMandatoryWithSeparator ||\n        prod instanceof gast_public_1.RepetitionWithSeparator ||\n        prod instanceof gast_public_1.Terminal ||\n        prod instanceof gast_public_1.Rule);\n}\nexports.isSequenceProd = isSequenceProd;\nfunction isOptionalProd(prod, alreadyVisited) {\n    if (alreadyVisited === void 0) { alreadyVisited = []; }\n    var isDirectlyOptional = prod instanceof gast_public_1.Option ||\n        prod instanceof gast_public_1.Repetition ||\n        prod instanceof gast_public_1.RepetitionWithSeparator;\n    if (isDirectlyOptional) {\n        return true;\n    }\n    // note that this can cause infinite loop if one optional empty TOP production has a cyclic dependency with another\n    // empty optional top rule\n    // may be indirectly optional ((A?B?C?) | (D?E?F?))\n    if (prod instanceof gast_public_1.Alternation) {\n        // for OR its enough for just one of the alternatives to be optional\n        return utils_1.some(prod.definition, function (subProd) {\n            return isOptionalProd(subProd, alreadyVisited);\n        });\n    }\n    else if (prod instanceof gast_public_1.NonTerminal && utils_1.contains(alreadyVisited, prod)) {\n        // avoiding stack overflow due to infinite recursion\n        return false;\n    }\n    else if (prod instanceof gast_public_1.AbstractProduction) {\n        if (prod instanceof gast_public_1.NonTerminal) {\n            alreadyVisited.push(prod);\n        }\n        return utils_1.every(prod.definition, function (subProd) {\n            return isOptionalProd(subProd, alreadyVisited);\n        });\n    }\n    else {\n        return false;\n    }\n}\nexports.isOptionalProd = isOptionalProd;\nfunction isBranchingProd(prod) {\n    return prod instanceof gast_public_1.Alternation;\n}\nexports.isBranchingProd = isBranchingProd;\nfunction getProductionDslName(prod) {\n    /* istanbul ignore else */\n    if (prod instanceof gast_public_1.NonTerminal) {\n        return \"SUBRULE\";\n    }\n    else if (prod instanceof gast_public_1.Option) {\n        return \"OPTION\";\n    }\n    else if (prod instanceof gast_public_1.Alternation) {\n        return \"OR\";\n    }\n    else if (prod instanceof gast_public_1.RepetitionMandatory) {\n        return \"AT_LEAST_ONE\";\n    }\n    else if (prod instanceof gast_public_1.RepetitionMandatoryWithSeparator) {\n        return \"AT_LEAST_ONE_SEP\";\n    }\n    else if (prod instanceof gast_public_1.RepetitionWithSeparator) {\n        return \"MANY_SEP\";\n    }\n    else if (prod instanceof gast_public_1.Repetition) {\n        return \"MANY\";\n    }\n    else if (prod instanceof gast_public_1.Terminal) {\n        return \"CONSUME\";\n    }\n    else {\n        throw Error(\"non exhaustive match\");\n    }\n}\nexports.getProductionDslName = getProductionDslName;\nvar DslMethodsCollectorVisitor = /** @class */ (function (_super) {\n    __extends(DslMethodsCollectorVisitor, _super);\n    function DslMethodsCollectorVisitor() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        // A minus is never valid in an identifier name\n        _this.separator = \"-\";\n        _this.dslMethods = {\n            option: [],\n            alternation: [],\n            repetition: [],\n            repetitionWithSeparator: [],\n            repetitionMandatory: [],\n            repetitionMandatoryWithSeparator: []\n        };\n        return _this;\n    }\n    DslMethodsCollectorVisitor.prototype.visitTerminal = function (terminal) {\n        var key = tokens_public_1.tokenName(terminal.terminalType) + this.separator + \"Terminal\";\n        if (!utils_1.has(this.dslMethods, key)) {\n            this.dslMethods[key] = [];\n        }\n        this.dslMethods[key].push(terminal);\n    };\n    DslMethodsCollectorVisitor.prototype.visitNonTerminal = function (subrule) {\n        var key = subrule.nonTerminalName + this.separator + \"Terminal\";\n        if (!utils_1.has(this.dslMethods, key)) {\n            this.dslMethods[key] = [];\n        }\n        this.dslMethods[key].push(subrule);\n    };\n    DslMethodsCollectorVisitor.prototype.visitOption = function (option) {\n        this.dslMethods.option.push(option);\n    };\n    DslMethodsCollectorVisitor.prototype.visitRepetitionWithSeparator = function (manySep) {\n        this.dslMethods.repetitionWithSeparator.push(manySep);\n    };\n    DslMethodsCollectorVisitor.prototype.visitRepetitionMandatory = function (atLeastOne) {\n        this.dslMethods.repetitionMandatory.push(atLeastOne);\n    };\n    DslMethodsCollectorVisitor.prototype.visitRepetitionMandatoryWithSeparator = function (atLeastOneSep) {\n        this.dslMethods.repetitionMandatoryWithSeparator.push(atLeastOneSep);\n    };\n    DslMethodsCollectorVisitor.prototype.visitRepetition = function (many) {\n        this.dslMethods.repetition.push(many);\n    };\n    DslMethodsCollectorVisitor.prototype.visitAlternation = function (or) {\n        this.dslMethods.alternation.push(or);\n    };\n    return DslMethodsCollectorVisitor;\n}(gast_visitor_public_1.GAstVisitor));\nexports.DslMethodsCollectorVisitor = DslMethodsCollectorVisitor;\n//# sourceMappingURL=gast.js.map", "\"use strict\";\n// Lookahead keys are 32Bit integers in the form\n// TTTTTTTTT-ZZZZZZZZZZZZZZZ-YYYY-XXXX\n// XXXX -> Occurrence Index bitmap.\n// YYYY -> DSL Method Name bitmap.\n// ZZZZZZZZZZZZZZZ -> Rule short Index bitmap.\n// TTTTTTTTT -> alternation alternative index bitmap\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BITS_FOR_METHOD_IDX = 4;\nexports.BITS_FOR_OCCURRENCE_IDX = 4;\nexports.BITS_FOR_RULE_IDX = 24;\n// TODO: validation, this means that there may at most 2^8 --> 256 alternatives for an alternation.\nexports.BITS_FOR_ALT_IDX = 8;\n// short string used as part of mapping keys.\n// being short improves the performance when composing KEYS for maps out of these\n// The 5 - 8 bits (16 possible values, are reserved for the DSL method indices)\n/* tslint:disable */\nexports.OR_IDX = 1 << exports.BITS_FOR_METHOD_IDX;\nexports.OPTION_IDX = 2 << exports.BITS_FOR_METHOD_IDX;\nexports.MANY_IDX = 3 << exports.BITS_FOR_METHOD_IDX;\nexports.AT_LEAST_ONE_IDX = 4 << exports.BITS_FOR_METHOD_IDX;\nexports.MANY_SEP_IDX = 5 << exports.BITS_FOR_METHOD_IDX;\nexports.AT_LEAST_ONE_SEP_IDX = 6 << exports.BITS_FOR_METHOD_IDX;\n/* tslint:enable */\n// this actually returns a number, but it is always used as a string (object prop key)\nfunction getKeyForAutomaticLookahead(ruleIdx, dslMethodIdx, occurrence) {\n    /* tslint:disable */\n    return occurrence | dslMethodIdx | ruleIdx;\n    /* tslint:enable */\n}\nexports.getKeyForAutomaticLookahead = getKeyForAutomaticLookahead;\nvar BITS_START_FOR_ALT_IDX = 32 - exports.BITS_FOR_ALT_IDX;\nfunction getKeyForAltIndex(ruleIdx, dslMethodIdx, occurrence, altIdx) {\n    /* tslint:disable */\n    // alternative indices are zero based, thus must always add one (turn on one bit) to guarantee uniqueness.\n    var altIdxBitMap = (altIdx + 1) << BITS_START_FOR_ALT_IDX;\n    return (getKeyForAutomaticLookahead(ruleIdx, dslMethodIdx, occurrence) |\n        altIdxBitMap);\n    /* tslint:enable */\n}\nexports.getKeyForAltIndex = getKeyForAltIndex;\n//# sourceMappingURL=keys.js.map", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tokens_public_1 = require(\"../scan/tokens_public\");\nvar utils = require(\"../utils/utils\");\nvar utils_1 = require(\"../utils/utils\");\nvar gast_public_1 = require(\"./grammar/gast/gast_public\");\nvar gast_1 = require(\"./grammar/gast/gast\");\nvar checks_1 = require(\"./grammar/checks\");\nvar version_1 = require(\"../version\");\nvar parser_1 = require(\"./parser/parser\");\nexports.defaultParserErrorProvider = {\n    buildMismatchTokenMessage: function (_a) {\n        var expected = _a.expected, actual = _a.actual, previous = _a.previous, ruleName = _a.ruleName;\n        var hasLabel = tokens_public_1.hasTokenLabel(expected);\n        var expectedMsg = hasLabel\n            ? \"--> \" + tokens_public_1.tokenLabel(expected) + \" <--\"\n            : \"token of type --> \" + tokens_public_1.tokenName(expected) + \" <--\";\n        var msg = \"Expecting \" + expectedMsg + \" but found --> '\" + actual.image + \"' <--\";\n        return msg;\n    },\n    buildNotAllInputParsedMessage: function (_a) {\n        var firstRedundant = _a.firstRedundant, ruleName = _a.ruleName;\n        return (\"Redundant input, expecting EOF but found: \" + firstRedundant.image);\n    },\n    buildNoViableAltMessage: function (_a) {\n        var expectedPathsPerAlt = _a.expectedPathsPerAlt, actual = _a.actual, previous = _a.previous, customUserDescription = _a.customUserDescription, ruleName = _a.ruleName;\n        var errPrefix = \"Expecting: \";\n        // TODO: issue: No Viable Alternative Error may have incomplete details. #502\n        var actualText = utils_1.first(actual).image;\n        var errSuffix = \"\\nbut found: '\" + actualText + \"'\";\n        if (customUserDescription) {\n            return errPrefix + customUserDescription + errSuffix;\n        }\n        else {\n            var allLookAheadPaths = utils_1.reduce(expectedPathsPerAlt, function (result, currAltPaths) { return result.concat(currAltPaths); }, []);\n            var nextValidTokenSequences = utils_1.map(allLookAheadPaths, function (currPath) {\n                return \"[\" + utils_1.map(currPath, function (currTokenType) {\n                    return tokens_public_1.tokenLabel(currTokenType);\n                }).join(\", \") + \"]\";\n            });\n            var nextValidSequenceItems = utils_1.map(nextValidTokenSequences, function (itemMsg, idx) { return \"  \" + (idx + 1) + \". \" + itemMsg; });\n            var calculatedDescription = \"one of these possible Token sequences:\\n\" + nextValidSequenceItems.join(\"\\n\");\n            return errPrefix + calculatedDescription + errSuffix;\n        }\n    },\n    buildEarlyExitMessage: function (_a) {\n        var expectedIterationPaths = _a.expectedIterationPaths, actual = _a.actual, customUserDescription = _a.customUserDescription, ruleName = _a.ruleName;\n        var errPrefix = \"Expecting: \";\n        // TODO: issue: No Viable Alternative Error may have incomplete details. #502\n        var actualText = utils_1.first(actual).image;\n        var errSuffix = \"\\nbut found: '\" + actualText + \"'\";\n        if (customUserDescription) {\n            return errPrefix + customUserDescription + errSuffix;\n        }\n        else {\n            var nextValidTokenSequences = utils_1.map(expectedIterationPaths, function (currPath) {\n                return \"[\" + utils_1.map(currPath, function (currTokenType) {\n                    return tokens_public_1.tokenLabel(currTokenType);\n                }).join(\",\") + \"]\";\n            });\n            var calculatedDescription = \"expecting at least one iteration which starts with one of these possible Token sequences::\\n  \" +\n                (\"<\" + nextValidTokenSequences.join(\" ,\") + \">\");\n            return errPrefix + calculatedDescription + errSuffix;\n        }\n    }\n};\nObject.freeze(exports.defaultParserErrorProvider);\nexports.defaultGrammarResolverErrorProvider = {\n    buildRuleNotFoundError: function (topLevelRule, undefinedRule) {\n        var msg = \"Invalid grammar, reference to a rule which is not defined: ->\" +\n            undefinedRule.nonTerminalName +\n            \"<-\\n\" +\n            \"inside top level rule: ->\" +\n            topLevelRule.name +\n            \"<-\";\n        return msg;\n    }\n};\nexports.defaultGrammarValidatorErrorProvider = {\n    buildDuplicateFoundError: function (topLevelRule, duplicateProds) {\n        function getExtraProductionArgument(prod) {\n            if (prod instanceof gast_public_1.Terminal) {\n                return tokens_public_1.tokenName(prod.terminalType);\n            }\n            else if (prod instanceof gast_public_1.NonTerminal) {\n                return prod.nonTerminalName;\n            }\n            else {\n                return \"\";\n            }\n        }\n        var topLevelName = topLevelRule.name;\n        var duplicateProd = utils_1.first(duplicateProds);\n        var index = duplicateProd.idx;\n        var dslName = gast_1.getProductionDslName(duplicateProd);\n        var extraArgument = getExtraProductionArgument(duplicateProd);\n        var msg = \"->\" + dslName + \"<- with numerical suffix: ->\" + index + \"<-\\n                  \" + (extraArgument ? \"and argument: ->\" + extraArgument + \"<-\" : \"\") + \"\\n                  appears more than once (\" + duplicateProds.length + \" times) in the top level rule: ->\" + topLevelName + \"<-.\\n                  \" + (index === 0\n            ? \"Also note that numerical suffix 0 means \" + dslName + \" without any suffix.\"\n            : \"\") + \"\\n                  To fix this make sure each usage of \" + dslName + \" \" + (extraArgument ? \"with the argument: ->\" + extraArgument + \"<-\" : \"\") + \"\\n                  in the rule ->\" + topLevelName + \"<- has a different occurrence index (0-5), as that combination acts as a unique\\n                  position key in the grammar, which is needed by the parsing engine.\\n                  \\n                  For further details see: https://sap.github.io/chevrotain/docs/FAQ.html#NUMERICAL_SUFFIXES \\n                  \";\n        // white space trimming time! better to trim afterwards as it allows to use WELL formatted multi line template strings...\n        msg = msg.replace(/[ \\t]+/g, \" \");\n        msg = msg.replace(/\\s\\s+/g, \"\\n\");\n        return msg;\n    },\n    buildInvalidNestedRuleNameError: function (topLevelRule, nestedProd) {\n        var msg = \"Invalid nested rule name: ->\" + nestedProd.name + \"<- inside rule: ->\" + topLevelRule.name + \"<-\\n\" +\n            (\"it must match the pattern: ->\" + checks_1.validNestedRuleName.toString() + \"<-.\\n\") +\n            \"Note that this means a nested rule name must start with the '$'(dollar) sign.\";\n        return msg;\n    },\n    buildDuplicateNestedRuleNameError: function (topLevelRule, nestedProd) {\n        var duplicateName = utils_1.first(nestedProd).name;\n        var errMsg = \"Duplicate nested rule name: ->\" + duplicateName + \"<- inside rule: ->\" + topLevelRule.name + \"<-\\n\" +\n            \"A nested name must be unique in the scope of a top level grammar rule.\";\n        return errMsg;\n    },\n    buildNamespaceConflictError: function (rule) {\n        var errMsg = \"Namespace conflict found in grammar.\\n\" +\n            (\"The grammar has both a Terminal(Token) and a Non-Terminal(Rule) named: <\" + rule.name + \">.\\n\") +\n            \"To resolve this make sure each Terminal and Non-Terminal names are unique\\n\" +\n            \"This is easy to accomplish by using the convention that Terminal names start with an uppercase letter\\n\" +\n            \"and Non-Terminal names start with a lower case letter.\";\n        return errMsg;\n    },\n    buildAlternationPrefixAmbiguityError: function (options) {\n        var pathMsg = utils_1.map(options.prefixPath, function (currTok) {\n            return tokens_public_1.tokenLabel(currTok);\n        }).join(\", \");\n        var occurrence = options.alternation.idx === 0 ? \"\" : options.alternation.idx;\n        var errMsg = \"Ambiguous alternatives: <\" + options.ambiguityIndices.join(\" ,\") + \"> due to common lookahead prefix\\n\" +\n            (\"in <OR\" + occurrence + \"> inside <\" + options.topLevelRule.name + \"> Rule,\\n\") +\n            (\"<\" + pathMsg + \"> may appears as a prefix path in all these alternatives.\\n\") +\n            \"https://sap.github.io/chevrotain/docs/guide/resolving_grammar_errors.html#COMMON_PREFIX\\n\" +\n            \"For Further details.\";\n        return errMsg;\n    },\n    buildAlternationAmbiguityError: function (options) {\n        var pathMsg = utils_1.map(options.prefixPath, function (currtok) {\n            return tokens_public_1.tokenLabel(currtok);\n        }).join(\", \");\n        var occurrence = options.alternation.idx === 0 ? \"\" : options.alternation.idx;\n        var currMessage = \"Ambiguous alternatives: <\" + options.ambiguityIndices.join(\" ,\") + \"> in <OR\" + occurrence + \">\" +\n            (\" inside <\" + options.topLevelRule.name + \"> Rule,\\n\") +\n            (\"<\" + pathMsg + \"> may appears as a prefix path in all these alternatives.\\n\");\n        var docs_version = version_1.VERSION.replace(/\\./g, \"_\");\n        // Should this information be on the error message or in some common errors docs?\n        currMessage =\n            currMessage +\n                \"To Resolve this, try one of of the following: \\n\" +\n                (\"1. Refactor your grammar to be LL(K) for the current value of k (by default k=\" + parser_1.DEFAULT_PARSER_CONFIG.maxLookahead + \"})\\n\") +\n                \"2. Increase the value of K for your grammar by providing a larger 'maxLookahead' value in the parser's config\\n\" +\n                \"3. This issue can be ignored (if you know what you are doing...), see\" +\n                \" https://sap.github.io/chevrotain/documentation/\" +\n                docs_version +\n                \"/interfaces/iparserconfig.html#ignoredissues for more\" +\n                \" details\\n\";\n        return currMessage;\n    },\n    buildEmptyRepetitionError: function (options) {\n        var dslName = gast_1.getProductionDslName(options.repetition);\n        if (options.repetition.idx !== 0) {\n            dslName += options.repetition.idx;\n        }\n        var errMsg = \"The repetition <\" + dslName + \"> within Rule <\" + options.topLevelRule.name + \"> can never consume any tokens.\\n\" +\n            \"This could lead to an infinite loop.\";\n        return errMsg;\n    },\n    buildTokenNameError: function (options) {\n        var tokTypeName = tokens_public_1.tokenName(options.tokenType);\n        var errMsg = \"Invalid Grammar Token name: ->\" + tokTypeName + \"<- it must match the pattern: ->\" + options.expectedPattern.toString() + \"<-\";\n        return errMsg;\n    },\n    buildEmptyAlternationError: function (options) {\n        var errMsg = \"Ambiguous empty alternative: <\" + (options.emptyChoiceIdx + 1) + \">\" +\n            (\" in <OR\" + options.alternation.idx + \"> inside <\" + options.topLevelRule.name + \"> Rule.\\n\") +\n            \"Only the last alternative may be an empty alternative.\";\n        return errMsg;\n    },\n    buildTooManyAlternativesError: function (options) {\n        var errMsg = \"An Alternation cannot have more than 256 alternatives:\\n\" +\n            (\"<OR\" + options.alternation.idx + \"> inside <\" + options.topLevelRule.name + \"> Rule.\\n has \" + (options.alternation.definition.length +\n                1) + \" alternatives.\");\n        return errMsg;\n    },\n    buildLeftRecursionError: function (options) {\n        var ruleName = options.topLevelRule.name;\n        var pathNames = utils.map(options.leftRecursionPath, function (currRule) { return currRule.name; });\n        var leftRecursivePath = ruleName + \" --> \" + pathNames\n            .concat([ruleName])\n            .join(\" --> \");\n        var errMsg = \"Left Recursion found in grammar.\\n\" +\n            (\"rule: <\" + ruleName + \"> can be invoked from itself (directly or indirectly)\\n\") +\n            (\"without consuming any Tokens. The grammar path that causes this is: \\n \" + leftRecursivePath + \"\\n\") +\n            \" To fix this refactor your grammar to remove the left recursion.\\n\" +\n            \"see: https://en.wikipedia.org/wiki/LL_parser#Left_Factoring.\";\n        return errMsg;\n    },\n    buildInvalidRuleNameError: function (options) {\n        var ruleName = options.topLevelRule.name;\n        var expectedPatternString = options.expectedPattern.toString();\n        var errMsg = \"Invalid grammar rule name: ->\" + ruleName + \"<- it must match the pattern: ->\" + expectedPatternString + \"<-\";\n        return errMsg;\n    },\n    buildDuplicateRuleNameError: function (options) {\n        var ruleName;\n        if (options.topLevelRule instanceof gast_public_1.Rule) {\n            ruleName = options.topLevelRule.name;\n        }\n        else {\n            ruleName = options.topLevelRule;\n        }\n        var errMsg = \"Duplicate definition, rule: ->\" + ruleName + \"<- is already defined in the grammar: ->\" + options.grammarName + \"<-\";\n        return errMsg;\n    }\n};\n//# sourceMappingURL=errors_public.js.map", "\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar utils = require(\"../../utils/utils\");\nvar utils_1 = require(\"../../utils/utils\");\nvar parser_1 = require(\"../parser/parser\");\nvar gast_1 = require(\"./gast/gast\");\nvar tokens_public_1 = require(\"../../scan/tokens_public\");\nvar lookahead_1 = require(\"./lookahead\");\nvar cst_1 = require(\"../cst/cst\");\nvar interpreter_1 = require(\"./interpreter\");\nvar gast_public_1 = require(\"./gast/gast_public\");\nvar gast_visitor_public_1 = require(\"./gast/gast_visitor_public\");\nfunction validateGrammar(topLevels, maxLookahead, tokenTypes, ignoredIssues, errMsgProvider, grammarName) {\n    var duplicateErrors = utils.map(topLevels, function (currTopLevel) {\n        return validateDuplicateProductions(currTopLevel, errMsgProvider);\n    });\n    var leftRecursionErrors = utils.map(topLevels, function (currTopRule) {\n        return validateNoLeftRecursion(currTopRule, currTopRule, errMsgProvider);\n    });\n    var emptyAltErrors = [];\n    var ambiguousAltsErrors = [];\n    var emptyRepetitionErrors = [];\n    // left recursion could cause infinite loops in the following validations.\n    // It is safest to first have the user fix the left recursion errors first and only then examine Further issues.\n    if (utils_1.every(leftRecursionErrors, utils_1.isEmpty)) {\n        emptyAltErrors = utils_1.map(topLevels, function (currTopRule) {\n            return validateEmptyOrAlternative(currTopRule, errMsgProvider);\n        });\n        ambiguousAltsErrors = utils_1.map(topLevels, function (currTopRule) {\n            return validateAmbiguousAlternationAlternatives(currTopRule, maxLookahead, ignoredIssues, errMsgProvider);\n        });\n        emptyRepetitionErrors = validateSomeNonEmptyLookaheadPath(topLevels, maxLookahead, errMsgProvider);\n    }\n    var termsNamespaceConflictErrors = checkTerminalAndNoneTerminalsNameSpace(topLevels, tokenTypes, errMsgProvider);\n    var tokenNameErrors = utils.map(tokenTypes, function (currTokType) {\n        return validateTokenName(currTokType, errMsgProvider);\n    });\n    var nestedRulesNameErrors = validateNestedRulesNames(topLevels, errMsgProvider);\n    var nestedRulesDuplicateErrors = validateDuplicateNestedRules(topLevels, errMsgProvider);\n    var tooManyAltsErrors = utils_1.map(topLevels, function (curRule) {\n        return validateTooManyAlts(curRule, errMsgProvider);\n    });\n    var ruleNameErrors = utils_1.map(topLevels, function (curRule) {\n        return validateRuleName(curRule, errMsgProvider);\n    });\n    var duplicateRulesError = utils_1.map(topLevels, function (curRule) {\n        return validateRuleDoesNotAlreadyExist(curRule, topLevels, grammarName, errMsgProvider);\n    });\n    return (utils.flatten(duplicateErrors.concat(tokenNameErrors, nestedRulesNameErrors, nestedRulesDuplicateErrors, emptyRepetitionErrors, leftRecursionErrors, emptyAltErrors, ambiguousAltsErrors, termsNamespaceConflictErrors, tooManyAltsErrors, ruleNameErrors, duplicateRulesError)));\n}\nexports.validateGrammar = validateGrammar;\nfunction validateNestedRulesNames(topLevels, errMsgProvider) {\n    var result = [];\n    utils_1.forEach(topLevels, function (curTopLevel) {\n        var namedCollectorVisitor = new cst_1.NamedDSLMethodsCollectorVisitor(\"\");\n        curTopLevel.accept(namedCollectorVisitor);\n        var nestedProds = utils_1.map(namedCollectorVisitor.result, function (currItem) { return currItem.orgProd; });\n        result.push(utils_1.map(nestedProds, function (currNestedProd) {\n            return validateNestedRuleName(curTopLevel, currNestedProd, errMsgProvider);\n        }));\n    });\n    return utils_1.flatten(result);\n}\nfunction validateDuplicateProductions(topLevelRule, errMsgProvider) {\n    var collectorVisitor = new OccurrenceValidationCollector();\n    topLevelRule.accept(collectorVisitor);\n    var allRuleProductions = collectorVisitor.allProductions;\n    var productionGroups = utils.groupBy(allRuleProductions, identifyProductionForDuplicates);\n    var duplicates = utils.pick(productionGroups, function (currGroup) {\n        return currGroup.length > 1;\n    });\n    var errors = utils.map(utils.values(duplicates), function (currDuplicates) {\n        var firstProd = utils.first(currDuplicates);\n        var msg = errMsgProvider.buildDuplicateFoundError(topLevelRule, currDuplicates);\n        var dslName = gast_1.getProductionDslName(firstProd);\n        var defError = {\n            message: msg,\n            type: parser_1.ParserDefinitionErrorType.DUPLICATE_PRODUCTIONS,\n            ruleName: topLevelRule.name,\n            dslName: dslName,\n            occurrence: firstProd.idx\n        };\n        var param = getExtraProductionArgument(firstProd);\n        if (param) {\n            defError.parameter = param;\n        }\n        return defError;\n    });\n    return errors;\n}\nfunction identifyProductionForDuplicates(prod) {\n    return gast_1.getProductionDslName(prod) + \"_#_\" + prod.idx + \"_#_\" + getExtraProductionArgument(prod);\n}\nexports.identifyProductionForDuplicates = identifyProductionForDuplicates;\nfunction getExtraProductionArgument(prod) {\n    if (prod instanceof gast_public_1.Terminal) {\n        return tokens_public_1.tokenName(prod.terminalType);\n    }\n    else if (prod instanceof gast_public_1.NonTerminal) {\n        return prod.nonTerminalName;\n    }\n    else {\n        return \"\";\n    }\n}\nvar OccurrenceValidationCollector = /** @class */ (function (_super) {\n    __extends(OccurrenceValidationCollector, _super);\n    function OccurrenceValidationCollector() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.allProductions = [];\n        return _this;\n    }\n    OccurrenceValidationCollector.prototype.visitNonTerminal = function (subrule) {\n        this.allProductions.push(subrule);\n    };\n    OccurrenceValidationCollector.prototype.visitOption = function (option) {\n        this.allProductions.push(option);\n    };\n    OccurrenceValidationCollector.prototype.visitRepetitionWithSeparator = function (manySep) {\n        this.allProductions.push(manySep);\n    };\n    OccurrenceValidationCollector.prototype.visitRepetitionMandatory = function (atLeastOne) {\n        this.allProductions.push(atLeastOne);\n    };\n    OccurrenceValidationCollector.prototype.visitRepetitionMandatoryWithSeparator = function (atLeastOneSep) {\n        this.allProductions.push(atLeastOneSep);\n    };\n    OccurrenceValidationCollector.prototype.visitRepetition = function (many) {\n        this.allProductions.push(many);\n    };\n    OccurrenceValidationCollector.prototype.visitAlternation = function (or) {\n        this.allProductions.push(or);\n    };\n    OccurrenceValidationCollector.prototype.visitTerminal = function (terminal) {\n        this.allProductions.push(terminal);\n    };\n    return OccurrenceValidationCollector;\n}(gast_visitor_public_1.GAstVisitor));\nexports.OccurrenceValidationCollector = OccurrenceValidationCollector;\nexports.validTermsPattern = /^[a-zA-Z_]\\w*$/;\nexports.validNestedRuleName = new RegExp(exports.validTermsPattern.source.replace(\"^\", \"^\\\\$\"));\nfunction validateRuleName(rule, errMsgProvider) {\n    var errors = [];\n    var ruleName = rule.name;\n    if (!ruleName.match(exports.validTermsPattern)) {\n        errors.push({\n            message: errMsgProvider.buildInvalidRuleNameError({\n                topLevelRule: rule,\n                expectedPattern: exports.validTermsPattern\n            }),\n            type: parser_1.ParserDefinitionErrorType.INVALID_RULE_NAME,\n            ruleName: ruleName\n        });\n    }\n    return errors;\n}\nexports.validateRuleName = validateRuleName;\nfunction validateNestedRuleName(topLevel, nestedProd, errMsgProvider) {\n    var errors = [];\n    var errMsg;\n    if (!nestedProd.name.match(exports.validNestedRuleName)) {\n        errMsg = errMsgProvider.buildInvalidNestedRuleNameError(topLevel, nestedProd);\n        errors.push({\n            message: errMsg,\n            type: parser_1.ParserDefinitionErrorType.INVALID_NESTED_RULE_NAME,\n            ruleName: topLevel.name\n        });\n    }\n    return errors;\n}\nexports.validateNestedRuleName = validateNestedRuleName;\nfunction validateTokenName(tokenType, errMsgProvider) {\n    var errors = [];\n    var tokTypeName = tokens_public_1.tokenName(tokenType);\n    if (!tokTypeName.match(exports.validTermsPattern)) {\n        errors.push({\n            message: errMsgProvider.buildTokenNameError({\n                tokenType: tokenType,\n                expectedPattern: exports.validTermsPattern\n            }),\n            type: parser_1.ParserDefinitionErrorType.INVALID_TOKEN_NAME\n        });\n    }\n    return errors;\n}\nexports.validateTokenName = validateTokenName;\nfunction validateRuleDoesNotAlreadyExist(rule, allRules, className, errMsgProvider) {\n    var errors = [];\n    var occurrences = utils_1.reduce(allRules, function (result, curRule) {\n        if (curRule.name === rule.name) {\n            return result + 1;\n        }\n        return result;\n    }, 0);\n    if (occurrences > 1) {\n        var errMsg = errMsgProvider.buildDuplicateRuleNameError({\n            topLevelRule: rule,\n            grammarName: className\n        });\n        errors.push({\n            message: errMsg,\n            type: parser_1.ParserDefinitionErrorType.DUPLICATE_RULE_NAME,\n            ruleName: rule.name\n        });\n    }\n    return errors;\n}\nexports.validateRuleDoesNotAlreadyExist = validateRuleDoesNotAlreadyExist;\n// TODO: is there anyway to get only the rule names of rules inherited from the super grammars?\n// This is not part of the IGrammarErrorProvider because the validation cannot be performed on\n// The grammar structure, only at runtime.\nfunction validateRuleIsOverridden(ruleName, definedRulesNames, className) {\n    var errors = [];\n    var errMsg;\n    if (!utils.contains(definedRulesNames, ruleName)) {\n        errMsg =\n            \"Invalid rule override, rule: ->\" + ruleName + \"<- cannot be overridden in the grammar: ->\" + className + \"<-\" +\n                \"as it is not defined in any of the super grammars \";\n        errors.push({\n            message: errMsg,\n            type: parser_1.ParserDefinitionErrorType.INVALID_RULE_OVERRIDE,\n            ruleName: ruleName\n        });\n    }\n    return errors;\n}\nexports.validateRuleIsOverridden = validateRuleIsOverridden;\nfunction validateNoLeftRecursion(topRule, currRule, errMsgProvider, path) {\n    if (path === void 0) { path = []; }\n    var errors = [];\n    var nextNonTerminals = getFirstNoneTerminal(currRule.definition);\n    if (utils.isEmpty(nextNonTerminals)) {\n        return [];\n    }\n    else {\n        var ruleName = topRule.name;\n        var foundLeftRecursion = utils.contains(nextNonTerminals, topRule);\n        if (foundLeftRecursion) {\n            errors.push({\n                message: errMsgProvider.buildLeftRecursionError({\n                    topLevelRule: topRule,\n                    leftRecursionPath: path\n                }),\n                type: parser_1.ParserDefinitionErrorType.LEFT_RECURSION,\n                ruleName: ruleName\n            });\n        }\n        // we are only looking for cyclic paths leading back to the specific topRule\n        // other cyclic paths are ignored, we still need this difference to avoid infinite loops...\n        var validNextSteps = utils.difference(nextNonTerminals, path.concat([topRule]));\n        var errorsFromNextSteps = utils.map(validNextSteps, function (currRefRule) {\n            var newPath = utils.cloneArr(path);\n            newPath.push(currRefRule);\n            return validateNoLeftRecursion(topRule, currRefRule, errMsgProvider, newPath);\n        });\n        return errors.concat(utils.flatten(errorsFromNextSteps));\n    }\n}\nexports.validateNoLeftRecursion = validateNoLeftRecursion;\nfunction getFirstNoneTerminal(definition) {\n    var result = [];\n    if (utils.isEmpty(definition)) {\n        return result;\n    }\n    var firstProd = utils.first(definition);\n    /* istanbul ignore else */\n    if (firstProd instanceof gast_public_1.NonTerminal) {\n        result.push(firstProd.referencedRule);\n    }\n    else if (firstProd instanceof gast_public_1.Flat ||\n        firstProd instanceof gast_public_1.Option ||\n        firstProd instanceof gast_public_1.RepetitionMandatory ||\n        firstProd instanceof gast_public_1.RepetitionMandatoryWithSeparator ||\n        firstProd instanceof gast_public_1.RepetitionWithSeparator ||\n        firstProd instanceof gast_public_1.Repetition) {\n        result = result.concat(getFirstNoneTerminal(firstProd.definition));\n    }\n    else if (firstProd instanceof gast_public_1.Alternation) {\n        // each sub definition in alternation is a FLAT\n        result = utils.flatten(utils.map(firstProd.definition, function (currSubDef) {\n            return getFirstNoneTerminal(currSubDef.definition);\n        }));\n    }\n    else if (firstProd instanceof gast_public_1.Terminal) {\n        // nothing to see, move along\n    }\n    else {\n        throw Error(\"non exhaustive match\");\n    }\n    var isFirstOptional = gast_1.isOptionalProd(firstProd);\n    var hasMore = definition.length > 1;\n    if (isFirstOptional && hasMore) {\n        var rest = utils.drop(definition);\n        return result.concat(getFirstNoneTerminal(rest));\n    }\n    else {\n        return result;\n    }\n}\nexports.getFirstNoneTerminal = getFirstNoneTerminal;\nvar OrCollector = /** @class */ (function (_super) {\n    __extends(OrCollector, _super);\n    function OrCollector() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.alternations = [];\n        return _this;\n    }\n    OrCollector.prototype.visitAlternation = function (node) {\n        this.alternations.push(node);\n    };\n    return OrCollector;\n}(gast_visitor_public_1.GAstVisitor));\nfunction validateEmptyOrAlternative(topLevelRule, errMsgProvider) {\n    var orCollector = new OrCollector();\n    topLevelRule.accept(orCollector);\n    var ors = orCollector.alternations;\n    var errors = utils.reduce(ors, function (errors, currOr) {\n        var exceptLast = utils.dropRight(currOr.definition);\n        var currErrors = utils.map(exceptLast, function (currAlternative, currAltIdx) {\n            var possibleFirstInAlt = interpreter_1.nextPossibleTokensAfter([currAlternative], [], null, 1);\n            if (utils.isEmpty(possibleFirstInAlt)) {\n                return {\n                    message: errMsgProvider.buildEmptyAlternationError({\n                        topLevelRule: topLevelRule,\n                        alternation: currOr,\n                        emptyChoiceIdx: currAltIdx\n                    }),\n                    type: parser_1.ParserDefinitionErrorType.NONE_LAST_EMPTY_ALT,\n                    ruleName: topLevelRule.name,\n                    occurrence: currOr.idx,\n                    alternative: currAltIdx + 1\n                };\n            }\n            else {\n                return null;\n            }\n        });\n        return errors.concat(utils.compact(currErrors));\n    }, []);\n    return errors;\n}\nexports.validateEmptyOrAlternative = validateEmptyOrAlternative;\nfunction validateAmbiguousAlternationAlternatives(topLevelRule, maxLookahead, ignoredIssues, errMsgProvider) {\n    var orCollector = new OrCollector();\n    topLevelRule.accept(orCollector);\n    var ors = orCollector.alternations;\n    var ignoredIssuesForCurrentRule = ignoredIssues[topLevelRule.name];\n    if (ignoredIssuesForCurrentRule) {\n        ors = utils_1.reject(ors, function (currOr) {\n            return ignoredIssuesForCurrentRule[gast_1.getProductionDslName(currOr) +\n                (currOr.idx === 0 ? \"\" : currOr.idx)];\n        });\n    }\n    var errors = utils.reduce(ors, function (result, currOr) {\n        var currOccurrence = currOr.idx;\n        var alternatives = lookahead_1.getLookaheadPathsForOr(currOccurrence, topLevelRule, maxLookahead);\n        var altsAmbiguityErrors = checkAlternativesAmbiguities(alternatives, currOr, topLevelRule, errMsgProvider);\n        var altsPrefixAmbiguityErrors = checkPrefixAlternativesAmbiguities(alternatives, currOr, topLevelRule, errMsgProvider);\n        return result.concat(altsAmbiguityErrors, altsPrefixAmbiguityErrors);\n    }, []);\n    return errors;\n}\nexports.validateAmbiguousAlternationAlternatives = validateAmbiguousAlternationAlternatives;\nvar RepetionCollector = /** @class */ (function (_super) {\n    __extends(RepetionCollector, _super);\n    function RepetionCollector() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.allProductions = [];\n        return _this;\n    }\n    RepetionCollector.prototype.visitRepetitionWithSeparator = function (manySep) {\n        this.allProductions.push(manySep);\n    };\n    RepetionCollector.prototype.visitRepetitionMandatory = function (atLeastOne) {\n        this.allProductions.push(atLeastOne);\n    };\n    RepetionCollector.prototype.visitRepetitionMandatoryWithSeparator = function (atLeastOneSep) {\n        this.allProductions.push(atLeastOneSep);\n    };\n    RepetionCollector.prototype.visitRepetition = function (many) {\n        this.allProductions.push(many);\n    };\n    return RepetionCollector;\n}(gast_visitor_public_1.GAstVisitor));\nexports.RepetionCollector = RepetionCollector;\nfunction validateTooManyAlts(topLevelRule, errMsgProvider) {\n    var orCollector = new OrCollector();\n    topLevelRule.accept(orCollector);\n    var ors = orCollector.alternations;\n    var errors = utils.reduce(ors, function (errors, currOr) {\n        if (currOr.definition.length > 255) {\n            errors.push({\n                message: errMsgProvider.buildTooManyAlternativesError({\n                    topLevelRule: topLevelRule,\n                    alternation: currOr\n                }),\n                type: parser_1.ParserDefinitionErrorType.TOO_MANY_ALTS,\n                ruleName: topLevelRule.name,\n                occurrence: currOr.idx\n            });\n        }\n        return errors;\n    }, []);\n    return errors;\n}\nexports.validateTooManyAlts = validateTooManyAlts;\nfunction validateSomeNonEmptyLookaheadPath(topLevelRules, maxLookahead, errMsgProvider) {\n    var errors = [];\n    utils_1.forEach(topLevelRules, function (currTopRule) {\n        var collectorVisitor = new RepetionCollector();\n        currTopRule.accept(collectorVisitor);\n        var allRuleProductions = collectorVisitor.allProductions;\n        utils_1.forEach(allRuleProductions, function (currProd) {\n            var prodType = lookahead_1.getProdType(currProd);\n            var currOccurrence = currProd.idx;\n            var paths = lookahead_1.getLookaheadPathsForOptionalProd(currOccurrence, currTopRule, prodType, maxLookahead);\n            var pathsInsideProduction = paths[0];\n            if (utils_1.isEmpty(utils_1.flatten(pathsInsideProduction))) {\n                var errMsg = errMsgProvider.buildEmptyRepetitionError({\n                    topLevelRule: currTopRule,\n                    repetition: currProd\n                });\n                errors.push({\n                    message: errMsg,\n                    type: parser_1.ParserDefinitionErrorType.NO_NON_EMPTY_LOOKAHEAD,\n                    ruleName: currTopRule.name\n                });\n            }\n        });\n    });\n    return errors;\n}\nexports.validateSomeNonEmptyLookaheadPath = validateSomeNonEmptyLookaheadPath;\nfunction checkAlternativesAmbiguities(alternatives, alternation, rule, errMsgProvider) {\n    var foundAmbiguousPaths = [];\n    var identicalAmbiguities = utils_1.reduce(alternatives, function (result, currAlt, currAltIdx) {\n        utils_1.forEach(currAlt, function (currPath) {\n            var altsCurrPathAppearsIn = [currAltIdx];\n            utils_1.forEach(alternatives, function (currOtherAlt, currOtherAltIdx) {\n                if (currAltIdx !== currOtherAltIdx &&\n                    lookahead_1.containsPath(currOtherAlt, currPath)) {\n                    altsCurrPathAppearsIn.push(currOtherAltIdx);\n                }\n            });\n            if (altsCurrPathAppearsIn.length > 1 &&\n                !lookahead_1.containsPath(foundAmbiguousPaths, currPath)) {\n                foundAmbiguousPaths.push(currPath);\n                result.push({\n                    alts: altsCurrPathAppearsIn,\n                    path: currPath\n                });\n            }\n        });\n        return result;\n    }, []);\n    var currErrors = utils.map(identicalAmbiguities, function (currAmbDescriptor) {\n        var ambgIndices = utils_1.map(currAmbDescriptor.alts, function (currAltIdx) { return currAltIdx + 1; });\n        var currMessage = errMsgProvider.buildAlternationAmbiguityError({\n            topLevelRule: rule,\n            alternation: alternation,\n            ambiguityIndices: ambgIndices,\n            prefixPath: currAmbDescriptor.path\n        });\n        return {\n            message: currMessage,\n            type: parser_1.ParserDefinitionErrorType.AMBIGUOUS_ALTS,\n            ruleName: rule.name,\n            occurrence: alternation.idx,\n            alternatives: [currAmbDescriptor.alts]\n        };\n    });\n    return currErrors;\n}\nfunction checkPrefixAlternativesAmbiguities(alternatives, alternation, rule, errMsgProvider) {\n    var errors = [];\n    // flatten\n    var pathsAndIndices = utils_1.reduce(alternatives, function (result, currAlt, idx) {\n        var currPathsAndIdx = utils_1.map(currAlt, function (currPath) {\n            return { idx: idx, path: currPath };\n        });\n        return result.concat(currPathsAndIdx);\n    }, []);\n    utils_1.forEach(pathsAndIndices, function (currPathAndIdx) {\n        var targetIdx = currPathAndIdx.idx;\n        var targetPath = currPathAndIdx.path;\n        var prefixAmbiguitiesPathsAndIndices = utils_1.findAll(pathsAndIndices, function (searchPathAndIdx) {\n            // prefix ambiguity can only be created from lower idx (higher priority) path\n            return (searchPathAndIdx.idx < targetIdx &&\n                // checking for strict prefix because identical lookaheads\n                // will be be detected using a different validation.\n                lookahead_1.isStrictPrefixOfPath(searchPathAndIdx.path, targetPath));\n        });\n        var currPathPrefixErrors = utils_1.map(prefixAmbiguitiesPathsAndIndices, function (currAmbPathAndIdx) {\n            var ambgIndices = [currAmbPathAndIdx.idx + 1, targetIdx + 1];\n            var occurrence = alternation.idx === 0 ? \"\" : alternation.idx;\n            var message = errMsgProvider.buildAlternationPrefixAmbiguityError({\n                topLevelRule: rule,\n                alternation: alternation,\n                ambiguityIndices: ambgIndices,\n                prefixPath: currAmbPathAndIdx.path\n            });\n            return {\n                message: message,\n                type: parser_1.ParserDefinitionErrorType.AMBIGUOUS_PREFIX_ALTS,\n                ruleName: rule.name,\n                occurrence: occurrence,\n                alternatives: ambgIndices\n            };\n        });\n        errors = errors.concat(currPathPrefixErrors);\n    });\n    return errors;\n}\nexports.checkPrefixAlternativesAmbiguities = checkPrefixAlternativesAmbiguities;\nfunction checkTerminalAndNoneTerminalsNameSpace(topLevels, tokenTypes, errMsgProvider) {\n    var errors = [];\n    var tokenNames = utils_1.map(tokenTypes, function (currToken) { return tokens_public_1.tokenName(currToken); });\n    utils_1.forEach(topLevels, function (currRule) {\n        var currRuleName = currRule.name;\n        if (utils_1.contains(tokenNames, currRuleName)) {\n            var errMsg = errMsgProvider.buildNamespaceConflictError(currRule);\n            errors.push({\n                message: errMsg,\n                type: parser_1.ParserDefinitionErrorType.CONFLICT_TOKENS_RULES_NAMESPACE,\n                ruleName: currRuleName\n            });\n        }\n    });\n    return errors;\n}\nfunction validateDuplicateNestedRules(topLevelRules, errMsgProvider) {\n    var errors = [];\n    utils_1.forEach(topLevelRules, function (currTopRule) {\n        var namedCollectorVisitor = new cst_1.NamedDSLMethodsCollectorVisitor(\"\");\n        currTopRule.accept(namedCollectorVisitor);\n        var prodsByGroup = utils_1.groupBy(namedCollectorVisitor.result, function (item) { return item.name; });\n        var duplicates = utils_1.pick(prodsByGroup, function (currGroup) {\n            return currGroup.length > 1;\n        });\n        utils_1.forEach(utils_1.values(duplicates), function (currDupGroup) {\n            var currDupProds = utils_1.map(currDupGroup, function (dupGroup) { return dupGroup.orgProd; });\n            var errMsg = errMsgProvider.buildDuplicateNestedRuleNameError(currTopRule, currDupProds);\n            errors.push({\n                message: errMsg,\n                type: parser_1.ParserDefinitionErrorType.DUPLICATE_NESTED_NAME,\n                ruleName: currTopRule.name\n            });\n        });\n    });\n    return errors;\n}\n//# sourceMappingURL=checks.js.map", "\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar utils_1 = require(\"../../utils/utils\");\nvar interpreter_1 = require(\"./interpreter\");\nvar rest_1 = require(\"./rest\");\nvar tokens_1 = require(\"../../scan/tokens\");\nvar gast_public_1 = require(\"./gast/gast_public\");\nvar gast_visitor_public_1 = require(\"./gast/gast_visitor_public\");\nvar PROD_TYPE;\n(function (PROD_TYPE) {\n    PROD_TYPE[PROD_TYPE[\"OPTION\"] = 0] = \"OPTION\";\n    PROD_TYPE[PROD_TYPE[\"REPETITION\"] = 1] = \"REPETITION\";\n    PROD_TYPE[PROD_TYPE[\"REPETITION_MANDATORY\"] = 2] = \"REPETITION_MANDATORY\";\n    PROD_TYPE[PROD_TYPE[\"REPETITION_MANDATORY_WITH_SEPARATOR\"] = 3] = \"REPETITION_MANDATORY_WITH_SEPARATOR\";\n    PROD_TYPE[PROD_TYPE[\"REPETITION_WITH_SEPARATOR\"] = 4] = \"REPETITION_WITH_SEPARATOR\";\n    PROD_TYPE[PROD_TYPE[\"ALTERNATION\"] = 5] = \"ALTERNATION\";\n})(PROD_TYPE = exports.PROD_TYPE || (exports.PROD_TYPE = {}));\nfunction getProdType(prod) {\n    /* istanbul ignore else */\n    if (prod instanceof gast_public_1.Option) {\n        return PROD_TYPE.OPTION;\n    }\n    else if (prod instanceof gast_public_1.Repetition) {\n        return PROD_TYPE.REPETITION;\n    }\n    else if (prod instanceof gast_public_1.RepetitionMandatory) {\n        return PROD_TYPE.REPETITION_MANDATORY;\n    }\n    else if (prod instanceof gast_public_1.RepetitionMandatoryWithSeparator) {\n        return PROD_TYPE.REPETITION_MANDATORY_WITH_SEPARATOR;\n    }\n    else if (prod instanceof gast_public_1.RepetitionWithSeparator) {\n        return PROD_TYPE.REPETITION_WITH_SEPARATOR;\n    }\n    else if (prod instanceof gast_public_1.Alternation) {\n        return PROD_TYPE.ALTERNATION;\n    }\n    else {\n        throw Error(\"non exhaustive match\");\n    }\n}\nexports.getProdType = getProdType;\nfunction buildLookaheadFuncForOr(occurrence, ruleGrammar, k, hasPredicates, dynamicTokensEnabled, laFuncBuilder) {\n    var lookAheadPaths = getLookaheadPathsForOr(occurrence, ruleGrammar, k);\n    var tokenMatcher = areTokenCategoriesNotUsed(lookAheadPaths)\n        ? tokens_1.tokenStructuredMatcherNoCategories\n        : tokens_1.tokenStructuredMatcher;\n    return laFuncBuilder(lookAheadPaths, hasPredicates, tokenMatcher, dynamicTokensEnabled);\n}\nexports.buildLookaheadFuncForOr = buildLookaheadFuncForOr;\n/**\n *  When dealing with an Optional production (OPTION/MANY/2nd iteration of AT_LEAST_ONE/...) we need to compare\n *  the lookahead \"inside\" the production and the lookahead immediately \"after\" it in the same top level rule (context free).\n *\n *  Example: given a production:\n *  ABC(DE)?DF\n *\n *  The optional '(DE)?' should only be entered if we see 'DE'. a single Token 'D' is not sufficient to distinguish between the two\n *  alternatives.\n *\n *  @returns A Lookahead function which will return true IFF the parser should parse the Optional production.\n */\nfunction buildLookaheadFuncForOptionalProd(occurrence, ruleGrammar, k, dynamicTokensEnabled, prodType, lookaheadBuilder) {\n    var lookAheadPaths = getLookaheadPathsForOptionalProd(occurrence, ruleGrammar, prodType, k);\n    var tokenMatcher = areTokenCategoriesNotUsed(lookAheadPaths)\n        ? tokens_1.tokenStructuredMatcherNoCategories\n        : tokens_1.tokenStructuredMatcher;\n    return lookaheadBuilder(lookAheadPaths[0], tokenMatcher, dynamicTokensEnabled);\n}\nexports.buildLookaheadFuncForOptionalProd = buildLookaheadFuncForOptionalProd;\nfunction buildAlternativesLookAheadFunc(alts, hasPredicates, tokenMatcher, dynamicTokensEnabled) {\n    var numOfAlts = alts.length;\n    var areAllOneTokenLookahead = utils_1.every(alts, function (currAlt) {\n        return utils_1.every(currAlt, function (currPath) {\n            return currPath.length === 1;\n        });\n    });\n    // This version takes into account the predicates as well.\n    if (hasPredicates) {\n        /**\n         * @returns {number} - The chosen alternative index\n         */\n        return function (orAlts) {\n            // unfortunately the predicates must be extracted every single time\n            // as they cannot be cached due to references to parameters(vars) which are no longer valid.\n            // note that in the common case of no predicates, no cpu time will be wasted on this (see else block)\n            var predicates = utils_1.map(orAlts, function (currAlt) { return currAlt.GATE; });\n            for (var t = 0; t < numOfAlts; t++) {\n                var currAlt = alts[t];\n                var currNumOfPaths = currAlt.length;\n                var currPredicate = predicates[t];\n                if (currPredicate !== undefined &&\n                    currPredicate.call(this) === false) {\n                    // if the predicate does not match there is no point in checking the paths\n                    continue;\n                }\n                nextPath: for (var j = 0; j < currNumOfPaths; j++) {\n                    var currPath = currAlt[j];\n                    var currPathLength = currPath.length;\n                    for (var i = 0; i < currPathLength; i++) {\n                        var nextToken = this.LA(i + 1);\n                        if (tokenMatcher(nextToken, currPath[i]) === false) {\n                            // mismatch in current path\n                            // try the next pth\n                            continue nextPath;\n                        }\n                    }\n                    // found a full path that matches.\n                    // this will also work for an empty ALT as the loop will be skipped\n                    return t;\n                }\n                // none of the paths for the current alternative matched\n                // try the next alternative\n            }\n            // none of the alternatives could be matched\n            return undefined;\n        };\n    }\n    else if (areAllOneTokenLookahead && !dynamicTokensEnabled) {\n        // optimized (common) case of all the lookaheads paths requiring only\n        // a single token lookahead. These Optimizations cannot work if dynamically defined Tokens are used.\n        var singleTokenAlts = utils_1.map(alts, function (currAlt) {\n            return utils_1.flatten(currAlt);\n        });\n        var choiceToAlt_1 = utils_1.reduce(singleTokenAlts, function (result, currAlt, idx) {\n            utils_1.forEach(currAlt, function (currTokType) {\n                if (!utils_1.has(result, currTokType.tokenTypeIdx)) {\n                    result[currTokType.tokenTypeIdx] = idx;\n                }\n                utils_1.forEach(currTokType.categoryMatches, function (currExtendingType) {\n                    if (!utils_1.has(result, currExtendingType)) {\n                        result[currExtendingType] = idx;\n                    }\n                });\n            });\n            return result;\n        }, []);\n        /**\n         * @returns {number} - The chosen alternative index\n         */\n        return function () {\n            var nextToken = this.LA(1);\n            return choiceToAlt_1[nextToken.tokenTypeIdx];\n        };\n    }\n    else {\n        // optimized lookahead without needing to check the predicates at all.\n        // this causes code duplication which is intentional to improve performance.\n        /**\n         * @returns {number} - The chosen alternative index\n         */\n        return function () {\n            for (var t = 0; t < numOfAlts; t++) {\n                var currAlt = alts[t];\n                var currNumOfPaths = currAlt.length;\n                nextPath: for (var j = 0; j < currNumOfPaths; j++) {\n                    var currPath = currAlt[j];\n                    var currPathLength = currPath.length;\n                    for (var i = 0; i < currPathLength; i++) {\n                        var nextToken = this.LA(i + 1);\n                        if (tokenMatcher(nextToken, currPath[i]) === false) {\n                            // mismatch in current path\n                            // try the next pth\n                            continue nextPath;\n                        }\n                    }\n                    // found a full path that matches.\n                    // this will also work for an empty ALT as the loop will be skipped\n                    return t;\n                }\n                // none of the paths for the current alternative matched\n                // try the next alternative\n            }\n            // none of the alternatives could be matched\n            return undefined;\n        };\n    }\n}\nexports.buildAlternativesLookAheadFunc = buildAlternativesLookAheadFunc;\nfunction buildSingleAlternativeLookaheadFunction(alt, tokenMatcher, dynamicTokensEnabled) {\n    var areAllOneTokenLookahead = utils_1.every(alt, function (currPath) {\n        return currPath.length === 1;\n    });\n    var numOfPaths = alt.length;\n    // optimized (common) case of all the lookaheads paths requiring only\n    // a single token lookahead.\n    if (areAllOneTokenLookahead && !dynamicTokensEnabled) {\n        var singleTokensTypes = utils_1.flatten(alt);\n        if (singleTokensTypes.length === 1 &&\n            utils_1.isEmpty(singleTokensTypes[0].categoryMatches)) {\n            var expectedTokenType = singleTokensTypes[0];\n            var expectedTokenUniqueKey_1 = expectedTokenType.tokenTypeIdx;\n            return function () {\n                return this.LA(1).tokenTypeIdx === expectedTokenUniqueKey_1;\n            };\n        }\n        else {\n            var choiceToAlt_2 = utils_1.reduce(singleTokensTypes, function (result, currTokType, idx) {\n                result[currTokType.tokenTypeIdx] = true;\n                utils_1.forEach(currTokType.categoryMatches, function (currExtendingType) {\n                    result[currExtendingType] = true;\n                });\n                return result;\n            }, []);\n            return function () {\n                var nextToken = this.LA(1);\n                return choiceToAlt_2[nextToken.tokenTypeIdx] === true;\n            };\n        }\n    }\n    else {\n        return function () {\n            nextPath: for (var j = 0; j < numOfPaths; j++) {\n                var currPath = alt[j];\n                var currPathLength = currPath.length;\n                for (var i = 0; i < currPathLength; i++) {\n                    var nextToken = this.LA(i + 1);\n                    if (tokenMatcher(nextToken, currPath[i]) === false) {\n                        // mismatch in current path\n                        // try the next pth\n                        continue nextPath;\n                    }\n                }\n                // found a full path that matches.\n                return true;\n            }\n            // none of the paths matched\n            return false;\n        };\n    }\n}\nexports.buildSingleAlternativeLookaheadFunction = buildSingleAlternativeLookaheadFunction;\nvar RestDefinitionFinderWalker = /** @class */ (function (_super) {\n    __extends(RestDefinitionFinderWalker, _super);\n    function RestDefinitionFinderWalker(topProd, targetOccurrence, targetProdType) {\n        var _this = _super.call(this) || this;\n        _this.topProd = topProd;\n        _this.targetOccurrence = targetOccurrence;\n        _this.targetProdType = targetProdType;\n        return _this;\n    }\n    RestDefinitionFinderWalker.prototype.startWalking = function () {\n        this.walk(this.topProd);\n        return this.restDef;\n    };\n    RestDefinitionFinderWalker.prototype.checkIsTarget = function (node, expectedProdType, currRest, prevRest) {\n        if (node.idx === this.targetOccurrence &&\n            this.targetProdType === expectedProdType) {\n            this.restDef = currRest.concat(prevRest);\n            return true;\n        }\n        // performance optimization, do not iterate over the entire Grammar ast after we have found the target\n        return false;\n    };\n    RestDefinitionFinderWalker.prototype.walkOption = function (optionProd, currRest, prevRest) {\n        if (!this.checkIsTarget(optionProd, PROD_TYPE.OPTION, currRest, prevRest)) {\n            _super.prototype.walkOption.call(this, optionProd, currRest, prevRest);\n        }\n    };\n    RestDefinitionFinderWalker.prototype.walkAtLeastOne = function (atLeastOneProd, currRest, prevRest) {\n        if (!this.checkIsTarget(atLeastOneProd, PROD_TYPE.REPETITION_MANDATORY, currRest, prevRest)) {\n            _super.prototype.walkOption.call(this, atLeastOneProd, currRest, prevRest);\n        }\n    };\n    RestDefinitionFinderWalker.prototype.walkAtLeastOneSep = function (atLeastOneSepProd, currRest, prevRest) {\n        if (!this.checkIsTarget(atLeastOneSepProd, PROD_TYPE.REPETITION_MANDATORY_WITH_SEPARATOR, currRest, prevRest)) {\n            _super.prototype.walkOption.call(this, atLeastOneSepProd, currRest, prevRest);\n        }\n    };\n    RestDefinitionFinderWalker.prototype.walkMany = function (manyProd, currRest, prevRest) {\n        if (!this.checkIsTarget(manyProd, PROD_TYPE.REPETITION, currRest, prevRest)) {\n            _super.prototype.walkOption.call(this, manyProd, currRest, prevRest);\n        }\n    };\n    RestDefinitionFinderWalker.prototype.walkManySep = function (manySepProd, currRest, prevRest) {\n        if (!this.checkIsTarget(manySepProd, PROD_TYPE.REPETITION_WITH_SEPARATOR, currRest, prevRest)) {\n            _super.prototype.walkOption.call(this, manySepProd, currRest, prevRest);\n        }\n    };\n    return RestDefinitionFinderWalker;\n}(rest_1.RestWalker));\n/**\n * Returns the definition of a target production in a top level level rule.\n */\nvar InsideDefinitionFinderVisitor = /** @class */ (function (_super) {\n    __extends(InsideDefinitionFinderVisitor, _super);\n    function InsideDefinitionFinderVisitor(targetOccurrence, targetProdType) {\n        var _this = _super.call(this) || this;\n        _this.targetOccurrence = targetOccurrence;\n        _this.targetProdType = targetProdType;\n        _this.result = [];\n        return _this;\n    }\n    InsideDefinitionFinderVisitor.prototype.checkIsTarget = function (node, expectedProdName) {\n        if (node.idx === this.targetOccurrence &&\n            this.targetProdType === expectedProdName) {\n            this.result = node.definition;\n        }\n    };\n    InsideDefinitionFinderVisitor.prototype.visitOption = function (node) {\n        this.checkIsTarget(node, PROD_TYPE.OPTION);\n    };\n    InsideDefinitionFinderVisitor.prototype.visitRepetition = function (node) {\n        this.checkIsTarget(node, PROD_TYPE.REPETITION);\n    };\n    InsideDefinitionFinderVisitor.prototype.visitRepetitionMandatory = function (node) {\n        this.checkIsTarget(node, PROD_TYPE.REPETITION_MANDATORY);\n    };\n    InsideDefinitionFinderVisitor.prototype.visitRepetitionMandatoryWithSeparator = function (node) {\n        this.checkIsTarget(node, PROD_TYPE.REPETITION_MANDATORY_WITH_SEPARATOR);\n    };\n    InsideDefinitionFinderVisitor.prototype.visitRepetitionWithSeparator = function (node) {\n        this.checkIsTarget(node, PROD_TYPE.REPETITION_WITH_SEPARATOR);\n    };\n    InsideDefinitionFinderVisitor.prototype.visitAlternation = function (node) {\n        this.checkIsTarget(node, PROD_TYPE.ALTERNATION);\n    };\n    return InsideDefinitionFinderVisitor;\n}(gast_visitor_public_1.GAstVisitor));\nfunction lookAheadSequenceFromAlternatives(altsDefs, k) {\n    function getOtherPaths(pathsAndSuffixes, filterIdx) {\n        return utils_1.reduce(pathsAndSuffixes, function (result, currPathsAndSuffixes, currIdx) {\n            if (currIdx !== filterIdx) {\n                var currPartialPaths = utils_1.map(currPathsAndSuffixes, function (singlePathAndSuffix) { return singlePathAndSuffix.partialPath; });\n                return result.concat(currPartialPaths);\n            }\n            return result;\n        }, []);\n    }\n    function isUniquePrefix(arr, item) {\n        return (utils_1.find(arr, function (currOtherPath) {\n            return utils_1.every(item, function (currPathTok, idx) {\n                return possibleTokenTypeMatch(currPathTok, currOtherPath[idx]);\n            });\n        }) === undefined);\n    }\n    function possibleTokenTypeMatch(tokTypeA, tokTypeB) {\n        return (tokTypeA === tokTypeB ||\n            (tokTypeA &&\n                tokTypeB &&\n                (tokTypeA.categoryMatchesMap[tokTypeB.tokenTypeIdx] ||\n                    tokTypeB.categoryMatchesMap[tokTypeA.tokenTypeIdx])));\n    }\n    function initializeArrayOfArrays(size) {\n        var result = [];\n        for (var i = 0; i < size; i++) {\n            result.push([]);\n        }\n        return result;\n    }\n    var partialAlts = utils_1.map(altsDefs, function (currAlt) { return interpreter_1.possiblePathsFrom([currAlt], 1); });\n    var finalResult = initializeArrayOfArrays(partialAlts.length);\n    var newData = partialAlts;\n    // maxLookahead loop\n    for (var pathLength = 1; pathLength <= k; pathLength++) {\n        var currDataset = newData;\n        newData = initializeArrayOfArrays(currDataset.length);\n        // alternatives loop\n        for (var resultIdx = 0; resultIdx < currDataset.length; resultIdx++) {\n            var currAltPathsAndSuffixes = currDataset[resultIdx];\n            var otherPaths = getOtherPaths(currDataset, resultIdx);\n            // paths in current alternative loop\n            for (var currPathIdx = 0; currPathIdx < currAltPathsAndSuffixes.length; currPathIdx++) {\n                var currPathPrefix = currAltPathsAndSuffixes[currPathIdx].partialPath;\n                var suffixDef = currAltPathsAndSuffixes[currPathIdx].suffixDef;\n                var isUnique = isUniquePrefix(otherPaths, currPathPrefix);\n                // even if a path is not unique, but there are no longer alternatives to try\n                // or if we have reached the maximum lookahead (k) permitted.\n                if (isUnique ||\n                    utils_1.isEmpty(suffixDef) ||\n                    currPathPrefix.length === k) {\n                    var currAltResult = finalResult[resultIdx];\n                    if (!containsPath(currAltResult, currPathPrefix)) {\n                        currAltResult.push(currPathPrefix);\n                    }\n                }\n                else {\n                    var newPartialPathsAndSuffixes = interpreter_1.possiblePathsFrom(suffixDef, pathLength + 1, currPathPrefix);\n                    newData[resultIdx] = newData[resultIdx].concat(newPartialPathsAndSuffixes);\n                }\n            }\n        }\n    }\n    return finalResult;\n}\nexports.lookAheadSequenceFromAlternatives = lookAheadSequenceFromAlternatives;\nfunction getLookaheadPathsForOr(occurrence, ruleGrammar, k) {\n    var visitor = new InsideDefinitionFinderVisitor(occurrence, PROD_TYPE.ALTERNATION);\n    ruleGrammar.accept(visitor);\n    return lookAheadSequenceFromAlternatives(visitor.result, k);\n}\nexports.getLookaheadPathsForOr = getLookaheadPathsForOr;\nfunction getLookaheadPathsForOptionalProd(occurrence, ruleGrammar, prodType, k) {\n    var insideDefVisitor = new InsideDefinitionFinderVisitor(occurrence, prodType);\n    ruleGrammar.accept(insideDefVisitor);\n    var insideDef = insideDefVisitor.result;\n    var afterDefWalker = new RestDefinitionFinderWalker(ruleGrammar, occurrence, prodType);\n    var afterDef = afterDefWalker.startWalking();\n    var insideFlat = new gast_public_1.Flat({ definition: insideDef });\n    var afterFlat = new gast_public_1.Flat({ definition: afterDef });\n    return lookAheadSequenceFromAlternatives([insideFlat, afterFlat], k);\n}\nexports.getLookaheadPathsForOptionalProd = getLookaheadPathsForOptionalProd;\nfunction containsPath(alternative, path) {\n    var found = utils_1.find(alternative, function (otherPath) {\n        return (path.length === otherPath.length &&\n            utils_1.every(path, function (targetItem, idx) {\n                // TODO: take categories into account here too?\n                return (targetItem === otherPath[idx] ||\n                    otherPath[idx].categoryMatchesMap[targetItem.tokenTypeIdx]);\n            }));\n    });\n    return found !== undefined;\n}\nexports.containsPath = containsPath;\nfunction isStrictPrefixOfPath(prefix, other) {\n    return (prefix.length < other.length &&\n        utils_1.every(prefix, function (tokType, idx) {\n            var otherTokType = other[idx];\n            return (tokType === otherTokType ||\n                otherTokType.categoryMatchesMap[tokType.tokenTypeIdx]);\n        }));\n}\nexports.isStrictPrefixOfPath = isStrictPrefixOfPath;\nfunction areTokenCategoriesNotUsed(lookAheadPaths) {\n    return utils_1.every(lookAheadPaths, function (singleAltPaths) {\n        return utils_1.every(singleAltPaths, function (singlePath) {\n            return utils_1.every(singlePath, function (token) { return utils_1.isEmpty(token.categoryMatches); });\n        });\n    });\n}\nexports.areTokenCategoriesNotUsed = areTokenCategoriesNotUsed;\n//# sourceMappingURL=lookahead.js.map", "\"use strict\";\n/* istanbul ignore next */ var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rest_1 = require(\"./rest\");\nvar utils_1 = require(\"../../utils/utils\");\nvar tokens_public_1 = require(\"../../scan/tokens_public\");\nvar first_1 = require(\"./first\");\nvar gast_public_1 = require(\"./gast/gast_public\");\nvar AbstractNextPossibleTokensWalker = /** @class */ (function (_super) {\n    __extends(AbstractNextPossibleTokensWalker, _super);\n    function AbstractNextPossibleTokensWalker(topProd, path) {\n        var _this = _super.call(this) /* istanbul ignore next */ || this;\n        _this.topProd = topProd;\n        _this.path = path;\n        _this.possibleTokTypes = [];\n        _this.nextProductionName = \"\";\n        _this.nextProductionOccurrence = 0;\n        _this.found = false;\n        _this.isAtEndOfPath = false;\n        return _this;\n    }\n    AbstractNextPossibleTokensWalker.prototype.startWalking = function () {\n        this.found = false;\n        if (this.path.ruleStack[0] !== this.topProd.name) {\n            throw Error(\"The path does not start with the walker's top Rule!\");\n        }\n        // immutable for the win\n        this.ruleStack = utils_1.cloneArr(this.path.ruleStack).reverse(); // intelij bug requires assertion\n        this.occurrenceStack = utils_1.cloneArr(this.path.occurrenceStack).reverse(); // intelij bug requires assertion\n        // already verified that the first production is valid, we now seek the 2nd production\n        this.ruleStack.pop();\n        this.occurrenceStack.pop();\n        this.updateExpectedNext();\n        this.walk(this.topProd);\n        return this.possibleTokTypes;\n    };\n    AbstractNextPossibleTokensWalker.prototype.walk = function (prod, prevRest) {\n        if (prevRest === void 0) { prevRest = []; }\n        // stop scanning once we found the path\n        if (!this.found) {\n            _super.prototype.walk.call(this, prod, prevRest);\n        }\n    };\n    AbstractNextPossibleTokensWalker.prototype.walkProdRef = function (refProd, currRest, prevRest) {\n        // found the next production, need to keep walking in it\n        if (refProd.referencedRule.name === this.nextProductionName &&\n            refProd.idx === this.nextProductionOccurrence) {\n            var fullRest = currRest.concat(prevRest);\n            this.updateExpectedNext();\n            this.walk(refProd.referencedRule, fullRest);\n        }\n    };\n    AbstractNextPossibleTokensWalker.prototype.updateExpectedNext = function () {\n        // need to consume the Terminal\n        if (utils_1.isEmpty(this.ruleStack)) {\n            // must reset nextProductionXXX to avoid walking down another Top Level production while what we are\n            // really seeking is the last Terminal...\n            this.nextProductionName = \"\";\n            this.nextProductionOccurrence = 0;\n            this.isAtEndOfPath = true;\n        }\n        else {\n            this.nextProductionName = this.ruleStack.pop();\n            this.nextProductionOccurrence = this.occurrenceStack.pop();\n        }\n    };\n    return AbstractNextPossibleTokensWalker;\n}(rest_1.RestWalker));\nexports.AbstractNextPossibleTokensWalker = AbstractNextPossibleTokensWalker;\nvar NextAfterTokenWalker = /** @class */ (function (_super) {\n    __extends(NextAfterTokenWalker, _super);\n    function NextAfterTokenWalker(topProd, path) {\n        var _this = _super.call(this, topProd, path) /* istanbul ignore next */ || this;\n        _this.path = path;\n        _this.nextTerminalName = \"\";\n        _this.nextTerminalOccurrence = 0;\n        _this.nextTerminalName = tokens_public_1.tokenName(_this.path.lastTok);\n        _this.nextTerminalOccurrence = _this.path.lastTokOccurrence;\n        return _this;\n    }\n    NextAfterTokenWalker.prototype.walkTerminal = function (terminal, currRest, prevRest) {\n        if (this.isAtEndOfPath &&\n            tokens_public_1.tokenName(terminal.terminalType) === this.nextTerminalName &&\n            terminal.idx === this.nextTerminalOccurrence &&\n            !this.found) {\n            var fullRest = currRest.concat(prevRest);\n            var restProd = new gast_public_1.Flat({ definition: fullRest });\n            this.possibleTokTypes = first_1.first(restProd);\n            this.found = true;\n        }\n    };\n    return NextAfterTokenWalker;\n}(AbstractNextPossibleTokensWalker));\nexports.NextAfterTokenWalker = NextAfterTokenWalker;\n/**\n * This walker only \"walks\" a single \"TOP\" level in the Grammar Ast, this means\n * it never \"follows\" production refs\n */\nvar AbstractNextTerminalAfterProductionWalker = /** @class */ (function (_super) {\n    __extends(AbstractNextTerminalAfterProductionWalker, _super);\n    function AbstractNextTerminalAfterProductionWalker(topRule, occurrence) {\n        var _this = _super.call(this) /* istanbul ignore next */ || this;\n        _this.topRule = topRule;\n        _this.occurrence = occurrence;\n        _this.result = {\n            token: undefined,\n            occurrence: undefined,\n            isEndOfRule: undefined\n        };\n        return _this;\n    }\n    AbstractNextTerminalAfterProductionWalker.prototype.startWalking = function () {\n        this.walk(this.topRule);\n        return this.result;\n    };\n    return AbstractNextTerminalAfterProductionWalker;\n}(rest_1.RestWalker));\nexports.AbstractNextTerminalAfterProductionWalker = AbstractNextTerminalAfterProductionWalker;\nvar NextTerminalAfterManyWalker = /** @class */ (function (_super) {\n    __extends(NextTerminalAfterManyWalker, _super);\n    function NextTerminalAfterManyWalker() {\n        return _super !== null && _super.apply(this, arguments) /* istanbul ignore next */ || this;\n    }\n    NextTerminalAfterManyWalker.prototype.walkMany = function (manyProd, currRest, prevRest) {\n        if (manyProd.idx === this.occurrence) {\n            var firstAfterMany = utils_1.first(currRest.concat(prevRest));\n            this.result.isEndOfRule = firstAfterMany === undefined;\n            if (firstAfterMany instanceof gast_public_1.Terminal) {\n                this.result.token = firstAfterMany.terminalType;\n                this.result.occurrence = firstAfterMany.idx;\n            }\n        }\n        else {\n            _super.prototype.walkMany.call(this, manyProd, currRest, prevRest);\n        }\n    };\n    return NextTerminalAfterManyWalker;\n}(AbstractNextTerminalAfterProductionWalker));\nexports.NextTerminalAfterManyWalker = NextTerminalAfterManyWalker;\nvar NextTerminalAfterManySepWalker = /** @class */ (function (_super) {\n    __extends(NextTerminalAfterManySepWalker, _super);\n    function NextTerminalAfterManySepWalker() {\n        return _super !== null && _super.apply(this, arguments) /* istanbul ignore next */ || this;\n    }\n    NextTerminalAfterManySepWalker.prototype.walkManySep = function (manySepProd, currRest, prevRest) {\n        if (manySepProd.idx === this.occurrence) {\n            var firstAfterManySep = utils_1.first(currRest.concat(prevRest));\n            this.result.isEndOfRule = firstAfterManySep === undefined;\n            if (firstAfterManySep instanceof gast_public_1.Terminal) {\n                this.result.token = firstAfterManySep.terminalType;\n                this.result.occurrence = firstAfterManySep.idx;\n            }\n        }\n        else {\n            _super.prototype.walkManySep.call(this, manySepProd, currRest, prevRest);\n        }\n    };\n    return NextTerminalAfterManySepWalker;\n}(AbstractNextTerminalAfterProductionWalker));\nexports.NextTerminalAfterManySepWalker = NextTerminalAfterManySepWalker;\nvar NextTerminalAfterAtLeastOneWalker = /** @class */ (function (_super) {\n    __extends(NextTerminalAfterAtLeastOneWalker, _super);\n    function NextTerminalAfterAtLeastOneWalker() {\n        return _super !== null && _super.apply(this, arguments) /* istanbul ignore next */ || this;\n    }\n    NextTerminalAfterAtLeastOneWalker.prototype.walkAtLeastOne = function (atLeastOneProd, currRest, prevRest) {\n        if (atLeastOneProd.idx === this.occurrence) {\n            var firstAfterAtLeastOne = utils_1.first(currRest.concat(prevRest));\n            this.result.isEndOfRule = firstAfterAtLeastOne === undefined;\n            if (firstAfterAtLeastOne instanceof gast_public_1.Terminal) {\n                this.result.token = firstAfterAtLeastOne.terminalType;\n                this.result.occurrence = firstAfterAtLeastOne.idx;\n            }\n        }\n        else {\n            _super.prototype.walkAtLeastOne.call(this, atLeastOneProd, currRest, prevRest);\n        }\n    };\n    return NextTerminalAfterAtLeastOneWalker;\n}(AbstractNextTerminalAfterProductionWalker));\nexports.NextTerminalAfterAtLeastOneWalker = NextTerminalAfterAtLeastOneWalker;\n// TODO: reduce code duplication in the AfterWalkers\nvar NextTerminalAfterAtLeastOneSepWalker = /** @class */ (function (_super) {\n    __extends(NextTerminalAfterAtLeastOneSepWalker, _super);\n    function NextTerminalAfterAtLeastOneSepWalker() {\n        return _super !== null && _super.apply(this, arguments) /* istanbul ignore next */ || this;\n    }\n    NextTerminalAfterAtLeastOneSepWalker.prototype.walkAtLeastOneSep = function (atleastOneSepProd, currRest, prevRest) {\n        if (atleastOneSepProd.idx === this.occurrence) {\n            var firstAfterfirstAfterAtLeastOneSep = utils_1.first(currRest.concat(prevRest));\n            this.result.isEndOfRule =\n                firstAfterfirstAfterAtLeastOneSep === undefined;\n            if (firstAfterfirstAfterAtLeastOneSep instanceof gast_public_1.Terminal) {\n                this.result.token =\n                    firstAfterfirstAfterAtLeastOneSep.terminalType;\n                this.result.occurrence = firstAfterfirstAfterAtLeastOneSep.idx;\n            }\n        }\n        else {\n            _super.prototype.walkAtLeastOneSep.call(this, atleastOneSepProd, currRest, prevRest);\n        }\n    };\n    return NextTerminalAfterAtLeastOneSepWalker;\n}(AbstractNextTerminalAfterProductionWalker));\nexports.NextTerminalAfterAtLeastOneSepWalker = NextTerminalAfterAtLeastOneSepWalker;\nfunction possiblePathsFrom(targetDef, maxLength, currPath) {\n    if (currPath === void 0) { currPath = []; }\n    // avoid side effects\n    currPath = utils_1.cloneArr(currPath);\n    var result = [];\n    var i = 0;\n    function remainingPathWith(nextDef) {\n        return nextDef.concat(utils_1.drop(targetDef, i + 1));\n    }\n    function getAlternativesForProd(definition) {\n        var alternatives = possiblePathsFrom(remainingPathWith(definition), maxLength, currPath);\n        return result.concat(alternatives);\n    }\n    /**\n     * Mandatory productions will halt the loop as the paths computed from their recursive calls will already contain the\n     * following (rest) of the targetDef.\n     *\n     * For optional productions (Option/Repetition/...) the loop will continue to represent the paths that do not include the\n     * the optional production.\n     */\n    while (currPath.length < maxLength && i < targetDef.length) {\n        var prod = targetDef[i];\n        /* istanbul ignore else */\n        if (prod instanceof gast_public_1.Flat) {\n            return getAlternativesForProd(prod.definition);\n        }\n        else if (prod instanceof gast_public_1.NonTerminal) {\n            return getAlternativesForProd(prod.definition);\n        }\n        else if (prod instanceof gast_public_1.Option) {\n            result = getAlternativesForProd(prod.definition);\n        }\n        else if (prod instanceof gast_public_1.RepetitionMandatory) {\n            var newDef = prod.definition.concat([\n                new gast_public_1.Repetition({\n                    definition: prod.definition\n                })\n            ]);\n            return getAlternativesForProd(newDef);\n        }\n        else if (prod instanceof gast_public_1.RepetitionMandatoryWithSeparator) {\n            var newDef = [\n                new gast_public_1.Flat({ definition: prod.definition }),\n                new gast_public_1.Repetition({\n                    definition: [\n                        new gast_public_1.Terminal({ terminalType: prod.separator })\n                    ].concat(prod.definition)\n                })\n            ];\n            return getAlternativesForProd(newDef);\n        }\n        else if (prod instanceof gast_public_1.RepetitionWithSeparator) {\n            var newDef = prod.definition.concat([\n                new gast_public_1.Repetition({\n                    definition: [\n                        new gast_public_1.Terminal({ terminalType: prod.separator })\n                    ].concat(prod.definition)\n                })\n            ]);\n            result = getAlternativesForProd(newDef);\n        }\n        else if (prod instanceof gast_public_1.Repetition) {\n            var newDef = prod.definition.concat([\n                new gast_public_1.Repetition({\n                    definition: prod.definition\n                })\n            ]);\n            result = getAlternativesForProd(newDef);\n        }\n        else if (prod instanceof gast_public_1.Alternation) {\n            utils_1.forEach(prod.definition, function (currAlt) {\n                result = getAlternativesForProd(currAlt.definition);\n            });\n            return result;\n        }\n        else if (prod instanceof gast_public_1.Terminal) {\n            currPath.push(prod.terminalType);\n        }\n        else {\n            throw Error(\"non exhaustive match\");\n        }\n        i++;\n    }\n    result.push({\n        partialPath: currPath,\n        suffixDef: utils_1.drop(targetDef, i)\n    });\n    return result;\n}\nexports.possiblePathsFrom = possiblePathsFrom;\nfunction nextPossibleTokensAfter(initialDef, tokenVector, tokMatcher, maxLookAhead) {\n    var EXIT_NON_TERMINAL = \"EXIT_NONE_TERMINAL\";\n    // to avoid creating a new Array each time.\n    var EXIT_NON_TERMINAL_ARR = [EXIT_NON_TERMINAL];\n    var EXIT_ALTERNATIVE = \"EXIT_ALTERNATIVE\";\n    var foundCompletePath = false;\n    var tokenVectorLength = tokenVector.length;\n    var minimalAlternativesIndex = tokenVectorLength - maxLookAhead - 1;\n    var result = [];\n    var possiblePaths = [];\n    possiblePaths.push({\n        idx: -1,\n        def: initialDef,\n        ruleStack: [],\n        occurrenceStack: []\n    });\n    while (!utils_1.isEmpty(possiblePaths)) {\n        var currPath = possiblePaths.pop();\n        // skip alternatives if no more results can be found (assuming deterministic grammar with fixed lookahead)\n        if (currPath === EXIT_ALTERNATIVE) {\n            if (foundCompletePath &&\n                utils_1.last(possiblePaths).idx <= minimalAlternativesIndex) {\n                // remove irrelevant alternative\n                possiblePaths.pop();\n            }\n            continue;\n        }\n        var currDef = currPath.def;\n        var currIdx = currPath.idx;\n        var currRuleStack = currPath.ruleStack;\n        var currOccurrenceStack = currPath.occurrenceStack;\n        // For Example: an empty path could exist in a valid grammar in the case of an EMPTY_ALT\n        if (utils_1.isEmpty(currDef)) {\n            continue;\n        }\n        var prod = currDef[0];\n        /* istanbul ignore else */\n        if (prod === EXIT_NON_TERMINAL) {\n            var nextPath = {\n                idx: currIdx,\n                def: utils_1.drop(currDef),\n                ruleStack: utils_1.dropRight(currRuleStack),\n                occurrenceStack: utils_1.dropRight(currOccurrenceStack)\n            };\n            possiblePaths.push(nextPath);\n        }\n        else if (prod instanceof gast_public_1.Terminal) {\n            /* istanbul ignore else */\n            if (currIdx < tokenVectorLength - 1) {\n                var nextIdx = currIdx + 1;\n                var actualToken = tokenVector[nextIdx];\n                if (tokMatcher(actualToken, prod.terminalType)) {\n                    var nextPath = {\n                        idx: nextIdx,\n                        def: utils_1.drop(currDef),\n                        ruleStack: currRuleStack,\n                        occurrenceStack: currOccurrenceStack\n                    };\n                    possiblePaths.push(nextPath);\n                }\n                // end of the line\n            }\n            else if (currIdx === tokenVectorLength - 1) {\n                // IGNORE ABOVE ELSE\n                result.push({\n                    nextTokenType: prod.terminalType,\n                    nextTokenOccurrence: prod.idx,\n                    ruleStack: currRuleStack,\n                    occurrenceStack: currOccurrenceStack\n                });\n                foundCompletePath = true;\n            }\n            else {\n                throw Error(\"non exhaustive match\");\n            }\n        }\n        else if (prod instanceof gast_public_1.NonTerminal) {\n            var newRuleStack = utils_1.cloneArr(currRuleStack);\n            newRuleStack.push(prod.nonTerminalName);\n            var newOccurrenceStack = utils_1.cloneArr(currOccurrenceStack);\n            newOccurrenceStack.push(prod.idx);\n            var nextPath = {\n                idx: currIdx,\n                def: prod.definition.concat(EXIT_NON_TERMINAL_ARR, utils_1.drop(currDef)),\n                ruleStack: newRuleStack,\n                occurrenceStack: newOccurrenceStack\n            };\n            possiblePaths.push(nextPath);\n        }\n        else if (prod instanceof gast_public_1.Option) {\n            // the order of alternatives is meaningful, FILO (Last path will be traversed first).\n            var nextPathWithout = {\n                idx: currIdx,\n                def: utils_1.drop(currDef),\n                ruleStack: currRuleStack,\n                occurrenceStack: currOccurrenceStack\n            };\n            possiblePaths.push(nextPathWithout);\n            // required marker to avoid backtracking paths whose higher priority alternatives already matched\n            possiblePaths.push(EXIT_ALTERNATIVE);\n            var nextPathWith = {\n                idx: currIdx,\n                def: prod.definition.concat(utils_1.drop(currDef)),\n                ruleStack: currRuleStack,\n                occurrenceStack: currOccurrenceStack\n            };\n            possiblePaths.push(nextPathWith);\n        }\n        else if (prod instanceof gast_public_1.RepetitionMandatory) {\n            // TODO:(THE NEW operators here take a while...) (convert once?)\n            var secondIteration = new gast_public_1.Repetition({\n                definition: prod.definition,\n                idx: prod.idx\n            });\n            var nextDef = prod.definition.concat([secondIteration], utils_1.drop(currDef));\n            var nextPath = {\n                idx: currIdx,\n                def: nextDef,\n                ruleStack: currRuleStack,\n                occurrenceStack: currOccurrenceStack\n            };\n            possiblePaths.push(nextPath);\n        }\n        else if (prod instanceof gast_public_1.RepetitionMandatoryWithSeparator) {\n            // TODO:(THE NEW operators here take a while...) (convert once?)\n            var separatorGast = new gast_public_1.Terminal({\n                terminalType: prod.separator\n            });\n            var secondIteration = new gast_public_1.Repetition({\n                definition: [separatorGast].concat(prod.definition),\n                idx: prod.idx\n            });\n            var nextDef = prod.definition.concat([secondIteration], utils_1.drop(currDef));\n            var nextPath = {\n                idx: currIdx,\n                def: nextDef,\n                ruleStack: currRuleStack,\n                occurrenceStack: currOccurrenceStack\n            };\n            possiblePaths.push(nextPath);\n        }\n        else if (prod instanceof gast_public_1.RepetitionWithSeparator) {\n            // the order of alternatives is meaningful, FILO (Last path will be traversed first).\n            var nextPathWithout = {\n                idx: currIdx,\n                def: utils_1.drop(currDef),\n                ruleStack: currRuleStack,\n                occurrenceStack: currOccurrenceStack\n            };\n            possiblePaths.push(nextPathWithout);\n            // required marker to avoid backtracking paths whose higher priority alternatives already matched\n            possiblePaths.push(EXIT_ALTERNATIVE);\n            var separatorGast = new gast_public_1.Terminal({\n                terminalType: prod.separator\n            });\n            var nthRepetition = new gast_public_1.Repetition({\n                definition: [separatorGast].concat(prod.definition),\n                idx: prod.idx\n            });\n            var nextDef = prod.definition.concat([nthRepetition], utils_1.drop(currDef));\n            var nextPathWith = {\n                idx: currIdx,\n                def: nextDef,\n                ruleStack: currRuleStack,\n                occurrenceStack: currOccurrenceStack\n            };\n            possiblePaths.push(nextPathWith);\n        }\n        else if (prod instanceof gast_public_1.Repetition) {\n            // the order of alternatives is meaningful, FILO (Last path will be traversed first).\n            var nextPathWithout = {\n                idx: currIdx,\n                def: utils_1.drop(currDef),\n                ruleStack: currRuleStack,\n                occurrenceStack: currOccurrenceStack\n            };\n            possiblePaths.push(nextPathWithout);\n            // required marker to avoid backtracking paths whose higher priority alternatives already matched\n            possiblePaths.push(EXIT_ALTERNATIVE);\n            // TODO: an empty repetition will cause infinite loops here, will the parser detect this in selfAnalysis?\n            var nthRepetition = new gast_public_1.Repetition({\n                definition: prod.definition,\n                idx: prod.idx\n            });\n            var nextDef = prod.definition.concat([nthRepetition], utils_1.drop(currDef));\n            var nextPathWith = {\n                idx: currIdx,\n                def: nextDef,\n                ruleStack: currRuleStack,\n                occurrenceStack: currOccurrenceStack\n            };\n            possiblePaths.push(nextPathWith);\n        }\n        else if (prod instanceof gast_public_1.Alternation) {\n            // the order of alternatives is meaningful, FILO (Last path will be traversed first).\n            for (var i = prod.definition.length - 1; i >= 0; i--) {\n                var currAlt = prod.definition[i];\n                var currAltPath = {\n                    idx: currIdx,\n                    def: currAlt.definition.concat(utils_1.drop(currDef)),\n                    ruleStack: currRuleStack,\n                    occurrenceStack: currOccurrenceStack\n                };\n                possiblePaths.push(currAltPath);\n                possiblePaths.push(EXIT_ALTERNATIVE);\n            }\n        }\n        else if (prod instanceof gast_public_1.Flat) {\n            possiblePaths.push({\n                idx: currIdx,\n                def: prod.definition.concat(utils_1.drop(currDef)),\n                ruleStack: currRuleStack,\n                occurrenceStack: currOccurrenceStack\n            });\n        }\n        else if (prod instanceof gast_public_1.Rule) {\n            // last because we should only encounter at most a single one of these per invocation.\n            possiblePaths.push(expandTopLevelRule(prod, currIdx, currRuleStack, currOccurrenceStack));\n        }\n        else {\n            throw Error(\"non exhaustive match\");\n        }\n    }\n    return result;\n}\nexports.nextPossibleTokensAfter = nextPossibleTokensAfter;\nfunction expandTopLevelRule(topRule, currIdx, currRuleStack, currOccurrenceStack) {\n    var newRuleStack = utils_1.cloneArr(currRuleStack);\n    newRuleStack.push(topRule.name);\n    var newCurrOccurrenceStack = utils_1.cloneArr(currOccurrenceStack);\n    // top rule is always assumed to have been called with occurrence index 1\n    newCurrOccurrenceStack.push(1);\n    return {\n        idx: currIdx,\n        def: topRule.definition,\n        ruleStack: newRuleStack,\n        occurrenceStack: newCurrOccurrenceStack\n    };\n}\n//# sourceMappingURL=interpreter.js.map", "var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar sparqlTokenMap = require('./tokens').sparqlTokenMap;\nimport { Parser, Lexer, } from 'chevrotain';\n// @ts-ignore: debug logging\nfunction log() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    // console.log(...args);\n}\nvar BaseSparqlParser = /** @class */ (function (_super) {\n    __extends(BaseSparqlParser, _super);\n    function BaseSparqlParser(options, tokenVocab) {\n        if (options === void 0) { options = {}; }\n        var _this = _super.call(this, tokenVocab, __assign({ recoveryEnabled: true, outputCst: true }, options.config)) || this;\n        _this.tokenize = function (document) {\n            return _this.lexer.tokenize(document).tokens;\n        };\n        _this.parse = function (document, entryRule) {\n            if (entryRule === void 0) { entryRule = _this.SparqlDoc; }\n            var lexerResult = _this.lexer.tokenize(document);\n            _this.input = lexerResult.tokens;\n            var comments = lexerResult.groups.comments || [];\n            var cst = entryRule.call(_this);\n            var errors = _this.errors;\n            return {\n                errors: errors,\n                comments: comments,\n                cst: cst,\n            };\n        };\n        _this.parseGroupGraphPattern = function (document) {\n            return _this.parse(document, _this.GroupGraphPattern);\n        };\n        _this.parseTriplesBlock = function (document) {\n            return _this.parse(document, _this.TriplesBlock);\n        };\n        // NOTE: For the sake of usability in text editors/IDEs, this parser encodes\n        // a grammar that is slightly different from the official SPARQL spec. The\n        // main differences are in the `SparqlDoc`, rule, the `Prologue` rule, and\n        // the `Update` rule. Essentially, the grammar encoded by this parser should\n        // allow any number of interspered Prologues (PREFIX/BASE), QueryUnits, and\n        // UpdateUnits, so that, e.g., this is valid:\n        //\n        //  select * { ?s ?p ?o }\n        //  prefix foo: <bar>\n        //  clear all\n        //  prefix x: <y>\n        //  construct { ?s ?p ?o }\n        //  ask { ?s ?p ?o }\n        //\n        // This is not valid according to the official spec. However, line 1 is\n        // valid, lines 2-3 are valid, lines 4-5 are valid, and line 6 is valid. In a\n        // text editor, a user might want to select and execute only those lines.\n        _this.SparqlDoc = _this.RULE('SparqlDoc', function () {\n            log('SparqlDoc');\n            _this.MANY(function () {\n                return _this.OR([\n                    { ALT: function () { return _this.SUBRULE(_this.Prologue); } },\n                    { ALT: function () { return _this.SUBRULE(_this.QueryUnit); } },\n                    { ALT: function () { return _this.SUBRULE(_this.UpdateUnit); } },\n                ]);\n            });\n        });\n        _this.QueryUnit = _this.RULE('QueryUnit', function () {\n            log('QueryUnit');\n            _this.SUBRULE(_this.Query);\n        });\n        _this.Query = _this.RULE('Query', function () {\n            log('Query');\n            _this.OR([\n                { ALT: function () { return _this.SUBRULE(_this.SelectQuery); } },\n                { ALT: function () { return _this.SUBRULE(_this.ConstructQuery); } },\n                { ALT: function () { return _this.SUBRULE(_this.DescribeQuery); } },\n                { ALT: function () { return _this.SUBRULE(_this.AskQuery); } },\n            ]);\n            _this.SUBRULE(_this.ValuesClause);\n        });\n        _this.Constant = _this.RULE('Constant', function () {\n            _this.OR([\n                { ALT: function () { return _this.SUBRULE(_this.iri); } },\n                { ALT: function () { return _this.SUBRULE(_this.RDFLiteral); } },\n                { ALT: function () { return _this.SUBRULE(_this.NumericLiteral); } },\n                { ALT: function () { return _this.SUBRULE(_this.BooleanLiteral); } },\n            ]);\n        });\n        _this.MaxLength = _this.RULE('MaxLength', function () {\n            _this.CONSUME(sparqlTokenMap.MAX_LENGTH);\n            _this.CONSUME(sparqlTokenMap.INTEGER);\n        });\n        _this.UpdateUnit = _this.RULE('UpdateUnit', function () {\n            log('UpdateUnit');\n            _this.SUBRULE(_this.Update);\n        });\n        _this.Prologue = _this.RULE('Prologue', function () {\n            log('Prologue');\n            _this.AT_LEAST_ONE(function () {\n                return _this.OR([\n                    { ALT: function () { return _this.SUBRULE(_this.BaseDecl); } },\n                    { ALT: function () { return _this.SUBRULE(_this.PrefixDecl); } },\n                ]);\n            });\n        });\n        _this.BaseDecl = _this.RULE('BaseDecl', function () {\n            log('BaseDecl');\n            _this.CONSUME(sparqlTokenMap.BASE);\n            _this.CONSUME(sparqlTokenMap.IRIREF);\n        });\n        _this.PrefixDecl = _this.RULE('PrefixDecl', function () {\n            log('PrefixDecl');\n            _this.CONSUME(sparqlTokenMap.PREFIX);\n            _this.CONSUME(sparqlTokenMap.PNAME_NS);\n            _this.CONSUME(sparqlTokenMap.IRIREF);\n        });\n        _this.SelectQuery = _this.RULE('SelectQuery', function () {\n            log('SelectQuery');\n            _this.SUBRULE(_this.SelectClause);\n            _this.MANY(function () { return _this.SUBRULE(_this.DatasetClause); });\n            _this.SUBRULE(_this.WhereClause);\n            _this.SUBRULE(_this.SolutionModifier);\n        });\n        _this.SubSelect = _this.RULE('SubSelect', function () {\n            log('SubSelect');\n            _this.SUBRULE(_this.SelectClause);\n            _this.SUBRULE(_this.WhereClause);\n            _this.SUBRULE(_this.SolutionModifier);\n            _this.SUBRULE(_this.ValuesClause);\n        });\n        _this.SelectClause = _this.RULE('SelectClause', function () {\n            log('SelectClause');\n            _this.CONSUME(sparqlTokenMap.SELECT);\n            _this.OPTION(function () {\n                return _this.OR([\n                    { ALT: function () { return _this.CONSUME(sparqlTokenMap.DISTINCT); } },\n                    { ALT: function () { return _this.CONSUME(sparqlTokenMap.REDUCED); } },\n                ]);\n            });\n            _this.OR1([\n                {\n                    ALT: function () {\n                        _this.AT_LEAST_ONE(function () {\n                            return _this.OR2([\n                                { ALT: function () { return _this.SUBRULE(_this.Var); } },\n                                {\n                                    ALT: function () {\n                                        _this.CONSUME(sparqlTokenMap.LParen);\n                                        _this.SUBRULE(_this.Expression);\n                                        _this.CONSUME(sparqlTokenMap.AS);\n                                        _this.SUBRULE1(_this.Var);\n                                        _this.CONSUME(sparqlTokenMap.RParen);\n                                    },\n                                },\n                            ]);\n                        });\n                    },\n                },\n                { ALT: function () { return _this.CONSUME(sparqlTokenMap.Star); } },\n            ]);\n        });\n        _this.ConstructQuery = _this.RULE('ConstructQuery', function () {\n            _this.CONSUME(sparqlTokenMap.CONSTRUCT);\n            _this.OR([\n                {\n                    ALT: function () {\n                        _this.SUBRULE(_this.ConstructTemplate);\n                        _this.MANY(function () { return _this.SUBRULE(_this.DatasetClause); });\n                        _this.SUBRULE(_this.WhereClause);\n                    },\n                },\n                {\n                    ALT: function () {\n                        _this.MANY1(function () { return _this.SUBRULE1(_this.DatasetClause); });\n                        _this.CONSUME(sparqlTokenMap.WHERE);\n                        _this.CONSUME(sparqlTokenMap.LCurly);\n                        _this.OPTION(function () { return _this.SUBRULE(_this.TriplesTemplate); });\n                        _this.CONSUME(sparqlTokenMap.RCurly);\n                    },\n                },\n            ]);\n            _this.SUBRULE(_this.SolutionModifier);\n        });\n        _this.DescribeQuery = _this.RULE('DescribeQuery', function () {\n            log('DescribeQuery');\n            _this.CONSUME(sparqlTokenMap.DESCRIBE);\n            _this.OR([\n                {\n                    ALT: function () {\n                        _this.AT_LEAST_ONE(function () { return _this.SUBRULE(_this.VarOrIri); });\n                    },\n                },\n                { ALT: function () { return _this.CONSUME(sparqlTokenMap.Star); } },\n            ]);\n            _this.MANY(function () { return _this.SUBRULE(_this.DatasetClause); });\n            _this.OPTION(function () { return _this.SUBRULE(_this.WhereClause); });\n            _this.SUBRULE(_this.SolutionModifier);\n        });\n        _this.AskQuery = _this.RULE('AskQuery', function () {\n            log('AskQuery');\n            _this.CONSUME(sparqlTokenMap.ASK);\n            _this.MANY(function () { return _this.SUBRULE(_this.DatasetClause); });\n            _this.SUBRULE(_this.WhereClause);\n            _this.SUBRULE(_this.SolutionModifier);\n        });\n        _this.DatasetClause = _this.RULE('DatasetClause', function () {\n            log('DatasetClause');\n            _this.CONSUME(sparqlTokenMap.FROM);\n            _this.OR([\n                { ALT: function () { return _this.SUBRULE(_this.DefaultGraphClause); } },\n                { ALT: function () { return _this.SUBRULE(_this.NamedGraphClause); } },\n            ]);\n        });\n        _this.DefaultGraphClause = _this.RULE('DefaultGraphClause', function () {\n            log('DefaultGraphClause');\n            _this.SUBRULE(_this.SourceSelector);\n        });\n        _this.NamedGraphClause = _this.RULE('NamedGraphClause', function () {\n            log('NamedGraphClause');\n            _this.CONSUME(sparqlTokenMap.NAMED);\n            _this.SUBRULE(_this.SourceSelector);\n        });\n        _this.SourceSelector = _this.RULE('SourceSelector', function () {\n            log('SourceSelector');\n            _this.SUBRULE(_this.iri);\n        });\n        _this.WhereClause = _this.RULE('WhereClause', function () {\n            log('WhereClause');\n            _this.OPTION(function () { return _this.CONSUME(sparqlTokenMap.WHERE); });\n            _this.SUBRULE(_this.GroupGraphPattern);\n        });\n        _this.SolutionModifier = _this.RULE('SolutionModifier', function () {\n            log('SolutionModifier');\n            _this.OPTION(function () { return _this.SUBRULE(_this.GroupClause); });\n            _this.OPTION1(function () { return _this.SUBRULE(_this.HavingClause); });\n            _this.OPTION2(function () { return _this.SUBRULE(_this.OrderClause); });\n            _this.OPTION3(function () { return _this.SUBRULE(_this.LimitOffsetClause); });\n        });\n        _this.GroupClause = _this.RULE('GroupClause', function () {\n            log('GroupClause');\n            _this.CONSUME(sparqlTokenMap.GROUP_BY);\n            _this.AT_LEAST_ONE(function () { return _this.SUBRULE(_this.GroupCondition); });\n        });\n        _this.GroupCondition = _this.RULE('GroupCondition', function () {\n            log('GroupCondition');\n            _this.OR([\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall); } },\n                { ALT: function () { return _this.SUBRULE(_this.FunctionCall); } },\n                {\n                    ALT: function () {\n                        _this.CONSUME(sparqlTokenMap.LParen);\n                        _this.SUBRULE(_this.Expression);\n                        _this.OPTION(function () {\n                            _this.CONSUME(sparqlTokenMap.AS);\n                            _this.SUBRULE(_this.Var);\n                        });\n                        _this.CONSUME(sparqlTokenMap.RParen);\n                    },\n                },\n                { ALT: function () { return _this.SUBRULE1(_this.Var); } },\n            ]);\n        });\n        _this.HavingClause = _this.RULE('HavingClause', function () {\n            log('HavingClause');\n            _this.CONSUME(sparqlTokenMap.HAVING);\n            _this.SUBRULE(_this.HavingCondition);\n        });\n        _this.HavingCondition = _this.RULE('HavingCondition', function () {\n            log('HavingCondition');\n            _this.SUBRULE(_this.Constraint);\n        });\n        _this.OrderClause = _this.RULE('OrderClause', function () {\n            log('OrderClause');\n            _this.CONSUME(sparqlTokenMap.ORDER_BY);\n            _this.AT_LEAST_ONE(function () { return _this.SUBRULE(_this.OrderCondition); });\n        });\n        _this.OrderCondition = _this.RULE('OrderCondition', function () {\n            log('OrderCondition');\n            _this.OR([\n                {\n                    ALT: function () {\n                        _this.OR1([\n                            { ALT: function () { return _this.CONSUME(sparqlTokenMap.ASC); } },\n                            { ALT: function () { return _this.CONSUME(sparqlTokenMap.DESC); } },\n                        ]);\n                        _this.SUBRULE(_this.BrackettedExpression);\n                    },\n                },\n                { ALT: function () { return _this.SUBRULE(_this.Constraint); } },\n                { ALT: function () { return _this.SUBRULE(_this.Var); } },\n            ]);\n        });\n        _this.LimitOffsetClause = _this.RULE('LimitOffsetClause', function () {\n            log('LimitOffsetClause');\n            _this.OR([\n                {\n                    ALT: function () {\n                        _this.SUBRULE(_this.LimitClause);\n                        _this.OPTION(function () { return _this.SUBRULE(_this.OffsetClause); });\n                    },\n                },\n                {\n                    ALT: function () {\n                        _this.SUBRULE1(_this.OffsetClause);\n                        _this.OPTION1(function () { return _this.SUBRULE1(_this.LimitClause); });\n                    },\n                },\n            ]);\n        });\n        _this.OffsetClause = _this.RULE('OffsetClause', function () {\n            log('OffsetClause');\n            _this.CONSUME(sparqlTokenMap.OFFSET);\n            _this.CONSUME(sparqlTokenMap.INTEGER);\n        });\n        _this.LimitClause = _this.RULE('LimitClause', function () {\n            log('LimitClause');\n            _this.CONSUME(sparqlTokenMap.LIMIT);\n            _this.CONSUME(sparqlTokenMap.INTEGER);\n        });\n        _this.ValuesClause = _this.RULE('ValuesClause', function () {\n            log('ValuesClause');\n            _this.OPTION(function () {\n                _this.CONSUME(sparqlTokenMap.VALUES);\n                _this.SUBRULE(_this.DataBlock);\n            });\n        });\n        _this.Update = _this.RULE('Update', function () {\n            log('Update');\n            _this.SUBRULE(_this.Update1);\n            _this.OPTION(function () {\n                _this.CONSUME(sparqlTokenMap.Semicolon);\n                _this.SUBRULE(_this.Update);\n            });\n        });\n        _this.Update1 = _this.RULE('Update1', function () {\n            log('Update1');\n            _this.OR([\n                { ALT: function () { return _this.SUBRULE(_this.Load); } },\n                { ALT: function () { return _this.SUBRULE(_this.Clear); } },\n                { ALT: function () { return _this.SUBRULE(_this.Drop); } },\n                { ALT: function () { return _this.SUBRULE(_this.Add); } },\n                { ALT: function () { return _this.SUBRULE(_this.Move); } },\n                { ALT: function () { return _this.SUBRULE(_this.Copy); } },\n                { ALT: function () { return _this.SUBRULE(_this.Create); } },\n                { ALT: function () { return _this.SUBRULE(_this.InsertData); } },\n                { ALT: function () { return _this.SUBRULE(_this.DeleteData); } },\n                { ALT: function () { return _this.SUBRULE(_this.DeleteWhere); } },\n                { ALT: function () { return _this.SUBRULE(_this.Modify); } },\n            ]);\n        });\n        _this.Load = _this.RULE('Load', function () {\n            log('Load');\n            _this.CONSUME(sparqlTokenMap.LOAD);\n            _this.OPTION(function () { return _this.CONSUME(sparqlTokenMap.SILENT); });\n            _this.SUBRULE(_this.iri);\n            _this.OPTION1(function () {\n                _this.CONSUME(sparqlTokenMap.INTO);\n                _this.SUBRULE(_this.GraphRef);\n            });\n        });\n        _this.Clear = _this.RULE('Clear', function () {\n            log('Clear');\n            _this.CONSUME(sparqlTokenMap.CLEAR);\n            _this.OPTION(function () { return _this.CONSUME(sparqlTokenMap.SILENT); });\n            _this.SUBRULE(_this.GraphRefAll);\n        });\n        _this.Drop = _this.RULE('Drop', function () {\n            log('Drop');\n            _this.CONSUME(sparqlTokenMap.DROP);\n            _this.OPTION(function () { return _this.CONSUME(sparqlTokenMap.SILENT); });\n            _this.SUBRULE(_this.GraphRefAll);\n        });\n        _this.Create = _this.RULE('Create', function () {\n            log('Create');\n            _this.CONSUME(sparqlTokenMap.CREATE);\n            _this.OPTION(function () { return _this.CONSUME(sparqlTokenMap.SILENT); });\n            _this.SUBRULE(_this.GraphRefAll);\n        });\n        _this.Add = _this.RULE('Add', function () {\n            log('Add');\n            _this.CONSUME(sparqlTokenMap.ADD);\n            _this.OPTION(function () { return _this.CONSUME(sparqlTokenMap.SILENT); });\n            _this.SUBRULE(_this.GraphOrDefault);\n            _this.CONSUME(sparqlTokenMap.TO);\n            _this.SUBRULE1(_this.GraphOrDefault);\n        });\n        _this.Move = _this.RULE('Move', function () {\n            log('Move');\n            _this.CONSUME(sparqlTokenMap.MOVE);\n            _this.OPTION(function () { return _this.CONSUME(sparqlTokenMap.SILENT); });\n            _this.SUBRULE(_this.GraphOrDefault);\n            _this.CONSUME(sparqlTokenMap.TO);\n            _this.SUBRULE1(_this.GraphOrDefault);\n        });\n        _this.Copy = _this.RULE('Copy', function () {\n            log('Copy');\n            _this.CONSUME(sparqlTokenMap.COPY);\n            _this.OPTION(function () { return _this.CONSUME(sparqlTokenMap.SILENT); });\n            _this.SUBRULE(_this.GraphOrDefault);\n            _this.CONSUME(sparqlTokenMap.TO);\n            _this.SUBRULE1(_this.GraphOrDefault);\n        });\n        _this.InsertData = _this.RULE('InsertData', function () {\n            log('InsertData');\n            _this.CONSUME(sparqlTokenMap.INSERT_DATA);\n            _this.SUBRULE(_this.QuadData);\n        });\n        _this.DeleteData = _this.RULE('DeleteData', function () {\n            log('DeleteData');\n            _this.CONSUME(sparqlTokenMap.DELETE_DATA);\n            _this.SUBRULE(_this.QuadData);\n        });\n        _this.DeleteWhere = _this.RULE('DeleteWhere', function () {\n            log('DeleteWhere');\n            _this.CONSUME(sparqlTokenMap.DELETE_WHERE);\n            _this.SUBRULE(_this.QuadPattern);\n        });\n        _this.Modify = _this.RULE('Modify', function () {\n            log('Modify');\n            _this.OPTION(function () {\n                _this.CONSUME(sparqlTokenMap.WITH);\n                _this.SUBRULE(_this.iri);\n            });\n            _this.OR([\n                {\n                    ALT: function () {\n                        _this.SUBRULE(_this.DeleteClause);\n                        _this.OPTION1(function () { return _this.SUBRULE(_this.InsertClause); });\n                    },\n                },\n                { ALT: function () { return _this.SUBRULE1(_this.InsertClause); } },\n            ]);\n            _this.MANY(function () { return _this.SUBRULE(_this.UsingClause); });\n            _this.CONSUME(sparqlTokenMap.WHERE);\n            _this.SUBRULE(_this.GroupGraphPattern);\n        });\n        _this.DeleteClause = _this.RULE('DeleteClause', function () {\n            log('DeleteClause');\n            _this.CONSUME(sparqlTokenMap.DELETE);\n            _this.SUBRULE(_this.QuadPattern);\n        });\n        _this.InsertClause = _this.RULE('InsertClause', function () {\n            log('InsertClause');\n            _this.CONSUME(sparqlTokenMap.INSERT);\n            _this.SUBRULE(_this.QuadPattern);\n        });\n        _this.UsingClause = _this.RULE('UsingClause', function () {\n            log('UsingClause');\n            _this.CONSUME(sparqlTokenMap.USING);\n            _this.OR([\n                { ALT: function () { return _this.SUBRULE(_this.iri); } },\n                {\n                    ALT: function () {\n                        _this.CONSUME(sparqlTokenMap.NAMED);\n                        _this.SUBRULE1(_this.iri);\n                    },\n                },\n            ]);\n        });\n        _this.GraphOrDefault = _this.RULE('GraphOrDefault', function () {\n            log('GraphOrDefault');\n            _this.OR([\n                { ALT: function () { return _this.CONSUME(sparqlTokenMap.DEFAULT); } },\n                {\n                    ALT: function () {\n                        _this.OPTION(function () { return _this.CONSUME(sparqlTokenMap.GRAPH); });\n                        _this.SUBRULE(_this.iri);\n                    },\n                },\n            ]);\n        });\n        _this.GraphRef = _this.RULE('GraphRef', function () {\n            log('GraphRef');\n            _this.CONSUME(sparqlTokenMap.GRAPH);\n            _this.SUBRULE(_this.iri);\n        });\n        _this.GraphRefAll = _this.RULE('GraphRefAll', function () {\n            log('GraphRefAll');\n            _this.OR([\n                { ALT: function () { return _this.SUBRULE(_this.GraphRef); } },\n                { ALT: function () { return _this.CONSUME(sparqlTokenMap.DEFAULT); } },\n                { ALT: function () { return _this.CONSUME(sparqlTokenMap.NAMED); } },\n                { ALT: function () { return _this.CONSUME(sparqlTokenMap.ALL); } },\n            ]);\n        });\n        _this.QuadPattern = _this.RULE('QuadPattern', function () {\n            log('QuadPattern');\n            _this.CONSUME(sparqlTokenMap.LCurly);\n            _this.SUBRULE(_this.Quads);\n            _this.CONSUME(sparqlTokenMap.RCurly);\n        });\n        _this.QuadData = _this.RULE('QuadData', function () {\n            log('QuadData');\n            _this.CONSUME(sparqlTokenMap.LCurly);\n            _this.SUBRULE(_this.Quads);\n            _this.CONSUME(sparqlTokenMap.RCurly);\n        });\n        _this.Quads = _this.RULE('Quads', function () {\n            log('Quads');\n            _this.OPTION(function () { return _this.SUBRULE(_this.TriplesTemplate); });\n            _this.MANY(function () {\n                _this.SUBRULE(_this.QuadsNotTriples);\n                _this.OPTION1(function () { return _this.CONSUME(sparqlTokenMap.Period); });\n                _this.OPTION2(function () { return _this.SUBRULE1(_this.TriplesTemplate); });\n            });\n        });\n        _this.QuadsNotTriples = _this.RULE('QuadsNotTriples', function () {\n            log('QuadsNotTriples');\n            _this.CONSUME(sparqlTokenMap.GRAPH);\n            _this.SUBRULE(_this.VarOrIri);\n            _this.CONSUME(sparqlTokenMap.LCurly);\n            _this.OPTION(function () { return _this.SUBRULE(_this.TriplesTemplate); });\n            _this.CONSUME(sparqlTokenMap.RCurly);\n        });\n        _this.TriplesTemplate = _this.RULE('TriplesTemplate', function () {\n            log('TriplesTemplate');\n            _this.SUBRULE(_this.TriplesSameSubject);\n            _this.OPTION(function () {\n                _this.CONSUME(sparqlTokenMap.Period);\n                _this.OPTION1(function () { return _this.SUBRULE(_this.TriplesTemplate); });\n            });\n        });\n        _this.GroupGraphPattern = _this.RULE('GroupGraphPattern', function () {\n            log('GroupGraphPattern');\n            _this.CONSUME(sparqlTokenMap.LCurly);\n            _this.OR([\n                { ALT: function () { return _this.SUBRULE(_this.SubSelect); } },\n                { ALT: function () { return _this.SUBRULE(_this.GroupGraphPatternSub); } },\n            ]);\n            _this.CONSUME(sparqlTokenMap.RCurly);\n        });\n        _this.GroupGraphPatternSub = _this.RULE('GroupGraphPatternSub', function () {\n            log('GroupGraphPatternSub');\n            _this.OPTION(function () { return _this.SUBRULE(_this.TriplesBlock); });\n            _this.MANY(function () {\n                _this.SUBRULE(_this.GraphPatternNotTriples);\n                _this.OPTION1(function () { return _this.CONSUME(sparqlTokenMap.Period); });\n                _this.OPTION2(function () { return _this.SUBRULE1(_this.TriplesBlock); });\n            });\n        });\n        _this.TriplesBlock = _this.RULE('TriplesBlock', function () {\n            log('TriplesBlock');\n            _this.SUBRULE(_this.TriplesSameSubjectPath);\n            _this.OPTION(function () {\n                _this.CONSUME(sparqlTokenMap.Period);\n                _this.OPTION1(function () { return _this.SUBRULE(_this.TriplesBlock); });\n            });\n        });\n        _this.GraphPatternNotTriples = _this.RULE('GraphPatternNotTriples', function () {\n            log('GraphPatternNotTriples');\n            _this.OR([\n                { ALT: function () { return _this.SUBRULE(_this.GroupOrUnionGraphPattern); } },\n                { ALT: function () { return _this.SUBRULE(_this.OptionalGraphPattern); } },\n                { ALT: function () { return _this.SUBRULE(_this.MinusGraphPattern); } },\n                { ALT: function () { return _this.SUBRULE(_this.GraphGraphPattern); } },\n                { ALT: function () { return _this.SUBRULE(_this.ServiceGraphPattern); } },\n                { ALT: function () { return _this.SUBRULE(_this.Filter); } },\n                { ALT: function () { return _this.SUBRULE(_this.Bind); } },\n                { ALT: function () { return _this.SUBRULE(_this.InlineData); } },\n            ]);\n        });\n        _this.OptionalGraphPattern = _this.RULE('OptionalGraphPattern', function () {\n            log('OptionalGraphPattern');\n            _this.CONSUME(sparqlTokenMap.OPTIONAL);\n            _this.SUBRULE(_this.GroupGraphPattern);\n        });\n        _this.GraphGraphPattern = _this.RULE('GraphGraphPattern', function () {\n            log('GraphGraphPattern');\n            _this.CONSUME(sparqlTokenMap.GRAPH);\n            _this.SUBRULE(_this.VarOrIri);\n            _this.SUBRULE(_this.GroupGraphPattern);\n        });\n        _this.ServiceGraphPattern = _this.RULE('ServiceGraphPattern', function () {\n            log('ServiceGraphPattern');\n            _this.CONSUME(sparqlTokenMap.SERVICE);\n            _this.OPTION(function () { return _this.CONSUME(sparqlTokenMap.SILENT); });\n            _this.SUBRULE(_this.VarOrIri);\n            _this.SUBRULE(_this.GroupGraphPattern);\n        });\n        _this.Bind = _this.RULE('Bind', function () {\n            log('Bind');\n            _this.CONSUME(sparqlTokenMap.BIND);\n            _this.CONSUME(sparqlTokenMap.LParen);\n            _this.SUBRULE(_this.Expression);\n            _this.CONSUME(sparqlTokenMap.AS);\n            _this.SUBRULE(_this.Var);\n            _this.CONSUME(sparqlTokenMap.RParen);\n        });\n        _this.InlineData = _this.RULE('InlineData', function () {\n            log('InlineData');\n            _this.CONSUME(sparqlTokenMap.VALUES);\n            _this.SUBRULE(_this.DataBlock);\n        });\n        _this.DataBlock = _this.RULE('DataBlock', function () {\n            log('DataBlock');\n            _this.OR([\n                { ALT: function () { return _this.SUBRULE(_this.InlineDataOneVar); } },\n                { ALT: function () { return _this.SUBRULE(_this.InlineDataFull); } },\n            ]);\n        });\n        _this.InlineDataOneVar = _this.RULE('InlineDataOneVar', function () {\n            log('InlineDataOneVar');\n            _this.SUBRULE(_this.Var);\n            _this.CONSUME(sparqlTokenMap.LCurly);\n            _this.MANY(function () { return _this.SUBRULE(_this.DataBlockValue); });\n            _this.CONSUME(sparqlTokenMap.RCurly);\n        });\n        _this.InlineDataFull = _this.RULE('InlineDataFull', function () {\n            log('InlineDataFull');\n            _this.OR([\n                { ALT: function () { return _this.CONSUME(sparqlTokenMap.NIL); } },\n                {\n                    ALT: function () {\n                        _this.CONSUME(sparqlTokenMap.LParen);\n                        _this.MANY(function () { return _this.SUBRULE(_this.Var); });\n                        _this.CONSUME(sparqlTokenMap.RParen);\n                    },\n                },\n            ]);\n            _this.CONSUME(sparqlTokenMap.LCurly);\n            _this.MANY1(function () {\n                return _this.OR1([\n                    {\n                        ALT: function () {\n                            _this.CONSUME1(sparqlTokenMap.LParen);\n                            _this.MANY2(function () { return _this.SUBRULE(_this.DataBlockValue); });\n                            _this.CONSUME1(sparqlTokenMap.RParen);\n                        },\n                    },\n                    { ALT: function () { return _this.CONSUME1(sparqlTokenMap.NIL); } },\n                ]);\n            });\n            _this.CONSUME(sparqlTokenMap.RCurly);\n        });\n        _this.DataBlockValue = _this.RULE('DataBlockValue', function () {\n            log('DataBlockValue');\n            _this.OR([\n                { ALT: function () { return _this.SUBRULE(_this.iri); } },\n                { ALT: function () { return _this.SUBRULE(_this.RDFLiteral); } },\n                { ALT: function () { return _this.SUBRULE(_this.NumericLiteral); } },\n                { ALT: function () { return _this.SUBRULE(_this.BooleanLiteral); } },\n                { ALT: function () { return _this.CONSUME(sparqlTokenMap.UNDEF); } },\n            ]);\n        });\n        _this.MinusGraphPattern = _this.RULE('MinusGraphPattern', function () {\n            log('MinusGraphPattern');\n            _this.CONSUME(sparqlTokenMap.MINUS);\n            _this.SUBRULE(_this.GroupGraphPattern);\n        });\n        _this.GroupOrUnionGraphPattern = _this.RULE('GroupOrUnionGraphPattern', function () {\n            log('GroupOrUnionGraphPattern');\n            _this.SUBRULE(_this.GroupGraphPattern);\n            _this.MANY(function () {\n                _this.CONSUME(sparqlTokenMap.UNION);\n                _this.SUBRULE1(_this.GroupGraphPattern);\n            });\n        });\n        _this.Filter = _this.RULE('Filter', function () {\n            log('Filter');\n            _this.CONSUME(sparqlTokenMap.FILTER);\n            _this.SUBRULE(_this.Constraint);\n        });\n        _this.Constraint = _this.RULE('Constraint', function () {\n            log('Constraint');\n            _this.OR([\n                { ALT: function () { return _this.SUBRULE(_this.BrackettedExpression); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall); } },\n                { ALT: function () { return _this.SUBRULE(_this.FunctionCall); } },\n            ]);\n        });\n        _this.FunctionCall = _this.RULE('FunctionCall', function () {\n            log('FunctionCall');\n            _this.SUBRULE(_this.iri);\n            _this.SUBRULE(_this.ArgList);\n        });\n        _this.ArgList = _this.RULE('ArgList', function () {\n            log('ArgList');\n            _this.OR([\n                { ALT: function () { return _this.CONSUME(sparqlTokenMap.NIL); } },\n                {\n                    ALT: function () {\n                        _this.CONSUME(sparqlTokenMap.LParen);\n                        _this.OPTION(function () { return _this.CONSUME(sparqlTokenMap.DISTINCT); });\n                        _this.SUBRULE(_this.Expression);\n                        _this.MANY(function () {\n                            _this.CONSUME(sparqlTokenMap.Comma);\n                            _this.SUBRULE1(_this.Expression);\n                        });\n                        _this.CONSUME(sparqlTokenMap.RParen);\n                    },\n                },\n            ]);\n        });\n        _this.ExpressionList = _this.RULE('ExpressionList', function () {\n            log('ExpressionList');\n            _this.OR([\n                { ALT: function () { return _this.CONSUME(sparqlTokenMap.NIL); } },\n                {\n                    ALT: function () {\n                        _this.CONSUME(sparqlTokenMap.LParen);\n                        _this.SUBRULE(_this.Expression);\n                        _this.MANY(function () {\n                            _this.CONSUME(sparqlTokenMap.Comma);\n                            _this.SUBRULE1(_this.Expression);\n                        });\n                        _this.CONSUME(sparqlTokenMap.RParen);\n                    },\n                },\n            ]);\n        });\n        _this.ConstructTemplate = _this.RULE('ConstructTemplate', function () {\n            log('ConstructTemplate');\n            _this.CONSUME(sparqlTokenMap.LCurly);\n            _this.OPTION(function () { return _this.SUBRULE(_this.ConstructTriples); });\n            _this.CONSUME(sparqlTokenMap.RCurly);\n        });\n        _this.ConstructTriples = _this.RULE('ConstructTriples', function () {\n            log('ConstructTriples');\n            _this.SUBRULE(_this.TriplesSameSubject);\n            _this.OPTION(function () {\n                _this.CONSUME(sparqlTokenMap.Period);\n                _this.OPTION1(function () { return _this.SUBRULE(_this.ConstructTriples); });\n            });\n        });\n        _this.TriplesSameSubject = _this.RULE('TriplesSameSubject', function () {\n            log('TriplesSameSubject');\n            _this.OR([\n                {\n                    ALT: function () {\n                        _this.SUBRULE(_this.VarOrTerm);\n                        _this.SUBRULE(_this.PropertyListNotEmpty);\n                    },\n                },\n                {\n                    ALT: function () {\n                        _this.SUBRULE(_this.TriplesNode);\n                        _this.SUBRULE(_this.PropertyList);\n                    },\n                },\n            ]);\n        });\n        _this.PropertyList = _this.RULE('PropertyList', function () {\n            log('PropertyList');\n            _this.OPTION(function () { return _this.SUBRULE(_this.PropertyListNotEmpty); });\n        });\n        _this.PropertyListNotEmpty = _this.RULE('PropertyListNotEmpty', function () {\n            log('PropertyListNotEmpty');\n            _this.SUBRULE(_this.Verb);\n            _this.SUBRULE(_this.ObjectList);\n            _this.MANY(function () {\n                _this.CONSUME(sparqlTokenMap.Semicolon);\n                _this.OPTION(function () {\n                    _this.SUBRULE1(_this.Verb);\n                    _this.SUBRULE1(_this.ObjectList);\n                });\n            });\n        });\n        _this.Verb = _this.RULE('Verb', function () {\n            log('Verb');\n            _this.OR([\n                { ALT: function () { return _this.SUBRULE(_this.VarOrIri); } },\n                { ALT: function () { return _this.CONSUME(sparqlTokenMap.A); } },\n            ]);\n        });\n        _this.ObjectList = _this.RULE('ObjectList', function () {\n            log('ObjectList');\n            _this.AT_LEAST_ONE_SEP({\n                SEP: sparqlTokenMap.Comma,\n                DEF: function () { return _this.SUBRULE(_this.Object); },\n            });\n        });\n        _this.Object = _this.RULE('Object', function () {\n            log('Object');\n            _this.SUBRULE(_this.GraphNode);\n        });\n        _this.TriplesSameSubjectPath = _this.RULE('TriplesSameSubjectPath', function () {\n            log('TriplesSameSubjectPath');\n            _this.OR([\n                {\n                    ALT: function () {\n                        _this.SUBRULE(_this.VarOrTerm);\n                        _this.SUBRULE(_this.PropertyListPathNotEmpty);\n                    },\n                },\n                {\n                    ALT: function () {\n                        _this.SUBRULE(_this.TriplesNodePath);\n                        _this.SUBRULE(_this.PropertyListPath);\n                    },\n                },\n            ]);\n        });\n        _this.PropertyListPath = _this.RULE('PropertyListPath', function () {\n            log('PropertyListPath');\n            _this.OPTION(function () { return _this.SUBRULE(_this.PropertyListPathNotEmpty); });\n        });\n        _this.PropertyListPathNotEmpty = _this.RULE('PropertyListPathNotEmpty', function () {\n            log('PropertyListPathNotEmpty');\n            _this.OR([\n                { ALT: function () { return _this.SUBRULE(_this.VerbPath); } },\n                { ALT: function () { return _this.SUBRULE(_this.VerbSimple); } },\n            ]);\n            _this.SUBRULE(_this.ObjectListPath);\n            _this.MANY(function () {\n                _this.CONSUME(sparqlTokenMap.Semicolon);\n                _this.OPTION(function () {\n                    _this.OR1([\n                        { ALT: function () { return _this.SUBRULE1(_this.VerbPath); } },\n                        { ALT: function () { return _this.SUBRULE1(_this.VerbSimple); } },\n                    ]);\n                    _this.SUBRULE1(_this.ObjectListPath);\n                });\n            });\n        });\n        _this.VerbPath = _this.RULE('VerbPath', function () {\n            log('VerbPath');\n            _this.SUBRULE(_this.Path);\n        });\n        _this.VerbSimple = _this.RULE('VerbSimple', function () {\n            log('VerbSimple');\n            _this.SUBRULE(_this.Var);\n        });\n        _this.ObjectListPath = _this.RULE('ObjectListPath', function () {\n            log('ObjectListPath');\n            _this.AT_LEAST_ONE_SEP({\n                SEP: sparqlTokenMap.Comma,\n                DEF: function () { return _this.SUBRULE(_this.ObjectPath); },\n            });\n        });\n        _this.ObjectPath = _this.RULE('ObjectPath', function () {\n            log('ObjectPath');\n            _this.SUBRULE(_this.GraphNodePath);\n        });\n        _this.Path = _this.RULE('Path', function () {\n            log('Path');\n            _this.SUBRULE(_this.PathAlternative);\n        });\n        _this.PathAlternative = _this.RULE('PathAlternative', function () {\n            log('PathAlternative');\n            _this.AT_LEAST_ONE_SEP({\n                SEP: sparqlTokenMap.Pipe,\n                DEF: function () { return _this.SUBRULE(_this.PathSequence); },\n            });\n        });\n        _this.PathSequence = _this.RULE('PathSequence', function () {\n            log('PathSequence');\n            _this.AT_LEAST_ONE_SEP({\n                SEP: sparqlTokenMap.ForwardSlash,\n                DEF: function () { return _this.SUBRULE(_this.PathEltOrInverse); },\n            });\n        });\n        _this.PathElt = _this.RULE('PathElt', function () {\n            log('PathElt');\n            _this.SUBRULE(_this.PathPrimary);\n            _this.OPTION(function () { return _this.SUBRULE(_this.PathMod); });\n        });\n        _this.PathEltOrInverse = _this.RULE('PathEltOrInverse', function () {\n            log('PathEltOrInverse');\n            _this.OPTION(function () { return _this.CONSUME(sparqlTokenMap.Caret); });\n            _this.SUBRULE(_this.PathElt);\n        });\n        _this.PathMod = _this.RULE('PathMod', function () {\n            log('PathMod');\n            _this.OR([\n                { ALT: function () { return _this.CONSUME(sparqlTokenMap.QuestionMark); } },\n                { ALT: function () { return _this.CONSUME(sparqlTokenMap.Star); } },\n                { ALT: function () { return _this.CONSUME(sparqlTokenMap.Plus); } },\n            ]);\n        });\n        _this.PathPrimary = _this.RULE('PathPrimary', function () {\n            log('PathPrimary');\n            _this.OR([\n                { ALT: function () { return _this.SUBRULE(_this.iri); } },\n                { ALT: function () { return _this.CONSUME(sparqlTokenMap.A); } },\n                {\n                    ALT: function () {\n                        _this.CONSUME(sparqlTokenMap.Bang);\n                        _this.SUBRULE(_this.PathNegatedPropertySet);\n                    },\n                },\n                {\n                    ALT: function () {\n                        _this.CONSUME(sparqlTokenMap.LParen);\n                        _this.SUBRULE(_this.Path);\n                        _this.CONSUME(sparqlTokenMap.RParen);\n                    },\n                },\n            ]);\n        });\n        _this.PathNegatedPropertySet = _this.RULE('PathNegatedPropertySet', function () {\n            log('PathNegatedPropertySet');\n            _this.OR([\n                { ALT: function () { return _this.SUBRULE(_this.PathOneInPropertySet); } },\n                {\n                    ALT: function () {\n                        _this.CONSUME(sparqlTokenMap.LParen);\n                        _this.MANY_SEP({\n                            SEP: sparqlTokenMap.Pipe,\n                            DEF: function () { return _this.SUBRULE1(_this.PathOneInPropertySet); },\n                        });\n                        _this.CONSUME(sparqlTokenMap.RParen);\n                    },\n                },\n            ]);\n        });\n        _this.PathOneInPropertySet = _this.RULE('PathOneInPropertySet', function () {\n            log('PathOneInPropertySet');\n            _this.OPTION(function () { return _this.CONSUME(sparqlTokenMap.Caret); });\n            _this.OR([\n                { ALT: function () { return _this.SUBRULE(_this.iri); } },\n                { ALT: function () { return _this.CONSUME(sparqlTokenMap.A); } },\n            ]);\n        });\n        _this.Integer = _this.RULE('Integer', function () {\n            log('Integer');\n            _this.CONSUME(sparqlTokenMap.INTEGER);\n        });\n        _this.TriplesNode = _this.RULE('TriplesNode', function () {\n            log('TriplesNode');\n            _this.OR([\n                { ALT: function () { return _this.SUBRULE(_this.Collection); } },\n                { ALT: function () { return _this.SUBRULE(_this.BlankNodePropertyList); } },\n            ]);\n        });\n        _this.BlankNodePropertyList = _this.RULE('BlankNodePropertyList', function () {\n            log('BlankNodePropertyList');\n            _this.CONSUME(sparqlTokenMap.LBracket);\n            _this.SUBRULE(_this.PropertyListNotEmpty);\n            _this.CONSUME(sparqlTokenMap.RBracket);\n        });\n        _this.TriplesNodePath = _this.RULE('TriplesNodePath', function () {\n            log('TriplesNodePath');\n            _this.OR([\n                { ALT: function () { return _this.SUBRULE(_this.CollectionPath); } },\n                { ALT: function () { return _this.SUBRULE(_this.BlankNodePropertyListPath); } },\n            ]);\n        });\n        _this.BlankNodePropertyListPath = _this.RULE('BlankNodePropertyListPath', function () {\n            log('BlankNodePropertyListPath');\n            _this.CONSUME(sparqlTokenMap.LBracket);\n            _this.SUBRULE(_this.PropertyListPathNotEmpty);\n            _this.CONSUME(sparqlTokenMap.RBracket);\n        });\n        _this.Collection = _this.RULE('Collection', function () {\n            log('Collection');\n            _this.CONSUME(sparqlTokenMap.LParen);\n            _this.AT_LEAST_ONE(function () { return _this.SUBRULE(_this.GraphNode); });\n            _this.CONSUME(sparqlTokenMap.RParen);\n        });\n        _this.CollectionPath = _this.RULE('CollectionPath', function () {\n            log('CollectionPath');\n            _this.CONSUME(sparqlTokenMap.LParen);\n            _this.AT_LEAST_ONE(function () { return _this.SUBRULE(_this.GraphNodePath); });\n            _this.CONSUME(sparqlTokenMap.RParen);\n        });\n        _this.GraphNode = _this.RULE('GraphNode', function () {\n            log('GraphNode');\n            _this.OR([\n                { ALT: function () { return _this.SUBRULE(_this.VarOrTerm); } },\n                { ALT: function () { return _this.SUBRULE(_this.TriplesNode); } },\n            ]);\n        });\n        _this.GraphNodePath = _this.RULE('GraphNodePath', function () {\n            log('GraphNodePath');\n            _this.OR([\n                { ALT: function () { return _this.SUBRULE(_this.VarOrTerm); } },\n                { ALT: function () { return _this.SUBRULE(_this.TriplesNodePath); } },\n            ]);\n        });\n        _this.VarOrTerm = _this.RULE('VarOrTerm', function () {\n            log('VarOrTerm');\n            _this.OR([\n                { ALT: function () { return _this.SUBRULE(_this.Var); } },\n                { ALT: function () { return _this.SUBRULE(_this.GraphTerm); } },\n            ]);\n        });\n        _this.VarOrIri = _this.RULE('VarOrIri', function () {\n            log('VarOrIri');\n            _this.OR([\n                { ALT: function () { return _this.SUBRULE(_this.Var); } },\n                { ALT: function () { return _this.SUBRULE(_this.iri); } },\n            ]);\n        });\n        _this.Var = _this.RULE('Var', function () {\n            log('Var');\n            _this.OR([\n                { ALT: function () { return _this.CONSUME(sparqlTokenMap.VAR1); } },\n                { ALT: function () { return _this.CONSUME(sparqlTokenMap.VAR2); } },\n            ]);\n        });\n        _this.GraphTerm = _this.RULE('GraphTerm', function () {\n            log('GraphTerm');\n            _this.OR([\n                { ALT: function () { return _this.SUBRULE(_this.iri); } },\n                { ALT: function () { return _this.SUBRULE(_this.RDFLiteral); } },\n                { ALT: function () { return _this.SUBRULE(_this.NumericLiteral); } },\n                { ALT: function () { return _this.SUBRULE(_this.BooleanLiteral); } },\n                { ALT: function () { return _this.SUBRULE(_this.BlankNode); } },\n                { ALT: function () { return _this.CONSUME(sparqlTokenMap.NIL); } },\n            ]);\n        });\n        _this.Expression = _this.RULE('Expression', function () {\n            log('Expression');\n            _this.SUBRULE(_this.ConditionalOrExpression);\n        });\n        _this.ConditionalOrExpression = _this.RULE('ConditionalOrExpression', function () {\n            log('ConditionalOrExpression');\n            _this.AT_LEAST_ONE_SEP({\n                SEP: sparqlTokenMap.LogicalOr,\n                DEF: function () { return _this.SUBRULE(_this.ConditionalAndExpression); },\n            });\n        });\n        _this.ConditionalAndExpression = _this.RULE('ConditionalAndExpression', function () {\n            log('ConditionalAndExpression');\n            _this.AT_LEAST_ONE_SEP({\n                SEP: sparqlTokenMap.LogicalAnd,\n                DEF: function () { return _this.SUBRULE(_this.ValueLogical); },\n            });\n        });\n        _this.ValueLogical = _this.RULE('ValueLogical', function () {\n            log('ValueLogical');\n            _this.SUBRULE(_this.RelationalExpression);\n        });\n        _this.RelationalExpression = _this.RULE('RelationalExpression', function () {\n            log('RelationalExpression');\n            _this.SUBRULE(_this.NumericExpression);\n            _this.OPTION(function () {\n                return _this.OR([\n                    {\n                        ALT: function () {\n                            _this.OR1([\n                                { ALT: function () { return _this.CONSUME(sparqlTokenMap.Equals); } },\n                                { ALT: function () { return _this.CONSUME(sparqlTokenMap.NotEquals); } },\n                                { ALT: function () { return _this.CONSUME(sparqlTokenMap.LessThan); } },\n                                { ALT: function () { return _this.CONSUME(sparqlTokenMap.GreaterThan); } },\n                                { ALT: function () { return _this.CONSUME(sparqlTokenMap.LessThanEquals); } },\n                                { ALT: function () { return _this.CONSUME(sparqlTokenMap.GreaterThanEquals); } },\n                            ]);\n                            _this.SUBRULE1(_this.NumericExpression);\n                        },\n                    },\n                    {\n                        ALT: function () {\n                            _this.CONSUME(sparqlTokenMap.IN);\n                            _this.SUBRULE(_this.ExpressionList);\n                        },\n                    },\n                    {\n                        ALT: function () {\n                            _this.CONSUME(sparqlTokenMap.NOT_IN);\n                            _this.SUBRULE1(_this.ExpressionList);\n                        },\n                    },\n                ]);\n            });\n        });\n        _this.NumericExpression = _this.RULE('NumericExpression', function () {\n            log('NumericExpression');\n            _this.SUBRULE(_this.AdditiveExpression);\n        });\n        _this.AdditiveExpression = _this.RULE('AdditiveExpression', function () {\n            log('AdditiveExpression');\n            _this.SUBRULE(_this.MultiplicativeExpression);\n            _this.MANY(function () {\n                return _this.OR([\n                    {\n                        ALT: function () {\n                            _this.OR1([\n                                { ALT: function () { return _this.CONSUME(sparqlTokenMap.Plus); } },\n                                { ALT: function () { return _this.CONSUME(sparqlTokenMap.Minus); } },\n                            ]);\n                            _this.SUBRULE1(_this.MultiplicativeExpression);\n                        },\n                    },\n                    {\n                        ALT: function () {\n                            _this.OR2([\n                                { ALT: function () { return _this.SUBRULE(_this.NumericLiteralPositive); } },\n                                { ALT: function () { return _this.SUBRULE(_this.NumericLiteralNegative); } },\n                            ]);\n                            _this.MANY1(function () {\n                                return _this.OR3([\n                                    {\n                                        ALT: function () {\n                                            _this.OR4([\n                                                { ALT: function () { return _this.CONSUME(sparqlTokenMap.Star); } },\n                                                {\n                                                    ALT: function () { return _this.CONSUME(sparqlTokenMap.ForwardSlash); },\n                                                },\n                                            ]);\n                                            _this.SUBRULE1(_this.UnaryExpression);\n                                        },\n                                    },\n                                ]);\n                            });\n                        },\n                    },\n                ]);\n            });\n        });\n        _this.MultiplicativeExpression = _this.RULE('MultiplicativeExpression', function () {\n            log('MultiplicativeExpression');\n            _this.SUBRULE(_this.UnaryExpression);\n            _this.MANY(function () {\n                return _this.OR([\n                    {\n                        ALT: function () {\n                            _this.CONSUME(sparqlTokenMap.Star);\n                            _this.SUBRULE1(_this.UnaryExpression);\n                        },\n                    },\n                    {\n                        ALT: function () {\n                            _this.CONSUME(sparqlTokenMap.ForwardSlash);\n                            _this.SUBRULE2(_this.UnaryExpression);\n                        },\n                    },\n                ]);\n            });\n        });\n        _this.UnaryExpression = _this.RULE('UnaryExpression', function () {\n            log('UnaryExpression');\n            _this.OR([\n                {\n                    ALT: function () {\n                        _this.CONSUME(sparqlTokenMap.Bang);\n                        _this.SUBRULE(_this.PrimaryExpression);\n                    },\n                },\n                {\n                    ALT: function () {\n                        _this.CONSUME(sparqlTokenMap.Plus);\n                        _this.SUBRULE1(_this.PrimaryExpression);\n                    },\n                },\n                {\n                    ALT: function () {\n                        _this.CONSUME(sparqlTokenMap.Minus);\n                        _this.SUBRULE2(_this.PrimaryExpression);\n                    },\n                },\n                { ALT: function () { return _this.SUBRULE3(_this.PrimaryExpression); } },\n            ]);\n        });\n        _this.PrimaryExpression = _this.RULE('PrimaryExpression', function () {\n            log('PrimaryExpression');\n            _this.OR([\n                { ALT: function () { return _this.SUBRULE(_this.BrackettedExpression); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall); } },\n                { ALT: function () { return _this.SUBRULE(_this.iriOrFunction); } },\n                { ALT: function () { return _this.SUBRULE(_this.RDFLiteral); } },\n                { ALT: function () { return _this.SUBRULE(_this.NumericLiteral); } },\n                { ALT: function () { return _this.SUBRULE(_this.BooleanLiteral); } },\n                { ALT: function () { return _this.SUBRULE(_this.Var); } },\n            ]);\n        });\n        _this.BrackettedExpression = _this.RULE('BrackettedExpression', function () {\n            log('BrackettedExpression');\n            _this.CONSUME(sparqlTokenMap.LParen);\n            _this.SUBRULE(_this.Expression);\n            _this.CONSUME(sparqlTokenMap.RParen);\n        });\n        _this.BuiltInCall_STR = _this.RULE('BuiltInCall_STR', function () {\n            log('BuiltInCall_STR');\n            _this.CONSUME(sparqlTokenMap.STR);\n            _this.CONSUME(sparqlTokenMap.LParen);\n            _this.SUBRULE(_this.Expression);\n            _this.CONSUME(sparqlTokenMap.RParen);\n        });\n        _this.BuiltInCall_LANG = _this.RULE('BuiltInCall_LANG', function () {\n            log('BuiltInCall_LANG');\n            _this.CONSUME(sparqlTokenMap.LANG);\n            _this.CONSUME(sparqlTokenMap.LParen);\n            _this.SUBRULE(_this.Expression);\n            _this.CONSUME(sparqlTokenMap.RParen);\n        });\n        _this.BuiltInCall_LANGMATCHES = _this.RULE('BuiltInCall_LANGMATCHES', function () {\n            log('BuiltInCall_LANGMATCHES');\n            _this.CONSUME(sparqlTokenMap.LANGMATCHES);\n            _this.CONSUME(sparqlTokenMap.LParen);\n            _this.SUBRULE(_this.Expression);\n            _this.CONSUME(sparqlTokenMap.Comma);\n            _this.SUBRULE1(_this.Expression);\n            _this.CONSUME(sparqlTokenMap.RParen);\n        });\n        _this.BuiltInCall_DATATYPE = _this.RULE('BuiltInCall_DATATYPE', function () {\n            log('BuiltInCall_DATATYPE');\n            _this.CONSUME(sparqlTokenMap.DATATYPE);\n            _this.CONSUME(sparqlTokenMap.LParen);\n            _this.SUBRULE(_this.Expression);\n            _this.CONSUME(sparqlTokenMap.RParen);\n        });\n        _this.BuiltInCall_BOUND = _this.RULE('BuiltInCall_BOUND', function () {\n            log('BuiltInCall_BOUND');\n            _this.CONSUME(sparqlTokenMap.BOUND);\n            _this.CONSUME(sparqlTokenMap.LParen);\n            _this.SUBRULE(_this.Var);\n            _this.CONSUME(sparqlTokenMap.RParen);\n        });\n        _this.BuiltInCall_IRI = _this.RULE('BuiltInCall_IRI', function () {\n            log('BuiltInCall_IRI');\n            _this.CONSUME(sparqlTokenMap.IRI);\n            _this.CONSUME(sparqlTokenMap.LParen);\n            _this.SUBRULE(_this.Expression);\n            _this.CONSUME(sparqlTokenMap.RParen);\n        });\n        _this.BuiltInCall_URI = _this.RULE('BuiltInCall_URI', function () {\n            log('BuiltInCall_URI');\n            _this.CONSUME(sparqlTokenMap.URI);\n            _this.CONSUME(sparqlTokenMap.LParen);\n            _this.SUBRULE(_this.Expression);\n            _this.CONSUME(sparqlTokenMap.RParen);\n        });\n        _this.BuiltInCall_BNODE = _this.RULE('BuiltInCall_BNODE', function () {\n            log('BuiltInCall_BNODE');\n            _this.CONSUME(sparqlTokenMap.BNODE);\n            _this.OR([\n                {\n                    ALT: function () {\n                        _this.CONSUME(sparqlTokenMap.LParen);\n                        _this.SUBRULE(_this.Expression);\n                        _this.CONSUME(sparqlTokenMap.RParen);\n                    },\n                },\n                { ALT: function () { return _this.CONSUME(sparqlTokenMap.NIL); } },\n            ]);\n        });\n        _this.BuiltInCall_RAND = _this.RULE('BuiltInCall_RAND', function () {\n            log('BuiltInCall_RAND');\n            _this.CONSUME(sparqlTokenMap.RAND);\n            _this.CONSUME(sparqlTokenMap.NIL);\n        });\n        _this.BuiltInCall_ABS = _this.RULE('BuiltInCall_ABS', function () {\n            log('BuiltInCall_ABS');\n            _this.CONSUME(sparqlTokenMap.ABS);\n            _this.CONSUME(sparqlTokenMap.LParen);\n            _this.SUBRULE(_this.Expression);\n            _this.CONSUME(sparqlTokenMap.RParen);\n        });\n        _this.BuiltInCall_CEIL = _this.RULE('BuiltInCall_CEIL', function () {\n            log('BuiltInCall_CEIL');\n            _this.CONSUME(sparqlTokenMap.CEIL);\n            _this.CONSUME(sparqlTokenMap.LParen);\n            _this.SUBRULE(_this.Expression);\n            _this.CONSUME(sparqlTokenMap.RParen);\n        });\n        _this.BuiltInCall_FLOOR = _this.RULE('BuiltInCall_FLOOR', function () {\n            log('BuiltInCall_FLOOR');\n            _this.CONSUME(sparqlTokenMap.FLOOR);\n            _this.CONSUME(sparqlTokenMap.LParen);\n            _this.SUBRULE(_this.Expression);\n            _this.CONSUME(sparqlTokenMap.RParen);\n        });\n        _this.BuiltInCall_ROUND = _this.RULE('BuiltInCall_ROUND', function () {\n            log('BuiltInCall_ROUND');\n            _this.CONSUME(sparqlTokenMap.ROUND);\n            _this.CONSUME(sparqlTokenMap.LParen);\n            _this.SUBRULE(_this.Expression);\n            _this.CONSUME(sparqlTokenMap.RParen);\n        });\n        _this.BuiltInCall_CONCAT = _this.RULE('BuiltInCall_CONCAT', function () {\n            log('BuiltInCall_CONCAT');\n            _this.CONSUME(sparqlTokenMap.CONCAT);\n            _this.SUBRULE(_this.ExpressionList);\n        });\n        _this.BuiltInCall_STRLEN = _this.RULE('BuiltInCall_STRLEN', function () {\n            log('BuiltInCall_STRLEN');\n            _this.CONSUME(sparqlTokenMap.STRLEN);\n            _this.CONSUME(sparqlTokenMap.LParen);\n            _this.SUBRULE(_this.Expression);\n            _this.CONSUME(sparqlTokenMap.RParen);\n        });\n        _this.BuiltInCall_UCASE = _this.RULE('BuiltInCall_UCASE', function () {\n            log('BuiltInCall_UCASE');\n            _this.CONSUME(sparqlTokenMap.UCASE);\n            _this.CONSUME(sparqlTokenMap.LParen);\n            _this.SUBRULE(_this.Expression);\n            _this.CONSUME(sparqlTokenMap.RParen);\n        });\n        _this.BuiltInCall_LCASE = _this.RULE('BuiltInCall_LCASE', function () {\n            log('BuiltInCall_LCASE');\n            _this.CONSUME(sparqlTokenMap.LCASE);\n            _this.CONSUME(sparqlTokenMap.LParen);\n            _this.SUBRULE(_this.Expression);\n            _this.CONSUME(sparqlTokenMap.RParen);\n        });\n        _this.BuiltInCall_ENCODE_FOR_URI = _this.RULE('BuiltInCall_ENCODE_FOR_URI', function () {\n            log('BuiltInCall_ENCODE_FOR_URI');\n            _this.CONSUME(sparqlTokenMap.ENCODE_FOR_URI);\n            _this.CONSUME(sparqlTokenMap.LParen);\n            _this.SUBRULE(_this.Expression);\n            _this.CONSUME(sparqlTokenMap.RParen);\n        });\n        _this.BuiltInCall_CONTAINS = _this.RULE('BuiltInCall_CONTAINS', function () {\n            log('BuiltInCall_CONTAINS');\n            _this.CONSUME(sparqlTokenMap.CONTAINS);\n            _this.CONSUME(sparqlTokenMap.LParen);\n            _this.SUBRULE(_this.Expression);\n            _this.CONSUME(sparqlTokenMap.Comma);\n            _this.SUBRULE1(_this.Expression);\n            _this.CONSUME(sparqlTokenMap.RParen);\n        });\n        _this.BuiltInCall_STRSTARTS = _this.RULE('BuiltInCall_STRSTARTS', function () {\n            log('BuiltInCall_STRSTARTS');\n            _this.CONSUME(sparqlTokenMap.STRSTARTS);\n            _this.CONSUME(sparqlTokenMap.LParen);\n            _this.SUBRULE(_this.Expression);\n            _this.CONSUME(sparqlTokenMap.Comma);\n            _this.SUBRULE1(_this.Expression);\n            _this.CONSUME(sparqlTokenMap.RParen);\n        });\n        _this.BuiltInCall_STRENDS = _this.RULE('BuiltInCall_STRENDS', function () {\n            log('BuiltInCall_STRENDS');\n            _this.CONSUME(sparqlTokenMap.STRENDS);\n            _this.CONSUME(sparqlTokenMap.LParen);\n            _this.SUBRULE(_this.Expression);\n            _this.CONSUME(sparqlTokenMap.Comma);\n            _this.SUBRULE1(_this.Expression);\n            _this.CONSUME(sparqlTokenMap.RParen);\n        });\n        _this.BuiltInCall_STRBEFORE = _this.RULE('BuiltInCall_STRBEFORE', function () {\n            log('BuiltInCall_STRBEFORE');\n            _this.CONSUME(sparqlTokenMap.STRBEFORE);\n            _this.CONSUME(sparqlTokenMap.LParen);\n            _this.SUBRULE(_this.Expression);\n            _this.CONSUME(sparqlTokenMap.Comma);\n            _this.SUBRULE1(_this.Expression);\n            _this.CONSUME(sparqlTokenMap.RParen);\n        });\n        _this.BuiltInCall_STRAFTER = _this.RULE('BuiltInCall_STRAFTER', function () {\n            log('BuiltInCall_STRAFTER');\n            _this.CONSUME(sparqlTokenMap.STRAFTER);\n            _this.CONSUME(sparqlTokenMap.LParen);\n            _this.SUBRULE(_this.Expression);\n            _this.CONSUME(sparqlTokenMap.Comma);\n            _this.SUBRULE1(_this.Expression);\n            _this.CONSUME(sparqlTokenMap.RParen);\n        });\n        _this.BuiltInCall_YEAR = _this.RULE('BuiltInCall_YEAR', function () {\n            log('BuiltInCall_YEAR');\n            _this.CONSUME(sparqlTokenMap.YEAR);\n            _this.CONSUME(sparqlTokenMap.LParen);\n            _this.SUBRULE(_this.Expression);\n            _this.CONSUME(sparqlTokenMap.RParen);\n        });\n        _this.BuiltInCall_MONTH = _this.RULE('BuiltInCall_MONTH', function () {\n            log('BuiltInCall_MONTH');\n            _this.CONSUME(sparqlTokenMap.MONTH);\n            _this.CONSUME(sparqlTokenMap.LParen);\n            _this.SUBRULE(_this.Expression);\n            _this.CONSUME(sparqlTokenMap.RParen);\n        });\n        _this.BuiltInCall_DAY = _this.RULE('BuiltInCall_DAY', function () {\n            log('BuiltInCall_DAY');\n            _this.CONSUME(sparqlTokenMap.DAY);\n            _this.CONSUME(sparqlTokenMap.LParen);\n            _this.SUBRULE(_this.Expression);\n            _this.CONSUME(sparqlTokenMap.RParen);\n        });\n        _this.BuiltInCall_HOURS = _this.RULE('BuiltInCall_HOURS', function () {\n            log('BuiltInCall_HOURS');\n            _this.CONSUME(sparqlTokenMap.HOURS);\n            _this.CONSUME(sparqlTokenMap.LParen);\n            _this.SUBRULE(_this.Expression);\n            _this.CONSUME(sparqlTokenMap.RParen);\n        });\n        _this.BuiltInCall_MINUTES = _this.RULE('BuiltInCall_MINUTES', function () {\n            log('BuiltInCall_MINUTES');\n            _this.CONSUME(sparqlTokenMap.MINUTES);\n            _this.CONSUME(sparqlTokenMap.LParen);\n            _this.SUBRULE(_this.Expression);\n            _this.CONSUME(sparqlTokenMap.RParen);\n        });\n        _this.BuiltInCall_SECONDS = _this.RULE('BuiltInCall_SECONDS', function () {\n            log('BuiltInCall_SECONDS');\n            _this.CONSUME(sparqlTokenMap.SECONDS);\n            _this.CONSUME(sparqlTokenMap.LParen);\n            _this.SUBRULE(_this.Expression);\n            _this.CONSUME(sparqlTokenMap.RParen);\n        });\n        _this.BuiltInCall_TIMEZONE = _this.RULE('BuiltInCall_TIMEZONE', function () {\n            log('BuiltInCall_TIMEZONE');\n            _this.CONSUME(sparqlTokenMap.TIMEZONE);\n            _this.CONSUME(sparqlTokenMap.LParen);\n            _this.SUBRULE(_this.Expression);\n            _this.CONSUME(sparqlTokenMap.RParen);\n        });\n        _this.BuiltInCall_TZ = _this.RULE('BuiltInCall_TZ', function () {\n            log('BuiltInCall_TZ');\n            _this.CONSUME(sparqlTokenMap.TZ);\n            _this.CONSUME(sparqlTokenMap.LParen);\n            _this.SUBRULE(_this.Expression);\n            _this.CONSUME(sparqlTokenMap.RParen);\n        });\n        _this.BuiltInCall_NOW = _this.RULE('BuiltInCall_NOW', function () {\n            log('BuiltInCall_NOW');\n            _this.CONSUME(sparqlTokenMap.NOW);\n            _this.CONSUME(sparqlTokenMap.NIL);\n        });\n        _this.BuiltInCall_UUID = _this.RULE('BuiltInCall_UUID', function () {\n            log('BuiltInCall_UUID');\n            _this.CONSUME(sparqlTokenMap.UUID);\n            _this.CONSUME(sparqlTokenMap.NIL);\n        });\n        _this.BuiltInCall_STRUUID = _this.RULE('BuiltInCall_STRUUID', function () {\n            log('BuiltInCall_STRUUID');\n            _this.CONSUME(sparqlTokenMap.STRUUID);\n            _this.CONSUME(sparqlTokenMap.NIL);\n        });\n        _this.BuiltInCall_MD5 = _this.RULE('BuiltInCall_MD5', function () {\n            log('BuiltInCall_MD5');\n            _this.CONSUME(sparqlTokenMap.MD5);\n            _this.CONSUME(sparqlTokenMap.LParen);\n            _this.SUBRULE(_this.Expression);\n            _this.CONSUME(sparqlTokenMap.RParen);\n        });\n        _this.BuiltInCall_SHA1 = _this.RULE('BuiltInCall_SHA1', function () {\n            log('BuiltInCall_SHA1');\n            _this.CONSUME(sparqlTokenMap.SHA1);\n            _this.CONSUME(sparqlTokenMap.LParen);\n            _this.SUBRULE(_this.Expression);\n            _this.CONSUME(sparqlTokenMap.RParen);\n        });\n        _this.BuiltInCall_SHA256 = _this.RULE('BuiltInCall_SHA256', function () {\n            log('BuiltInCall_SHA256');\n            _this.CONSUME(sparqlTokenMap.SHA256);\n            _this.CONSUME(sparqlTokenMap.LParen);\n            _this.SUBRULE(_this.Expression);\n            _this.CONSUME(sparqlTokenMap.RParen);\n        });\n        _this.BuiltInCall_SHA384 = _this.RULE('BuiltInCall_SHA384', function () {\n            log('BuiltInCall_SHA384');\n            _this.CONSUME(sparqlTokenMap.SHA384);\n            _this.CONSUME(sparqlTokenMap.LParen);\n            _this.SUBRULE(_this.Expression);\n            _this.CONSUME(sparqlTokenMap.RParen);\n        });\n        _this.BuiltInCall_SHA512 = _this.RULE('BuiltInCall_SHA512', function () {\n            log('BuiltInCall_SHA512');\n            _this.CONSUME(sparqlTokenMap.SHA512);\n            _this.CONSUME(sparqlTokenMap.LParen);\n            _this.SUBRULE(_this.Expression);\n            _this.CONSUME(sparqlTokenMap.RParen);\n        });\n        _this.BuiltInCall_COALESCE = _this.RULE('BuiltInCall_COALESCE', function () {\n            log('BuiltInCall_COALESCE');\n            _this.CONSUME(sparqlTokenMap.COALESCE);\n            _this.SUBRULE(_this.ExpressionList);\n        });\n        _this.BuiltInCall_IF = _this.RULE('BuiltInCall_IF', function () {\n            log('BuiltInCall_IF');\n            _this.CONSUME(sparqlTokenMap.IF);\n            _this.CONSUME(sparqlTokenMap.LParen);\n            _this.SUBRULE(_this.Expression);\n            _this.CONSUME(sparqlTokenMap.Comma);\n            _this.SUBRULE1(_this.Expression);\n            _this.CONSUME1(sparqlTokenMap.Comma);\n            _this.SUBRULE2(_this.Expression);\n            _this.CONSUME(sparqlTokenMap.RParen);\n        });\n        _this.BuiltInCall_STRLANG = _this.RULE('BuiltInCall_STRLANG', function () {\n            log('BuiltInCall_STRLANG');\n            _this.CONSUME(sparqlTokenMap.STRLANG);\n            _this.CONSUME(sparqlTokenMap.LParen);\n            _this.SUBRULE(_this.Expression);\n            _this.CONSUME(sparqlTokenMap.Comma);\n            _this.SUBRULE1(_this.Expression);\n            _this.CONSUME(sparqlTokenMap.RParen);\n        });\n        _this.BuiltInCall_STRDT = _this.RULE('BuiltInCall_STRDT', function () {\n            log('BuiltInCall_STRDT');\n            _this.CONSUME(sparqlTokenMap.STRDT);\n            _this.CONSUME(sparqlTokenMap.LParen);\n            _this.SUBRULE(_this.Expression);\n            _this.CONSUME(sparqlTokenMap.Comma);\n            _this.SUBRULE1(_this.Expression);\n            _this.CONSUME(sparqlTokenMap.RParen);\n        });\n        _this.BuiltInCall_sameTerm = _this.RULE('BuiltInCall_sameTerm', function () {\n            log('BuiltInCall_sameTerm');\n            _this.CONSUME(sparqlTokenMap.sameTerm);\n            _this.CONSUME(sparqlTokenMap.LParen);\n            _this.SUBRULE(_this.Expression);\n            _this.CONSUME(sparqlTokenMap.Comma);\n            _this.SUBRULE1(_this.Expression);\n            _this.CONSUME(sparqlTokenMap.RParen);\n        });\n        _this.BuiltInCall_isIRI = _this.RULE('BuiltInCall_isIRI', function () {\n            log('BuiltInCall_isIRI');\n            _this.CONSUME(sparqlTokenMap.isIRI);\n            _this.CONSUME(sparqlTokenMap.LParen);\n            _this.SUBRULE(_this.Expression);\n            _this.CONSUME(sparqlTokenMap.RParen);\n        });\n        _this.BuiltInCall_isURI = _this.RULE('BuiltInCall_isURI', function () {\n            log('BuiltInCall_isURI');\n            _this.CONSUME(sparqlTokenMap.isURI);\n            _this.CONSUME(sparqlTokenMap.LParen);\n            _this.SUBRULE(_this.Expression);\n            _this.CONSUME(sparqlTokenMap.RParen);\n        });\n        _this.BuiltInCall_isBLANK = _this.RULE('BuiltInCall_isBLANK', function () {\n            log('BuiltInCall_isBLANK');\n            _this.CONSUME(sparqlTokenMap.isBLANK);\n            _this.CONSUME(sparqlTokenMap.LParen);\n            _this.SUBRULE(_this.Expression);\n            _this.CONSUME(sparqlTokenMap.RParen);\n        });\n        _this.BuiltInCall_isLITERAL = _this.RULE('BuiltInCall_isLITERAL', function () {\n            log('BuiltInCall_isLITERAL');\n            _this.CONSUME(sparqlTokenMap.isLITERAL);\n            _this.CONSUME(sparqlTokenMap.LParen);\n            _this.SUBRULE(_this.Expression);\n            _this.CONSUME(sparqlTokenMap.RParen);\n        });\n        _this.BuiltInCall_isNUMERIC = _this.RULE('BuiltInCall_isNUMERIC', function () {\n            log('BuiltInCall_isNUMERIC');\n            _this.CONSUME(sparqlTokenMap.isNUMERIC);\n            _this.CONSUME(sparqlTokenMap.LParen);\n            _this.SUBRULE(_this.Expression);\n            _this.CONSUME(sparqlTokenMap.RParen);\n        });\n        _this.BuiltInCall = _this.RULE('BuiltInCall', function () {\n            log('BuiltInCall');\n            _this.OR([\n                { ALT: function () { return _this.SUBRULE(_this.Aggregate); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_STR); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_LANG); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_LANGMATCHES); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_DATATYPE); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_BOUND); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_IRI); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_URI); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_BNODE); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_RAND); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_ABS); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_CEIL); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_FLOOR); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_ROUND); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_CONCAT); } },\n                { ALT: function () { return _this.SUBRULE(_this.SubstringExpression); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_STRLEN); } },\n                { ALT: function () { return _this.SUBRULE(_this.StrReplaceExpression); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_UCASE); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_LCASE); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_ENCODE_FOR_URI); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_CONTAINS); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_STRSTARTS); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_STRENDS); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_STRBEFORE); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_STRAFTER); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_YEAR); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_MONTH); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_DAY); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_HOURS); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_MINUTES); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_SECONDS); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_TIMEZONE); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_TZ); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_NOW); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_UUID); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_STRUUID); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_MD5); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_SHA1); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_SHA256); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_SHA384); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_SHA512); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_COALESCE); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_IF); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_STRLANG); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_STRDT); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_sameTerm); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_isIRI); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_isURI); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_isBLANK); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_isLITERAL); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_isNUMERIC); } },\n                { ALT: function () { return _this.SUBRULE(_this.RegexExpression); } },\n                { ALT: function () { return _this.SUBRULE(_this.ExistsFunction); } },\n                { ALT: function () { return _this.SUBRULE(_this.NotExistsFunction); } },\n            ]);\n        });\n        _this.RegexExpression = _this.RULE('RegexExpression', function () {\n            log('RegexExpression');\n            _this.CONSUME(sparqlTokenMap.REGEX);\n            _this.CONSUME(sparqlTokenMap.LParen);\n            _this.SUBRULE(_this.Expression);\n            _this.CONSUME(sparqlTokenMap.Comma);\n            _this.SUBRULE1(_this.Expression);\n            _this.OPTION(function () {\n                _this.CONSUME1(sparqlTokenMap.Comma);\n                _this.SUBRULE2(_this.Expression);\n            });\n            _this.CONSUME(sparqlTokenMap.RParen);\n        });\n        _this.SubstringExpression = _this.RULE('SubstringExpression', function () {\n            log('SubstringExpression');\n            _this.CONSUME(sparqlTokenMap.SUBSTR);\n            _this.CONSUME(sparqlTokenMap.LParen);\n            _this.SUBRULE(_this.Expression);\n            _this.CONSUME(sparqlTokenMap.Comma);\n            _this.SUBRULE1(_this.Expression);\n            _this.OPTION(function () {\n                _this.CONSUME1(sparqlTokenMap.Comma);\n                _this.SUBRULE2(_this.Expression);\n            });\n            _this.CONSUME(sparqlTokenMap.RParen);\n        });\n        _this.StrReplaceExpression = _this.RULE('StrReplaceExpression', function () {\n            log('StrReplaceExpression');\n            _this.CONSUME(sparqlTokenMap.REPLACE);\n            _this.CONSUME(sparqlTokenMap.LParen);\n            _this.SUBRULE(_this.Expression);\n            _this.CONSUME(sparqlTokenMap.Comma);\n            _this.SUBRULE1(_this.Expression);\n            _this.CONSUME1(sparqlTokenMap.Comma);\n            _this.SUBRULE2(_this.Expression);\n            _this.OPTION(function () {\n                _this.CONSUME2(sparqlTokenMap.Comma);\n                _this.SUBRULE3(_this.Expression);\n            });\n            _this.CONSUME(sparqlTokenMap.RParen);\n        });\n        _this.ExistsFunction = _this.RULE('ExistsFunction', function () {\n            log('ExistsFunction');\n            _this.CONSUME(sparqlTokenMap.EXISTS);\n            _this.SUBRULE(_this.GroupGraphPattern);\n        });\n        _this.NotExistsFunction = _this.RULE('NotExistsFunction', function () {\n            log('NotExistsFunction');\n            _this.CONSUME(sparqlTokenMap.NOT_EXISTS);\n            _this.SUBRULE(_this.GroupGraphPattern);\n        });\n        _this.Count = _this.RULE('Count', function () {\n            log('Count');\n            _this.CONSUME(sparqlTokenMap.COUNT);\n            _this.CONSUME1(sparqlTokenMap.LParen);\n            _this.OPTION(function () { return _this.CONSUME2(sparqlTokenMap.DISTINCT); });\n            _this.OR([\n                { ALT: function () { return _this.CONSUME3(sparqlTokenMap.Star); } },\n                { ALT: function () { return _this.SUBRULE(_this.Expression); } },\n            ]);\n            _this.CONSUME(sparqlTokenMap.RParen);\n        });\n        _this.Sum = _this.RULE('Sum', function () {\n            log('Sum');\n            _this.CONSUME(sparqlTokenMap.SUM);\n            _this.CONSUME1(sparqlTokenMap.LParen);\n            _this.OPTION(function () { return _this.CONSUME2(sparqlTokenMap.DISTINCT); });\n            _this.SUBRULE(_this.Expression);\n            _this.CONSUME(sparqlTokenMap.RParen);\n        });\n        _this.Min = _this.RULE('Min', function () {\n            log('Min');\n            _this.CONSUME(sparqlTokenMap.MIN);\n            _this.CONSUME1(sparqlTokenMap.LParen);\n            _this.OPTION(function () { return _this.CONSUME2(sparqlTokenMap.DISTINCT); });\n            _this.SUBRULE(_this.Expression);\n            _this.CONSUME(sparqlTokenMap.RParen);\n        });\n        _this.Max = _this.RULE('Max', function () {\n            log('Max');\n            _this.CONSUME(sparqlTokenMap.MAX);\n            _this.CONSUME1(sparqlTokenMap.LParen);\n            _this.OPTION(function () { return _this.CONSUME2(sparqlTokenMap.DISTINCT); });\n            _this.SUBRULE(_this.Expression);\n            _this.CONSUME(sparqlTokenMap.RParen);\n        });\n        _this.Avg = _this.RULE('Avg', function () {\n            log('Avg');\n            _this.CONSUME(sparqlTokenMap.AVG);\n            _this.CONSUME1(sparqlTokenMap.LParen);\n            _this.OPTION(function () { return _this.CONSUME2(sparqlTokenMap.DISTINCT); });\n            _this.SUBRULE(_this.Expression);\n            _this.CONSUME(sparqlTokenMap.RParen);\n        });\n        _this.Sample = _this.RULE('Sample', function () {\n            log('Sample');\n            _this.CONSUME(sparqlTokenMap.SAMPLE);\n            _this.CONSUME1(sparqlTokenMap.LParen);\n            _this.OPTION(function () { return _this.CONSUME2(sparqlTokenMap.DISTINCT); });\n            _this.SUBRULE(_this.Expression);\n            _this.CONSUME(sparqlTokenMap.RParen);\n        });\n        _this.GroupConcat = _this.RULE('GroupConcat', function () {\n            log('GroupConcat');\n            _this.CONSUME(sparqlTokenMap.GROUP_CONCAT);\n            _this.CONSUME1(sparqlTokenMap.LParen);\n            _this.OPTION(function () { return _this.CONSUME2(sparqlTokenMap.DISTINCT); });\n            _this.SUBRULE(_this.Expression);\n            _this.OPTION1(function () {\n                _this.CONSUME(sparqlTokenMap.Semicolon);\n                _this.CONSUME(sparqlTokenMap.SEPARATOR);\n                _this.CONSUME(sparqlTokenMap.Equals);\n                _this.SUBRULE(_this.String);\n            });\n            _this.CONSUME(sparqlTokenMap.RParen);\n        });\n        _this.Aggregate = _this.RULE('Aggregate', function () {\n            log('Aggregate');\n            _this.OR([\n                { ALT: function () { return _this.SUBRULE(_this.Count); } },\n                { ALT: function () { return _this.SUBRULE(_this.Sum); } },\n                { ALT: function () { return _this.SUBRULE(_this.Min); } },\n                { ALT: function () { return _this.SUBRULE(_this.Max); } },\n                { ALT: function () { return _this.SUBRULE(_this.Avg); } },\n                { ALT: function () { return _this.SUBRULE(_this.Sample); } },\n                { ALT: function () { return _this.SUBRULE(_this.GroupConcat); } },\n            ]);\n        });\n        _this.iriOrFunction = _this.RULE('iriOrFunction', function () {\n            log('iriOrFunction');\n            _this.SUBRULE(_this.iri);\n            _this.OPTION(function () { return _this.SUBRULE(_this.ArgList); });\n        });\n        _this.RDFLiteral = _this.RULE('RDFLiteral', function () {\n            log('RDFLiteral');\n            _this.SUBRULE(_this.String);\n            _this.OPTION(function () {\n                return _this.OR([\n                    { ALT: function () { return _this.CONSUME(sparqlTokenMap.LANGTAG); } },\n                    {\n                        ALT: function () {\n                            _this.CONSUME(sparqlTokenMap.DoubleCaret);\n                            _this.SUBRULE(_this.iri);\n                        },\n                    },\n                ]);\n            });\n        });\n        _this.NumericLiteral = _this.RULE('NumericLiteral', function () {\n            log('NumericLiteral');\n            _this.OR([\n                { ALT: function () { return _this.SUBRULE(_this.NumericLiteralUnsigned); } },\n                { ALT: function () { return _this.SUBRULE(_this.NumericLiteralPositive); } },\n                { ALT: function () { return _this.SUBRULE(_this.NumericLiteralNegative); } },\n            ]);\n        });\n        _this.NumericLiteralUnsigned = _this.RULE('NumericLiteralUnsigned', function () {\n            log('NumericLiteralUnsigned');\n            _this.OR([\n                { ALT: function () { return _this.CONSUME(sparqlTokenMap.INTEGER); } },\n                { ALT: function () { return _this.CONSUME(sparqlTokenMap.DECIMAL); } },\n                { ALT: function () { return _this.CONSUME(sparqlTokenMap.DOUBLE); } },\n            ]);\n        });\n        _this.NumericLiteralPositive = _this.RULE('NumericLiteralPositive', function () {\n            log('NumericLiteralPositive');\n            _this.OR([\n                { ALT: function () { return _this.CONSUME(sparqlTokenMap.INTEGER_POSITIVE); } },\n                { ALT: function () { return _this.CONSUME(sparqlTokenMap.DECIMAL_POSITIVE); } },\n                { ALT: function () { return _this.CONSUME(sparqlTokenMap.DOUBLE_POSITIVE); } },\n            ]);\n        });\n        _this.NumericLiteralNegative = _this.RULE('NumericLiteralNegative', function () {\n            log('NumericLiteralNegative');\n            _this.OR([\n                { ALT: function () { return _this.CONSUME(sparqlTokenMap.INTEGER_NEGATIVE); } },\n                { ALT: function () { return _this.CONSUME(sparqlTokenMap.DECIMAL_NEGATIVE); } },\n                { ALT: function () { return _this.CONSUME(sparqlTokenMap.DOUBLE_NEGATIVE); } },\n            ]);\n        });\n        _this.BooleanLiteral = _this.RULE('BooleanLiteral', function () {\n            log('BooleanLiteral');\n            _this.OR([\n                { ALT: function () { return _this.CONSUME(sparqlTokenMap.TRUE); } },\n                { ALT: function () { return _this.CONSUME(sparqlTokenMap.FALSE); } },\n            ]);\n        });\n        _this.String = _this.RULE('String', function () {\n            log('String');\n            _this.OR([\n                { ALT: function () { return _this.CONSUME(sparqlTokenMap.STRING_LITERAL1); } },\n                { ALT: function () { return _this.CONSUME(sparqlTokenMap.STRING_LITERAL2); } },\n                { ALT: function () { return _this.CONSUME(sparqlTokenMap.STRING_LITERAL_LONG1); } },\n                { ALT: function () { return _this.CONSUME(sparqlTokenMap.STRING_LITERAL_LONG2); } },\n            ]);\n        });\n        _this.iri = _this.RULE('iri', function () {\n            log('iri');\n            _this.OR([\n                { ALT: function () { return _this.CONSUME(sparqlTokenMap.IRIREF); } },\n                { ALT: function () { return _this.SUBRULE(_this.PrefixedName); } },\n            ]);\n        });\n        _this.PrefixedName = _this.RULE('PrefixedName', function () {\n            log('PrefixedName');\n            _this.OR([\n                { ALT: function () { return _this.CONSUME(sparqlTokenMap.PNAME_LN); } },\n                { ALT: function () { return _this.CONSUME(sparqlTokenMap.PNAME_NS); } },\n            ]);\n        });\n        _this.BlankNode = _this.RULE('BlankNode', function () {\n            log('BlankNode');\n            _this.OR([\n                { ALT: function () { return _this.CONSUME(sparqlTokenMap.BLANK_NODE_LABEL); } },\n                { ALT: function () { return _this.CONSUME(sparqlTokenMap.ANON); } },\n            ]);\n        });\n        _this.lexer = new Lexer(tokenVocab);\n        return _this;\n    }\n    return BaseSparqlParser;\n}(Parser));\nexport { BaseSparqlParser };\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar utils_1 = require(\"../../utils/utils\");\nvar gast_public_1 = require(\"./gast/gast_public\");\n/**\n *  A Grammar Walker that computes the \"remaining\" grammar \"after\" a productions in the grammar.\n */\nvar RestWalker = /** @class */ (function () {\n    function RestWalker() {\n    }\n    RestWalker.prototype.walk = function (prod, prevRest) {\n        var _this = this;\n        if (prevRest === void 0) { prevRest = []; }\n        utils_1.forEach(prod.definition, function (subProd, index) {\n            var currRest = utils_1.drop(prod.definition, index + 1);\n            /* istanbul ignore else */\n            if (subProd instanceof gast_public_1.NonTerminal) {\n                _this.walkProdRef(subProd, currRest, prevRest);\n            }\n            else if (subProd instanceof gast_public_1.Terminal) {\n                _this.walkTerminal(subProd, currRest, prevRest);\n            }\n            else if (subProd instanceof gast_public_1.Flat) {\n                _this.walkFlat(subProd, currRest, prevRest);\n            }\n            else if (subProd instanceof gast_public_1.Option) {\n                _this.walkOption(subProd, currRest, prevRest);\n            }\n            else if (subProd instanceof gast_public_1.RepetitionMandatory) {\n                _this.walkAtLeastOne(subProd, currRest, prevRest);\n            }\n            else if (subProd instanceof gast_public_1.RepetitionMandatoryWithSeparator) {\n                _this.walkAtLeastOneSep(subProd, currRest, prevRest);\n            }\n            else if (subProd instanceof gast_public_1.RepetitionWithSeparator) {\n                _this.walkManySep(subProd, currRest, prevRest);\n            }\n            else if (subProd instanceof gast_public_1.Repetition) {\n                _this.walkMany(subProd, currRest, prevRest);\n            }\n            else if (subProd instanceof gast_public_1.Alternation) {\n                _this.walkOr(subProd, currRest, prevRest);\n            }\n            else {\n                throw Error(\"non exhaustive match\");\n            }\n        });\n    };\n    RestWalker.prototype.walkTerminal = function (terminal, currRest, prevRest) { };\n    RestWalker.prototype.walkProdRef = function (refProd, currRest, prevRest) { };\n    RestWalker.prototype.walkFlat = function (flatProd, currRest, prevRest) {\n        // ABCDEF => after the D the rest is EF\n        var fullOrRest = currRest.concat(prevRest);\n        this.walk(flatProd, fullOrRest);\n    };\n    RestWalker.prototype.walkOption = function (optionProd, currRest, prevRest) {\n        // ABC(DE)?F => after the (DE)? the rest is F\n        var fullOrRest = currRest.concat(prevRest);\n        this.walk(optionProd, fullOrRest);\n    };\n    RestWalker.prototype.walkAtLeastOne = function (atLeastOneProd, currRest, prevRest) {\n        // ABC(DE)+F => after the (DE)+ the rest is (DE)?F\n        var fullAtLeastOneRest = [\n            new gast_public_1.Option({ definition: atLeastOneProd.definition })\n        ].concat(currRest, prevRest);\n        this.walk(atLeastOneProd, fullAtLeastOneRest);\n    };\n    RestWalker.prototype.walkAtLeastOneSep = function (atLeastOneSepProd, currRest, prevRest) {\n        // ABC DE(,DE)* F => after the (,DE)+ the rest is (,DE)?F\n        var fullAtLeastOneSepRest = restForRepetitionWithSeparator(atLeastOneSepProd, currRest, prevRest);\n        this.walk(atLeastOneSepProd, fullAtLeastOneSepRest);\n    };\n    RestWalker.prototype.walkMany = function (manyProd, currRest, prevRest) {\n        // ABC(DE)*F => after the (DE)* the rest is (DE)?F\n        var fullManyRest = [\n            new gast_public_1.Option({ definition: manyProd.definition })\n        ].concat(currRest, prevRest);\n        this.walk(manyProd, fullManyRest);\n    };\n    RestWalker.prototype.walkManySep = function (manySepProd, currRest, prevRest) {\n        // ABC (DE(,DE)*)? F => after the (,DE)* the rest is (,DE)?F\n        var fullManySepRest = restForRepetitionWithSeparator(manySepProd, currRest, prevRest);\n        this.walk(manySepProd, fullManySepRest);\n    };\n    RestWalker.prototype.walkOr = function (orProd, currRest, prevRest) {\n        var _this = this;\n        // ABC(D|E|F)G => when finding the (D|E|F) the rest is G\n        var fullOrRest = currRest.concat(prevRest);\n        // walk all different alternatives\n        utils_1.forEach(orProd.definition, function (alt) {\n            // wrapping each alternative in a single definition wrapper\n            // to avoid errors in computing the rest of that alternative in the invocation to computeInProdFollows\n            // (otherwise for OR([alt1,alt2]) alt2 will be considered in 'rest' of alt1\n            var prodWrapper = new gast_public_1.Flat({ definition: [alt] });\n            _this.walk(prodWrapper, fullOrRest);\n        });\n    };\n    return RestWalker;\n}());\nexports.RestWalker = RestWalker;\nfunction restForRepetitionWithSeparator(repSepProd, currRest, prevRest) {\n    var repSepRest = [\n        new gast_public_1.Option({\n            definition: [\n                new gast_public_1.Terminal({ terminalType: repSepProd.separator })\n            ].concat(repSepProd.definition)\n        })\n    ];\n    var fullRepSepRest = repSepRest.concat(currRest, prevRest);\n    return fullRepSepRest;\n}\n//# sourceMappingURL=rest.js.map", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar lexer_1 = require(\"./lexer\");\nvar utils_1 = require(\"../utils/utils\");\nvar tokens_1 = require(\"./tokens\");\nvar lexer_errors_public_1 = require(\"../scan/lexer_errors_public\");\nvar LexerDefinitionErrorType;\n(function (LexerDefinitionErrorType) {\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"MISSING_PATTERN\"] = 0] = \"MISSING_PATTERN\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"INVALID_PATTERN\"] = 1] = \"INVALID_PATTERN\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"EOI_ANCHOR_FOUND\"] = 2] = \"EOI_ANCHOR_FOUND\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"UNSUPPORTED_FLAGS_FOUND\"] = 3] = \"UNSUPPORTED_FLAGS_FOUND\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"DUPLICATE_PATTERNS_FOUND\"] = 4] = \"DUPLICATE_PATTERNS_FOUND\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"INVALID_GROUP_TYPE_FOUND\"] = 5] = \"INVALID_GROUP_TYPE_FOUND\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"PUSH_MODE_DOES_NOT_EXIST\"] = 6] = \"PUSH_MODE_DOES_NOT_EXIST\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"MULTI_MODE_LEXER_WITHOUT_DEFAULT_MODE\"] = 7] = \"MULTI_MODE_LEXER_WITHOUT_DEFAULT_MODE\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"MULTI_MODE_LEXER_WITHOUT_MODES_PROPERTY\"] = 8] = \"MULTI_MODE_LEXER_WITHOUT_MODES_PROPERTY\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"MULTI_MODE_LEXER_DEFAULT_MODE_VALUE_DOES_NOT_EXIST\"] = 9] = \"MULTI_MODE_LEXER_DEFAULT_MODE_VALUE_DOES_NOT_EXIST\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"LEXER_DEFINITION_CANNOT_CONTAIN_UNDEFINED\"] = 10] = \"LEXER_DEFINITION_CANNOT_CONTAIN_UNDEFINED\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"SOI_ANCHOR_FOUND\"] = 11] = \"SOI_ANCHOR_FOUND\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"EMPTY_MATCH_PATTERN\"] = 12] = \"EMPTY_MATCH_PATTERN\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"NO_LINE_BREAKS_FLAGS\"] = 13] = \"NO_LINE_BREAKS_FLAGS\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"UNREACHABLE_PATTERN\"] = 14] = \"UNREACHABLE_PATTERN\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"IDENTIFY_TERMINATOR\"] = 15] = \"IDENTIFY_TERMINATOR\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"CUSTOM_LINE_BREAK\"] = 16] = \"CUSTOM_LINE_BREAK\";\n})(LexerDefinitionErrorType = exports.LexerDefinitionErrorType || (exports.LexerDefinitionErrorType = {}));\nvar DEFAULT_LEXER_CONFIG = {\n    deferDefinitionErrorsHandling: false,\n    positionTracking: \"full\",\n    lineTerminatorsPattern: /\\n|\\r\\n?/g,\n    lineTerminatorCharacters: [\"\\n\", \"\\r\"],\n    ensureOptimizations: false,\n    safeMode: false,\n    errorMessageProvider: lexer_errors_public_1.defaultLexerErrorProvider\n};\nObject.freeze(DEFAULT_LEXER_CONFIG);\nvar Lexer = /** @class */ (function () {\n    function Lexer(lexerDefinition, config) {\n        var _this = this;\n        if (config === void 0) { config = DEFAULT_LEXER_CONFIG; }\n        this.lexerDefinition = lexerDefinition;\n        this.lexerDefinitionErrors = [];\n        this.lexerDefinitionWarning = [];\n        this.patternIdxToConfig = {};\n        this.charCodeToPatternIdxToConfig = {};\n        this.modes = [];\n        this.emptyGroups = {};\n        this.config = undefined;\n        this.trackStartLines = true;\n        this.trackEndLines = true;\n        this.hasCustom = false;\n        this.canModeBeOptimized = {};\n        if (typeof config === \"boolean\") {\n            throw Error(\"The second argument to the Lexer constructor is now an ILexerConfig Object.\\n\" +\n                \"a boolean 2nd argument is no longer supported\");\n        }\n        // todo: defaults func?\n        this.config = utils_1.merge(DEFAULT_LEXER_CONFIG, config);\n        if (this.config.lineTerminatorsPattern ===\n            DEFAULT_LEXER_CONFIG.lineTerminatorsPattern) {\n            // optimized built-in implementation for the defaults definition of lineTerminators\n            this.config.lineTerminatorsPattern = lexer_1.LineTerminatorOptimizedTester;\n        }\n        else {\n            if (this.config.lineTerminatorCharacters ===\n                DEFAULT_LEXER_CONFIG.lineTerminatorCharacters) {\n                throw Error(\"Error: Missing <lineTerminatorCharacters> property on the Lexer config.\\n\" +\n                    \"\\tFor details See: https://sap.github.io/chevrotain/docs/guide/resolving_lexer_errors.html#MISSING_LINE_TERM_CHARS\");\n            }\n        }\n        if (config.safeMode && config.ensureOptimizations) {\n            throw Error('\"safeMode\" and \"ensureOptimizations\" flags are mutually exclusive.');\n        }\n        this.trackStartLines = /full|onlyStart/i.test(this.config.positionTracking);\n        this.trackEndLines = /full/i.test(this.config.positionTracking);\n        var hasOnlySingleMode = true;\n        var actualDefinition;\n        // Convert SingleModeLexerDefinition into a IMultiModeLexerDefinition.\n        if (utils_1.isArray(lexerDefinition)) {\n            actualDefinition = { modes: {} };\n            actualDefinition.modes[lexer_1.DEFAULT_MODE] = utils_1.cloneArr((lexerDefinition));\n            actualDefinition[lexer_1.DEFAULT_MODE] = lexer_1.DEFAULT_MODE;\n        }\n        else {\n            // no conversion needed, input should already be a IMultiModeLexerDefinition\n            hasOnlySingleMode = false;\n            actualDefinition = utils_1.cloneObj((lexerDefinition));\n        }\n        this.lexerDefinitionErrors = this.lexerDefinitionErrors.concat(lexer_1.performRuntimeChecks(actualDefinition, this.trackStartLines, this.config.lineTerminatorCharacters));\n        this.lexerDefinitionWarning = this.lexerDefinitionWarning.concat(lexer_1.performWarningRuntimeChecks(actualDefinition, this.trackStartLines, this.config.lineTerminatorCharacters));\n        // for extra robustness to avoid throwing an none informative error message\n        actualDefinition.modes = actualDefinition.modes\n            ? actualDefinition.modes\n            : {};\n        // an error of undefined TokenTypes will be detected in \"performRuntimeChecks\" above.\n        // this transformation is to increase robustness in the case of partially invalid lexer definition.\n        utils_1.forEach(actualDefinition.modes, function (currModeValue, currModeName) {\n            actualDefinition.modes[currModeName] = utils_1.reject(currModeValue, function (currTokType) { return utils_1.isUndefined(currTokType); });\n        });\n        var allModeNames = utils_1.keys(actualDefinition.modes);\n        utils_1.forEach(actualDefinition.modes, function (currModDef, currModName) {\n            _this.modes.push(currModName);\n            _this.lexerDefinitionErrors = _this.lexerDefinitionErrors.concat(lexer_1.validatePatterns(currModDef, allModeNames));\n            // If definition errors were encountered, the analysis phase may fail unexpectedly/\n            // Considering a lexer with definition errors may never be used, there is no point\n            // to performing the analysis anyhow...\n            if (utils_1.isEmpty(_this.lexerDefinitionErrors)) {\n                tokens_1.augmentTokenTypes(currModDef);\n                var currAnalyzeResult = lexer_1.analyzeTokenTypes(currModDef, {\n                    lineTerminatorCharacters: _this.config\n                        .lineTerminatorCharacters,\n                    positionTracking: config.positionTracking,\n                    ensureOptimizations: config.ensureOptimizations,\n                    safeMode: config.safeMode\n                });\n                _this.patternIdxToConfig[currModName] =\n                    currAnalyzeResult.patternIdxToConfig;\n                _this.charCodeToPatternIdxToConfig[currModName] =\n                    currAnalyzeResult.charCodeToPatternIdxToConfig;\n                _this.emptyGroups = utils_1.merge(_this.emptyGroups, currAnalyzeResult.emptyGroups);\n                _this.hasCustom =\n                    currAnalyzeResult.hasCustom || _this.hasCustom;\n                _this.canModeBeOptimized[currModName] =\n                    currAnalyzeResult.canBeOptimized;\n            }\n        });\n        this.defaultMode = actualDefinition.defaultMode;\n        if (!utils_1.isEmpty(this.lexerDefinitionErrors) &&\n            !this.config.deferDefinitionErrorsHandling) {\n            var allErrMessages = utils_1.map(this.lexerDefinitionErrors, function (error) {\n                return error.message;\n            });\n            var allErrMessagesString = allErrMessages.join(\"-----------------------\\n\");\n            throw new Error(\"Errors detected in definition of Lexer:\\n\" +\n                allErrMessagesString);\n        }\n        // Only print warning if there are no errors, This will avoid pl\n        utils_1.forEach(this.lexerDefinitionWarning, function (warningDescriptor) {\n            utils_1.PRINT_WARNING(warningDescriptor.message);\n        });\n        // Choose the relevant internal implementations for this specific parser.\n        // These implementations should be in-lined by the JavaScript engine\n        // to provide optimal performance in each scenario.\n        if (lexer_1.SUPPORT_STICKY) {\n            this.chopInput = utils_1.IDENTITY;\n            this.match = this.matchWithTest;\n        }\n        else {\n            this.updateLastIndex = utils_1.NOOP;\n            this.match = this.matchWithExec;\n        }\n        if (hasOnlySingleMode) {\n            this.handleModes = utils_1.NOOP;\n        }\n        if (this.trackStartLines === false) {\n            this.computeNewColumn = utils_1.IDENTITY;\n        }\n        if (this.trackEndLines === false) {\n            this.updateTokenEndLineColumnLocation = utils_1.NOOP;\n        }\n        if (/full/i.test(this.config.positionTracking)) {\n            this.createTokenInstance = this.createFullToken;\n        }\n        else if (/onlyStart/i.test(this.config.positionTracking)) {\n            this.createTokenInstance = this.createStartOnlyToken;\n        }\n        else if (/onlyOffset/i.test(this.config.positionTracking)) {\n            this.createTokenInstance = this.createOffsetOnlyToken;\n        }\n        else {\n            throw Error(\"Invalid <positionTracking> config option: \\\"\" + this.config.positionTracking + \"\\\"\");\n        }\n        if (this.hasCustom) {\n            this.addToken = this.addTokenUsingPush;\n        }\n        else {\n            this.addToken = this.addTokenUsingMemberAccess;\n        }\n        var unOptimizedModes = utils_1.reduce(this.canModeBeOptimized, function (cannotBeOptimized, canBeOptimized, modeName) {\n            if (canBeOptimized === false) {\n                cannotBeOptimized.push(modeName);\n            }\n            return cannotBeOptimized;\n        }, []);\n        if (config.ensureOptimizations && !utils_1.isEmpty(unOptimizedModes)) {\n            throw Error(\"Lexer Modes: < \" + unOptimizedModes.join(\", \") + \" > cannot be optimized.\\n\" +\n                '\\t Disable the \"ensureOptimizations\" lexer config flag to silently ignore this and run the lexer in an un-optimized mode.\\n' +\n                \"\\t Or inspect the console log for details on how to resolve these issues.\");\n        }\n    }\n    Lexer.prototype.tokenize = function (text, initialMode) {\n        if (initialMode === void 0) { initialMode = this.defaultMode; }\n        if (!utils_1.isEmpty(this.lexerDefinitionErrors)) {\n            var allErrMessages = utils_1.map(this.lexerDefinitionErrors, function (error) {\n                return error.message;\n            });\n            var allErrMessagesString = allErrMessages.join(\"-----------------------\\n\");\n            throw new Error(\"Unable to Tokenize because Errors detected in definition of Lexer:\\n\" +\n                allErrMessagesString);\n        }\n        var lexResult = this.tokenizeInternal(text, initialMode);\n        return lexResult;\n    };\n    // There is quite a bit of duplication between this and \"tokenizeInternalLazy\"\n    // This is intentional due to performance considerations.\n    Lexer.prototype.tokenizeInternal = function (text, initialMode) {\n        var _this = this;\n        var i, j, matchAltImage, longerAltIdx, matchedImage, imageLength, group, tokType, newToken, errLength, droppedChar, msg, match;\n        var orgText = text;\n        var orgLength = orgText.length;\n        var offset = 0;\n        var matchedTokensIndex = 0;\n        // initializing the tokensArray to the \"guessed\" size.\n        // guessing too little will still reduce the number of array re-sizes on pushes.\n        // guessing too large (Tested by guessing x4 too large) may cost a bit more of memory\n        // but would still have a faster runtime by avoiding (All but one) array resizing.\n        var guessedNumberOfTokens = this.hasCustom\n            ? 0 // will break custom token pattern APIs the matchedTokens array will contain undefined elements.\n            : Math.floor(text.length / 10);\n        var matchedTokens = new Array(guessedNumberOfTokens);\n        var errors = [];\n        var line = this.trackStartLines ? 1 : undefined;\n        var column = this.trackStartLines ? 1 : undefined;\n        var groups = lexer_1.cloneEmptyGroups(this.emptyGroups);\n        var trackLines = this.trackStartLines;\n        var lineTerminatorPattern = this.config.lineTerminatorsPattern;\n        var currModePatternsLength = 0;\n        var patternIdxToConfig = [];\n        var currCharCodeToPatternIdxToConfig = [];\n        var modeStack = [];\n        var emptyArray = [];\n        Object.freeze(emptyArray);\n        var getPossiblePatterns = undefined;\n        var pop_mode = function (popToken) {\n            // TODO: perhaps avoid this error in the edge case there is no more input?\n            if (modeStack.length === 1 &&\n                // if we have both a POP_MODE and a PUSH_MODE this is in-fact a \"transition\"\n                // So no error should occur.\n                popToken.tokenType.PUSH_MODE === undefined) {\n                // if we try to pop the last mode there lexer will no longer have ANY mode.\n                // thus the pop is ignored, an error will be created and the lexer will continue parsing in the previous mode.\n                var msg_1 = _this.config.errorMessageProvider.buildUnableToPopLexerModeMessage(popToken);\n                errors.push({\n                    offset: popToken.startOffset,\n                    line: popToken.startLine !== undefined\n                        ? popToken.startLine\n                        : undefined,\n                    column: popToken.startColumn !== undefined\n                        ? popToken.startColumn\n                        : undefined,\n                    length: popToken.image.length,\n                    message: msg_1\n                });\n            }\n            else {\n                modeStack.pop();\n                var newMode = utils_1.last(modeStack);\n                patternIdxToConfig = _this.patternIdxToConfig[newMode];\n                currCharCodeToPatternIdxToConfig = _this\n                    .charCodeToPatternIdxToConfig[newMode];\n                currModePatternsLength = patternIdxToConfig.length;\n                var modeCanBeOptimized = _this.canModeBeOptimized[newMode] &&\n                    _this.config.safeMode === false;\n                if (currCharCodeToPatternIdxToConfig && modeCanBeOptimized) {\n                    getPossiblePatterns = function (charCode) {\n                        var possiblePatterns = currCharCodeToPatternIdxToConfig[charCode];\n                        if (possiblePatterns === undefined) {\n                            return emptyArray;\n                        }\n                        else {\n                            return possiblePatterns;\n                        }\n                    };\n                }\n                else {\n                    getPossiblePatterns = function () {\n                        return patternIdxToConfig;\n                    };\n                }\n            }\n        };\n        function push_mode(newMode) {\n            modeStack.push(newMode);\n            currCharCodeToPatternIdxToConfig = this\n                .charCodeToPatternIdxToConfig[newMode];\n            patternIdxToConfig = this.patternIdxToConfig[newMode];\n            currModePatternsLength = patternIdxToConfig.length;\n            currModePatternsLength = patternIdxToConfig.length;\n            var modeCanBeOptimized = this.canModeBeOptimized[newMode] &&\n                this.config.safeMode === false;\n            if (currCharCodeToPatternIdxToConfig && modeCanBeOptimized) {\n                getPossiblePatterns = function (charCode) {\n                    var possiblePatterns = currCharCodeToPatternIdxToConfig[charCode];\n                    if (possiblePatterns === undefined) {\n                        return emptyArray;\n                    }\n                    else {\n                        return possiblePatterns;\n                    }\n                };\n            }\n            else {\n                getPossiblePatterns = function () {\n                    return patternIdxToConfig;\n                };\n            }\n        }\n        // this pattern seems to avoid a V8 de-optimization, although that de-optimization does not\n        // seem to matter performance wise.\n        push_mode.call(this, initialMode);\n        var currConfig;\n        while (offset < orgLength) {\n            matchedImage = null;\n            var nextCharCode = orgText.charCodeAt(offset);\n            var chosenPatternIdxToConfig = getPossiblePatterns(nextCharCode);\n            var chosenPatternsLength = chosenPatternIdxToConfig.length;\n            for (i = 0; i < chosenPatternsLength; i++) {\n                currConfig = chosenPatternIdxToConfig[i];\n                var currPattern = currConfig.pattern;\n                // manually in-lined because > 600 chars won't be in-lined in V8\n                var singleCharCode = currConfig.short;\n                if (singleCharCode !== false) {\n                    if (nextCharCode === singleCharCode) {\n                        // single character string\n                        matchedImage = currPattern;\n                    }\n                }\n                else if (currConfig.isCustom === true) {\n                    match = currPattern.exec(orgText, offset, matchedTokens, groups);\n                    matchedImage = match !== null ? match[0] : match;\n                }\n                else {\n                    this.updateLastIndex(currPattern, offset);\n                    matchedImage = this.match(currPattern, text, offset);\n                }\n                if (matchedImage !== null) {\n                    // even though this pattern matched we must try a another longer alternative.\n                    // this can be used to prioritize keywords over identifiers\n                    longerAltIdx = currConfig.longerAlt;\n                    if (longerAltIdx !== undefined) {\n                        // TODO: micro optimize, avoid extra prop access\n                        // by saving/linking longerAlt on the original config?\n                        var longerAltConfig = patternIdxToConfig[longerAltIdx];\n                        var longerAltPattern = longerAltConfig.pattern;\n                        // single Char can never be a longer alt so no need to test it.\n                        // manually in-lined because > 600 chars won't be in-lined in V8\n                        if (longerAltConfig.isCustom === true) {\n                            match = longerAltPattern.exec(orgText, offset, matchedTokens, groups);\n                            matchAltImage = match !== null ? match[0] : match;\n                        }\n                        else {\n                            this.updateLastIndex(longerAltPattern, offset);\n                            matchAltImage = this.match(longerAltPattern, text, offset);\n                        }\n                        if (matchAltImage &&\n                            matchAltImage.length > matchedImage.length) {\n                            matchedImage = matchAltImage;\n                            currConfig = longerAltConfig;\n                        }\n                    }\n                    break;\n                }\n            }\n            // successful match\n            if (matchedImage !== null) {\n                // matchedImage = match[0]\n                imageLength = matchedImage.length;\n                group = currConfig.group;\n                if (group !== undefined) {\n                    tokType = currConfig.tokenTypeIdx;\n                    // TODO: \"offset + imageLength\" and the new column may be computed twice in case of \"full\" location information inside\n                    // createFullToken method\n                    newToken = this.createTokenInstance(matchedImage, offset, tokType, currConfig.tokenType, line, column, imageLength);\n                    if (group === false) {\n                        matchedTokensIndex = this.addToken(matchedTokens, matchedTokensIndex, newToken);\n                    }\n                    else {\n                        groups[group].push(newToken);\n                    }\n                }\n                text = this.chopInput(text, imageLength);\n                offset = offset + imageLength;\n                // TODO: with newlines the column may be assigned twice\n                column = this.computeNewColumn(column, imageLength);\n                if (trackLines === true &&\n                    currConfig.canLineTerminator === true) {\n                    var numOfLTsInMatch = 0;\n                    var foundTerminator = void 0;\n                    var lastLTEndOffset = void 0;\n                    lineTerminatorPattern.lastIndex = 0;\n                    do {\n                        foundTerminator = lineTerminatorPattern.test(matchedImage);\n                        if (foundTerminator === true) {\n                            lastLTEndOffset =\n                                lineTerminatorPattern.lastIndex - 1;\n                            numOfLTsInMatch++;\n                        }\n                    } while (foundTerminator);\n                    if (numOfLTsInMatch !== 0) {\n                        line = line + numOfLTsInMatch;\n                        column = imageLength - lastLTEndOffset;\n                        this.updateTokenEndLineColumnLocation(newToken, group, lastLTEndOffset, numOfLTsInMatch, line, column, imageLength);\n                    }\n                }\n                // will be NOOP if no modes present\n                this.handleModes(currConfig, pop_mode, push_mode, newToken);\n            }\n            else {\n                // error recovery, drop characters until we identify a valid token's start point\n                var errorStartOffset = offset;\n                var errorLine = line;\n                var errorColumn = column;\n                var foundResyncPoint = false;\n                while (!foundResyncPoint && offset < orgLength) {\n                    // drop chars until we succeed in matching something\n                    droppedChar = orgText.charCodeAt(offset);\n                    // Identity Func (when sticky flag is enabled)\n                    text = this.chopInput(text, 1);\n                    offset++;\n                    for (j = 0; j < currModePatternsLength; j++) {\n                        var currConfig_1 = patternIdxToConfig[j];\n                        var currPattern = currConfig_1.pattern;\n                        // manually in-lined because > 600 chars won't be in-lined in V8\n                        var singleCharCode = currConfig_1.short;\n                        if (singleCharCode !== false) {\n                            if (orgText.charCodeAt(offset) === singleCharCode) {\n                                // single character string\n                                foundResyncPoint = true;\n                            }\n                        }\n                        else if (currConfig_1.isCustom === true) {\n                            foundResyncPoint =\n                                currPattern.exec(orgText, offset, matchedTokens, groups) !== null;\n                        }\n                        else {\n                            this.updateLastIndex(currPattern, offset);\n                            foundResyncPoint = currPattern.exec(text) !== null;\n                        }\n                        if (foundResyncPoint === true) {\n                            break;\n                        }\n                    }\n                }\n                errLength = offset - errorStartOffset;\n                // at this point we either re-synced or reached the end of the input text\n                msg = this.config.errorMessageProvider.buildUnexpectedCharactersMessage(orgText, errorStartOffset, errLength, errorLine, errorColumn);\n                errors.push({\n                    offset: errorStartOffset,\n                    line: errorLine,\n                    column: errorColumn,\n                    length: errLength,\n                    message: msg\n                });\n            }\n        }\n        // if we do have custom patterns which push directly into the\n        if (!this.hasCustom) {\n            // if we guessed a too large size for the tokens array this will shrink it to the right size.\n            matchedTokens.length = matchedTokensIndex;\n        }\n        return {\n            tokens: matchedTokens,\n            groups: groups,\n            errors: errors\n        };\n    };\n    Lexer.prototype.handleModes = function (config, pop_mode, push_mode, newToken) {\n        if (config.pop === true) {\n            // need to save the PUSH_MODE property as if the mode is popped\n            // patternIdxToPopMode is updated to reflect the new mode after popping the stack\n            var pushMode = config.push;\n            pop_mode(newToken);\n            if (pushMode !== undefined) {\n                push_mode.call(this, pushMode);\n            }\n        }\n        else if (config.push !== undefined) {\n            push_mode.call(this, config.push);\n        }\n    };\n    Lexer.prototype.chopInput = function (text, length) {\n        return text.substring(length);\n    };\n    Lexer.prototype.updateLastIndex = function (regExp, newLastIndex) {\n        regExp.lastIndex = newLastIndex;\n    };\n    // TODO: decrease this under 600 characters? inspect stripping comments option in TSC compiler\n    Lexer.prototype.updateTokenEndLineColumnLocation = function (newToken, group, lastLTIdx, numOfLTsInMatch, line, column, imageLength) {\n        var lastCharIsLT, fixForEndingInLT;\n        if (group !== undefined) {\n            // a none skipped multi line Token, need to update endLine/endColumn\n            lastCharIsLT = lastLTIdx === imageLength - 1;\n            fixForEndingInLT = lastCharIsLT ? -1 : 0;\n            if (!(numOfLTsInMatch === 1 && lastCharIsLT === true)) {\n                // if a token ends in a LT that last LT only affects the line numbering of following Tokens\n                newToken.endLine = line + fixForEndingInLT;\n                // the last LT in a token does not affect the endColumn either as the [columnStart ... columnEnd)\n                // inclusive to exclusive range.\n                newToken.endColumn = column - 1 + -fixForEndingInLT;\n            }\n            // else single LT in the last character of a token, no need to modify the endLine/EndColumn\n        }\n    };\n    Lexer.prototype.computeNewColumn = function (oldColumn, imageLength) {\n        return oldColumn + imageLength;\n    };\n    // Place holder, will be replaced by the correct variant according to the locationTracking option at runtime.\n    /* istanbul ignore next - place holder */\n    Lexer.prototype.createTokenInstance = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return null;\n    };\n    Lexer.prototype.createOffsetOnlyToken = function (image, startOffset, tokenTypeIdx, tokenType) {\n        return {\n            image: image,\n            startOffset: startOffset,\n            tokenTypeIdx: tokenTypeIdx,\n            tokenType: tokenType\n        };\n    };\n    Lexer.prototype.createStartOnlyToken = function (image, startOffset, tokenTypeIdx, tokenType, startLine, startColumn) {\n        return {\n            image: image,\n            startOffset: startOffset,\n            startLine: startLine,\n            startColumn: startColumn,\n            tokenTypeIdx: tokenTypeIdx,\n            tokenType: tokenType\n        };\n    };\n    Lexer.prototype.createFullToken = function (image, startOffset, tokenTypeIdx, tokenType, startLine, startColumn, imageLength) {\n        return {\n            image: image,\n            startOffset: startOffset,\n            endOffset: startOffset + imageLength - 1,\n            startLine: startLine,\n            endLine: startLine,\n            startColumn: startColumn,\n            endColumn: startColumn + imageLength - 1,\n            tokenTypeIdx: tokenTypeIdx,\n            tokenType: tokenType\n        };\n    };\n    // Place holder, will be replaced by the correct variant according to the locationTracking option at runtime.\n    /* istanbul ignore next - place holder */\n    Lexer.prototype.addToken = function (tokenVector, index, tokenToAdd) {\n        return 666;\n    };\n    Lexer.prototype.addTokenUsingPush = function (tokenVector, index, tokenToAdd) {\n        tokenVector.push(tokenToAdd);\n        return index;\n    };\n    Lexer.prototype.addTokenUsingMemberAccess = function (tokenVector, index, tokenToAdd) {\n        tokenVector[index] = tokenToAdd;\n        index++;\n        return index;\n    };\n    /* istanbul ignore next - place holder to be replaced with chosen alternative at runtime */\n    Lexer.prototype.match = function (pattern, text, offset) {\n        return null;\n    };\n    Lexer.prototype.matchWithTest = function (pattern, text, offset) {\n        var found = pattern.test(text);\n        if (found === true) {\n            return text.substring(offset, pattern.lastIndex);\n        }\n        return null;\n    };\n    Lexer.prototype.matchWithExec = function (pattern, text) {\n        var regExpArray = pattern.exec(text);\n        return regExpArray !== null ? regExpArray[0] : regExpArray;\n    };\n    Lexer.SKIPPED = \"This marks a skipped Token pattern, this means each token identified by it will\" +\n        \"be consumed and then thrown into oblivion, this can be used to for example to completely ignore whitespace.\";\n    Lexer.NA = /NOT_APPLICABLE/;\n    return Lexer;\n}());\nexports.Lexer = Lexer;\n//# sourceMappingURL=lexer_public.js.map", "\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar utils_1 = require(\"../../utils/utils\");\nvar lang_extensions_1 = require(\"../../lang/lang_extensions\");\nvar keys_1 = require(\"../grammar/keys\");\nvar gast_public_1 = require(\"../grammar/gast/gast_public\");\nvar gast_visitor_public_1 = require(\"../grammar/gast/gast_visitor_public\");\n/**\n * This nodeLocation tracking is not efficient and should only be used\n * when error recovery is enabled or the Token Vector contains virtual Tokens\n * (e.g, Python Indent/Outdent)\n * As it executes the calculation for every single terminal/nonTerminal\n * and does not rely on the fact the token vector is **sorted**\n */\nfunction setNodeLocationOnlyOffset(currNodeLocation, newLocationInfo) {\n    // First (valid) update for this cst node\n    if (isNaN(currNodeLocation.startOffset) === true) {\n        // assumption1: Token location information is either NaN or a valid number\n        // assumption2: Token location information is fully valid if it exist\n        // (both start/end offsets exist and are numbers).\n        currNodeLocation.startOffset = newLocationInfo.startOffset;\n        currNodeLocation.endOffset = newLocationInfo.endOffset;\n    }\n    // Once the startOffset has been updated with a valid number it should never receive\n    // any farther updates as the Token vector is sorted.\n    // We still have to check this this condition for every new possible location info\n    // because with error recovery enabled we may encounter invalid tokens (NaN location props)\n    else if (currNodeLocation.endOffset < newLocationInfo.endOffset === true) {\n        currNodeLocation.endOffset = newLocationInfo.endOffset;\n    }\n}\nexports.setNodeLocationOnlyOffset = setNodeLocationOnlyOffset;\n/**\n * This nodeLocation tracking is not efficient and should only be used\n * when error recovery is enabled or the Token Vector contains virtual Tokens\n * (e.g, Python Indent/Outdent)\n * As it executes the calculation for every single terminal/nonTerminal\n * and does not rely on the fact the token vector is **sorted**\n */\nfunction setNodeLocationFull(currNodeLocation, newLocationInfo) {\n    // First (valid) update for this cst node\n    if (isNaN(currNodeLocation.startOffset) === true) {\n        // assumption1: Token location information is either NaN or a valid number\n        // assumption2: Token location information is fully valid if it exist\n        // (all start/end props exist and are numbers).\n        currNodeLocation.startOffset = newLocationInfo.startOffset;\n        currNodeLocation.startColumn = newLocationInfo.startColumn;\n        currNodeLocation.startLine = newLocationInfo.startLine;\n        currNodeLocation.endOffset = newLocationInfo.endOffset;\n        currNodeLocation.endColumn = newLocationInfo.endColumn;\n        currNodeLocation.endLine = newLocationInfo.endLine;\n    }\n    // Once the start props has been updated with a valid number it should never receive\n    // any farther updates as the Token vector is sorted.\n    // We still have to check this this condition for every new possible location info\n    // because with error recovery enabled we may encounter invalid tokens (NaN location props)\n    else if (currNodeLocation.endOffset < newLocationInfo.endOffset === true) {\n        currNodeLocation.endOffset = newLocationInfo.endOffset;\n        currNodeLocation.endColumn = newLocationInfo.endColumn;\n        currNodeLocation.endLine = newLocationInfo.endLine;\n    }\n}\nexports.setNodeLocationFull = setNodeLocationFull;\nfunction addTerminalToCst(node, token, tokenTypeName) {\n    if (node.children[tokenTypeName] === undefined) {\n        node.children[tokenTypeName] = [token];\n    }\n    else {\n        node.children[tokenTypeName].push(token);\n    }\n}\nexports.addTerminalToCst = addTerminalToCst;\nfunction addNoneTerminalToCst(node, ruleName, ruleResult) {\n    if (node.children[ruleName] === undefined) {\n        node.children[ruleName] = [ruleResult];\n    }\n    else {\n        node.children[ruleName].push(ruleResult);\n    }\n}\nexports.addNoneTerminalToCst = addNoneTerminalToCst;\nvar NamedDSLMethodsCollectorVisitor = /** @class */ (function (_super) {\n    __extends(NamedDSLMethodsCollectorVisitor, _super);\n    function NamedDSLMethodsCollectorVisitor(ruleIdx) {\n        var _this = _super.call(this) || this;\n        _this.result = [];\n        _this.ruleIdx = ruleIdx;\n        return _this;\n    }\n    NamedDSLMethodsCollectorVisitor.prototype.collectNamedDSLMethod = function (node, newNodeConstructor, methodIdx) {\n        // TODO: better hack to copy what we need here...\n        if (!utils_1.isUndefined(node.name)) {\n            // copy without name so this will indeed be processed later.\n            var nameLessNode \n            /* istanbul ignore else */\n            = void 0;\n            /* istanbul ignore else */\n            if (node instanceof gast_public_1.Option ||\n                node instanceof gast_public_1.Repetition ||\n                node instanceof gast_public_1.RepetitionMandatory ||\n                node instanceof gast_public_1.Alternation) {\n                nameLessNode = new newNodeConstructor({\n                    definition: node.definition,\n                    idx: node.idx\n                });\n            }\n            else if (node instanceof gast_public_1.RepetitionMandatoryWithSeparator ||\n                node instanceof gast_public_1.RepetitionWithSeparator) {\n                nameLessNode = new newNodeConstructor({\n                    definition: node.definition,\n                    idx: node.idx,\n                    separator: node.separator\n                });\n            }\n            else {\n                throw Error(\"non exhaustive match\");\n            }\n            var def = [nameLessNode];\n            var key = keys_1.getKeyForAutomaticLookahead(this.ruleIdx, methodIdx, node.idx);\n            this.result.push({ def: def, key: key, name: node.name, orgProd: node });\n        }\n    };\n    NamedDSLMethodsCollectorVisitor.prototype.visitOption = function (node) {\n        this.collectNamedDSLMethod(node, gast_public_1.Option, keys_1.OPTION_IDX);\n    };\n    NamedDSLMethodsCollectorVisitor.prototype.visitRepetition = function (node) {\n        this.collectNamedDSLMethod(node, gast_public_1.Repetition, keys_1.MANY_IDX);\n    };\n    NamedDSLMethodsCollectorVisitor.prototype.visitRepetitionMandatory = function (node) {\n        this.collectNamedDSLMethod(node, gast_public_1.RepetitionMandatory, keys_1.AT_LEAST_ONE_IDX);\n    };\n    NamedDSLMethodsCollectorVisitor.prototype.visitRepetitionMandatoryWithSeparator = function (node) {\n        this.collectNamedDSLMethod(node, gast_public_1.RepetitionMandatoryWithSeparator, keys_1.AT_LEAST_ONE_SEP_IDX);\n    };\n    NamedDSLMethodsCollectorVisitor.prototype.visitRepetitionWithSeparator = function (node) {\n        this.collectNamedDSLMethod(node, gast_public_1.RepetitionWithSeparator, keys_1.MANY_SEP_IDX);\n    };\n    NamedDSLMethodsCollectorVisitor.prototype.visitAlternation = function (node) {\n        var _this = this;\n        this.collectNamedDSLMethod(node, gast_public_1.Alternation, keys_1.OR_IDX);\n        var hasMoreThanOneAlternative = node.definition.length > 1;\n        utils_1.forEach(node.definition, function (currFlatAlt, altIdx) {\n            if (!utils_1.isUndefined(currFlatAlt.name)) {\n                var def = currFlatAlt.definition;\n                if (hasMoreThanOneAlternative) {\n                    def = [new gast_public_1.Option({ definition: currFlatAlt.definition })];\n                }\n                else {\n                    // mandatory\n                    def = currFlatAlt.definition;\n                }\n                var key = keys_1.getKeyForAltIndex(_this.ruleIdx, keys_1.OR_IDX, node.idx, altIdx);\n                _this.result.push({\n                    def: def,\n                    key: key,\n                    name: currFlatAlt.name,\n                    orgProd: currFlatAlt\n                });\n            }\n        });\n    };\n    return NamedDSLMethodsCollectorVisitor;\n}(gast_visitor_public_1.GAstVisitor));\nexports.NamedDSLMethodsCollectorVisitor = NamedDSLMethodsCollectorVisitor;\nfunction analyzeCst(topRules, fullToShortName) {\n    var result = {\n        dictDef: new lang_extensions_1.HashTable(),\n        allRuleNames: []\n    };\n    utils_1.forEach(topRules, function (currTopRule) {\n        var currTopRuleShortName = fullToShortName.get(currTopRule.name);\n        result.allRuleNames.push(currTopRule.name);\n        var namedCollectorVisitor = new NamedDSLMethodsCollectorVisitor(currTopRuleShortName);\n        currTopRule.accept(namedCollectorVisitor);\n        utils_1.forEach(namedCollectorVisitor.result, function (_a) {\n            var def = _a.def, key = _a.key, name = _a.name;\n            result.allRuleNames.push(currTopRule.name + name);\n        });\n    });\n    return result;\n}\nexports.analyzeCst = analyzeCst;\n//# sourceMappingURL=cst.js.map", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// needs a separate module as this is required inside chevrotain productive code\n// and also in the entry point for webpack(api.ts).\n// A separate file avoids cyclic dependencies and webpack errors.\nexports.VERSION = \"4.7.0\";\n//# sourceMappingURL=version.js.map", "import { IToken, CstNode, TokenType, } from 'chevrotain';\nexport var getAsTypedTuple = function () {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    return args;\n};\n// exported for convenience\nexport { IToken, CstNode, TokenType };\n", "/*\nCopyright ©2012–2018 Ruben Verborgh\nWith modifications Copyright ©2018 Stardog Union\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\nvar escapeSequence = /\\\\u([a-fA-F0-9]{4})|\\\\U([a-fA-F0-9]{8})|\\\\[uU]|\\\\(.)/g;\nvar escapeReplacements = {\n    '\\\\': '\\\\',\n    \"'\": \"'\",\n    '\"': '\"',\n    n: '\\n',\n    r: '\\r',\n    t: '\\t',\n    f: '\\f',\n    b: '\\b',\n    _: '_',\n    '~': '~',\n    '.': '.',\n    '-': '-',\n    '!': '!',\n    $: '$',\n    '&': '&',\n    '(': '(',\n    ')': ')',\n    '*': '*',\n    '+': '+',\n    ',': ',',\n    ';': ';',\n    '=': '=',\n    '/': '/',\n    '?': '?',\n    '#': '#',\n    '@': '@',\n    '%': '%',\n};\nexport var unescapedStringLiteralQuote = /^\"([^\"\\\\\\r\\n]+)\"/; // non-empty string without escape sequences\nexport var unescapedStringLiteralSingleQuote = /^'([^'\\\\\\r\\n]+)'/;\nexport var stringLiteralQuote = /^\"((?:[^\"\\\\\\r\\n]|\\\\.)*)\"(?=[^\"])/;\nexport var stringLiteralSingleQuote = /^'((?:[^'\\\\\\r\\n]|\\\\.)*)'(?=[^'])/;\nexport var stringLiteralLongQuote = /^\"\"\"([^\"\\\\]*(?:(?:\\\\.|\"(?!\"\"))[^\"\\\\]*)*)\"\"\"/;\nexport var stringLiteralLongSingleQuote = /^'''([^'\\\\]*(?:(?:\\\\.|'(?!''))[^'\\\\]*)*)'''/;\nexport var illegalIriChars = /[\\x00-\\x20<>\\\\\"\\{\\}\\|\\^\\`]/;\nexport var escapedIri = /^<((?:[^ <>{}\\\\]|\\\\[uU])+)>[ \\t]*/;\nexport var unescapedIri = /^<([^\\x00-\\x20<>\\\\\"\\{\\}\\|\\^\\`]*)>[ \\t]*/;\n// Handle special unescaping needs related to the IRIREF rule and others.\nexport var unescape = function (item) {\n    try {\n        return item.replace(escapeSequence, function (_, unicode4, unicode8, escapedChar) {\n            if (unicode4) {\n                return String.fromCharCode(parseInt(unicode4, 16));\n            }\n            else if (unicode8) {\n                var charCode = parseInt(unicode8, 16);\n                if (charCode <= 0xffff) {\n                    return String.fromCharCode(charCode);\n                }\n                return String.fromCharCode(0xd800 + (charCode -= 0x10000) / 0x400, 0xdc00 + (charCode & 0x3ff));\n            }\n            else {\n                var replacement = escapeReplacements[escapedChar];\n                if (!replacement) {\n                    throw new Error();\n                }\n                return replacement;\n            }\n        });\n    }\n    catch (error) {\n        return null;\n    }\n};\n", "var sparqlTokenMap = require('../sparql/tokens').sparqlTokenMap;\nimport { createToken } from 'chevrotain';\nimport { regex } from '../helpers/regex';\nimport { EXPONENT, ECHAR, PLX, HEX, PN_CHARS_BASE, PN_CHARS_U, PN_CHARS, PN_PREFIX, PN_LOCAL, PN_LOCAL_ESC, } from '../helpers/matchers';\nimport { unescape, stringLiteralLongSingleQuote, stringLiteralLongQuote, unescapedStringLiteralQuote, stringLiteralQuote, unescapedStringLiteralSingleQuote, stringLiteralSingleQuote, unescapedIri, escapedIri, illegalIriChars, } from '../helpers/unescape';\nvar unicodeRegexp = /[\\0-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/;\nexport var turtleTokenMap = {\n    Comment: createToken({\n        name: 'Comment',\n        pattern: /#[^\\n]*/,\n        group: 'comments',\n    }),\n    LBracket: sparqlTokenMap.LBracket,\n    RBracket: sparqlTokenMap.RBracket,\n    LCurly: sparqlTokenMap.LCurly,\n    RCurly: sparqlTokenMap.RCurly,\n    LParen: sparqlTokenMap.LParen,\n    RParen: sparqlTokenMap.RParen,\n    Period: sparqlTokenMap.Period,\n    WhiteSpace: sparqlTokenMap.WhiteSpace,\n    // 'true' and 'false' are case sensitive in Turtle but not in SPARQL\n    TRUE: createToken({\n        name: 'TRUE',\n        pattern: /true/,\n    }),\n    FALSE: createToken({\n        name: 'FALSE',\n        pattern: /false/,\n    }),\n    DoubleCaret: sparqlTokenMap.DoubleCaret,\n    LEmbed: sparqlTokenMap.LEmbed,\n    REmbed: sparqlTokenMap.REmbed,\n    Comma: sparqlTokenMap.Comma,\n    Semicolon: sparqlTokenMap.Semicolon,\n    A: sparqlTokenMap.A,\n    PREFIX: sparqlTokenMap.PREFIX,\n    BASE: sparqlTokenMap.BASE,\n    PNAME_NS: sparqlTokenMap.PNAME_NS,\n    PNAME_LN: sparqlTokenMap.PNAME_LN,\n    BLANK_NODE_LABEL: sparqlTokenMap.BLANK_NODE_LABEL,\n    TTL_BASE: createToken({ name: 'TTL_BASE', pattern: /@base/ }),\n    TTL_PREFIX: createToken({ name: 'TTL_PREFIX', pattern: /@prefix/ }),\n    LANGTAG: sparqlTokenMap.LANGTAG,\n    INTEGER: createToken({\n        name: 'INTEGER',\n        pattern: regex.and(regex.option(/[+-]/), /\\d+/),\n    }),\n    DECIMAL: createToken({\n        name: 'DECIMAL',\n        pattern: regex.and(regex.option(/[+-]/), /(\\d*\\.\\d+)/),\n    }),\n    DOUBLE: createToken({\n        name: 'DOUBLE',\n        pattern: regex.and(regex.option(/[+-]/), regex.or(regex.and(/\\d+\\.\\d*/, EXPONENT), regex.and(/\\.\\d+/, EXPONENT), regex.and(/\\d+/, EXPONENT))),\n    }),\n    EXPONENT: createToken({ name: 'EXPONENT', pattern: EXPONENT }),\n    ECHAR: createToken({ name: 'ECHAR', pattern: ECHAR }),\n    ANON: sparqlTokenMap.ANON,\n    PLX: createToken({ name: 'PLX', pattern: PLX }),\n    PERCENT: sparqlTokenMap.PERCENT,\n    HEX: createToken({ name: 'HEX', pattern: HEX }),\n    STRING_LITERAL_LONG_SINGLE_QUOTE: createToken({\n        name: 'STRING_LITERAL_LONG_SINGLE_QUOTE',\n        pattern: function (text, startOffset) {\n            if (startOffset === void 0) { startOffset = 0; }\n            var match = stringLiteralLongSingleQuote.exec(text.slice(startOffset));\n            if (!match || unescape(match[1]) === null) {\n                // Bad characters\n                return null;\n            }\n            return match;\n        },\n        line_breaks: true,\n    }),\n    STRING_LITERAL_LONG_QUOTE: createToken({\n        name: 'STRING_LITERAL_LONG_QUOTE',\n        pattern: function (text, startOffset) {\n            if (startOffset === void 0) { startOffset = 0; }\n            var match = stringLiteralLongQuote.exec(text.slice(startOffset));\n            if (!match || unescape(match[1]) === null) {\n                // Bad characters\n                return null;\n            }\n            return match;\n        },\n        line_breaks: true,\n    }),\n    STRING_LITERAL_QUOTE: createToken({\n        name: 'STRING_LITERAL_QUOTE',\n        pattern: function (text, startOffset) {\n            if (startOffset === void 0) { startOffset = 0; }\n            var textToMatch = text.slice(startOffset);\n            var match = unescapedStringLiteralQuote.exec(textToMatch);\n            if (match) {\n                return match;\n            }\n            match = stringLiteralQuote.exec(textToMatch);\n            if (!match) {\n                return null;\n            }\n            if (unescape(match[1]) === null) {\n                // Bad characters\n                return null;\n            }\n            return match;\n        },\n        line_breaks: false,\n    }),\n    STRING_LITERAL_SINGLE_QUOTE: createToken({\n        name: 'STRING_LITERAL_SINGLE_QUOTE',\n        pattern: function (text, startOffset) {\n            if (startOffset === void 0) { startOffset = 0; }\n            var textToMatch = text.slice(startOffset);\n            var match = unescapedStringLiteralSingleQuote.exec(textToMatch);\n            if (match) {\n                return match;\n            }\n            match = stringLiteralSingleQuote.exec(textToMatch);\n            if (!match) {\n                return null;\n            }\n            if (unescape(match[1]) === null) {\n                // Bad characters\n                return null;\n            }\n            return match;\n        },\n        line_breaks: false,\n    }),\n    UCHAR: createToken({\n        name: 'UCHAR',\n        pattern: function (text, startOffset) {\n            if (startOffset === void 0) { startOffset = 0; }\n            return unicodeRegexp.exec(text.slice(startOffset));\n        },\n        line_breaks: false,\n    }),\n    IRIREF: createToken({\n        name: 'IRIREF',\n        pattern: function (text, startOffset) {\n            if (startOffset === void 0) { startOffset = 0; }\n            var textToMatch = text.slice(startOffset);\n            var match = unescapedIri.exec(textToMatch);\n            if (match) {\n                return match;\n            }\n            match = escapedIri.exec(textToMatch);\n            if (!match) {\n                return null;\n            }\n            var value = unescape(match[1]);\n            if (value === null || illegalIriChars.test(value)) {\n                return null;\n            }\n            return match;\n        },\n        line_breaks: false,\n    }),\n    PN_CHARS_BASE: createToken({ name: 'PN_CHARS_BASE', pattern: PN_CHARS_BASE }),\n    PN_CHARS_U: createToken({ name: 'PN_CHARS_U', pattern: PN_CHARS_U }),\n    PN_CHARS: createToken({ name: 'PN_CHARS', pattern: PN_CHARS }),\n    PN_PREFIX: createToken({ name: 'PN_PREFIX', pattern: PN_PREFIX }),\n    PN_LOCAL: createToken({ name: 'PN_LOCAL', pattern: PN_LOCAL }),\n    PN_LOCAL_ESC: createToken({ name: 'PN_LOCAL_ESC', pattern: PN_LOCAL_ESC }),\n    UNKNOWN: sparqlTokenMap.UNKNOWN,\n};\nexport var turtleTokenTypes = [\n    turtleTokenMap.Comment,\n    sparqlTokenMap.ANON,\n    sparqlTokenMap.LBracket,\n    sparqlTokenMap.RBracket,\n    sparqlTokenMap.LCurly,\n    sparqlTokenMap.RCurly,\n    sparqlTokenMap.LParen,\n    sparqlTokenMap.RParen,\n    sparqlTokenMap.WhiteSpace,\n    turtleTokenMap.TRUE,\n    turtleTokenMap.FALSE,\n    sparqlTokenMap.Comma,\n    sparqlTokenMap.Semicolon,\n    sparqlTokenMap.PNAME_NS,\n    sparqlTokenMap.A,\n    sparqlTokenMap.PREFIX,\n    sparqlTokenMap.BASE,\n    sparqlTokenMap.PNAME_LN,\n    sparqlTokenMap.BLANK_NODE_LABEL,\n    turtleTokenMap.TTL_BASE,\n    turtleTokenMap.TTL_PREFIX,\n    sparqlTokenMap.LANGTAG,\n    turtleTokenMap.DOUBLE,\n    turtleTokenMap.DECIMAL,\n    sparqlTokenMap.Period,\n    sparqlTokenMap.DoubleCaret,\n    turtleTokenMap.LEmbed,\n    turtleTokenMap.REmbed,\n    turtleTokenMap.IRIREF,\n    turtleTokenMap.STRING_LITERAL_LONG_SINGLE_QUOTE,\n    turtleTokenMap.STRING_LITERAL_LONG_QUOTE,\n    turtleTokenMap.STRING_LITERAL_QUOTE,\n    turtleTokenMap.STRING_LITERAL_SINGLE_QUOTE,\n    turtleTokenMap.INTEGER,\n    turtleTokenMap.EXPONENT,\n    turtleTokenMap.PLX,\n    sparqlTokenMap.PERCENT,\n    turtleTokenMap.HEX,\n    turtleTokenMap.PN_CHARS_BASE,\n    turtleTokenMap.PN_CHARS_U,\n    turtleTokenMap.PN_CHARS,\n    turtleTokenMap.PN_PREFIX,\n    turtleTokenMap.PN_LOCAL,\n    turtleTokenMap.PN_LOCAL_ESC,\n    turtleTokenMap.ECHAR,\n    turtleTokenMap.UCHAR,\n    turtleTokenMap.UNKNOWN,\n];\n", ";(function(root, factory) {\n    // istanbul ignore next\n    if (typeof define === \"function\" && define.amd) {\n        // istanbul ignore next\n        define([], factory)\n    } else if (typeof module === \"object\" && module.exports) {\n        module.exports = factory()\n    } else {\n        // istanbul ignore next\n        root.regexpToAst = factory()\n    }\n})(\n    typeof self !== \"undefined\"\n        ? // istanbul ignore next\n          self\n        : this,\n    function() {\n        // references\n        // https://hackernoon.com/the-madness-of-parsing-real-world-javascript-regexps-d9ee336df983\n        // https://www.ecma-international.org/ecma-262/8.0/index.html#prod-Pattern\n        function RegExpParser() {}\n\n        RegExpParser.prototype.saveState = function() {\n            return {\n                idx: this.idx,\n                input: this.input,\n                groupIdx: this.groupIdx\n            }\n        }\n\n        RegExpParser.prototype.restoreState = function(newState) {\n            this.idx = newState.idx\n            this.input = newState.input\n            this.groupIdx = newState.groupIdx\n        }\n\n        RegExpParser.prototype.pattern = function(input) {\n            // parser state\n            this.idx = 0\n            this.input = input\n            this.groupIdx = 0\n\n            this.consumeChar(\"/\")\n            var value = this.disjunction()\n            this.consumeChar(\"/\")\n\n            var flags = {\n                type: \"Flags\",\n                global: false,\n                ignoreCase: false,\n                multiLine: false,\n                unicode: false,\n                sticky: false\n            }\n\n            while (this.isRegExpFlag()) {\n                switch (this.popChar()) {\n                    case \"g\":\n                        addFlag(flags, \"global\")\n                        break\n                    case \"i\":\n                        addFlag(flags, \"ignoreCase\")\n                        break\n                    case \"m\":\n                        addFlag(flags, \"multiLine\")\n                        break\n                    case \"u\":\n                        addFlag(flags, \"unicode\")\n                        break\n                    case \"y\":\n                        addFlag(flags, \"sticky\")\n                        break\n                }\n            }\n\n            if (this.idx !== this.input.length) {\n                throw Error(\n                    \"Redundant input: \" + this.input.substring(this.idx)\n                )\n            }\n            return { type: \"Pattern\", flags: flags, value: value }\n        }\n\n        RegExpParser.prototype.disjunction = function() {\n            var alts = []\n            alts.push(this.alternative())\n\n            while (this.peekChar() === \"|\") {\n                this.consumeChar(\"|\")\n                alts.push(this.alternative())\n            }\n\n            return { type: \"Disjunction\", value: alts }\n        }\n\n        RegExpParser.prototype.alternative = function() {\n            var terms = []\n\n            while (this.isTerm()) {\n                terms.push(this.term())\n            }\n\n            return { type: \"Alternative\", value: terms }\n        }\n\n        RegExpParser.prototype.term = function() {\n            if (this.isAssertion()) {\n                return this.assertion()\n            } else {\n                return this.atom()\n            }\n        }\n\n        RegExpParser.prototype.assertion = function() {\n            switch (this.popChar()) {\n                case \"^\":\n                    return { type: \"StartAnchor\" }\n                case \"$\":\n                    return { type: \"EndAnchor\" }\n                // '\\b' or '\\B'\n                case \"\\\\\":\n                    switch (this.popChar()) {\n                        case \"b\":\n                            return { type: \"WordBoundary\" }\n                        case \"B\":\n                            return { type: \"NonWordBoundary\" }\n                    }\n                    // istanbul ignore next\n                    throw Error(\"Invalid Assertion Escape\")\n                // '(?=' or '(?!'\n                case \"(\":\n                    this.consumeChar(\"?\")\n\n                    var type\n                    switch (this.popChar()) {\n                        case \"=\":\n                            type = \"Lookahead\"\n                            break\n                        case \"!\":\n                            type = \"NegativeLookahead\"\n                            break\n                    }\n                    ASSERT_EXISTS(type)\n\n                    var disjunction = this.disjunction()\n\n                    this.consumeChar(\")\")\n\n                    return { type: type, value: disjunction }\n            }\n            // istanbul ignore next\n            ASSERT_NEVER_REACH_HERE()\n        }\n\n        RegExpParser.prototype.quantifier = function(isBacktracking) {\n            var range\n            switch (this.popChar()) {\n                case \"*\":\n                    range = {\n                        atLeast: 0,\n                        atMost: Infinity\n                    }\n                    break\n                case \"+\":\n                    range = {\n                        atLeast: 1,\n                        atMost: Infinity\n                    }\n                    break\n                case \"?\":\n                    range = {\n                        atLeast: 0,\n                        atMost: 1\n                    }\n                    break\n                case \"{\":\n                    var atLeast = this.integerIncludingZero()\n                    switch (this.popChar()) {\n                        case \"}\":\n                            range = {\n                                atLeast: atLeast,\n                                atMost: atLeast\n                            }\n                            break\n                        case \",\":\n                            var atMost\n                            if (this.isDigit()) {\n                                atMost = this.integerIncludingZero()\n                                range = {\n                                    atLeast: atLeast,\n                                    atMost: atMost\n                                }\n                            } else {\n                                range = {\n                                    atLeast: atLeast,\n                                    atMost: Infinity\n                                }\n                            }\n                            this.consumeChar(\"}\")\n                            break\n                    }\n                    // throwing exceptions from \"ASSERT_EXISTS\" during backtracking\n                    // causes severe performance degradations\n                    if (isBacktracking === true && range === undefined) {\n                        return undefined\n                    }\n                    ASSERT_EXISTS(range)\n                    break\n            }\n\n            // throwing exceptions from \"ASSERT_EXISTS\" during backtracking\n            // causes severe performance degradations\n            if (isBacktracking === true && range === undefined) {\n                return undefined\n            }\n\n            ASSERT_EXISTS(range)\n\n            if (this.peekChar(0) === \"?\") {\n                this.consumeChar(\"?\")\n                range.greedy = false\n            } else {\n                range.greedy = true\n            }\n\n            range.type = \"Quantifier\"\n            return range\n        }\n\n        RegExpParser.prototype.atom = function() {\n            var atom\n            switch (this.peekChar()) {\n                case \".\":\n                    atom = this.dotAll()\n                    break\n                case \"\\\\\":\n                    atom = this.atomEscape()\n                    break\n                case \"[\":\n                    atom = this.characterClass()\n                    break\n                case \"(\":\n                    atom = this.group()\n                    break\n            }\n\n            if (atom === undefined && this.isPatternCharacter()) {\n                atom = this.patternCharacter()\n            }\n\n            ASSERT_EXISTS(atom)\n\n            if (this.isQuantifier()) {\n                atom.quantifier = this.quantifier()\n            }\n\n            return atom\n        }\n\n        RegExpParser.prototype.dotAll = function() {\n            this.consumeChar(\".\")\n            return {\n                type: \"Set\",\n                complement: true,\n                value: [cc(\"\\n\"), cc(\"\\r\"), cc(\"\\u2028\"), cc(\"\\u2029\")]\n            }\n        }\n\n        RegExpParser.prototype.atomEscape = function() {\n            this.consumeChar(\"\\\\\")\n\n            switch (this.peekChar()) {\n                case \"1\":\n                case \"2\":\n                case \"3\":\n                case \"4\":\n                case \"5\":\n                case \"6\":\n                case \"7\":\n                case \"8\":\n                case \"9\":\n                    return this.decimalEscapeAtom()\n                case \"d\":\n                case \"D\":\n                case \"s\":\n                case \"S\":\n                case \"w\":\n                case \"W\":\n                    return this.characterClassEscape()\n                case \"f\":\n                case \"n\":\n                case \"r\":\n                case \"t\":\n                case \"v\":\n                    return this.controlEscapeAtom()\n                case \"c\":\n                    return this.controlLetterEscapeAtom()\n                case \"0\":\n                    return this.nulCharacterAtom()\n                case \"x\":\n                    return this.hexEscapeSequenceAtom()\n                case \"u\":\n                    return this.regExpUnicodeEscapeSequenceAtom()\n                default:\n                    return this.identityEscapeAtom()\n            }\n        }\n\n        RegExpParser.prototype.decimalEscapeAtom = function() {\n            var value = this.positiveInteger()\n\n            return { type: \"GroupBackReference\", value: value }\n        }\n\n        RegExpParser.prototype.characterClassEscape = function() {\n            var set\n            var complement = false\n            switch (this.popChar()) {\n                case \"d\":\n                    set = digitsCharCodes\n                    break\n                case \"D\":\n                    set = digitsCharCodes\n                    complement = true\n                    break\n                case \"s\":\n                    set = whitespaceCodes\n                    break\n                case \"S\":\n                    set = whitespaceCodes\n                    complement = true\n                    break\n                case \"w\":\n                    set = wordCharCodes\n                    break\n                case \"W\":\n                    set = wordCharCodes\n                    complement = true\n                    break\n            }\n\n            ASSERT_EXISTS(set)\n\n            return { type: \"Set\", value: set, complement: complement }\n        }\n\n        RegExpParser.prototype.controlEscapeAtom = function() {\n            var escapeCode\n            switch (this.popChar()) {\n                case \"f\":\n                    escapeCode = cc(\"\\f\")\n                    break\n                case \"n\":\n                    escapeCode = cc(\"\\n\")\n                    break\n                case \"r\":\n                    escapeCode = cc(\"\\r\")\n                    break\n                case \"t\":\n                    escapeCode = cc(\"\\t\")\n                    break\n                case \"v\":\n                    escapeCode = cc(\"\\v\")\n                    break\n            }\n            ASSERT_EXISTS(escapeCode)\n\n            return { type: \"Character\", value: escapeCode }\n        }\n\n        RegExpParser.prototype.controlLetterEscapeAtom = function() {\n            this.consumeChar(\"c\")\n            var letter = this.popChar()\n            if (/[a-zA-Z]/.test(letter) === false) {\n                throw Error(\"Invalid \")\n            }\n\n            var letterCode = letter.toUpperCase().charCodeAt(0) - 64\n            return { type: \"Character\", value: letterCode }\n        }\n\n        RegExpParser.prototype.nulCharacterAtom = function() {\n            // TODO implement '[lookahead ∉ DecimalDigit]'\n            // TODO: for the deprecated octal escape sequence\n            this.consumeChar(\"0\")\n            return { type: \"Character\", value: cc(\"\\0\") }\n        }\n\n        RegExpParser.prototype.hexEscapeSequenceAtom = function() {\n            this.consumeChar(\"x\")\n            return this.parseHexDigits(2)\n        }\n\n        RegExpParser.prototype.regExpUnicodeEscapeSequenceAtom = function() {\n            this.consumeChar(\"u\")\n            return this.parseHexDigits(4)\n        }\n\n        RegExpParser.prototype.identityEscapeAtom = function() {\n            // TODO: implement \"SourceCharacter but not UnicodeIDContinue\"\n            // // http://unicode.org/reports/tr31/#Specific_Character_Adjustments\n            var escapedChar = this.popChar()\n            return { type: \"Character\", value: cc(escapedChar) }\n        }\n\n        RegExpParser.prototype.classPatternCharacterAtom = function() {\n            switch (this.peekChar()) {\n                // istanbul ignore next\n                case \"\\n\":\n                // istanbul ignore next\n                case \"\\r\":\n                // istanbul ignore next\n                case \"\\u2028\":\n                // istanbul ignore next\n                case \"\\u2029\":\n                // istanbul ignore next\n                case \"\\\\\":\n                // istanbul ignore next\n                case \"]\":\n                    throw Error(\"TBD\")\n                default:\n                    var nextChar = this.popChar()\n                    return { type: \"Character\", value: cc(nextChar) }\n            }\n        }\n\n        RegExpParser.prototype.characterClass = function() {\n            var set = []\n            var complement = false\n            this.consumeChar(\"[\")\n            if (this.peekChar(0) === \"^\") {\n                this.consumeChar(\"^\")\n                complement = true\n            }\n\n            while (this.isClassAtom()) {\n                var from = this.classAtom()\n                var isFromSingleChar = from.type === \"Character\"\n                if (isFromSingleChar && this.isRangeDash()) {\n                    this.consumeChar(\"-\")\n                    var to = this.classAtom()\n                    var isToSingleChar = to.type === \"Character\"\n\n                    // a range can only be used when both sides are single characters\n                    if (isToSingleChar) {\n                        if (to.value < from.value) {\n                            throw Error(\"Range out of order in character class\")\n                        }\n                        set.push({ from: from.value, to: to.value })\n                    } else {\n                        // literal dash\n                        insertToSet(from.value, set)\n                        set.push(cc(\"-\"))\n                        insertToSet(to.value, set)\n                    }\n                } else {\n                    insertToSet(from.value, set)\n                }\n            }\n\n            this.consumeChar(\"]\")\n\n            return { type: \"Set\", complement: complement, value: set }\n        }\n\n        RegExpParser.prototype.classAtom = function() {\n            switch (this.peekChar()) {\n                // istanbul ignore next\n                case \"]\":\n                // istanbul ignore next\n                case \"\\n\":\n                // istanbul ignore next\n                case \"\\r\":\n                // istanbul ignore next\n                case \"\\u2028\":\n                // istanbul ignore next\n                case \"\\u2029\":\n                    throw Error(\"TBD\")\n                case \"\\\\\":\n                    return this.classEscape()\n                default:\n                    return this.classPatternCharacterAtom()\n            }\n        }\n\n        RegExpParser.prototype.classEscape = function() {\n            this.consumeChar(\"\\\\\")\n            switch (this.peekChar()) {\n                // Matches a backspace.\n                // (Not to be confused with \\b word boundary outside characterClass)\n                case \"b\":\n                    this.consumeChar(\"b\")\n                    return { type: \"Character\", value: cc(\"\\u0008\") }\n                case \"d\":\n                case \"D\":\n                case \"s\":\n                case \"S\":\n                case \"w\":\n                case \"W\":\n                    return this.characterClassEscape()\n                case \"f\":\n                case \"n\":\n                case \"r\":\n                case \"t\":\n                case \"v\":\n                    return this.controlEscapeAtom()\n                case \"c\":\n                    return this.controlLetterEscapeAtom()\n                case \"0\":\n                    return this.nulCharacterAtom()\n                case \"x\":\n                    return this.hexEscapeSequenceAtom()\n                case \"u\":\n                    return this.regExpUnicodeEscapeSequenceAtom()\n                default:\n                    return this.identityEscapeAtom()\n            }\n        }\n\n        RegExpParser.prototype.group = function() {\n            var capturing = true\n            this.consumeChar(\"(\")\n            switch (this.peekChar(0)) {\n                case \"?\":\n                    this.consumeChar(\"?\")\n                    this.consumeChar(\":\")\n                    capturing = false\n                    break\n                default:\n                    this.groupIdx++\n                    break\n            }\n            var value = this.disjunction()\n            this.consumeChar(\")\")\n\n            var groupAst = {\n                type: \"Group\",\n                capturing: capturing,\n                value: value\n            }\n\n            if (capturing) {\n                groupAst.idx = this.groupIdx\n            }\n\n            return groupAst\n        }\n\n        RegExpParser.prototype.positiveInteger = function() {\n            var number = this.popChar()\n\n            // istanbul ignore next - can't ever get here due to previous lookahead checks\n            // still implementing this error checking in case this ever changes.\n            if (decimalPatternNoZero.test(number) === false) {\n                throw Error(\"Expecting a positive integer\")\n            }\n\n            while (decimalPattern.test(this.peekChar(0))) {\n                number += this.popChar()\n            }\n\n            return parseInt(number, 10)\n        }\n\n        RegExpParser.prototype.integerIncludingZero = function() {\n            var number = this.popChar()\n            if (decimalPattern.test(number) === false) {\n                throw Error(\"Expecting an integer\")\n            }\n\n            while (decimalPattern.test(this.peekChar(0))) {\n                number += this.popChar()\n            }\n\n            return parseInt(number, 10)\n        }\n\n        RegExpParser.prototype.patternCharacter = function() {\n            var nextChar = this.popChar()\n            switch (nextChar) {\n                // istanbul ignore next\n                case \"\\n\":\n                // istanbul ignore next\n                case \"\\r\":\n                // istanbul ignore next\n                case \"\\u2028\":\n                // istanbul ignore next\n                case \"\\u2029\":\n                // istanbul ignore next\n                case \"^\":\n                // istanbul ignore next\n                case \"$\":\n                // istanbul ignore next\n                case \"\\\\\":\n                // istanbul ignore next\n                case \".\":\n                // istanbul ignore next\n                case \"*\":\n                // istanbul ignore next\n                case \"+\":\n                // istanbul ignore next\n                case \"?\":\n                // istanbul ignore next\n                case \"(\":\n                // istanbul ignore next\n                case \")\":\n                // istanbul ignore next\n                case \"[\":\n                // istanbul ignore next\n                case \"|\":\n                    // istanbul ignore next\n                    throw Error(\"TBD\")\n                default:\n                    return { type: \"Character\", value: cc(nextChar) }\n            }\n        }\n        RegExpParser.prototype.isRegExpFlag = function() {\n            switch (this.peekChar(0)) {\n                case \"g\":\n                case \"i\":\n                case \"m\":\n                case \"u\":\n                case \"y\":\n                    return true\n                default:\n                    return false\n            }\n        }\n\n        RegExpParser.prototype.isRangeDash = function() {\n            return this.peekChar() === \"-\" && this.isClassAtom(1)\n        }\n\n        RegExpParser.prototype.isDigit = function() {\n            return decimalPattern.test(this.peekChar(0))\n        }\n\n        RegExpParser.prototype.isClassAtom = function(howMuch) {\n            if (howMuch === undefined) {\n                howMuch = 0\n            }\n\n            switch (this.peekChar(howMuch)) {\n                case \"]\":\n                case \"\\n\":\n                case \"\\r\":\n                case \"\\u2028\":\n                case \"\\u2029\":\n                    return false\n                default:\n                    return true\n            }\n        }\n\n        RegExpParser.prototype.isTerm = function() {\n            return this.isAtom() || this.isAssertion()\n        }\n\n        RegExpParser.prototype.isAtom = function() {\n            if (this.isPatternCharacter()) {\n                return true\n            }\n\n            switch (this.peekChar(0)) {\n                case \".\":\n                case \"\\\\\": // atomEscape\n                case \"[\": // characterClass\n                // TODO: isAtom must be called before isAssertion - disambiguate\n                case \"(\": // group\n                    return true\n                default:\n                    return false\n            }\n        }\n\n        RegExpParser.prototype.isAssertion = function() {\n            switch (this.peekChar(0)) {\n                case \"^\":\n                case \"$\":\n                    return true\n                // '\\b' or '\\B'\n                case \"\\\\\":\n                    switch (this.peekChar(1)) {\n                        case \"b\":\n                        case \"B\":\n                            return true\n                        default:\n                            return false\n                    }\n                // '(?=' or '(?!'\n                case \"(\":\n                    return (\n                        this.peekChar(1) === \"?\" &&\n                        (this.peekChar(2) === \"=\" || this.peekChar(2) === \"!\")\n                    )\n                default:\n                    return false\n            }\n        }\n\n        RegExpParser.prototype.isQuantifier = function() {\n            var prevState = this.saveState()\n            try {\n                return this.quantifier(true) !== undefined\n            } catch (e) {\n                return false\n            } finally {\n                this.restoreState(prevState)\n            }\n        }\n\n        RegExpParser.prototype.isPatternCharacter = function() {\n            switch (this.peekChar()) {\n                case \"^\":\n                case \"$\":\n                case \"\\\\\":\n                case \".\":\n                case \"*\":\n                case \"+\":\n                case \"?\":\n                case \"(\":\n                case \")\":\n                case \"[\":\n                case \"|\":\n                case \"/\":\n                case \"\\n\":\n                case \"\\r\":\n                case \"\\u2028\":\n                case \"\\u2029\":\n                    return false\n                default:\n                    return true\n            }\n        }\n\n        RegExpParser.prototype.parseHexDigits = function(howMany) {\n            var hexString = \"\"\n            for (var i = 0; i < howMany; i++) {\n                var hexChar = this.popChar()\n                if (hexDigitPattern.test(hexChar) === false) {\n                    throw Error(\"Expecting a HexDecimal digits\")\n                }\n                hexString += hexChar\n            }\n            var charCode = parseInt(hexString, 16)\n            return { type: \"Character\", value: charCode }\n        }\n\n        RegExpParser.prototype.peekChar = function(howMuch) {\n            if (howMuch === undefined) {\n                howMuch = 0\n            }\n            return this.input[this.idx + howMuch]\n        }\n\n        RegExpParser.prototype.popChar = function() {\n            var nextChar = this.peekChar(0)\n            this.consumeChar()\n            return nextChar\n        }\n\n        RegExpParser.prototype.consumeChar = function(char) {\n            if (char !== undefined && this.input[this.idx] !== char) {\n                throw Error(\n                    \"Expected: '\" +\n                        char +\n                        \"' but found: '\" +\n                        this.input[this.idx] +\n                        \"' at offset: \" +\n                        this.idx\n                )\n            }\n\n            if (this.idx >= this.input.length) {\n                throw Error(\"Unexpected end of input\")\n            }\n            this.idx++\n        }\n\n        // consts and utilities\n        var hexDigitPattern = /[0-9a-fA-F]/\n        var decimalPattern = /[0-9]/\n        var decimalPatternNoZero = /[1-9]/\n\n        function cc(char) {\n            return char.charCodeAt(0)\n        }\n\n        function insertToSet(item, set) {\n            if (item.length !== undefined) {\n                item.forEach(function(subItem) {\n                    set.push(subItem)\n                })\n            } else {\n                set.push(item)\n            }\n        }\n\n        function addFlag(flagObj, flagKey) {\n            if (flagObj[flagKey] === true) {\n                throw \"duplicate flag \" + flagKey\n            }\n\n            flagObj[flagKey] = true\n        }\n\n        function ASSERT_EXISTS(obj) {\n            // istanbul ignore next\n            if (obj === undefined) {\n                throw Error(\"Internal Error - Should never get here!\")\n            }\n        }\n\n        // istanbul ignore next\n        function ASSERT_NEVER_REACH_HERE() {\n            throw Error(\"Internal Error - Should never get here!\")\n        }\n\n        var i\n        var digitsCharCodes = []\n        for (i = cc(\"0\"); i <= cc(\"9\"); i++) {\n            digitsCharCodes.push(i)\n        }\n\n        var wordCharCodes = [cc(\"_\")].concat(digitsCharCodes)\n        for (i = cc(\"a\"); i <= cc(\"z\"); i++) {\n            wordCharCodes.push(i)\n        }\n\n        for (i = cc(\"A\"); i <= cc(\"Z\"); i++) {\n            wordCharCodes.push(i)\n        }\n\n        // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp#character-classes\n        var whitespaceCodes = [\n            cc(\" \"),\n            cc(\"\\f\"),\n            cc(\"\\n\"),\n            cc(\"\\r\"),\n            cc(\"\\t\"),\n            cc(\"\\v\"),\n            cc(\"\\t\"),\n            cc(\"\\u00a0\"),\n            cc(\"\\u1680\"),\n            cc(\"\\u2000\"),\n            cc(\"\\u2001\"),\n            cc(\"\\u2002\"),\n            cc(\"\\u2003\"),\n            cc(\"\\u2004\"),\n            cc(\"\\u2005\"),\n            cc(\"\\u2006\"),\n            cc(\"\\u2007\"),\n            cc(\"\\u2008\"),\n            cc(\"\\u2009\"),\n            cc(\"\\u200a\"),\n            cc(\"\\u2028\"),\n            cc(\"\\u2029\"),\n            cc(\"\\u202f\"),\n            cc(\"\\u205f\"),\n            cc(\"\\u3000\"),\n            cc(\"\\ufeff\")\n        ]\n\n        function BaseRegExpVisitor() {}\n\n        BaseRegExpVisitor.prototype.visitChildren = function(node) {\n            for (var key in node) {\n                var child = node[key]\n                /* istanbul ignore else */\n                if (node.hasOwnProperty(key)) {\n                    if (child.type !== undefined) {\n                        this.visit(child)\n                    } else if (Array.isArray(child)) {\n                        child.forEach(function(subChild) {\n                            this.visit(subChild)\n                        }, this)\n                    }\n                }\n            }\n        }\n\n        BaseRegExpVisitor.prototype.visit = function(node) {\n            switch (node.type) {\n                case \"Pattern\":\n                    this.visitPattern(node)\n                    break\n                case \"Flags\":\n                    this.visitFlags(node)\n                    break\n                case \"Disjunction\":\n                    this.visitDisjunction(node)\n                    break\n                case \"Alternative\":\n                    this.visitAlternative(node)\n                    break\n                case \"StartAnchor\":\n                    this.visitStartAnchor(node)\n                    break\n                case \"EndAnchor\":\n                    this.visitEndAnchor(node)\n                    break\n                case \"WordBoundary\":\n                    this.visitWordBoundary(node)\n                    break\n                case \"NonWordBoundary\":\n                    this.visitNonWordBoundary(node)\n                    break\n                case \"Lookahead\":\n                    this.visitLookahead(node)\n                    break\n                case \"NegativeLookahead\":\n                    this.visitNegativeLookahead(node)\n                    break\n                case \"Character\":\n                    this.visitCharacter(node)\n                    break\n                case \"Set\":\n                    this.visitSet(node)\n                    break\n                case \"Group\":\n                    this.visitGroup(node)\n                    break\n                case \"GroupBackReference\":\n                    this.visitGroupBackReference(node)\n                    break\n                case \"Quantifier\":\n                    this.visitQuantifier(node)\n                    break\n            }\n\n            this.visitChildren(node)\n        }\n\n        BaseRegExpVisitor.prototype.visitPattern = function(node) {}\n\n        BaseRegExpVisitor.prototype.visitFlags = function(node) {}\n\n        BaseRegExpVisitor.prototype.visitDisjunction = function(node) {}\n\n        BaseRegExpVisitor.prototype.visitAlternative = function(node) {}\n\n        // Assertion\n        BaseRegExpVisitor.prototype.visitStartAnchor = function(node) {}\n\n        BaseRegExpVisitor.prototype.visitEndAnchor = function(node) {}\n\n        BaseRegExpVisitor.prototype.visitWordBoundary = function(node) {}\n\n        BaseRegExpVisitor.prototype.visitNonWordBoundary = function(node) {}\n\n        BaseRegExpVisitor.prototype.visitLookahead = function(node) {}\n\n        BaseRegExpVisitor.prototype.visitNegativeLookahead = function(node) {}\n\n        // atoms\n        BaseRegExpVisitor.prototype.visitCharacter = function(node) {}\n\n        BaseRegExpVisitor.prototype.visitSet = function(node) {}\n\n        BaseRegExpVisitor.prototype.visitGroup = function(node) {}\n\n        BaseRegExpVisitor.prototype.visitGroupBackReference = function(node) {}\n\n        BaseRegExpVisitor.prototype.visitQuantifier = function(node) {}\n\n        return {\n            RegExpParser: RegExpParser,\n            BaseRegExpVisitor: BaseRegExpVisitor,\n            VERSION: \"0.4.0\"\n        }\n    }\n)\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.defaultLexerErrorProvider = {\n    buildUnableToPopLexerModeMessage: function (token) {\n        return \"Unable to pop Lexer Mode after encountering Token ->\" + token.image + \"<- The Mode Stack is empty\";\n    },\n    buildUnexpectedCharactersMessage: function (fullText, startOffset, length, line, column) {\n        return (\"unexpected character: ->\" + fullText.charAt(startOffset) + \"<- at offset: \" + startOffset + \",\" + (\" skipped \" + length + \" characters.\"));\n    }\n};\n//# sourceMappingURL=lexer_errors_public.js.map", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar utils_1 = require(\"../../utils/utils\");\nvar gast_public_1 = require(\"./gast/gast_public\");\nvar gast_1 = require(\"./gast/gast\");\nfunction first(prod) {\n    /* istanbul ignore else */\n    if (prod instanceof gast_public_1.NonTerminal) {\n        // this could in theory cause infinite loops if\n        // (1) prod A refs prod B.\n        // (2) prod B refs prod A\n        // (3) AB can match the empty set\n        // in other words a cycle where everything is optional so the first will keep\n        // looking ahead for the next optional part and will never exit\n        // currently there is no safeguard for this unique edge case because\n        // (1) not sure a grammar in which this can happen is useful for anything (productive)\n        return first(prod.referencedRule);\n    }\n    else if (prod instanceof gast_public_1.Terminal) {\n        return firstForTerminal(prod);\n    }\n    else if (gast_1.isSequenceProd(prod)) {\n        return firstForSequence(prod);\n    }\n    else if (gast_1.isBranchingProd(prod)) {\n        return firstForBranching(prod);\n    }\n    else {\n        throw Error(\"non exhaustive match\");\n    }\n}\nexports.first = first;\nfunction firstForSequence(prod) {\n    var firstSet = [];\n    var seq = prod.definition;\n    var nextSubProdIdx = 0;\n    var hasInnerProdsRemaining = seq.length > nextSubProdIdx;\n    var currSubProd;\n    // so we enter the loop at least once (if the definition is not empty\n    var isLastInnerProdOptional = true;\n    // scan a sequence until it's end or until we have found a NONE optional production in it\n    while (hasInnerProdsRemaining && isLastInnerProdOptional) {\n        currSubProd = seq[nextSubProdIdx];\n        isLastInnerProdOptional = gast_1.isOptionalProd(currSubProd);\n        firstSet = firstSet.concat(first(currSubProd));\n        nextSubProdIdx = nextSubProdIdx + 1;\n        hasInnerProdsRemaining = seq.length > nextSubProdIdx;\n    }\n    return utils_1.uniq(firstSet);\n}\nexports.firstForSequence = firstForSequence;\nfunction firstForBranching(prod) {\n    var allAlternativesFirsts = utils_1.map(prod.definition, function (innerProd) {\n        return first(innerProd);\n    });\n    return utils_1.uniq(utils_1.flatten(allAlternativesFirsts));\n}\nexports.firstForBranching = firstForBranching;\nfunction firstForTerminal(terminal) {\n    return [terminal.terminalType];\n}\nexports.firstForTerminal = firstForTerminal;\n//# sourceMappingURL=first.js.map", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// TODO: can this be removed? where is it used?\nexports.IN = \"_~IN~_\";\n//# sourceMappingURL=constants.js.map", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar range_1 = require(\"../text/range\");\nvar utils_1 = require(\"../utils/utils\");\nvar gast_public_1 = require(\"./grammar/gast/gast_public\");\nvar ProdType;\n(function (ProdType) {\n    ProdType[ProdType[\"OPTION\"] = 0] = \"OPTION\";\n    ProdType[ProdType[\"OR\"] = 1] = \"OR\";\n    ProdType[ProdType[\"MANY\"] = 2] = \"MANY\";\n    ProdType[ProdType[\"MANY_SEP\"] = 3] = \"MANY_SEP\";\n    ProdType[ProdType[\"AT_LEAST_ONE\"] = 4] = \"AT_LEAST_ONE\";\n    ProdType[ProdType[\"AT_LEAST_ONE_SEP\"] = 5] = \"AT_LEAST_ONE_SEP\";\n    ProdType[ProdType[\"REF\"] = 6] = \"REF\";\n    ProdType[ProdType[\"TERMINAL\"] = 7] = \"TERMINAL\";\n    ProdType[ProdType[\"FLAT\"] = 8] = \"FLAT\";\n})(ProdType = exports.ProdType || (exports.ProdType = {}));\nvar namePropRegExp = /(?:\\s*{\\s*NAME\\s*:\\s*[\"'`]([\\w$]*)[\"'`])?/;\nvar namePropRegExpNoCurlyFirstOfTwo = new RegExp(namePropRegExp.source\n    // remove opening curly brackets\n    .replace(\"{\", \"\")\n    // add the comma between the NAME prop and the following prop\n    .replace(\")?\", \"\\\\s*,)?\"));\nvar terminalRegEx = /\\.\\s*CONSUME(\\d+)?\\s*\\(\\s*(?:[a-zA-Z_$]\\w*\\s*\\.\\s*)*([a-zA-Z_$]\\w*)/;\nvar terminalRegGlobal = new RegExp(terminalRegEx.source, \"g\");\nvar refRegEx = /\\.\\s*SUBRULE(\\d+)?\\s*\\(\\s*(?:[a-zA-Z_$]\\w*\\s*\\.\\s*)*([a-zA-Z_$]\\w*)/;\nvar refRegExGlobal = new RegExp(refRegEx.source, \"g\");\nvar optionPrefixRegEx = /\\.\\s*OPTION(\\d+)?\\s*\\(/;\nvar optionRegEx = new RegExp(optionPrefixRegEx.source + namePropRegExp.source);\nvar optionRegExGlobal = new RegExp(optionPrefixRegEx.source, \"g\");\nvar manyPrefixRegEx = /\\.\\s*MANY(\\d+)?\\s*\\(/;\nvar manyRegEx = new RegExp(manyPrefixRegEx.source + namePropRegExp.source);\nvar manyRegExGlobal = new RegExp(manyPrefixRegEx.source, \"g\");\nvar sepPropRegEx = /\\s*SEP\\s*:\\s*(?:[a-zA-Z_$]\\w*\\s*\\.\\s*)*([a-zA-Z_$]\\w*)/;\nvar manySepPrefixRegEx = /\\.\\s*MANY_SEP(\\d+)?\\s*\\(\\s*{/;\nvar manyWithSeparatorRegEx = new RegExp(manySepPrefixRegEx.source +\n    namePropRegExpNoCurlyFirstOfTwo.source +\n    sepPropRegEx.source);\nvar manyWithSeparatorRegExGlobal = new RegExp(manyWithSeparatorRegEx.source, \"g\");\nvar atLeastOneSepPrefixRegEx = /\\.\\s*AT_LEAST_ONE_SEP(\\d+)?\\s*\\(\\s*{/;\nvar atLeastOneWithSeparatorRegEx = new RegExp(atLeastOneSepPrefixRegEx.source +\n    namePropRegExpNoCurlyFirstOfTwo.source +\n    sepPropRegEx.source);\nvar atLeastOneWithSeparatorRegExGlobal = new RegExp(atLeastOneWithSeparatorRegEx.source, \"g\");\nvar atLeastOnePrefixRegEx = /\\.\\s*AT_LEAST_ONE(\\d+)?\\s*\\(/;\nvar atLeastOneRegEx = new RegExp(atLeastOnePrefixRegEx.source + namePropRegExp.source);\nvar atLeastOneRegExGlobal = new RegExp(atLeastOnePrefixRegEx.source, \"g\");\nvar orPrefixRegEx = /\\.\\s*OR(\\d+)?\\s*\\(/;\nvar orRegEx = new RegExp(orPrefixRegEx.source + namePropRegExp.source);\nvar orRegExGlobal = new RegExp(orPrefixRegEx.source, \"g\");\nvar orPartSuffixRegEx = /\\s*(ALT)\\s*:/;\nvar orPartRegEx = new RegExp(namePropRegExpNoCurlyFirstOfTwo.source + orPartSuffixRegEx.source);\nvar orPartRegExGlobal = new RegExp(orPartRegEx.source, \"g\");\nexports.terminalNameToConstructor = {};\nfunction buildTopProduction(impelText, name, terminals) {\n    // pseudo state. so little state does not yet mandate the complexity of wrapping in a class...\n    // TODO: this is confusing, might be time to create a class..\n    exports.terminalNameToConstructor = terminals;\n    // the top most range must strictly contain all the other ranges\n    // which is why we prefix the text with \" \" (curr Range impel is only for positive ranges)\n    var spacedImpelText = \" \" + impelText;\n    // TODO: why do we add whitespace twice?\n    var txtWithoutComments = removeComments(\" \" + spacedImpelText);\n    var textWithoutCommentsAndStrings = removeStringLiterals(txtWithoutComments);\n    var prodRanges = createRanges(textWithoutCommentsAndStrings);\n    var topRange = new range_1.Range(0, impelText.length + 2);\n    var topRule = buildTopLevel(name, topRange, prodRanges, impelText);\n    return topRule;\n}\nexports.buildTopProduction = buildTopProduction;\nfunction buildTopLevel(name, topRange, allRanges, orgText) {\n    var topLevelProd = new gast_public_1.Rule({\n        name: name,\n        definition: [],\n        orgText: orgText\n    });\n    return buildAbstractProd(topLevelProd, topRange, allRanges, name);\n}\nfunction buildProdGast(prodRange, allRanges, ruleName) {\n    switch (prodRange.type) {\n        case ProdType.AT_LEAST_ONE:\n            return buildAtLeastOneProd(prodRange, allRanges, ruleName);\n        case ProdType.AT_LEAST_ONE_SEP:\n            return buildAtLeastOneSepProd(prodRange, allRanges, ruleName);\n        case ProdType.MANY_SEP:\n            return buildManySepProd(prodRange, allRanges, ruleName);\n        case ProdType.MANY:\n            return buildManyProd(prodRange, allRanges, ruleName);\n        case ProdType.OPTION:\n            return buildOptionProd(prodRange, allRanges, ruleName);\n        case ProdType.OR:\n            return buildOrProd(prodRange, allRanges, ruleName);\n        case ProdType.FLAT:\n            return buildFlatProd(prodRange, allRanges, ruleName);\n        case ProdType.REF:\n            return buildRefProd(prodRange);\n        case ProdType.TERMINAL:\n            return buildTerminalProd(prodRange, ruleName);\n        /* istanbul ignore next */\n        default:\n            throw Error(\"non exhaustive match\");\n    }\n}\nexports.buildProdGast = buildProdGast;\nfunction buildRefProd(prodRange) {\n    var reResult = refRegEx.exec(prodRange.text);\n    var isImplicitOccurrenceIdx = reResult[1] === undefined;\n    var refOccurrence = isImplicitOccurrenceIdx ? 0 : parseInt(reResult[1], 10);\n    var refProdName = reResult[2];\n    var newRef = new gast_public_1.NonTerminal({\n        nonTerminalName: refProdName,\n        idx: refOccurrence\n    });\n    return newRef;\n}\nfunction buildTerminalProd(prodRange, ruleName) {\n    var reResult = terminalRegEx.exec(prodRange.text);\n    var isImplicitOccurrenceIdx = reResult[1] === undefined;\n    var terminalOccurrence = isImplicitOccurrenceIdx\n        ? 0\n        : parseInt(reResult[1], 10);\n    var terminalName = reResult[2];\n    var terminalType = exports.terminalNameToConstructor[terminalName];\n    if (!terminalType) {\n        throw Error(\"Terminal Token name: <\" + terminalName + \"> not found in rule: <\" + ruleName + \">  \\n\" +\n            \"\\tSee: https://sap.github.io/chevrotain/docs/guide/resolving_grammar_errors.html#TERMINAL_NAME_NOT_FOUND\\n\" +\n            \"\\tFor Further details.\");\n    }\n    var newTerminal = new gast_public_1.Terminal({\n        terminalType: terminalType,\n        idx: terminalOccurrence\n    });\n    return newTerminal;\n}\nfunction buildProdWithOccurrence(regEx, prodInstance, prodRange, allRanges, ruleName) {\n    var reResult = regEx.exec(prodRange.text);\n    var isImplicitOccurrenceIdx = reResult[1] === undefined;\n    prodInstance.idx = isImplicitOccurrenceIdx ? 0 : parseInt(reResult[1], 10);\n    var nestedName = reResult[2];\n    if (!utils_1.isUndefined(nestedName)) {\n        ;\n        prodInstance.name = nestedName;\n    }\n    return buildAbstractProd(prodInstance, prodRange.range, allRanges, ruleName);\n}\nfunction buildAtLeastOneProd(prodRange, allRanges, ruleName) {\n    return buildProdWithOccurrence(atLeastOneRegEx, new gast_public_1.RepetitionMandatory({ definition: [] }), prodRange, allRanges, ruleName);\n}\nfunction buildAtLeastOneSepProd(prodRange, allRanges, ruleName) {\n    return buildRepetitionWithSep(prodRange, allRanges, gast_public_1.RepetitionMandatoryWithSeparator, atLeastOneWithSeparatorRegEx, ruleName);\n}\nfunction buildManyProd(prodRange, allRanges, ruleName) {\n    return buildProdWithOccurrence(manyRegEx, new gast_public_1.Repetition({ definition: [] }), prodRange, allRanges, ruleName);\n}\nfunction buildManySepProd(prodRange, allRanges, ruleName) {\n    return buildRepetitionWithSep(prodRange, allRanges, gast_public_1.RepetitionWithSeparator, manyWithSeparatorRegEx, ruleName);\n}\nfunction buildRepetitionWithSep(prodRange, allRanges, repConstructor, regExp, ruleName) {\n    var reResult = regExp.exec(prodRange.text);\n    var isImplicitOccurrenceIdx = reResult[1] === undefined;\n    var occurrenceIdx = isImplicitOccurrenceIdx ? 0 : parseInt(reResult[1], 10);\n    var sepName = reResult[3];\n    var separatorType = exports.terminalNameToConstructor[sepName];\n    if (!separatorType) {\n        throw Error(\"Separator Terminal Token name: \" + sepName + \" not found\");\n    }\n    var repetitionInstance = new repConstructor({\n        definition: [],\n        separator: separatorType,\n        idx: occurrenceIdx\n    });\n    var nestedName = reResult[2];\n    if (!utils_1.isUndefined(nestedName)) {\n        ;\n        repetitionInstance.name = nestedName;\n    }\n    return (buildAbstractProd(repetitionInstance, prodRange.range, allRanges, ruleName));\n}\nfunction buildOptionProd(prodRange, allRanges, ruleName) {\n    return buildProdWithOccurrence(optionRegEx, new gast_public_1.Option({ definition: [] }), prodRange, allRanges, ruleName);\n}\nfunction buildOrProd(prodRange, allRanges, ruleName) {\n    return buildProdWithOccurrence(orRegEx, new gast_public_1.Alternation({ definition: [] }), prodRange, allRanges, ruleName);\n}\nfunction buildFlatProd(prodRange, allRanges, ruleName) {\n    var prodInstance = new gast_public_1.Flat({ definition: [] });\n    var reResult = orPartRegEx.exec(prodRange.text);\n    var nestedName = reResult[1];\n    if (!utils_1.isUndefined(nestedName)) {\n        ;\n        prodInstance.name = nestedName;\n    }\n    return buildAbstractProd(prodInstance, prodRange.range, allRanges, ruleName);\n}\nfunction buildAbstractProd(prod, topLevelRange, allRanges, ruleName) {\n    var secondLevelProds = getDirectlyContainedRanges(topLevelRange, allRanges);\n    var secondLevelInOrder = utils_1.sortBy(secondLevelProds, function (prodRng) {\n        return prodRng.range.start;\n    });\n    var definition = [];\n    utils_1.forEach(secondLevelInOrder, function (prodRng) {\n        definition.push(buildProdGast(prodRng, allRanges, ruleName));\n    });\n    prod.definition = definition;\n    return prod;\n}\nfunction getDirectlyContainedRanges(y, prodRanges) {\n    return utils_1.filter(prodRanges, function (x) {\n        var isXDescendantOfY = y.strictlyContainsRange(x.range);\n        var xDoesNotHaveAnyAncestorWhichIsDecendantOfY = utils_1.every(prodRanges, function (maybeAnotherParent) {\n            var isParentOfX = maybeAnotherParent.range.strictlyContainsRange(x.range);\n            var isChildOfY = maybeAnotherParent.range.isStrictlyContainedInRange(y);\n            return !(isParentOfX && isChildOfY);\n        });\n        return isXDescendantOfY && xDoesNotHaveAnyAncestorWhichIsDecendantOfY;\n    });\n}\nexports.getDirectlyContainedRanges = getDirectlyContainedRanges;\nvar singleLineCommentRegEx = /\\/\\/.*/g;\nvar multiLineCommentRegEx = /\\/\\*([^*]|[\\r\\n]|(\\*+([^*/]|[\\r\\n])))*\\*+\\//g;\nvar doubleQuoteStringLiteralRegEx = /(NAME\\s*:\\s*)?\"([^\\\\\"]|\\\\([bfnrtv\"\\\\/]|u[0-9a-fA-F]{4}))*\"/g;\nvar singleQuoteStringLiteralRegEx = /(NAME\\s*:\\s*)?'([^\\\\']|\\\\([bfnrtv'\\\\/]|u[0-9a-fA-F]{4}))*'/g;\nfunction removeComments(text) {\n    var noSingleLine = text.replace(singleLineCommentRegEx, \"\");\n    var noComments = noSingleLine.replace(multiLineCommentRegEx, \"\");\n    return noComments;\n}\nexports.removeComments = removeComments;\nfunction replaceWithEmptyStringExceptNestedRules(match, nestedRuleGroup) {\n    // do not replace with empty string if a nest rule (NAME:\"bamba\") was detected\n    if (nestedRuleGroup !== undefined) {\n        return match;\n    }\n    return \"\";\n}\nfunction removeStringLiterals(text) {\n    var noDoubleQuotes = text.replace(doubleQuoteStringLiteralRegEx, replaceWithEmptyStringExceptNestedRules);\n    var noSingleQuotes = noDoubleQuotes.replace(singleQuoteStringLiteralRegEx, replaceWithEmptyStringExceptNestedRules);\n    return noSingleQuotes;\n}\nexports.removeStringLiterals = removeStringLiterals;\nfunction createRanges(text) {\n    var terminalRanges = createTerminalRanges(text);\n    var refsRanges = createRefsRanges(text);\n    var atLeastOneRanges = createAtLeastOneRanges(text);\n    var atLeastOneSepRanges = createAtLeastOneSepRanges(text);\n    var manyRanges = createManyRanges(text);\n    var manySepRanges = createManySepRanges(text);\n    var optionRanges = createOptionRanges(text);\n    var orRanges = createOrRanges(text);\n    return [].concat(terminalRanges, refsRanges, atLeastOneRanges, atLeastOneSepRanges, manyRanges, manySepRanges, optionRanges, orRanges);\n}\nexports.createRanges = createRanges;\nfunction createTerminalRanges(text) {\n    return createRefOrTerminalProdRangeInternal(text, ProdType.TERMINAL, terminalRegGlobal);\n}\nexports.createTerminalRanges = createTerminalRanges;\nfunction createRefsRanges(text) {\n    return createRefOrTerminalProdRangeInternal(text, ProdType.REF, refRegExGlobal);\n}\nexports.createRefsRanges = createRefsRanges;\nfunction createAtLeastOneRanges(text) {\n    return createOperatorProdRangeParenthesis(text, ProdType.AT_LEAST_ONE, atLeastOneRegExGlobal);\n}\nexports.createAtLeastOneRanges = createAtLeastOneRanges;\nfunction createAtLeastOneSepRanges(text) {\n    return createOperatorProdRangeParenthesis(text, ProdType.AT_LEAST_ONE_SEP, atLeastOneWithSeparatorRegExGlobal);\n}\nexports.createAtLeastOneSepRanges = createAtLeastOneSepRanges;\nfunction createManyRanges(text) {\n    return createOperatorProdRangeParenthesis(text, ProdType.MANY, manyRegExGlobal);\n}\nexports.createManyRanges = createManyRanges;\nfunction createManySepRanges(text) {\n    return createOperatorProdRangeParenthesis(text, ProdType.MANY_SEP, manyWithSeparatorRegExGlobal);\n}\nexports.createManySepRanges = createManySepRanges;\nfunction createOptionRanges(text) {\n    return createOperatorProdRangeParenthesis(text, ProdType.OPTION, optionRegExGlobal);\n}\nexports.createOptionRanges = createOptionRanges;\nfunction createOrRanges(text) {\n    var orRanges = createOperatorProdRangeParenthesis(text, ProdType.OR, orRegExGlobal);\n    // have to split up the OR cases into separate FLAT productions\n    // (A |BB | CDE) ==> or.def[0] --> FLAT(A) , or.def[1] --> FLAT(BB) , or.def[2] --> FLAT(CCDE)\n    var orSubPartsRanges = createOrPartRanges(orRanges);\n    return orRanges.concat(orSubPartsRanges);\n}\nexports.createOrRanges = createOrRanges;\nvar findClosingCurly = (utils_1.partial(findClosingOffset, \"{\", \"}\"));\nvar findClosingParen = (utils_1.partial(findClosingOffset, \"(\", \")\"));\nfunction createOrPartRanges(orRanges) {\n    var orPartRanges = [];\n    utils_1.forEach(orRanges, function (orRange) {\n        var currOrParts = createOperatorProdRangeInternal(orRange.text, ProdType.FLAT, orPartRegExGlobal, findClosingCurly);\n        var currOrRangeStart = orRange.range.start;\n        // fix offsets as we are working on a subset of the text\n        utils_1.forEach(currOrParts, function (orPart) {\n            orPart.range.start += currOrRangeStart;\n            orPart.range.end += currOrRangeStart;\n        });\n        orPartRanges = orPartRanges.concat(currOrParts);\n    });\n    var uniqueOrPartRanges = utils_1.uniq(orPartRanges, function (prodRange) {\n        // using \"~\" as a separator for the identify function as its not a valid char in javascript\n        return (prodRange.type +\n            \"~\" +\n            prodRange.range.start +\n            \"~\" +\n            prodRange.range.end +\n            \"~\" +\n            prodRange.text);\n    });\n    return uniqueOrPartRanges;\n}\nexports.createOrPartRanges = createOrPartRanges;\nfunction createRefOrTerminalProdRangeInternal(text, prodType, pattern) {\n    var prodRanges = [];\n    var matched;\n    while ((matched = pattern.exec(text))) {\n        var start = matched.index;\n        var stop_1 = pattern.lastIndex;\n        var currRange = new range_1.Range(start, stop_1);\n        var currText = matched[0];\n        prodRanges.push({\n            range: currRange,\n            text: currText,\n            type: prodType\n        });\n    }\n    return prodRanges;\n}\nfunction createOperatorProdRangeParenthesis(text, prodType, pattern) {\n    return createOperatorProdRangeInternal(text, prodType, pattern, findClosingParen);\n}\nfunction createOperatorProdRangeInternal(text, prodType, pattern, findTerminatorOffSet) {\n    var operatorRanges = [];\n    var matched;\n    while ((matched = pattern.exec(text))) {\n        var start = matched.index;\n        // note that (start + matched[0].length) is the first character AFTER the match\n        var stop_2 = findTerminatorOffSet(start + matched[0].length, text);\n        var currRange = new range_1.Range(start, stop_2);\n        var currText = text.substr(start, stop_2 - start + 1);\n        operatorRanges.push({\n            range: currRange,\n            text: currText,\n            type: prodType\n        });\n    }\n    return operatorRanges;\n}\nfunction findClosingOffset(opening, closing, start, text) {\n    var parenthesisStack = [1];\n    var i = -1;\n    while (!utils_1.isEmpty(parenthesisStack) && i + start < text.length) {\n        i++;\n        var nextChar = text.charAt(start + i);\n        if (nextChar === opening) {\n            parenthesisStack.push(1);\n        }\n        else if (nextChar === closing) {\n            parenthesisStack.pop();\n        }\n    }\n    // valid termination of the search loop\n    if (utils_1.isEmpty(parenthesisStack)) {\n        return i + start;\n    }\n    else {\n        throw new Error(\"INVALID INPUT TEXT, UNTERMINATED PARENTHESIS\");\n    }\n}\nexports.findClosingOffset = findClosingOffset;\nfunction deserializeGrammar(grammar, terminals) {\n    return utils_1.map(grammar, function (production) {\n        return deserializeProduction(production, terminals);\n    });\n}\nexports.deserializeGrammar = deserializeGrammar;\nfunction deserializeProduction(node, terminals) {\n    switch (node.type) {\n        case \"NonTerminal\":\n            return new gast_public_1.NonTerminal({\n                nonTerminalName: node.name,\n                idx: node.idx\n            });\n        case \"Flat\":\n            return new gast_public_1.Flat({\n                name: node.name,\n                definition: deserializeGrammar(node.definition, terminals)\n            });\n        case \"Option\":\n            return new gast_public_1.Option({\n                name: node.name,\n                idx: node.idx,\n                definition: deserializeGrammar(node.definition, terminals)\n            });\n        case \"RepetitionMandatory\":\n            return new gast_public_1.RepetitionMandatory({\n                name: node.name,\n                idx: node.idx,\n                definition: deserializeGrammar(node.definition, terminals)\n            });\n        case \"RepetitionMandatoryWithSeparator\":\n            return new gast_public_1.RepetitionMandatoryWithSeparator({\n                name: node.name,\n                idx: node.idx,\n                separator: terminals[node.separator.name],\n                definition: deserializeGrammar(node.definition, terminals)\n            });\n        case \"RepetitionWithSeparator\":\n            return new gast_public_1.RepetitionWithSeparator({\n                name: node.name,\n                idx: node.idx,\n                separator: terminals[node.separator.name],\n                definition: deserializeGrammar(node.definition, terminals)\n            });\n        case \"Repetition\":\n            return new gast_public_1.Repetition({\n                name: node.name,\n                idx: node.idx,\n                definition: deserializeGrammar(node.definition, terminals)\n            });\n        case \"Alternation\":\n            return new gast_public_1.Alternation({\n                name: node.name,\n                idx: node.idx,\n                definition: deserializeGrammar(node.definition, terminals)\n            });\n        case \"Terminal\":\n            return new gast_public_1.Terminal({\n                terminalType: terminals[node.name],\n                idx: node.idx\n            });\n        case \"Rule\":\n            return new gast_public_1.Rule({\n                name: node.name,\n                orgText: node.orgText,\n                definition: deserializeGrammar(node.definition, terminals)\n            });\n        /* istanbul ignore next */\n        default:\n            var _never = node;\n    }\n}\nexports.deserializeProduction = deserializeProduction;\n//# sourceMappingURL=gast_builder.js.map", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar utils_1 = require(\"../../../utils/utils\");\nvar lang_extensions_1 = require(\"../../../lang/lang_extensions\");\nvar resolver_1 = require(\"../resolver\");\nvar checks_1 = require(\"../checks\");\nvar errors_public_1 = require(\"../../errors_public\");\nvar gast_1 = require(\"./gast\");\nfunction resolveGrammar(options) {\n    options = utils_1.defaults(options, {\n        errMsgProvider: errors_public_1.defaultGrammarResolverErrorProvider\n    });\n    var topRulesTable = new lang_extensions_1.HashTable();\n    utils_1.forEach(options.rules, function (rule) {\n        topRulesTable.put(rule.name, rule);\n    });\n    return resolver_1.resolveGrammar(topRulesTable, options.errMsgProvider);\n}\nexports.resolveGrammar = resolveGrammar;\nfunction validateGrammar(options) {\n    options = utils_1.defaults(options, {\n        errMsgProvider: errors_public_1.defaultGrammarValidatorErrorProvider,\n        ignoredIssues: {}\n    });\n    return checks_1.validateGrammar(options.rules, options.maxLookahead, options.tokenTypes, options.ignoredIssues, options.errMsgProvider, options.grammarName);\n}\nexports.validateGrammar = validateGrammar;\nfunction assignOccurrenceIndices(options) {\n    utils_1.forEach(options.rules, function (currRule) {\n        var methodsCollector = new gast_1.DslMethodsCollectorVisitor();\n        currRule.accept(methodsCollector);\n        utils_1.forEach(methodsCollector.dslMethods, function (methods) {\n            utils_1.forEach(methods, function (currMethod, arrIdx) {\n                currMethod.idx = arrIdx + 1;\n            });\n        });\n    });\n}\nexports.assignOccurrenceIndices = assignOccurrenceIndices;\n//# sourceMappingURL=gast_resolver_public.js.map", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tokens_public_1 = require(\"../../../scan/tokens_public\");\nvar utils_1 = require(\"../../../utils/utils\");\nvar exceptions_public_1 = require(\"../../exceptions_public\");\nvar constants_1 = require(\"../../constants\");\nvar lang_extensions_1 = require(\"../../../lang/lang_extensions\");\nvar parser_1 = require(\"../parser\");\nexports.EOF_FOLLOW_KEY = {};\nexports.IN_RULE_RECOVERY_EXCEPTION = \"InRuleRecoveryException\";\nfunction InRuleRecoveryException(message) {\n    this.name = exports.IN_RULE_RECOVERY_EXCEPTION;\n    this.message = message;\n}\nexports.InRuleRecoveryException = InRuleRecoveryException;\nInRuleRecoveryException.prototype = Error.prototype;\n/**\n * This trait is responsible for the error recovery and fault tolerant logic\n */\nvar Recoverable = /** @class */ (function () {\n    function Recoverable() {\n    }\n    Recoverable.prototype.initRecoverable = function (config) {\n        this.firstAfterRepMap = new lang_extensions_1.HashTable();\n        this.resyncFollows = new lang_extensions_1.HashTable();\n        this.recoveryEnabled = utils_1.has(config, \"recoveryEnabled\")\n            ? config.recoveryEnabled\n            : parser_1.DEFAULT_PARSER_CONFIG.recoveryEnabled;\n        // performance optimization, NOOP will be inlined which\n        // effectively means that this optional feature does not exist\n        // when not used.\n        if (this.recoveryEnabled) {\n            this.attemptInRepetitionRecovery = attemptInRepetitionRecovery;\n        }\n    };\n    Recoverable.prototype.getTokenToInsert = function (tokType) {\n        var tokToInsert = tokens_public_1.createTokenInstance(tokType, \"\", NaN, NaN, NaN, NaN, NaN, NaN);\n        tokToInsert.isInsertedInRecovery = true;\n        return tokToInsert;\n    };\n    Recoverable.prototype.canTokenTypeBeInsertedInRecovery = function (tokType) {\n        return true;\n    };\n    Recoverable.prototype.tryInRepetitionRecovery = function (grammarRule, grammarRuleArgs, lookAheadFunc, expectedTokType) {\n        var _this = this;\n        // TODO: can the resyncTokenType be cached?\n        var reSyncTokType = this.findReSyncTokenType();\n        var savedLexerState = this.exportLexerState();\n        var resyncedTokens = [];\n        var passedResyncPoint = false;\n        var nextTokenWithoutResync = this.LA(1);\n        var currToken = this.LA(1);\n        var generateErrorMessage = function () {\n            var previousToken = _this.LA(0);\n            // we are preemptively re-syncing before an error has been detected, therefor we must reproduce\n            // the error that would have been thrown\n            var msg = _this.errorMessageProvider.buildMismatchTokenMessage({\n                expected: expectedTokType,\n                actual: nextTokenWithoutResync,\n                previous: previousToken,\n                ruleName: _this.getCurrRuleFullName()\n            });\n            var error = new exceptions_public_1.MismatchedTokenException(msg, nextTokenWithoutResync, _this.LA(0));\n            // the first token here will be the original cause of the error, this is not part of the resyncedTokens property.\n            error.resyncedTokens = utils_1.dropRight(resyncedTokens);\n            _this.SAVE_ERROR(error);\n        };\n        while (!passedResyncPoint) {\n            // re-synced to a point where we can safely exit the repetition/\n            if (this.tokenMatcher(currToken, expectedTokType)) {\n                generateErrorMessage();\n                return; // must return here to avoid reverting the inputIdx\n            }\n            else if (lookAheadFunc.call(this)) {\n                // we skipped enough tokens so we can resync right back into another iteration of the repetition grammar rule\n                generateErrorMessage();\n                // recursive invocation in other to support multiple re-syncs in the same top level repetition grammar rule\n                grammarRule.apply(this, grammarRuleArgs);\n                return; // must return here to avoid reverting the inputIdx\n            }\n            else if (this.tokenMatcher(currToken, reSyncTokType)) {\n                passedResyncPoint = true;\n            }\n            else {\n                currToken = this.SKIP_TOKEN();\n                this.addToResyncTokens(currToken, resyncedTokens);\n            }\n        }\n        // we were unable to find a CLOSER point to resync inside the Repetition, reset the state.\n        // The parsing exception we were trying to prevent will happen in the NEXT parsing step. it may be handled by\n        // \"between rules\" resync recovery later in the flow.\n        this.importLexerState(savedLexerState);\n    };\n    Recoverable.prototype.shouldInRepetitionRecoveryBeTried = function (expectTokAfterLastMatch, nextTokIdx) {\n        // arguments to try and perform resync into the next iteration of the many are missing\n        if (expectTokAfterLastMatch === undefined || nextTokIdx === undefined) {\n            return false;\n        }\n        // no need to recover, next token is what we expect...\n        if (this.tokenMatcher(this.LA(1), expectTokAfterLastMatch)) {\n            return false;\n        }\n        // error recovery is disabled during backtracking as it can make the parser ignore a valid grammar path\n        // and prefer some backtracking path that includes recovered errors.\n        if (this.isBackTracking()) {\n            return false;\n        }\n        // if we can perform inRule recovery (single token insertion or deletion) we always prefer that recovery algorithm\n        // because if it works, it makes the least amount of changes to the input stream (greedy algorithm)\n        //noinspection RedundantIfStatementJS\n        if (this.canPerformInRuleRecovery(expectTokAfterLastMatch, this.getFollowsForInRuleRecovery(expectTokAfterLastMatch, nextTokIdx))) {\n            return false;\n        }\n        return true;\n    };\n    // Error Recovery functionality\n    Recoverable.prototype.getFollowsForInRuleRecovery = function (tokType, tokIdxInRule) {\n        var grammarPath = this.getCurrentGrammarPath(tokType, tokIdxInRule);\n        var follows = this.getNextPossibleTokenTypes(grammarPath);\n        return follows;\n    };\n    Recoverable.prototype.tryInRuleRecovery = function (expectedTokType, follows) {\n        if (this.canRecoverWithSingleTokenInsertion(expectedTokType, follows)) {\n            var tokToInsert = this.getTokenToInsert(expectedTokType);\n            return tokToInsert;\n        }\n        if (this.canRecoverWithSingleTokenDeletion(expectedTokType)) {\n            var nextTok = this.SKIP_TOKEN();\n            this.consumeToken();\n            return nextTok;\n        }\n        throw new InRuleRecoveryException(\"sad sad panda\");\n    };\n    Recoverable.prototype.canPerformInRuleRecovery = function (expectedToken, follows) {\n        return (this.canRecoverWithSingleTokenInsertion(expectedToken, follows) ||\n            this.canRecoverWithSingleTokenDeletion(expectedToken));\n    };\n    Recoverable.prototype.canRecoverWithSingleTokenInsertion = function (expectedTokType, follows) {\n        var _this = this;\n        if (!this.canTokenTypeBeInsertedInRecovery(expectedTokType)) {\n            return false;\n        }\n        // must know the possible following tokens to perform single token insertion\n        if (utils_1.isEmpty(follows)) {\n            return false;\n        }\n        var mismatchedTok = this.LA(1);\n        var isMisMatchedTokInFollows = utils_1.find(follows, function (possibleFollowsTokType) {\n            return _this.tokenMatcher(mismatchedTok, possibleFollowsTokType);\n        }) !== undefined;\n        return isMisMatchedTokInFollows;\n    };\n    Recoverable.prototype.canRecoverWithSingleTokenDeletion = function (expectedTokType) {\n        var isNextTokenWhatIsExpected = this.tokenMatcher(this.LA(2), expectedTokType);\n        return isNextTokenWhatIsExpected;\n    };\n    Recoverable.prototype.isInCurrentRuleReSyncSet = function (tokenTypeIdx) {\n        var followKey = this.getCurrFollowKey();\n        var currentRuleReSyncSet = this.getFollowSetFromFollowKey(followKey);\n        return utils_1.contains(currentRuleReSyncSet, tokenTypeIdx);\n    };\n    Recoverable.prototype.findReSyncTokenType = function () {\n        var allPossibleReSyncTokTypes = this.flattenFollowSet();\n        // this loop will always terminate as EOF is always in the follow stack and also always (virtually) in the input\n        var nextToken = this.LA(1);\n        var k = 2;\n        while (true) {\n            var nextTokenType = nextToken.tokenType;\n            if (utils_1.contains(allPossibleReSyncTokTypes, nextTokenType)) {\n                return nextTokenType;\n            }\n            nextToken = this.LA(k);\n            k++;\n        }\n    };\n    Recoverable.prototype.getCurrFollowKey = function () {\n        // the length is at least one as we always add the ruleName to the stack before invoking the rule.\n        if (this.RULE_STACK.length === 1) {\n            return exports.EOF_FOLLOW_KEY;\n        }\n        var currRuleShortName = this.getLastExplicitRuleShortName();\n        var currRuleIdx = this.getLastExplicitRuleOccurrenceIndex();\n        var prevRuleShortName = this.getPreviousExplicitRuleShortName();\n        return {\n            ruleName: this.shortRuleNameToFullName(currRuleShortName),\n            idxInCallingRule: currRuleIdx,\n            inRule: this.shortRuleNameToFullName(prevRuleShortName)\n        };\n    };\n    Recoverable.prototype.buildFullFollowKeyStack = function () {\n        var _this = this;\n        var explicitRuleStack = this.RULE_STACK;\n        var explicitOccurrenceStack = this.RULE_OCCURRENCE_STACK;\n        if (!utils_1.isEmpty(this.LAST_EXPLICIT_RULE_STACK)) {\n            explicitRuleStack = utils_1.map(this.LAST_EXPLICIT_RULE_STACK, function (idx) { return _this.RULE_STACK[idx]; });\n            explicitOccurrenceStack = utils_1.map(this.LAST_EXPLICIT_RULE_STACK, function (idx) { return _this.RULE_OCCURRENCE_STACK[idx]; });\n        }\n        // TODO: only iterate over explicit rules here\n        return utils_1.map(explicitRuleStack, function (ruleName, idx) {\n            if (idx === 0) {\n                return exports.EOF_FOLLOW_KEY;\n            }\n            return {\n                ruleName: _this.shortRuleNameToFullName(ruleName),\n                idxInCallingRule: explicitOccurrenceStack[idx],\n                inRule: _this.shortRuleNameToFullName(explicitRuleStack[idx - 1])\n            };\n        });\n    };\n    Recoverable.prototype.flattenFollowSet = function () {\n        var _this = this;\n        var followStack = utils_1.map(this.buildFullFollowKeyStack(), function (currKey) {\n            return _this.getFollowSetFromFollowKey(currKey);\n        });\n        return utils_1.flatten(followStack);\n    };\n    Recoverable.prototype.getFollowSetFromFollowKey = function (followKey) {\n        if (followKey === exports.EOF_FOLLOW_KEY) {\n            return [tokens_public_1.EOF];\n        }\n        var followName = followKey.ruleName +\n            followKey.idxInCallingRule +\n            constants_1.IN +\n            followKey.inRule;\n        return this.resyncFollows.get(followName);\n    };\n    // It does not make any sense to include a virtual EOF token in the list of resynced tokens\n    // as EOF does not really exist and thus does not contain any useful information (line/column numbers)\n    Recoverable.prototype.addToResyncTokens = function (token, resyncTokens) {\n        if (!this.tokenMatcher(token, tokens_public_1.EOF)) {\n            resyncTokens.push(token);\n        }\n        return resyncTokens;\n    };\n    Recoverable.prototype.reSyncTo = function (tokType) {\n        var resyncedTokens = [];\n        var nextTok = this.LA(1);\n        while (this.tokenMatcher(nextTok, tokType) === false) {\n            nextTok = this.SKIP_TOKEN();\n            this.addToResyncTokens(nextTok, resyncedTokens);\n        }\n        // the last token is not part of the error.\n        return utils_1.dropRight(resyncedTokens);\n    };\n    Recoverable.prototype.attemptInRepetitionRecovery = function (prodFunc, args, lookaheadFunc, dslMethodIdx, prodOccurrence, nextToksWalker) {\n        // by default this is a NO-OP\n        // The actual implementation is with the function(not method) below\n    };\n    Recoverable.prototype.getCurrentGrammarPath = function (tokType, tokIdxInRule) {\n        var pathRuleStack = this.getHumanReadableRuleStack();\n        var pathOccurrenceStack = utils_1.cloneArr(this.RULE_OCCURRENCE_STACK);\n        var grammarPath = {\n            ruleStack: pathRuleStack,\n            occurrenceStack: pathOccurrenceStack,\n            lastTok: tokType,\n            lastTokOccurrence: tokIdxInRule\n        };\n        return grammarPath;\n    };\n    Recoverable.prototype.getHumanReadableRuleStack = function () {\n        var _this = this;\n        if (!utils_1.isEmpty(this.LAST_EXPLICIT_RULE_STACK)) {\n            return utils_1.map(this.LAST_EXPLICIT_RULE_STACK, function (currIdx) {\n                return _this.shortRuleNameToFullName(_this.RULE_STACK[currIdx]);\n            });\n        }\n        else {\n            return utils_1.map(this.RULE_STACK, function (currShortName) {\n                return _this.shortRuleNameToFullName(currShortName);\n            });\n        }\n    };\n    return Recoverable;\n}());\nexports.Recoverable = Recoverable;\nfunction attemptInRepetitionRecovery(prodFunc, args, lookaheadFunc, dslMethodIdx, prodOccurrence, nextToksWalker) {\n    var key = this.getKeyForAutomaticLookahead(dslMethodIdx, prodOccurrence);\n    var firstAfterRepInfo = this.firstAfterRepMap.get(key);\n    if (firstAfterRepInfo === undefined) {\n        var currRuleName = this.getCurrRuleFullName();\n        var ruleGrammar = this.getGAstProductions().get(currRuleName);\n        var walker = new nextToksWalker(ruleGrammar, prodOccurrence);\n        firstAfterRepInfo = walker.startWalking();\n        this.firstAfterRepMap.put(key, firstAfterRepInfo);\n    }\n    var expectTokAfterLastMatch = firstAfterRepInfo.token;\n    var nextTokIdx = firstAfterRepInfo.occurrence;\n    var isEndOfRule = firstAfterRepInfo.isEndOfRule;\n    // special edge case of a TOP most repetition after which the input should END.\n    // this will force an attempt for inRule recovery in that scenario.\n    if (this.RULE_STACK.length === 1 &&\n        isEndOfRule &&\n        expectTokAfterLastMatch === undefined) {\n        expectTokAfterLastMatch = tokens_public_1.EOF;\n        nextTokIdx = 1;\n    }\n    if (this.shouldInRepetitionRecoveryBeTried(expectTokAfterLastMatch, nextTokIdx)) {\n        // TODO: performance optimization: instead of passing the original args here, we modify\n        // the args param (or create a new one) and make sure the lookahead func is explicitly provided\n        // to avoid searching the cache for it once more.\n        this.tryInRepetitionRecovery(prodFunc, args, lookaheadFunc, expectTokAfterLastMatch);\n    }\n}\nexports.attemptInRepetitionRecovery = attemptInRepetitionRecovery;\n//# sourceMappingURL=recoverable.js.map", "var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar _a = require('./tokens'), turtleTokenTypes = _a.turtleTokenTypes, turtleTokenMap = _a.turtleTokenMap;\nimport { Parser, Lexer, } from 'chevrotain';\nvar TurtleParser = /** @class */ (function (_super) {\n    __extends(TurtleParser, _super);\n    function TurtleParser(config, tokens, lexerDefinition, performSelfAnalysis) {\n        if (config === void 0) { config = {}; }\n        if (tokens === void 0) { tokens = turtleTokenTypes; }\n        if (lexerDefinition === void 0) { lexerDefinition = tokens; }\n        if (performSelfAnalysis === void 0) { performSelfAnalysis = true; }\n        var _this = _super.call(this, tokens, __assign({ outputCst: true, recoveryEnabled: true }, config)) || this;\n        // Parsing Turtle requires that the parser keep a map of namespaces in state.\n        // Empty prefixes, for example, are allowed only if the empty prefix has been\n        // added to the namespaces map (for now, that's all this tracks). (TODO: We\n        // might want to use a visitor for this, but I'm doing it quick-and-dirty for\n        // now.)\n        // See here: https://www.w3.org/TR/turtle/#handle-PNAME_LN\n        _this.namespacesMap = {};\n        _this.semanticErrors = [];\n        // Clears the state that we have to manage on our own for each parse (see\n        // above for details).\n        _this.resetManagedState = function () {\n            _this.namespacesMap = {};\n            _this.semanticErrors = [];\n        };\n        _this.tokenize = function (document) {\n            return _this.lexer.tokenize(document).tokens;\n        };\n        // NOTE: This parser can parse in two modes, 'standard' and 'stardog'. The\n        // latter includes non-standard features like embedded triples patterns (edge\n        // properties).\n        _this.parse = function (document, mode) {\n            if (mode === void 0) { mode = 'standard'; }\n            _this.input = _this.lexer.tokenize(document).tokens;\n            var cst = _this.turtleDoc(0, [mode]);\n            // Next two items are copied so that they can be returned/held after parse\n            // state is cleared.\n            var errors = _this.errors.slice();\n            var semanticErrors = _this.semanticErrors.slice();\n            _this.resetManagedState();\n            return {\n                errors: errors,\n                semanticErrors: semanticErrors,\n                cst: cst,\n            };\n        };\n        _this.turtleDoc = _this.RULE('turtleDoc', function (mode) {\n            var allowEdgeProperties = mode === 'stardog';\n            _this.MANY(function () {\n                return _this.SUBRULE(_this.statement, { ARGS: [allowEdgeProperties] });\n            });\n        });\n        _this.statement = _this.RULE('statement', function (allowEdgeProperties) {\n            _this.OR([\n                { ALT: function () { return _this.SUBRULE(_this.directive); } },\n                {\n                    ALT: function () {\n                        _this.SUBRULE(_this.triples, { ARGS: [allowEdgeProperties] });\n                        _this.CONSUME(turtleTokenMap.Period);\n                    },\n                },\n            ]);\n        });\n        _this.directive = _this.RULE('directive', function () {\n            _this.OR([\n                { ALT: function () { return _this.SUBRULE(_this.prefixID); } },\n                { ALT: function () { return _this.SUBRULE(_this.base); } },\n                { ALT: function () { return _this.SUBRULE(_this.sparqlPrefix); } },\n                { ALT: function () { return _this.SUBRULE(_this.sparqlBase); } },\n            ]);\n        });\n        _this.prefixID = _this.RULE('prefixID', function () {\n            _this.CONSUME(turtleTokenMap.TTL_PREFIX);\n            var pnameNsToken = _this.CONSUME(turtleTokenMap.PNAME_NS);\n            var iriToken = _this.CONSUME(turtleTokenMap.IRIREF);\n            var pnameImageWithoutColon = pnameNsToken.image.slice(0, -1);\n            var iriImage = iriToken.image;\n            _this.namespacesMap[pnameImageWithoutColon] = iriImage;\n            _this.CONSUME(turtleTokenMap.Period);\n        });\n        _this.base = _this.RULE('base', function () {\n            _this.CONSUME(turtleTokenMap.TTL_BASE);\n            _this.CONSUME(turtleTokenMap.IRIREF);\n            _this.CONSUME(turtleTokenMap.Period);\n        });\n        _this.sparqlBase = _this.RULE('sparqlBase', function () {\n            _this.CONSUME(turtleTokenMap.BASE);\n            _this.CONSUME(turtleTokenMap.IRIREF);\n        });\n        _this.sparqlPrefix = _this.RULE('sparqlPrefix', function () {\n            _this.CONSUME(turtleTokenMap.PREFIX);\n            var pnameNsToken = _this.CONSUME(turtleTokenMap.PNAME_NS);\n            var iriToken = _this.CONSUME(turtleTokenMap.IRIREF);\n            var pnameImageWithoutColon = pnameNsToken.image.slice(0, -1);\n            var iriImage = iriToken.image;\n            _this.namespacesMap[pnameImageWithoutColon] = iriImage;\n        });\n        // NOTE: Not part of Turtle spec. Part of Stardog's support for edge\n        // properties/embedded triples/a subset of RDF*.\n        // ALSO NOTE: Intentionally does not conform to the RDF* spec.\n        // Stardog does not allow nesting of embedded triples.\n        _this.triples = _this.RULE('triples', function (allowEdgeProperties) {\n            _this.OR([\n                {\n                    ALT: function () {\n                        _this.SUBRULE(_this.subject);\n                        _this.SUBRULE1(_this.predicateObjectList, {\n                            ARGS: [allowEdgeProperties],\n                        });\n                    },\n                },\n                {\n                    GATE: function () { return Boolean(allowEdgeProperties); },\n                    ALT: function () {\n                        _this.SUBRULE(_this.EmbeddedTriplePattern);\n                        _this.SUBRULE(_this.predicateObjectList);\n                    },\n                },\n                {\n                    ALT: function () {\n                        _this.SUBRULE(_this.blankNodePropertyList, {\n                            ARGS: [allowEdgeProperties],\n                        });\n                        _this.OPTION(function () {\n                            return _this.SUBRULE2(_this.predicateObjectList, {\n                                ARGS: [allowEdgeProperties],\n                            });\n                        });\n                    },\n                },\n            ]);\n        });\n        // NOTE: Not part of Turtle spec. Part of Stardog's support for edge\n        // properties/embedded triples/a subset of RDF*.\n        // ALSO NOTE: Intentionally does not conform to the RDF* spec.\n        // Stardog does not allow nesting of embedded triples.\n        _this.EmbeddedTriplePattern = _this.RULE('EmbeddedTriplePattern', function () {\n            _this.CONSUME(turtleTokenMap.LEmbed);\n            _this.SUBRULE(_this.triples);\n            _this.CONSUME(turtleTokenMap.REmbed);\n        });\n        // NOTE: Not part of Turtle spec. Part of Stardog's support for edge\n        // properties/embedded triples/a subset of RDF*.\n        // ALSO NOTE: Intentionally does not conform to the RDF* spec.\n        // Stardog does not allow embedded triples with object lists.\n        _this.predicateObjectList = _this.RULE('predicateObjectList', function (allowEdgeProperties) {\n            _this.SUBRULE(_this.verb);\n            _this.OR([\n                {\n                    ALT: function () {\n                        return _this.SUBRULE(_this.objectList, { ARGS: [allowEdgeProperties] });\n                    },\n                },\n                {\n                    GATE: function () { return Boolean(allowEdgeProperties); },\n                    ALT: function () {\n                        _this.SUBRULE(_this.EmbeddedPredicateObjectList);\n                        _this.SUBRULE(_this.object, { ARGS: [allowEdgeProperties] });\n                    },\n                },\n            ]);\n            _this.MANY(function () {\n                _this.CONSUME(turtleTokenMap.Semicolon);\n                _this.OPTION(function () {\n                    _this.SUBRULE1(_this.verb);\n                    _this.OR1([\n                        {\n                            ALT: function () {\n                                return _this.SUBRULE1(_this.objectList, { ARGS: [allowEdgeProperties] });\n                            },\n                        },\n                        {\n                            GATE: function () { return Boolean(allowEdgeProperties); },\n                            ALT: function () {\n                                _this.SUBRULE1(_this.EmbeddedPredicateObjectList);\n                                _this.SUBRULE1(_this.object, { ARGS: [allowEdgeProperties] });\n                            },\n                        },\n                    ]);\n                });\n            });\n        });\n        // NOTE: Not part of Turtle spec. Part of Stardog's support for edge\n        // properties/embedded triples/a subset of RDF*.\n        // ALSO NOTE: Intentionally does not conform to the RDF* spec.\n        // Stardog does not allow nesting of embedded triples.\n        _this.EmbeddedPredicateObjectList = _this.RULE('EmbeddedPredicateObjectList', function () {\n            _this.CONSUME(turtleTokenMap.LCurly);\n            _this.SUBRULE(_this.predicateObjectList);\n            _this.CONSUME(turtleTokenMap.RCurly);\n        });\n        _this.subject = _this.RULE('subject', function () {\n            _this.OR([\n                { ALT: function () { return _this.SUBRULE(_this.iri); } },\n                { ALT: function () { return _this.SUBRULE(_this.BlankNode); } },\n                { ALT: function () { return _this.SUBRULE(_this.collection); } },\n            ]);\n        });\n        _this.predicate = _this.RULE('predicate', function () {\n            _this.SUBRULE(_this.iri);\n        });\n        _this.objectList = _this.RULE('objectList', function (allowEdgeProperties) {\n            _this.SUBRULE(_this.object, { ARGS: [allowEdgeProperties] });\n            _this.MANY(function () {\n                _this.CONSUME(turtleTokenMap.Comma);\n                _this.SUBRULE1(_this.object, { ARGS: [allowEdgeProperties] });\n            });\n        });\n        _this.verb = _this.RULE('verb', function () {\n            _this.OR([\n                { ALT: function () { return _this.SUBRULE(_this.predicate); } },\n                { ALT: function () { return _this.CONSUME(turtleTokenMap.A); } },\n            ]);\n        });\n        _this.literal = _this.RULE('literal', function () {\n            _this.OR([\n                { ALT: function () { return _this.SUBRULE(_this.RDFLiteral); } },\n                { ALT: function () { return _this.SUBRULE(_this.NumericLiteral); } },\n                { ALT: function () { return _this.SUBRULE(_this.BooleanLiteral); } },\n            ]);\n        });\n        _this.blankNodePropertyList = _this.RULE('blankNodePropertyList', function (allowEdgeProperties) {\n            _this.CONSUME(turtleTokenMap.LBracket);\n            _this.SUBRULE(_this.predicateObjectList, { ARGS: [allowEdgeProperties] });\n            _this.CONSUME(turtleTokenMap.RBracket);\n        });\n        _this.object = _this.RULE('object', function (allowEdgeProperties) {\n            _this.OR([\n                { ALT: function () { return _this.SUBRULE(_this.iri); } },\n                { ALT: function () { return _this.SUBRULE(_this.BlankNode); } },\n                { ALT: function () { return _this.SUBRULE(_this.collection); } },\n                {\n                    ALT: function () {\n                        return _this.SUBRULE(_this.blankNodePropertyList, {\n                            ARGS: [allowEdgeProperties],\n                        });\n                    },\n                },\n                { ALT: function () { return _this.SUBRULE(_this.literal); } },\n            ]);\n        });\n        _this.collection = _this.RULE('collection', function () {\n            _this.CONSUME(turtleTokenMap.LParen);\n            _this.MANY(function () { return _this.SUBRULE(_this.object); });\n            _this.CONSUME(turtleTokenMap.RParen);\n        });\n        _this.NumericLiteral = _this.RULE('NumericLiteral', function () {\n            _this.OR([\n                { ALT: function () { return _this.CONSUME(turtleTokenMap.INTEGER); } },\n                { ALT: function () { return _this.CONSUME(turtleTokenMap.DECIMAL); } },\n                { ALT: function () { return _this.CONSUME(turtleTokenMap.DOUBLE); } },\n            ]);\n        });\n        _this.RDFLiteral = _this.RULE('RDFLiteral', function () {\n            _this.SUBRULE(_this.String);\n            _this.OPTION(function () {\n                _this.OR([\n                    { ALT: function () { return _this.CONSUME(turtleTokenMap.LANGTAG); } },\n                    {\n                        ALT: function () {\n                            _this.CONSUME(turtleTokenMap.DoubleCaret);\n                            _this.SUBRULE(_this.iri);\n                        },\n                    },\n                ]);\n            });\n        });\n        _this.BooleanLiteral = _this.RULE('BooleanLiteral', function () {\n            _this.OR([\n                { ALT: function () { return _this.CONSUME(turtleTokenMap.TRUE); } },\n                { ALT: function () { return _this.CONSUME(turtleTokenMap.FALSE); } },\n            ]);\n        });\n        _this.String = _this.RULE('String', function () {\n            _this.OR([\n                { ALT: function () { return _this.CONSUME(turtleTokenMap.STRING_LITERAL_QUOTE); } },\n                { ALT: function () { return _this.CONSUME(turtleTokenMap.STRING_LITERAL_SINGLE_QUOTE); } },\n                {\n                    ALT: function () {\n                        return _this.CONSUME(turtleTokenMap.STRING_LITERAL_LONG_SINGLE_QUOTE);\n                    },\n                },\n                { ALT: function () { return _this.CONSUME(turtleTokenMap.STRING_LITERAL_LONG_QUOTE); } },\n            ]);\n        });\n        _this.iri = _this.RULE('iri', function () {\n            _this.OR([\n                { ALT: function () { return _this.CONSUME(turtleTokenMap.IRIREF); } },\n                { ALT: function () { return _this.SUBRULE(_this.PrefixedName); } },\n            ]);\n        });\n        _this.PrefixedName = _this.RULE('PrefixedName', function () {\n            var prefixedNameToken = _this.OR([\n                { ALT: function () { return _this.CONSUME(turtleTokenMap.PNAME_LN); } },\n                { ALT: function () { return _this.CONSUME(turtleTokenMap.PNAME_NS); } },\n            ]);\n            var pnameNsImage = prefixedNameToken.image.slice(0, prefixedNameToken.image.indexOf(':'));\n            if (!(pnameNsImage in _this.namespacesMap)) {\n                _this.semanticErrors.push({\n                    name: 'NoNamespacePrefixError',\n                    message: 'A prefix was used for which there was no namespace defined.',\n                    token: prefixedNameToken,\n                    context: {\n                        ruleStack: _this.getHumanReadableRuleStack(),\n                        ruleOccurrenceStack: _this.RULE_OCCURRENCE_STACK.slice(),\n                    },\n                    resyncedTokens: [],\n                });\n            }\n        });\n        _this.BlankNode = _this.RULE('BlankNode', function () {\n            _this.OR([\n                { ALT: function () { return _this.CONSUME(turtleTokenMap.BLANK_NODE_LABEL); } },\n                { ALT: function () { return _this.CONSUME(turtleTokenMap.ANON); } },\n            ]);\n        });\n        _this.lexer = new Lexer(lexerDefinition);\n        if (performSelfAnalysis) {\n            Parser.performSelfAnalysis(_this);\n        }\n        return _this;\n    }\n    return TurtleParser;\n}(Parser));\nexport { TurtleParser };\n", "var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar _a = require('./tokens'), sparqlTokenMap = _a.sparqlTokenMap, stardogSparqlTokens = _a.stardogSparqlTokens;\nimport { BaseSparqlParser } from './BaseSparqlParser';\nimport { Parser } from 'chevrotain';\nvar StardogSparqlParser = /** @class */ (function (_super) {\n    __extends(StardogSparqlParser, _super);\n    function StardogSparqlParser(options, tokens, shouldSkipAnalysis) {\n        if (tokens === void 0) { tokens = stardogSparqlTokens; }\n        var _this = _super.call(this, options, tokens) || this;\n        _this.ValidateQuery = _this.RULE('ValidateQuery', function () {\n            _this.CONSUME(sparqlTokenMap.VALIDATE);\n            _this.OR([\n                { ALT: function () { return _this.CONSUME(sparqlTokenMap.ALL); } },\n                { ALT: function () { return _this.SUBRULE(_this.MultiGraphRef); } },\n                {\n                    ALT: function () {\n                        _this.AT_LEAST_ONE(function () { return _this.SUBRULE1(_this.iri); });\n                        _this.OPTION(function () { return _this.SUBRULE2(_this.MultiGraphRef); });\n                    },\n                },\n            ]);\n            _this.OPTION1(function () { return _this.SUBRULE3(_this.UsingShapesClause); });\n            _this.OPTION2(function () { return _this.SUBRULE4(_this.LimitClause); });\n            _this.OPTION3(function () { return _this.SUBRULE5(_this.LimitPerShapeClause); });\n        });\n        _this.MultiGraphRef = _this.RULE('MultiGraphRef', function () {\n            _this.CONSUME(sparqlTokenMap.GRAPH);\n            _this.AT_LEAST_ONE(function () { return _this.SUBRULE(_this.iri); });\n        });\n        _this.UsingShapesClause = _this.RULE('UsingShapesClause', function () {\n            _this.CONSUME(sparqlTokenMap.USING);\n            _this.CONSUME(sparqlTokenMap.SHAPES);\n            _this.OR([\n                { ALT: function () { return _this.AT_LEAST_ONE(function () { return _this.SUBRULE(_this.iri); }); } },\n                { ALT: function () { return _this.SUBRULE1(_this.MultiGraphRef); } },\n                { ALT: function () { return _this.SUBRULE2(_this.QuadData); } },\n            ]);\n        });\n        _this.LimitPerShapeClause = _this.RULE('LimitPerShapeClause', function () {\n            _this.CONSUME(sparqlTokenMap.LIMIT);\n            _this.CONSUME(sparqlTokenMap.PER);\n            _this.CONSUME(sparqlTokenMap.SHAPE);\n            _this.CONSUME(sparqlTokenMap.INTEGER);\n        });\n        _this.Query = _this.OVERRIDE_RULE('Query', function () {\n            _this.OR([\n                { ALT: function () { return _this.SUBRULE(_this.SelectQuery); } },\n                { ALT: function () { return _this.SUBRULE(_this.ConstructQuery); } },\n                { ALT: function () { return _this.SUBRULE(_this.DescribeQuery); } },\n                { ALT: function () { return _this.SUBRULE(_this.AskQuery); } },\n                { ALT: function () { return _this.SUBRULE(_this.PathQuery); } },\n                { ALT: function () { return _this.SUBRULE(_this.ValidateQuery); } },\n            ]);\n            _this.SUBRULE(_this.ValuesClause);\n        });\n        _this.PathQuery = _this.RULE('PathQuery', function () {\n            _this.SUBRULE(_this.PathSpec);\n            _this.MANY(function () { return _this.SUBRULE(_this.DatasetClause); });\n            _this.CONSUME(sparqlTokenMap.START);\n            _this.SUBRULE(_this.PathTerminal);\n            _this.CONSUME(sparqlTokenMap.END);\n            _this.SUBRULE1(_this.PathTerminal);\n            _this.SUBRULE(_this.Via);\n            _this.OPTION(function () { return _this.SUBRULE(_this.MaxLength); });\n            _this.SUBRULE(_this.SolutionModifier);\n        });\n        _this.Via = _this.RULE('Via', function () {\n            _this.CONSUME(sparqlTokenMap.VIA);\n            _this.OR([\n                { ALT: function () { return _this.SUBRULE(_this.GroupGraphPattern); } },\n                { ALT: function () { return _this.SUBRULE(_this.Var); } },\n                { ALT: function () { return _this.SUBRULE(_this.Path); } },\n            ]);\n        });\n        _this.PathTerminal = _this.RULE('PathTerminal', function () {\n            _this.SUBRULE(_this.Var);\n            _this.OPTION(function () {\n                _this.OR([\n                    {\n                        ALT: function () {\n                            _this.CONSUME(sparqlTokenMap.Equals);\n                            _this.SUBRULE(_this.Constant);\n                        },\n                    },\n                    { ALT: function () { return _this.SUBRULE(_this.GroupGraphPattern); } },\n                ]);\n            });\n        });\n        _this.PathSpec = _this.RULE('PathSpec', function () {\n            _this.OR([\n                { ALT: function () { return _this.CONSUME(sparqlTokenMap.PATHS); } },\n                { ALT: function () { return _this.CONSUME(sparqlTokenMap.PATHS_SHORTEST); } },\n                { ALT: function () { return _this.CONSUME(sparqlTokenMap.PATHS_ALL); } },\n            ]);\n            _this.OPTION1(function () { return _this.CONSUME(sparqlTokenMap.CYCLIC); });\n        });\n        _this.GraphPatternNotTriples = _this.OVERRIDE_RULE('GraphPatternNotTriples', function () {\n            _this.OR([\n                { ALT: function () { return _this.SUBRULE(_this.GroupOrUnionGraphPattern); } },\n                { ALT: function () { return _this.SUBRULE(_this.OptionalGraphPattern); } },\n                { ALT: function () { return _this.SUBRULE(_this.MinusGraphPattern); } },\n                { ALT: function () { return _this.SUBRULE(_this.GraphGraphPattern); } },\n                { ALT: function () { return _this.SUBRULE(_this.ServiceGraphPattern); } },\n                { ALT: function () { return _this.SUBRULE(_this.Filter); } },\n                { ALT: function () { return _this.SUBRULE(_this.Bind); } },\n                { ALT: function () { return _this.SUBRULE(_this.Unnest); } },\n                { ALT: function () { return _this.SUBRULE(_this.InlineData); } },\n            ]);\n        });\n        _this.TriplesSameSubject = _this.OVERRIDE_RULE('TriplesSameSubject', function () {\n            _this.OR([\n                {\n                    ALT: function () {\n                        _this.SUBRULE(_this.VarOrTerm);\n                        _this.SUBRULE(_this.PropertyListNotEmpty);\n                    },\n                },\n                {\n                    ALT: function () {\n                        // NOTE: Intentionally does not conform to the SPARQL* spec.\n                        // Stardog does not allow nesting of embedded triples.\n                        _this.SUBRULE(_this.EmbeddedTriplePattern);\n                        _this.SUBRULE1(_this.PropertyListNotEmpty, { ARGS: [true] });\n                    },\n                },\n                {\n                    ALT: function () {\n                        _this.SUBRULE(_this.TriplesNode);\n                        _this.SUBRULE(_this.PropertyList);\n                    },\n                },\n            ]);\n        });\n        // NOTE: Intentionally does not conform to the SPARQL* spec.\n        // Stardog does not allow embedded triples with object lists.\n        _this.PropertyListNotEmpty = _this.OVERRIDE_RULE('PropertyListNotEmpty', function (disallowEdgeProperties) {\n            _this.SUBRULE(_this.Verb);\n            _this.OR([\n                {\n                    ALT: function () {\n                        _this.SUBRULE(_this.ObjectList);\n                    },\n                },\n                {\n                    GATE: function () { return !disallowEdgeProperties; },\n                    ALT: function () {\n                        _this.SUBRULE(_this.EmbeddedPropertyList);\n                        _this.SUBRULE(_this.Object);\n                    },\n                },\n            ]);\n            _this.MANY(function () {\n                _this.CONSUME(sparqlTokenMap.Semicolon);\n                _this.OPTION(function () {\n                    _this.SUBRULE1(_this.Verb);\n                    _this.OR1([\n                        {\n                            ALT: function () {\n                                _this.SUBRULE1(_this.ObjectList);\n                            },\n                        },\n                        {\n                            GATE: function () { return !disallowEdgeProperties; },\n                            ALT: function () {\n                                _this.SUBRULE1(_this.EmbeddedPropertyList);\n                                _this.SUBRULE1(_this.Object);\n                            },\n                        },\n                    ]);\n                });\n            });\n        });\n        // NOTE: Intentionally does not conform to the SPARQL* spec.\n        // Stardog does not allow nesting of embedded triples.\n        _this.EmbeddedPropertyList = _this.RULE('EmbeddedPropertyList', function () {\n            _this.CONSUME(sparqlTokenMap.LCurly);\n            _this.SUBRULE(_this.PropertyListNotEmpty, { ARGS: [true] });\n            _this.CONSUME(sparqlTokenMap.RCurly);\n        });\n        _this.Object = _this.OVERRIDE_RULE('Object', function () {\n            _this.OR([\n                {\n                    ALT: function () { return _this.SUBRULE(_this.GraphNode); },\n                },\n                {\n                    ALT: function () { return _this.SUBRULE(_this.EmbeddedTriplePattern); },\n                },\n            ]);\n        });\n        _this.TriplesSameSubjectPath = _this.OVERRIDE_RULE('TriplesSameSubjectPath', function () {\n            _this.OR([\n                {\n                    ALT: function () {\n                        _this.SUBRULE(_this.VarOrTerm);\n                        _this.SUBRULE(_this.PropertyListPathNotEmpty);\n                    },\n                },\n                {\n                    ALT: function () {\n                        // NOTE: Intentionally does not conform to the SPARQL* spec.\n                        // Stardog does not allow nesting of embedded triples.\n                        _this.SUBRULE(_this.EmbeddedTriplePattern);\n                        _this.SUBRULE1(_this.PropertyListPathNotEmpty, { ARGS: [true] });\n                    },\n                },\n                {\n                    ALT: function () {\n                        _this.SUBRULE(_this.TriplesNodePath);\n                        _this.SUBRULE(_this.PropertyListPath);\n                    },\n                },\n            ]);\n        });\n        // NOTE: Intentionally does not conform to the SPARQL* spec.\n        // Stardog does not allow embedded triples with paths or object lists.\n        _this.PropertyListPathNotEmpty = _this.OVERRIDE_RULE('PropertyListPathNotEmpty', function (disallowEdgeProperties) {\n            _this.OR([\n                {\n                    ALT: function () {\n                        _this.OR1([\n                            { ALT: function () { return _this.SUBRULE(_this.VerbPath); } },\n                            { ALT: function () { return _this.SUBRULE1(_this.VerbSimple); } },\n                        ]);\n                        _this.SUBRULE(_this.ObjectListPath);\n                    },\n                },\n                {\n                    GATE: function () { return !disallowEdgeProperties; },\n                    ALT: function () {\n                        _this.SUBRULE(_this.Verb);\n                        _this.SUBRULE(_this.EmbeddedPropertyListPath);\n                        _this.SUBRULE(_this.ObjectPath);\n                    },\n                },\n            ]);\n            _this.MANY(function () {\n                _this.CONSUME(sparqlTokenMap.Semicolon);\n                _this.OPTION(function () {\n                    _this.OR2([\n                        {\n                            ALT: function () {\n                                _this.OR3([\n                                    { ALT: function () { return _this.SUBRULE1(_this.VerbPath); } },\n                                    { ALT: function () { return _this.SUBRULE2(_this.VerbSimple); } },\n                                ]);\n                                _this.SUBRULE1(_this.ObjectListPath);\n                            },\n                        },\n                        {\n                            GATE: function () { return !disallowEdgeProperties; },\n                            ALT: function () {\n                                _this.SUBRULE1(_this.Verb);\n                                _this.SUBRULE1(_this.EmbeddedPropertyListPath);\n                                _this.SUBRULE1(_this.ObjectPath);\n                            },\n                        },\n                    ]);\n                });\n            });\n        });\n        // NOTE: Intentionally does not conform to the SPARQL* spec.\n        // Stardog does not allow nesting of embedded triples.\n        _this.EmbeddedPropertyListPath = _this.RULE('EmbeddedPropertyListPath', function () {\n            _this.CONSUME(sparqlTokenMap.LCurly);\n            _this.SUBRULE(_this.PropertyListPathNotEmpty, { ARGS: [true] });\n            _this.CONSUME(sparqlTokenMap.RCurly);\n        });\n        _this.GraphNodePath = _this.OVERRIDE_RULE('GraphNodePath', function () {\n            _this.OR([\n                { ALT: function () { return _this.SUBRULE(_this.VarOrTermOrEmbeddedTriplePattern); } },\n                { ALT: function () { return _this.SUBRULE(_this.TriplesNodePath); } },\n            ]);\n        });\n        // NOTE: Intentionally does not conform to the SPARQL* spec. Stardog does not\n        // allow nesting of embedded triples.\n        _this.EmbeddedTriplePattern = _this.RULE('EmbeddedTriplePattern', function () {\n            _this.CONSUME(sparqlTokenMap.LEmbed);\n            _this.SUBRULE(_this.VarOrBlankNodeOrIriOrLit);\n            _this.SUBRULE(_this.Verb);\n            _this.SUBRULE1(_this.VarOrBlankNodeOrIriOrLit);\n            _this.CONSUME(sparqlTokenMap.REmbed);\n        });\n        _this.VarOrTermOrEmbeddedTriplePattern = _this.RULE('VarOrTermOrEmbeddedTriplePattern', function () {\n            _this.OR([\n                { ALT: function () { return _this.SUBRULE(_this.Var); } },\n                { ALT: function () { return _this.SUBRULE(_this.GraphTerm); } },\n                { ALT: function () { return _this.SUBRULE(_this.EmbeddedTriplePattern); } },\n            ]);\n        });\n        _this.Bind = _this.OVERRIDE_RULE('Bind', function () {\n            _this.CONSUME(sparqlTokenMap.BIND);\n            _this.CONSUME(sparqlTokenMap.LParen);\n            _this.SUBRULE(_this.ExpressionOrEmbeddedTriplePattern);\n            _this.CONSUME(sparqlTokenMap.AS);\n            _this.SUBRULE(_this.Var);\n            _this.CONSUME(sparqlTokenMap.RParen);\n        });\n        _this.ExpressionOrEmbeddedTriplePattern = _this.RULE('ExpressionOrEmbeddedTriplePattern', function () {\n            _this.OR([\n                {\n                    ALT: function () { return _this.SUBRULE(_this.Expression); },\n                },\n                {\n                    ALT: function () { return _this.SUBRULE(_this.EmbeddedTriplePattern); },\n                },\n            ]);\n        });\n        // NOTE: This is nearly equivalent to VarOrTerm, but excludes NIL.\n        _this.VarOrBlankNodeOrIriOrLit = _this.RULE('VarOrBlankNodeOrIriOrLit', function () {\n            _this.OR([\n                { ALT: function () { return _this.SUBRULE(_this.Var); } },\n                { ALT: function () { return _this.SUBRULE(_this.BlankNode); } },\n                { ALT: function () { return _this.SUBRULE(_this.iri); } },\n                { ALT: function () { return _this.SUBRULE(_this.RDFLiteral); } },\n                { ALT: function () { return _this.SUBRULE(_this.NumericLiteral); } },\n                { ALT: function () { return _this.SUBRULE(_this.BooleanLiteral); } },\n            ]);\n        });\n        _this.Unnest = _this.RULE('Unnest', function () {\n            _this.CONSUME(sparqlTokenMap.UNNEST);\n            _this.CONSUME(sparqlTokenMap.LParen);\n            _this.SUBRULE(_this.Expression);\n            _this.CONSUME(sparqlTokenMap.AS);\n            _this.SUBRULE(_this.Var);\n            _this.CONSUME(sparqlTokenMap.RParen);\n        });\n        _this.BuiltInCall = _this.OVERRIDE_RULE('BuiltInCall', function () {\n            _this.OR([\n                { ALT: function () { return _this.SUBRULE(_this.Aggregate); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_STR); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_LANG); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_LANGMATCHES); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_DATATYPE); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_BOUND); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_IRI); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_URI); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_BNODE); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_RAND); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_ABS); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_CEIL); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_FLOOR); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_ROUND); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_CONCAT); } },\n                { ALT: function () { return _this.SUBRULE(_this.SubstringExpression); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_STRLEN); } },\n                { ALT: function () { return _this.SUBRULE(_this.StrReplaceExpression); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_UCASE); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_LCASE); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_ENCODE_FOR_URI); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_CONTAINS); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_STRSTARTS); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_STRENDS); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_STRBEFORE); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_STRAFTER); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_YEAR); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_MONTH); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_DAY); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_HOURS); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_MINUTES); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_SECONDS); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_TIMEZONE); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_TZ); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_NOW); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_UUID); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_STRUUID); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_MD5); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_SHA1); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_SHA256); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_SHA384); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_SHA512); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_COALESCE); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_IF); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_STRLANG); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_STRDT); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_sameTerm); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_isIRI); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_isURI); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_isBLANK); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_isLITERAL); } },\n                { ALT: function () { return _this.SUBRULE(_this.BuiltInCall_isNUMERIC); } },\n                { ALT: function () { return _this.SUBRULE(_this.RegexExpression); } },\n                { ALT: function () { return _this.SUBRULE(_this.ExistsFunction); } },\n                { ALT: function () { return _this.SUBRULE(_this.NotExistsFunction); } },\n                // Stardog has some additional built-in functions, and supports user-defined custom functions\n                { ALT: function () { return _this.SUBRULE(_this.StardogOrCustomFunction); } },\n            ]);\n        });\n        _this.StardogOrCustomFunction = _this.RULE('StardogOrCustomFunction', function () {\n            _this.CONSUME(sparqlTokenMap.UNKNOWN);\n            _this.SUBRULE(_this.ExpressionList);\n        });\n        _this.ConstructTemplate = _this.OVERRIDE_RULE('ConstructTemplate', function () {\n            _this.CONSUME(sparqlTokenMap.LCurly);\n            _this.OPTION(function () {\n                // Stardog supports the request of Quads in a Construct template. See Stardog issue #675\n                return _this.SUBRULE(_this.Quads);\n            });\n            _this.CONSUME(sparqlTokenMap.RCurly);\n        });\n        if (!shouldSkipAnalysis) {\n            Parser.performSelfAnalysis(_this);\n        }\n        return _this;\n    }\n    return StardogSparqlParser;\n}(BaseSparqlParser));\nexport { StardogSparqlParser };\n", "\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rest_1 = require(\"./rest\");\nvar lang_extensions_1 = require(\"../../lang/lang_extensions\");\nvar first_1 = require(\"./first\");\nvar utils_1 = require(\"../../utils/utils\");\nvar constants_1 = require(\"../constants\");\nvar tokens_public_1 = require(\"../../scan/tokens_public\");\nvar gast_public_1 = require(\"./gast/gast_public\");\n// This ResyncFollowsWalker computes all of the follows required for RESYNC\n// (skipping reference production).\nvar ResyncFollowsWalker = /** @class */ (function (_super) {\n    __extends(ResyncFollowsWalker, _super);\n    function ResyncFollowsWalker(topProd) {\n        var _this = _super.call(this) || this;\n        _this.topProd = topProd;\n        _this.follows = new lang_extensions_1.HashTable();\n        return _this;\n    }\n    ResyncFollowsWalker.prototype.startWalking = function () {\n        this.walk(this.topProd);\n        return this.follows;\n    };\n    ResyncFollowsWalker.prototype.walkTerminal = function (terminal, currRest, prevRest) {\n        // do nothing! just like in the public sector after 13:00\n    };\n    ResyncFollowsWalker.prototype.walkProdRef = function (refProd, currRest, prevRest) {\n        var followName = buildBetweenProdsFollowPrefix(refProd.referencedRule, refProd.idx) +\n            this.topProd.name;\n        var fullRest = currRest.concat(prevRest);\n        var restProd = new gast_public_1.Flat({ definition: fullRest });\n        var t_in_topProd_follows = first_1.first(restProd);\n        this.follows.put(followName, t_in_topProd_follows);\n    };\n    return ResyncFollowsWalker;\n}(rest_1.RestWalker));\nexports.ResyncFollowsWalker = ResyncFollowsWalker;\nfunction computeAllProdsFollows(topProductions) {\n    var reSyncFollows = new lang_extensions_1.HashTable();\n    utils_1.forEach(topProductions, function (topProd) {\n        var currRefsFollow = new ResyncFollowsWalker(topProd).startWalking();\n        reSyncFollows.putAll(currRefsFollow);\n    });\n    return reSyncFollows;\n}\nexports.computeAllProdsFollows = computeAllProdsFollows;\nfunction buildBetweenProdsFollowPrefix(inner, occurenceInParent) {\n    return inner.name + occurenceInParent + constants_1.IN;\n}\nexports.buildBetweenProdsFollowPrefix = buildBetweenProdsFollowPrefix;\nfunction buildInProdFollowPrefix(terminal) {\n    var terminalName = tokens_public_1.tokenName(terminal.terminalType);\n    return terminalName + terminal.idx + constants_1.IN;\n}\nexports.buildInProdFollowPrefix = buildInProdFollowPrefix;\n//# sourceMappingURL=follow.js.map", "\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar regexp_to_ast_1 = require(\"regexp-to-ast\");\nvar tokens_public_1 = require(\"./tokens_public\");\nvar lexer_public_1 = require(\"./lexer_public\");\nvar utils_1 = require(\"../utils/utils\");\nvar reg_exp_1 = require(\"./reg_exp\");\nvar regExpParser = new regexp_to_ast_1.RegExpParser();\nvar PATTERN = \"PATTERN\";\nexports.DEFAULT_MODE = \"defaultMode\";\nexports.MODES = \"modes\";\nexports.SUPPORT_STICKY = typeof new RegExp(\"(?:)\").sticky === \"boolean\";\nfunction disableSticky() {\n    exports.SUPPORT_STICKY = false;\n}\nexports.disableSticky = disableSticky;\nfunction enableSticky() {\n    exports.SUPPORT_STICKY = true;\n}\nexports.enableSticky = enableSticky;\nfunction analyzeTokenTypes(tokenTypes, options) {\n    options = utils_1.defaults(options, {\n        useSticky: exports.SUPPORT_STICKY,\n        debug: false,\n        safeMode: false,\n        positionTracking: \"full\",\n        lineTerminatorCharacters: [\"\\r\", \"\\n\"]\n    });\n    var onlyRelevantTypes = utils_1.reject(tokenTypes, function (currType) {\n        return currType[PATTERN] === lexer_public_1.Lexer.NA;\n    });\n    var hasCustom = false;\n    var allTransformedPatterns = utils_1.map(onlyRelevantTypes, function (currType) {\n        var currPattern = currType[PATTERN];\n        /* istanbul ignore else */\n        if (utils_1.isRegExp(currPattern)) {\n            var regExpSource = currPattern.source;\n            if (regExpSource.length === 1 &&\n                // only these regExp meta characters which can appear in a length one regExp\n                regExpSource !== \"^\" &&\n                regExpSource !== \"$\" &&\n                regExpSource !== \".\") {\n                return regExpSource;\n            }\n            else if (regExpSource.length === 2 &&\n                regExpSource[0] === \"\\\\\" &&\n                // not a meta character\n                !utils_1.contains([\n                    \"d\",\n                    \"D\",\n                    \"s\",\n                    \"S\",\n                    \"t\",\n                    \"r\",\n                    \"n\",\n                    \"t\",\n                    \"0\",\n                    \"c\",\n                    \"b\",\n                    \"B\",\n                    \"f\",\n                    \"v\",\n                    \"w\",\n                    \"W\"\n                ], regExpSource[1])) {\n                // escaped meta Characters: /\\+/ /\\[/\n                // or redundant escaping: /\\a/\n                // without the escaping \"\\\"\n                return regExpSource[1];\n            }\n            else {\n                return options.useSticky\n                    ? addStickyFlag(currPattern)\n                    : addStartOfInput(currPattern);\n            }\n        }\n        else if (utils_1.isFunction(currPattern)) {\n            hasCustom = true;\n            // CustomPatternMatcherFunc - custom patterns do not require any transformations, only wrapping in a RegExp Like object\n            return { exec: currPattern };\n        }\n        else if (utils_1.has(currPattern, \"exec\")) {\n            hasCustom = true;\n            // ICustomPattern\n            return currPattern;\n        }\n        else if (typeof currPattern === \"string\") {\n            // IGNORE ABOVE ELSE\n            if (currPattern.length === 1) {\n                return currPattern;\n            }\n            else {\n                var escapedRegExpString = currPattern.replace(/[\\\\^$.*+?()[\\]{}|]/g, \"\\\\$&\");\n                var wrappedRegExp = new RegExp(escapedRegExpString);\n                return options.useSticky\n                    ? addStickyFlag(wrappedRegExp)\n                    : addStartOfInput(wrappedRegExp);\n            }\n        }\n        else {\n            throw Error(\"non exhaustive match\");\n        }\n    });\n    var patternIdxToType = utils_1.map(onlyRelevantTypes, function (currType) { return currType.tokenTypeIdx; });\n    var patternIdxToGroup = utils_1.map(onlyRelevantTypes, function (clazz) {\n        var groupName = clazz.GROUP;\n        /* istanbul ignore next */\n        if (groupName === lexer_public_1.Lexer.SKIPPED) {\n            return undefined;\n        }\n        else if (utils_1.isString(groupName)) {\n            return groupName;\n        }\n        else if (utils_1.isUndefined(groupName)) {\n            return false;\n        }\n        else {\n            throw Error(\"non exhaustive match\");\n        }\n    });\n    var patternIdxToLongerAltIdx = utils_1.map(onlyRelevantTypes, function (clazz) {\n        var longerAltType = clazz.LONGER_ALT;\n        if (longerAltType) {\n            var longerAltIdx = utils_1.indexOf(onlyRelevantTypes, longerAltType);\n            return longerAltIdx;\n        }\n    });\n    var patternIdxToPushMode = utils_1.map(onlyRelevantTypes, function (clazz) { return clazz.PUSH_MODE; });\n    var patternIdxToPopMode = utils_1.map(onlyRelevantTypes, function (clazz) {\n        return utils_1.has(clazz, \"POP_MODE\");\n    });\n    var lineTerminatorCharCodes = getCharCodes(options.lineTerminatorCharacters);\n    var patternIdxToCanLineTerminator = utils_1.map(onlyRelevantTypes, function (tokType) { return false; });\n    if (options.positionTracking !== \"onlyOffset\") {\n        patternIdxToCanLineTerminator = utils_1.map(onlyRelevantTypes, function (tokType) {\n            if (utils_1.has(tokType, \"LINE_BREAKS\")) {\n                return tokType.LINE_BREAKS;\n            }\n            else {\n                if (checkLineBreaksIssues(tokType, lineTerminatorCharCodes) ===\n                    false) {\n                    return reg_exp_1.canMatchCharCode(lineTerminatorCharCodes, tokType.PATTERN);\n                }\n            }\n        });\n    }\n    var patternIdxToIsCustom = utils_1.map(onlyRelevantTypes, isCustomPattern);\n    var patternIdxToShort = utils_1.map(allTransformedPatterns, isShortPattern);\n    var emptyGroups = utils_1.reduce(onlyRelevantTypes, function (acc, clazz) {\n        var groupName = clazz.GROUP;\n        if (utils_1.isString(groupName) && !(groupName === lexer_public_1.Lexer.SKIPPED)) {\n            acc[groupName] = [];\n        }\n        return acc;\n    }, {});\n    var patternIdxToConfig = utils_1.map(allTransformedPatterns, function (x, idx) {\n        return {\n            pattern: allTransformedPatterns[idx],\n            longerAlt: patternIdxToLongerAltIdx[idx],\n            canLineTerminator: patternIdxToCanLineTerminator[idx],\n            isCustom: patternIdxToIsCustom[idx],\n            short: patternIdxToShort[idx],\n            group: patternIdxToGroup[idx],\n            push: patternIdxToPushMode[idx],\n            pop: patternIdxToPopMode[idx],\n            tokenTypeIdx: patternIdxToType[idx],\n            tokenType: onlyRelevantTypes[idx]\n        };\n    });\n    function addToMapOfArrays(map, key, value) {\n        if (map[key] === undefined) {\n            map[key] = [];\n        }\n        map[key].push(value);\n    }\n    var canBeOptimized = true;\n    var charCodeToPatternIdxToConfig = [];\n    if (!options.safeMode) {\n        charCodeToPatternIdxToConfig = utils_1.reduce(onlyRelevantTypes, function (result, currTokType, idx) {\n            if (typeof currTokType.PATTERN === \"string\") {\n                var key = currTokType.PATTERN.charCodeAt(0);\n                addToMapOfArrays(result, key, patternIdxToConfig[idx]);\n            }\n            else if (utils_1.isArray(currTokType.START_CHARS_HINT)) {\n                utils_1.forEach(currTokType.START_CHARS_HINT, function (charOrInt) {\n                    var key = typeof charOrInt === \"string\"\n                        ? charOrInt.charCodeAt(0)\n                        : charOrInt;\n                    addToMapOfArrays(result, key, patternIdxToConfig[idx]);\n                });\n            }\n            else if (utils_1.isRegExp(currTokType.PATTERN)) {\n                if (currTokType.PATTERN.unicode) {\n                    canBeOptimized = false;\n                    if (options.ensureOptimizations) {\n                        utils_1.PRINT_ERROR(\"\" + reg_exp_1.failedOptimizationPrefixMsg +\n                            (\"\\tUnable to analyze < \" + currTokType.PATTERN.toString() + \" > pattern.\\n\") +\n                            \"\\tThe regexp unicode flag is not currently supported by the regexp-to-ast library.\\n\" +\n                            \"\\tThis will disable the lexer's first char optimizations.\\n\" +\n                            \"\\tFor details See: https://sap.github.io/chevrotain/docs/guide/resolving_lexer_errors.html#UNICODE_OPTIMIZE\");\n                    }\n                }\n                else {\n                    var startCodes = reg_exp_1.getStartCodes(currTokType.PATTERN, options.ensureOptimizations);\n                    /* istanbul ignore if */\n                    // start code will only be empty given an empty regExp or failure of regexp-to-ast library\n                    // the first should be a different validation and the second cannot be tested.\n                    if (utils_1.isEmpty(startCodes)) {\n                        // we cannot understand what codes may start possible matches\n                        // The optimization correctness requires knowing start codes for ALL patterns.\n                        // Not actually sure this is an error, no debug message\n                        canBeOptimized = false;\n                    }\n                    utils_1.forEach(startCodes, function (code) {\n                        addToMapOfArrays(result, code, patternIdxToConfig[idx]);\n                    });\n                }\n            }\n            else {\n                if (options.ensureOptimizations) {\n                    utils_1.PRINT_ERROR(\"\" + reg_exp_1.failedOptimizationPrefixMsg +\n                        (\"\\tTokenType: <\" + tokens_public_1.tokenName(currTokType) + \"> is using a custom token pattern without providing <start_chars_hint> parameter.\\n\") +\n                        \"\\tThis will disable the lexer's first char optimizations.\\n\" +\n                        \"\\tFor details See: https://sap.github.io/chevrotain/docs/guide/resolving_lexer_errors.html#CUSTOM_OPTIMIZE\");\n                }\n                canBeOptimized = false;\n            }\n            return result;\n        }, []);\n    }\n    if (canBeOptimized && charCodeToPatternIdxToConfig.length < 65536) {\n        charCodeToPatternIdxToConfig = utils_1.packArray(charCodeToPatternIdxToConfig);\n    }\n    return {\n        emptyGroups: emptyGroups,\n        patternIdxToConfig: patternIdxToConfig,\n        charCodeToPatternIdxToConfig: charCodeToPatternIdxToConfig,\n        hasCustom: hasCustom,\n        canBeOptimized: canBeOptimized\n    };\n}\nexports.analyzeTokenTypes = analyzeTokenTypes;\nfunction validatePatterns(tokenTypes, validModesNames) {\n    var errors = [];\n    var missingResult = findMissingPatterns(tokenTypes);\n    errors = errors.concat(missingResult.errors);\n    var invalidResult = findInvalidPatterns(missingResult.valid);\n    var validTokenTypes = invalidResult.valid;\n    errors = errors.concat(invalidResult.errors);\n    errors = errors.concat(validateRegExpPattern(validTokenTypes));\n    errors = errors.concat(findInvalidGroupType(validTokenTypes));\n    errors = errors.concat(findModesThatDoNotExist(validTokenTypes, validModesNames));\n    errors = errors.concat(findUnreachablePatterns(validTokenTypes));\n    return errors;\n}\nexports.validatePatterns = validatePatterns;\nfunction validateRegExpPattern(tokenTypes) {\n    var errors = [];\n    var withRegExpPatterns = utils_1.filter(tokenTypes, function (currTokType) {\n        return utils_1.isRegExp(currTokType[PATTERN]);\n    });\n    errors = errors.concat(findEndOfInputAnchor(withRegExpPatterns));\n    errors = errors.concat(findStartOfInputAnchor(withRegExpPatterns));\n    errors = errors.concat(findUnsupportedFlags(withRegExpPatterns));\n    errors = errors.concat(findDuplicatePatterns(withRegExpPatterns));\n    errors = errors.concat(findEmptyMatchRegExps(withRegExpPatterns));\n    return errors;\n}\nfunction findMissingPatterns(tokenTypes) {\n    var tokenTypesWithMissingPattern = utils_1.filter(tokenTypes, function (currType) {\n        return !utils_1.has(currType, PATTERN);\n    });\n    var errors = utils_1.map(tokenTypesWithMissingPattern, function (currType) {\n        return {\n            message: \"Token Type: ->\" +\n                tokens_public_1.tokenName(currType) +\n                \"<- missing static 'PATTERN' property\",\n            type: lexer_public_1.LexerDefinitionErrorType.MISSING_PATTERN,\n            tokenTypes: [currType]\n        };\n    });\n    var valid = utils_1.difference(tokenTypes, tokenTypesWithMissingPattern);\n    return { errors: errors, valid: valid };\n}\nexports.findMissingPatterns = findMissingPatterns;\nfunction findInvalidPatterns(tokenTypes) {\n    var tokenTypesWithInvalidPattern = utils_1.filter(tokenTypes, function (currType) {\n        var pattern = currType[PATTERN];\n        return (!utils_1.isRegExp(pattern) &&\n            !utils_1.isFunction(pattern) &&\n            !utils_1.has(pattern, \"exec\") &&\n            !utils_1.isString(pattern));\n    });\n    var errors = utils_1.map(tokenTypesWithInvalidPattern, function (currType) {\n        return {\n            message: \"Token Type: ->\" +\n                tokens_public_1.tokenName(currType) +\n                \"<- static 'PATTERN' can only be a RegExp, a\" +\n                \" Function matching the {CustomPatternMatcherFunc} type or an Object matching the {ICustomPattern} interface.\",\n            type: lexer_public_1.LexerDefinitionErrorType.INVALID_PATTERN,\n            tokenTypes: [currType]\n        };\n    });\n    var valid = utils_1.difference(tokenTypes, tokenTypesWithInvalidPattern);\n    return { errors: errors, valid: valid };\n}\nexports.findInvalidPatterns = findInvalidPatterns;\nvar end_of_input = /[^\\\\][\\$]/;\nfunction findEndOfInputAnchor(tokenTypes) {\n    var EndAnchorFinder = /** @class */ (function (_super) {\n        __extends(EndAnchorFinder, _super);\n        function EndAnchorFinder() {\n            var _this = _super !== null && _super.apply(this, arguments) || this;\n            _this.found = false;\n            return _this;\n        }\n        EndAnchorFinder.prototype.visitEndAnchor = function (node) {\n            this.found = true;\n        };\n        return EndAnchorFinder;\n    }(regexp_to_ast_1.BaseRegExpVisitor));\n    var invalidRegex = utils_1.filter(tokenTypes, function (currType) {\n        var pattern = currType[PATTERN];\n        try {\n            var regexpAst = regExpParser.pattern(pattern.toString());\n            var endAnchorVisitor = new EndAnchorFinder();\n            endAnchorVisitor.visit(regexpAst);\n            return endAnchorVisitor.found;\n        }\n        catch (e) {\n            // old behavior in case of runtime exceptions with regexp-to-ast.\n            /* istanbul ignore next - cannot ensure an error in regexp-to-ast*/\n            return end_of_input.test(pattern.source);\n        }\n    });\n    var errors = utils_1.map(invalidRegex, function (currType) {\n        return {\n            message: \"Unexpected RegExp Anchor Error:\\n\" +\n                \"\\tToken Type: ->\" +\n                tokens_public_1.tokenName(currType) +\n                \"<- static 'PATTERN' cannot contain end of input anchor '$'\\n\" +\n                \"\\tSee sap.github.io/chevrotain/docs/guide/resolving_lexer_errors.html#ANCHORS\" +\n                \"\\tfor details.\",\n            type: lexer_public_1.LexerDefinitionErrorType.EOI_ANCHOR_FOUND,\n            tokenTypes: [currType]\n        };\n    });\n    return errors;\n}\nexports.findEndOfInputAnchor = findEndOfInputAnchor;\nfunction findEmptyMatchRegExps(tokenTypes) {\n    var matchesEmptyString = utils_1.filter(tokenTypes, function (currType) {\n        var pattern = currType[PATTERN];\n        return pattern.test(\"\");\n    });\n    var errors = utils_1.map(matchesEmptyString, function (currType) {\n        return {\n            message: \"Token Type: ->\" +\n                tokens_public_1.tokenName(currType) +\n                \"<- static 'PATTERN' must not match an empty string\",\n            type: lexer_public_1.LexerDefinitionErrorType.EMPTY_MATCH_PATTERN,\n            tokenTypes: [currType]\n        };\n    });\n    return errors;\n}\nexports.findEmptyMatchRegExps = findEmptyMatchRegExps;\nvar start_of_input = /[^\\\\[][\\^]|^\\^/;\nfunction findStartOfInputAnchor(tokenTypes) {\n    var StartAnchorFinder = /** @class */ (function (_super) {\n        __extends(StartAnchorFinder, _super);\n        function StartAnchorFinder() {\n            var _this = _super !== null && _super.apply(this, arguments) || this;\n            _this.found = false;\n            return _this;\n        }\n        StartAnchorFinder.prototype.visitStartAnchor = function (node) {\n            this.found = true;\n        };\n        return StartAnchorFinder;\n    }(regexp_to_ast_1.BaseRegExpVisitor));\n    var invalidRegex = utils_1.filter(tokenTypes, function (currType) {\n        var pattern = currType[PATTERN];\n        try {\n            var regexpAst = regExpParser.pattern(pattern.toString());\n            var startAnchorVisitor = new StartAnchorFinder();\n            startAnchorVisitor.visit(regexpAst);\n            return startAnchorVisitor.found;\n        }\n        catch (e) {\n            // old behavior in case of runtime exceptions with regexp-to-ast.\n            /* istanbul ignore next - cannot ensure an error in regexp-to-ast*/\n            return start_of_input.test(pattern.source);\n        }\n    });\n    var errors = utils_1.map(invalidRegex, function (currType) {\n        return {\n            message: \"Unexpected RegExp Anchor Error:\\n\" +\n                \"\\tToken Type: ->\" +\n                tokens_public_1.tokenName(currType) +\n                \"<- static 'PATTERN' cannot contain start of input anchor '^'\\n\" +\n                \"\\tSee https://sap.github.io/chevrotain/docs/guide/resolving_lexer_errors.html#ANCHORS\" +\n                \"\\tfor details.\",\n            type: lexer_public_1.LexerDefinitionErrorType.SOI_ANCHOR_FOUND,\n            tokenTypes: [currType]\n        };\n    });\n    return errors;\n}\nexports.findStartOfInputAnchor = findStartOfInputAnchor;\nfunction findUnsupportedFlags(tokenTypes) {\n    var invalidFlags = utils_1.filter(tokenTypes, function (currType) {\n        var pattern = currType[PATTERN];\n        return (pattern instanceof RegExp && (pattern.multiline || pattern.global));\n    });\n    var errors = utils_1.map(invalidFlags, function (currType) {\n        return {\n            message: \"Token Type: ->\" +\n                tokens_public_1.tokenName(currType) +\n                \"<- static 'PATTERN' may NOT contain global('g') or multiline('m')\",\n            type: lexer_public_1.LexerDefinitionErrorType.UNSUPPORTED_FLAGS_FOUND,\n            tokenTypes: [currType]\n        };\n    });\n    return errors;\n}\nexports.findUnsupportedFlags = findUnsupportedFlags;\n// This can only test for identical duplicate RegExps, not semantically equivalent ones.\nfunction findDuplicatePatterns(tokenTypes) {\n    var found = [];\n    var identicalPatterns = utils_1.map(tokenTypes, function (outerType) {\n        return utils_1.reduce(tokenTypes, function (result, innerType) {\n            if (outerType.PATTERN.source === innerType.PATTERN.source &&\n                !utils_1.contains(found, innerType) &&\n                innerType.PATTERN !== lexer_public_1.Lexer.NA) {\n                // this avoids duplicates in the result, each Token Type may only appear in one \"set\"\n                // in essence we are creating Equivalence classes on equality relation.\n                found.push(innerType);\n                result.push(innerType);\n                return result;\n            }\n            return result;\n        }, []);\n    });\n    identicalPatterns = utils_1.compact(identicalPatterns);\n    var duplicatePatterns = utils_1.filter(identicalPatterns, function (currIdenticalSet) {\n        return currIdenticalSet.length > 1;\n    });\n    var errors = utils_1.map(duplicatePatterns, function (setOfIdentical) {\n        var tokenTypeNames = utils_1.map(setOfIdentical, function (currType) {\n            return tokens_public_1.tokenName(currType);\n        });\n        var dupPatternSrc = utils_1.first(setOfIdentical).PATTERN;\n        return {\n            message: \"The same RegExp pattern ->\" + dupPatternSrc + \"<-\" +\n                (\"has been used in all of the following Token Types: \" + tokenTypeNames.join(\", \") + \" <-\"),\n            type: lexer_public_1.LexerDefinitionErrorType.DUPLICATE_PATTERNS_FOUND,\n            tokenTypes: setOfIdentical\n        };\n    });\n    return errors;\n}\nexports.findDuplicatePatterns = findDuplicatePatterns;\nfunction findInvalidGroupType(tokenTypes) {\n    var invalidTypes = utils_1.filter(tokenTypes, function (clazz) {\n        if (!utils_1.has(clazz, \"GROUP\")) {\n            return false;\n        }\n        var group = clazz.GROUP;\n        return group !== lexer_public_1.Lexer.SKIPPED && group !== lexer_public_1.Lexer.NA && !utils_1.isString(group);\n    });\n    var errors = utils_1.map(invalidTypes, function (currType) {\n        return {\n            message: \"Token Type: ->\" +\n                tokens_public_1.tokenName(currType) +\n                \"<- static 'GROUP' can only be Lexer.SKIPPED/Lexer.NA/A String\",\n            type: lexer_public_1.LexerDefinitionErrorType.INVALID_GROUP_TYPE_FOUND,\n            tokenTypes: [currType]\n        };\n    });\n    return errors;\n}\nexports.findInvalidGroupType = findInvalidGroupType;\nfunction findModesThatDoNotExist(tokenTypes, validModes) {\n    var invalidModes = utils_1.filter(tokenTypes, function (clazz) {\n        return (clazz.PUSH_MODE !== undefined &&\n            !utils_1.contains(validModes, clazz.PUSH_MODE));\n    });\n    var errors = utils_1.map(invalidModes, function (clazz) {\n        var msg = \"Token Type: ->\" + tokens_public_1.tokenName(clazz) + \"<- static 'PUSH_MODE' value cannot refer to a Lexer Mode ->\" + clazz.PUSH_MODE + \"<-\" + \"which does not exist\";\n        return {\n            message: msg,\n            type: lexer_public_1.LexerDefinitionErrorType.PUSH_MODE_DOES_NOT_EXIST,\n            tokenTypes: [clazz]\n        };\n    });\n    return errors;\n}\nexports.findModesThatDoNotExist = findModesThatDoNotExist;\nfunction findUnreachablePatterns(tokenTypes) {\n    var errors = [];\n    var canBeTested = utils_1.reduce(tokenTypes, function (result, tokType, idx) {\n        var pattern = tokType.PATTERN;\n        if (pattern === lexer_public_1.Lexer.NA) {\n            return result;\n        }\n        // a more comprehensive validation for all forms of regExps would require\n        // deeper regExp analysis capabilities\n        if (utils_1.isString(pattern)) {\n            result.push({ str: pattern, idx: idx, tokenType: tokType });\n        }\n        else if (utils_1.isRegExp(pattern) && noMetaChar(pattern)) {\n            result.push({ str: pattern.source, idx: idx, tokenType: tokType });\n        }\n        return result;\n    }, []);\n    utils_1.forEach(tokenTypes, function (tokType, testIdx) {\n        utils_1.forEach(canBeTested, function (_a) {\n            var str = _a.str, idx = _a.idx, tokenType = _a.tokenType;\n            if (testIdx < idx && testTokenType(str, tokType.PATTERN)) {\n                var msg = \"Token: ->\" + tokens_public_1.tokenName(tokenType) + \"<- can never be matched.\\n\" +\n                    (\"Because it appears AFTER the Token Type ->\" + tokens_public_1.tokenName(tokType) + \"<-\") +\n                    \"in the lexer's definition.\\n\" +\n                    \"See https://sap.github.io/chevrotain/docs/guide/resolving_lexer_errors.html#UNREACHABLE\";\n                errors.push({\n                    message: msg,\n                    type: lexer_public_1.LexerDefinitionErrorType.UNREACHABLE_PATTERN,\n                    tokenTypes: [tokType, tokenType]\n                });\n            }\n        });\n    });\n    return errors;\n}\nexports.findUnreachablePatterns = findUnreachablePatterns;\nfunction testTokenType(str, pattern) {\n    /* istanbul ignore else */\n    if (utils_1.isRegExp(pattern)) {\n        var regExpArray = pattern.exec(str);\n        return regExpArray !== null && regExpArray.index === 0;\n    }\n    else if (utils_1.isFunction(pattern)) {\n        // maintain the API of custom patterns\n        return pattern(str, 0, [], {});\n    }\n    else if (utils_1.has(pattern, \"exec\")) {\n        // maintain the API of custom patterns\n        return pattern.exec(str, 0, [], {});\n    }\n    else if (typeof pattern === \"string\") {\n        return pattern === str;\n    }\n    else {\n        throw Error(\"non exhaustive match\");\n    }\n}\nfunction noMetaChar(regExp) {\n    //https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp\n    var metaChars = [\n        \".\",\n        \"\\\\\",\n        \"[\",\n        \"]\",\n        \"|\",\n        \"^\",\n        \"$\",\n        \"(\",\n        \")\",\n        \"?\",\n        \"*\",\n        \"+\",\n        \"{\"\n    ];\n    return (utils_1.find(metaChars, function (char) { return regExp.source.indexOf(char) !== -1; }) ===\n        undefined);\n}\nfunction addStartOfInput(pattern) {\n    var flags = pattern.ignoreCase ? \"i\" : \"\";\n    // always wrapping in a none capturing group preceded by '^' to make sure matching can only work on start of input.\n    // duplicate/redundant start of input markers have no meaning (/^^^^A/ === /^A/)\n    return new RegExp(\"^(?:\" + pattern.source + \")\", flags);\n}\nexports.addStartOfInput = addStartOfInput;\nfunction addStickyFlag(pattern) {\n    var flags = pattern.ignoreCase ? \"iy\" : \"y\";\n    // always wrapping in a none capturing group preceded by '^' to make sure matching can only work on start of input.\n    // duplicate/redundant start of input markers have no meaning (/^^^^A/ === /^A/)\n    return new RegExp(\"\" + pattern.source, flags);\n}\nexports.addStickyFlag = addStickyFlag;\nfunction performRuntimeChecks(lexerDefinition, trackLines, lineTerminatorCharacters) {\n    var errors = [];\n    // some run time checks to help the end users.\n    if (!utils_1.has(lexerDefinition, exports.DEFAULT_MODE)) {\n        errors.push({\n            message: \"A MultiMode Lexer cannot be initialized without a <\" +\n                exports.DEFAULT_MODE +\n                \"> property in its definition\\n\",\n            type: lexer_public_1.LexerDefinitionErrorType.MULTI_MODE_LEXER_WITHOUT_DEFAULT_MODE\n        });\n    }\n    if (!utils_1.has(lexerDefinition, exports.MODES)) {\n        errors.push({\n            message: \"A MultiMode Lexer cannot be initialized without a <\" +\n                exports.MODES +\n                \"> property in its definition\\n\",\n            type: lexer_public_1.LexerDefinitionErrorType.MULTI_MODE_LEXER_WITHOUT_MODES_PROPERTY\n        });\n    }\n    if (utils_1.has(lexerDefinition, exports.MODES) &&\n        utils_1.has(lexerDefinition, exports.DEFAULT_MODE) &&\n        !utils_1.has(lexerDefinition.modes, lexerDefinition.defaultMode)) {\n        errors.push({\n            message: \"A MultiMode Lexer cannot be initialized with a \" + exports.DEFAULT_MODE + \": <\" + lexerDefinition.defaultMode + \">\" + \"which does not exist\\n\",\n            type: lexer_public_1.LexerDefinitionErrorType.MULTI_MODE_LEXER_DEFAULT_MODE_VALUE_DOES_NOT_EXIST\n        });\n    }\n    if (utils_1.has(lexerDefinition, exports.MODES)) {\n        utils_1.forEach(lexerDefinition.modes, function (currModeValue, currModeName) {\n            utils_1.forEach(currModeValue, function (currTokType, currIdx) {\n                if (utils_1.isUndefined(currTokType)) {\n                    errors.push({\n                        message: \"A Lexer cannot be initialized using an undefined Token Type. Mode:\" +\n                            (\"<\" + currModeName + \"> at index: <\" + currIdx + \">\\n\"),\n                        type: lexer_public_1.LexerDefinitionErrorType.LEXER_DEFINITION_CANNOT_CONTAIN_UNDEFINED\n                    });\n                }\n            });\n        });\n    }\n    return errors;\n}\nexports.performRuntimeChecks = performRuntimeChecks;\nfunction performWarningRuntimeChecks(lexerDefinition, trackLines, lineTerminatorCharacters) {\n    var warnings = [];\n    var hasAnyLineBreak = false;\n    var allTokenTypes = utils_1.compact(utils_1.flatten(utils_1.mapValues(lexerDefinition.modes, function (tokTypes) { return tokTypes; })));\n    var concreteTokenTypes = utils_1.reject(allTokenTypes, function (currType) { return currType[PATTERN] === lexer_public_1.Lexer.NA; });\n    var terminatorCharCodes = getCharCodes(lineTerminatorCharacters);\n    if (trackLines) {\n        utils_1.forEach(concreteTokenTypes, function (tokType) {\n            var currIssue = checkLineBreaksIssues(tokType, terminatorCharCodes);\n            if (currIssue !== false) {\n                var message = buildLineBreakIssueMessage(tokType, currIssue);\n                var warningDescriptor = {\n                    message: message,\n                    type: currIssue.issue,\n                    tokenType: tokType\n                };\n                warnings.push(warningDescriptor);\n            }\n            else {\n                // we don't want to attempt to scan if the user explicitly specified the line_breaks option.\n                if (utils_1.has(tokType, \"LINE_BREAKS\")) {\n                    if (tokType.LINE_BREAKS === true) {\n                        hasAnyLineBreak = true;\n                    }\n                }\n                else {\n                    if (reg_exp_1.canMatchCharCode(terminatorCharCodes, tokType.PATTERN)) {\n                        hasAnyLineBreak = true;\n                    }\n                }\n            }\n        });\n    }\n    if (trackLines && !hasAnyLineBreak) {\n        warnings.push({\n            message: \"Warning: No LINE_BREAKS Found.\\n\" +\n                \"\\tThis Lexer has been defined to track line and column information,\\n\" +\n                \"\\tBut none of the Token Types can be identified as matching a line terminator.\\n\" +\n                \"\\tSee https://sap.github.io/chevrotain/docs/guide/resolving_lexer_errors.html#LINE_BREAKS \\n\" +\n                \"\\tfor details.\",\n            type: lexer_public_1.LexerDefinitionErrorType.NO_LINE_BREAKS_FLAGS\n        });\n    }\n    return warnings;\n}\nexports.performWarningRuntimeChecks = performWarningRuntimeChecks;\nfunction cloneEmptyGroups(emptyGroups) {\n    var clonedResult = {};\n    var groupKeys = utils_1.keys(emptyGroups);\n    utils_1.forEach(groupKeys, function (currKey) {\n        var currGroupValue = emptyGroups[currKey];\n        /* istanbul ignore else */\n        if (utils_1.isArray(currGroupValue)) {\n            clonedResult[currKey] = [];\n        }\n        else {\n            throw Error(\"non exhaustive match\");\n        }\n    });\n    return clonedResult;\n}\nexports.cloneEmptyGroups = cloneEmptyGroups;\n// TODO: refactor to avoid duplication\nfunction isCustomPattern(tokenType) {\n    var pattern = tokenType.PATTERN;\n    /* istanbul ignore else */\n    if (utils_1.isRegExp(pattern)) {\n        return false;\n    }\n    else if (utils_1.isFunction(pattern)) {\n        // CustomPatternMatcherFunc - custom patterns do not require any transformations, only wrapping in a RegExp Like object\n        return true;\n    }\n    else if (utils_1.has(pattern, \"exec\")) {\n        // ICustomPattern\n        return true;\n    }\n    else if (utils_1.isString(pattern)) {\n        return false;\n    }\n    else {\n        throw Error(\"non exhaustive match\");\n    }\n}\nexports.isCustomPattern = isCustomPattern;\nfunction isShortPattern(pattern) {\n    if (utils_1.isString(pattern) && pattern.length === 1) {\n        return pattern.charCodeAt(0);\n    }\n    else {\n        return false;\n    }\n}\nexports.isShortPattern = isShortPattern;\n/**\n * Faster than using a RegExp for default newline detection during lexing.\n */\nexports.LineTerminatorOptimizedTester = {\n    // implements /\\n|\\r\\n?/g.test\n    test: function (text) {\n        var len = text.length;\n        for (var i = this.lastIndex; i < len; i++) {\n            var c = text.charCodeAt(i);\n            if (c === 10) {\n                this.lastIndex = i + 1;\n                return true;\n            }\n            else if (c === 13) {\n                if (text.charCodeAt(i + 1) === 10) {\n                    this.lastIndex = i + 2;\n                }\n                else {\n                    this.lastIndex = i + 1;\n                }\n                return true;\n            }\n        }\n        return false;\n    },\n    lastIndex: 0\n};\nfunction checkLineBreaksIssues(tokType, lineTerminatorCharCodes) {\n    if (utils_1.has(tokType, \"LINE_BREAKS\")) {\n        // if the user explicitly declared the line_breaks option we will respect their choice\n        // and assume it is correct.\n        return false;\n    }\n    else {\n        /* istanbul ignore else */\n        if (utils_1.isRegExp(tokType.PATTERN)) {\n            try {\n                reg_exp_1.canMatchCharCode(lineTerminatorCharCodes, tokType.PATTERN);\n            }\n            catch (e) {\n                /* istanbul ignore next - to test this we would have to mock <canMatchCharCode> to throw an error */\n                return {\n                    issue: lexer_public_1.LexerDefinitionErrorType.IDENTIFY_TERMINATOR,\n                    errMsg: e.message\n                };\n            }\n            return false;\n        }\n        else if (utils_1.isString(tokType.PATTERN)) {\n            // string literal patterns can always be analyzed to detect line terminator usage\n            return false;\n        }\n        else if (isCustomPattern(tokType)) {\n            // custom token types\n            return { issue: lexer_public_1.LexerDefinitionErrorType.CUSTOM_LINE_BREAK };\n        }\n        else {\n            throw Error(\"non exhaustive match\");\n        }\n    }\n}\nfunction buildLineBreakIssueMessage(tokType, details) {\n    /* istanbul ignore else */\n    if (details.issue === lexer_public_1.LexerDefinitionErrorType.IDENTIFY_TERMINATOR) {\n        return (\"Warning: unable to identify line terminator usage in pattern.\\n\" +\n            (\"\\tThe problem is in the <\" + tokType.name + \"> Token Type\\n\") +\n            (\"\\t Root cause: \" + details.errMsg + \".\\n\") +\n            \"\\tFor details See: https://sap.github.io/chevrotain/docs/guide/resolving_lexer_errors.html#IDENTIFY_TERMINATOR\");\n    }\n    else if (details.issue === lexer_public_1.LexerDefinitionErrorType.CUSTOM_LINE_BREAK) {\n        return (\"Warning: A Custom Token Pattern should specify the <line_breaks> option.\\n\" +\n            (\"\\tThe problem is in the <\" + tokType.name + \"> Token Type\\n\") +\n            \"\\tFor details See: https://sap.github.io/chevrotain/docs/guide/resolving_lexer_errors.html#CUSTOM_LINE_BREAK\");\n    }\n    else {\n        throw Error(\"non exhaustive match\");\n    }\n}\nexports.buildLineBreakIssueMessage = buildLineBreakIssueMessage;\nfunction getCharCodes(charsOrCodes) {\n    var charCodes = utils_1.map(charsOrCodes, function (numOrString) {\n        if (utils_1.isString(numOrString) && numOrString.length > 0) {\n            return numOrString.charCodeAt(0);\n        }\n        else {\n            return numOrString;\n        }\n    });\n    return charCodes;\n}\n//# sourceMappingURL=lexer.js.map", "\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar regexp_to_ast_1 = require(\"regexp-to-ast\");\nvar utils_1 = require(\"../utils/utils\");\nvar regExpParser = new regexp_to_ast_1.RegExpParser();\nvar complementErrorMessage = \"Complement Sets are not supported for first char optimization\";\nexports.failedOptimizationPrefixMsg = 'Unable to use \"first char\" lexer optimizations:\\n';\nfunction getStartCodes(regExp, ensureOptimizations) {\n    if (ensureOptimizations === void 0) { ensureOptimizations = false; }\n    try {\n        var ast = regExpParser.pattern(regExp.toString());\n        var firstChars = firstChar(ast.value);\n        if (ast.flags.ignoreCase) {\n            firstChars = applyIgnoreCase(firstChars);\n        }\n        return firstChars;\n    }\n    catch (e) {\n        /* istanbul ignore next */\n        // Testing this relies on the regexp-to-ast library having a bug... */\n        // TODO: only the else branch needs to be ignored, try to fix with newer prettier / tsc\n        if (e.message === complementErrorMessage) {\n            if (ensureOptimizations) {\n                utils_1.PRINT_WARNING(\"\" + exports.failedOptimizationPrefixMsg +\n                    (\"\\tUnable to optimize: < \" + regExp.toString() + \" >\\n\") +\n                    \"\\tComplement Sets cannot be automatically optimized.\\n\" +\n                    \"\\tThis will disable the lexer's first char optimizations.\\n\" +\n                    \"\\tSee: https://sap.github.io/chevrotain/docs/guide/resolving_lexer_errors.html#COMPLEMENT for details.\");\n            }\n        }\n        else {\n            var msgSuffix = \"\";\n            if (ensureOptimizations) {\n                msgSuffix =\n                    \"\\n\\tThis will disable the lexer's first char optimizations.\\n\" +\n                        \"\\tSee: https://sap.github.io/chevrotain/docs/guide/resolving_lexer_errors.html#REGEXP_PARSING for details.\";\n            }\n            utils_1.PRINT_ERROR(exports.failedOptimizationPrefixMsg + \"\\n\" +\n                (\"\\tFailed parsing: < \" + regExp.toString() + \" >\\n\") +\n                (\"\\tUsing the regexp-to-ast library version: \" + regexp_to_ast_1.VERSION + \"\\n\") +\n                \"\\tPlease open an issue at: https://github.com/bd82/regexp-to-ast/issues\" +\n                msgSuffix);\n        }\n    }\n    return [];\n}\nexports.getStartCodes = getStartCodes;\nfunction firstChar(ast) {\n    switch (ast.type) {\n        case \"Disjunction\":\n            return utils_1.flatten(utils_1.map(ast.value, firstChar));\n        case \"Alternative\":\n            var startChars_1 = [];\n            var terms = ast.value;\n            for (var i = 0; i < terms.length; i++) {\n                var term = terms[i];\n                if (utils_1.contains([\n                    // A group back reference cannot affect potential starting char.\n                    // because if a back reference is the first production than automatically\n                    // the group being referenced has had to come BEFORE so its codes have already been added\n                    \"GroupBackReference\",\n                    // assertions do not affect potential starting codes\n                    \"Lookahead\",\n                    \"NegativeLookahead\",\n                    \"StartAnchor\",\n                    \"EndAnchor\",\n                    \"WordBoundary\",\n                    \"NonWordBoundary\"\n                ], term.type)) {\n                    continue;\n                }\n                var atom = term;\n                switch (atom.type) {\n                    case \"Character\":\n                        startChars_1.push(atom.value);\n                        break;\n                    case \"Set\":\n                        if (atom.complement === true) {\n                            throw Error(complementErrorMessage);\n                        }\n                        // TODO: this may still be slow when there are many codes\n                        utils_1.forEach(atom.value, function (code) {\n                            if (typeof code === \"number\") {\n                                startChars_1.push(code);\n                            }\n                            else {\n                                //range\n                                var range = code;\n                                for (var rangeCode = range.from; rangeCode <= range.to; rangeCode++) {\n                                    startChars_1.push(rangeCode);\n                                }\n                            }\n                        });\n                        break;\n                    case \"Group\":\n                        var groupCodes = firstChar(atom.value);\n                        utils_1.forEach(groupCodes, function (code) { return startChars_1.push(code); });\n                        break;\n                    /* istanbul ignore next */\n                    default:\n                        throw Error(\"Non Exhaustive Match\");\n                }\n                // reached a mandatory production, no more **start** codes can be found on this alternative\n                var isOptionalQuantifier = atom.quantifier !== undefined &&\n                    atom.quantifier.atLeast === 0;\n                if (\n                // A group may be optional due to empty contents /(?:)/\n                // or if everything inside it is optional /((a)?)/\n                (atom.type === \"Group\" &&\n                    isWholeOptional(atom) === false) ||\n                    // If this term is not a group it may only be optional if it has an optional quantifier\n                    (atom.type !== \"Group\" && isOptionalQuantifier === false)) {\n                    break;\n                }\n            }\n            return startChars_1;\n        /* istanbul ignore next */\n        default:\n            throw Error(\"non exhaustive match!\");\n    }\n}\nexports.firstChar = firstChar;\nfunction applyIgnoreCase(firstChars) {\n    var firstCharsCase = [];\n    utils_1.forEach(firstChars, function (charCode) {\n        firstCharsCase.push(charCode);\n        var char = String.fromCharCode(charCode);\n        /* istanbul ignore else */\n        if (char.toUpperCase() !== char) {\n            firstCharsCase.push(char.toUpperCase().charCodeAt(0));\n        }\n        else if (char.toLowerCase() !== char) {\n            firstCharsCase.push(char.toLowerCase().charCodeAt(0));\n        }\n    });\n    return firstCharsCase;\n}\nexports.applyIgnoreCase = applyIgnoreCase;\nfunction findCode(setNode, targetCharCodes) {\n    return utils_1.find(setNode.value, function (codeOrRange) {\n        if (typeof codeOrRange === \"number\") {\n            return utils_1.contains(targetCharCodes, codeOrRange);\n        }\n        else {\n            // range\n            var range_1 = codeOrRange;\n            return (utils_1.find(targetCharCodes, function (targetCode) {\n                return range_1.from <= targetCode && targetCode <= range_1.to;\n            }) !== undefined);\n        }\n    });\n}\nfunction isWholeOptional(ast) {\n    if (ast.quantifier && ast.quantifier.atLeast === 0) {\n        return true;\n    }\n    if (!ast.value) {\n        return false;\n    }\n    return utils_1.isArray(ast.value)\n        ? utils_1.every(ast.value, isWholeOptional)\n        : isWholeOptional(ast.value);\n}\nvar CharCodeFinder = /** @class */ (function (_super) {\n    __extends(CharCodeFinder, _super);\n    function CharCodeFinder(targetCharCodes) {\n        var _this = _super.call(this) || this;\n        _this.targetCharCodes = targetCharCodes;\n        _this.found = false;\n        return _this;\n    }\n    CharCodeFinder.prototype.visitChildren = function (node) {\n        // switch lookaheads as they do not actually consume any characters thus\n        // finding a charCode at lookahead context does not mean that regexp can actually contain it in a match.\n        switch (node.type) {\n            case \"Lookahead\":\n                this.visitLookahead(node);\n                return;\n            case \"NegativeLookahead\":\n                this.visitNegativeLookahead(node);\n                return;\n        }\n        _super.prototype.visitChildren.call(this, node);\n    };\n    CharCodeFinder.prototype.visitCharacter = function (node) {\n        if (utils_1.contains(this.targetCharCodes, node.value)) {\n            this.found = true;\n        }\n    };\n    CharCodeFinder.prototype.visitSet = function (node) {\n        if (node.complement) {\n            if (findCode(node, this.targetCharCodes) === undefined) {\n                this.found = true;\n            }\n        }\n        else {\n            if (findCode(node, this.targetCharCodes) !== undefined) {\n                this.found = true;\n            }\n        }\n    };\n    return CharCodeFinder;\n}(regexp_to_ast_1.BaseRegExpVisitor));\nfunction canMatchCharCode(charCodes, pattern) {\n    if (pattern instanceof RegExp) {\n        var ast = regExpParser.pattern(pattern.toString());\n        var charCodeFinder = new CharCodeFinder(charCodes);\n        charCodeFinder.visit(ast);\n        return charCodeFinder.found;\n    }\n    else {\n        return (utils_1.find(pattern, function (char) {\n            return utils_1.contains(charCodes, char.charCodeAt(0));\n        }) !== undefined);\n    }\n}\nexports.canMatchCharCode = canMatchCharCode;\n//# sourceMappingURL=reg_exp.js.map", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Range = /** @class */ (function () {\n    function Range(start, end) {\n        this.start = start;\n        this.end = end;\n        if (!isValidRange(start, end)) {\n            throw new Error(\"INVALID RANGE\");\n        }\n    }\n    Range.prototype.contains = function (num) {\n        return this.start <= num && this.end >= num;\n    };\n    Range.prototype.containsRange = function (other) {\n        return this.start <= other.start && this.end >= other.end;\n    };\n    Range.prototype.isContainedInRange = function (other) {\n        return other.containsRange(this);\n    };\n    Range.prototype.strictlyContainsRange = function (other) {\n        return this.start < other.start && this.end > other.end;\n    };\n    Range.prototype.isStrictlyContainedInRange = function (other) {\n        return other.strictlyContainsRange(this);\n    };\n    return Range;\n}());\nexports.Range = Range;\nfunction isValidRange(start, end) {\n    return !(start < 0 || end < start);\n}\nexports.isValidRange = isValidRange;\n//# sourceMappingURL=range.js.map", "\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar parser_1 = require(\"../parser/parser\");\nvar utils_1 = require(\"../../utils/utils\");\nvar gast_visitor_public_1 = require(\"./gast/gast_visitor_public\");\nfunction resolveGrammar(topLevels, errMsgProvider) {\n    var refResolver = new GastRefResolverVisitor(topLevels, errMsgProvider);\n    refResolver.resolveRefs();\n    return refResolver.errors;\n}\nexports.resolveGrammar = resolveGrammar;\nvar GastRefResolverVisitor = /** @class */ (function (_super) {\n    __extends(GastRefResolverVisitor, _super);\n    function GastRefResolverVisitor(nameToTopRule, errMsgProvider) {\n        var _this = _super.call(this) || this;\n        _this.nameToTopRule = nameToTopRule;\n        _this.errMsgProvider = errMsgProvider;\n        _this.errors = [];\n        return _this;\n    }\n    GastRefResolverVisitor.prototype.resolveRefs = function () {\n        var _this = this;\n        utils_1.forEach(this.nameToTopRule.values(), function (prod) {\n            _this.currTopLevel = prod;\n            prod.accept(_this);\n        });\n    };\n    GastRefResolverVisitor.prototype.visitNonTerminal = function (node) {\n        var ref = this.nameToTopRule.get(node.nonTerminalName);\n        if (!ref) {\n            var msg = this.errMsgProvider.buildRuleNotFoundError(this.currTopLevel, node);\n            this.errors.push({\n                message: msg,\n                type: parser_1.ParserDefinitionErrorType.UNRESOLVED_SUBRULE_REF,\n                ruleName: this.currTopLevel.name,\n                unresolvedRefName: node.nonTerminalName\n            });\n        }\n        else {\n            node.referencedRule = ref;\n        }\n    };\n    return GastRefResolverVisitor;\n}(gast_visitor_public_1.GAstVisitor));\nexports.GastRefResolverVisitor = GastRefResolverVisitor;\n//# sourceMappingURL=resolver.js.map", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar lookahead_1 = require(\"../../grammar/lookahead\");\nvar utils_1 = require(\"../../../utils/utils\");\nvar parser_1 = require(\"../parser\");\nvar keys_1 = require(\"../../grammar/keys\");\n/**\n * Trait responsible for the lookahead related utilities and optimizations.\n */\nvar LooksAhead = /** @class */ (function () {\n    function LooksAhead() {\n    }\n    LooksAhead.prototype.initLooksAhead = function (config) {\n        this.dynamicTokensEnabled = utils_1.has(config, \"dynamicTokensEnabled\")\n            ? config.dynamicTokensEnabled\n            : parser_1.DEFAULT_PARSER_CONFIG.dynamicTokensEnabled;\n        this.maxLookahead = utils_1.has(config, \"maxLookahead\")\n            ? config.maxLookahead\n            : parser_1.DEFAULT_PARSER_CONFIG.maxLookahead;\n        /* istanbul ignore next - Using plain array as dictionary will be tested on older node.js versions and IE11 */\n        this.lookAheadFuncsCache = utils_1.isES2015MapSupported() ? new Map() : [];\n        // Performance optimization on newer engines that support ES6 Map\n        // For larger Maps this is slightly faster than using a plain object (array in our case).\n        /* istanbul ignore else - The else branch will be tested on older node.js versions and IE11 */\n        if (utils_1.isES2015MapSupported()) {\n            this.getLaFuncFromCache = this.getLaFuncFromMap;\n            this.setLaFuncCache = this.setLaFuncCacheUsingMap;\n        }\n        else {\n            this.getLaFuncFromCache = this.getLaFuncFromObj;\n            this.setLaFuncCache = this.setLaFuncUsingObj;\n        }\n    };\n    LooksAhead.prototype.lookAheadBuilderForOptional = function (alt, tokenMatcher, dynamicTokensEnabled) {\n        return lookahead_1.buildSingleAlternativeLookaheadFunction(alt, tokenMatcher, dynamicTokensEnabled);\n    };\n    LooksAhead.prototype.lookAheadBuilderForAlternatives = function (alts, hasPredicates, tokenMatcher, dynamicTokensEnabled) {\n        return lookahead_1.buildAlternativesLookAheadFunc(alts, hasPredicates, tokenMatcher, dynamicTokensEnabled);\n    };\n    // this actually returns a number, but it is always used as a string (object prop key)\n    LooksAhead.prototype.getKeyForAutomaticLookahead = function (dslMethodIdx, occurrence) {\n        var currRuleShortName = this.getLastExplicitRuleShortName();\n        return keys_1.getKeyForAutomaticLookahead(currRuleShortName, dslMethodIdx, occurrence);\n    };\n    LooksAhead.prototype.getLookaheadFuncForOr = function (occurrence, alts) {\n        var key = this.getKeyForAutomaticLookahead(keys_1.OR_IDX, occurrence);\n        var laFunc = this.getLaFuncFromCache(key);\n        if (laFunc === undefined) {\n            var ruleName = this.getCurrRuleFullName();\n            var ruleGrammar = this.getGAstProductions().get(ruleName);\n            // note that hasPredicates is only computed once.\n            var hasPredicates = utils_1.some(alts, function (currAlt) {\n                return utils_1.isFunction(currAlt.GATE);\n            });\n            laFunc = lookahead_1.buildLookaheadFuncForOr(occurrence, ruleGrammar, this.maxLookahead, hasPredicates, this.dynamicTokensEnabled, this.lookAheadBuilderForAlternatives);\n            this.setLaFuncCache(key, laFunc);\n            return laFunc;\n        }\n        else {\n            return laFunc;\n        }\n    };\n    // Automatic lookahead calculation\n    LooksAhead.prototype.getLookaheadFuncForOption = function (key, occurrence) {\n        return this.getLookaheadFuncFor(key, occurrence, this.maxLookahead, lookahead_1.PROD_TYPE.OPTION);\n    };\n    LooksAhead.prototype.getLookaheadFuncForMany = function (key, occurrence) {\n        return this.getLookaheadFuncFor(key, occurrence, this.maxLookahead, lookahead_1.PROD_TYPE.REPETITION);\n    };\n    LooksAhead.prototype.getLookaheadFuncForManySep = function (key, occurrence) {\n        return this.getLookaheadFuncFor(key, occurrence, this.maxLookahead, lookahead_1.PROD_TYPE.REPETITION_WITH_SEPARATOR);\n    };\n    LooksAhead.prototype.getLookaheadFuncForAtLeastOne = function (key, occurrence) {\n        return this.getLookaheadFuncFor(key, occurrence, this.maxLookahead, lookahead_1.PROD_TYPE.REPETITION_MANDATORY);\n    };\n    LooksAhead.prototype.getLookaheadFuncForAtLeastOneSep = function (key, occurrence) {\n        return this.getLookaheadFuncFor(key, occurrence, this.maxLookahead, lookahead_1.PROD_TYPE.REPETITION_MANDATORY_WITH_SEPARATOR);\n    };\n    LooksAhead.prototype.getLookaheadFuncFor = function (key, occurrence, maxLookahead, prodType) {\n        var laFunc = this.getLaFuncFromCache(key);\n        if (laFunc === undefined) {\n            var ruleName = this.getCurrRuleFullName();\n            var ruleGrammar = this.getGAstProductions().get(ruleName);\n            laFunc = lookahead_1.buildLookaheadFuncForOptionalProd(occurrence, ruleGrammar, maxLookahead, this.dynamicTokensEnabled, prodType, this.lookAheadBuilderForOptional);\n            this.setLaFuncCache(key, laFunc);\n            return laFunc;\n        }\n        else {\n            return laFunc;\n        }\n    };\n    /* istanbul ignore next */\n    LooksAhead.prototype.getLaFuncFromCache = function (key) {\n        return undefined;\n    };\n    LooksAhead.prototype.getLaFuncFromMap = function (key) {\n        return this.lookAheadFuncsCache.get(key);\n    };\n    /* istanbul ignore next - Using plain array as dictionary will be tested on older node.js versions and IE11 */\n    LooksAhead.prototype.getLaFuncFromObj = function (key) {\n        return this.lookAheadFuncsCache[key];\n    };\n    /* istanbul ignore next */\n    LooksAhead.prototype.setLaFuncCache = function (key, value) { };\n    LooksAhead.prototype.setLaFuncCacheUsingMap = function (key, value) {\n        this.lookAheadFuncsCache.set(key, value);\n    };\n    /* istanbul ignore next - Using plain array as dictionary will be tested on older node.js versions and IE11 */\n    LooksAhead.prototype.setLaFuncUsingObj = function (key, value) {\n        this.lookAheadFuncsCache[key] = value;\n    };\n    return LooksAhead;\n}());\nexports.LooksAhead = LooksAhead;\n//# sourceMappingURL=looksahead.js.map", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar cst_1 = require(\"../../cst/cst\");\nvar utils_1 = require(\"../../../utils/utils\");\nvar cst_visitor_1 = require(\"../../cst/cst_visitor\");\nvar keys_1 = require(\"../../grammar/keys\");\nvar parser_1 = require(\"../parser\");\n/**\n * This trait is responsible for the CST building logic.\n */\nvar TreeBuilder = /** @class */ (function () {\n    function TreeBuilder() {\n    }\n    TreeBuilder.prototype.initTreeBuilder = function (config) {\n        this.LAST_EXPLICIT_RULE_STACK = [];\n        this.CST_STACK = [];\n        this.outputCst = utils_1.has(config, \"outputCst\")\n            ? config.outputCst\n            : parser_1.DEFAULT_PARSER_CONFIG.outputCst;\n        this.nodeLocationTracking = utils_1.has(config, \"nodeLocationTracking\")\n            ? config.nodeLocationTracking\n            : parser_1.DEFAULT_PARSER_CONFIG.nodeLocationTracking;\n        if (!this.outputCst) {\n            this.cstInvocationStateUpdate = utils_1.NOOP;\n            this.cstFinallyStateUpdate = utils_1.NOOP;\n            this.cstPostTerminal = utils_1.NOOP;\n            this.cstPostNonTerminal = utils_1.NOOP;\n            this.cstPostRule = utils_1.NOOP;\n            this.getLastExplicitRuleShortName = this.getLastExplicitRuleShortNameNoCst;\n            this.getPreviousExplicitRuleShortName = this.getPreviousExplicitRuleShortNameNoCst;\n            this.getLastExplicitRuleOccurrenceIndex = this.getLastExplicitRuleOccurrenceIndexNoCst;\n            this.manyInternal = this.manyInternalNoCst;\n            this.orInternal = this.orInternalNoCst;\n            this.optionInternal = this.optionInternalNoCst;\n            this.atLeastOneInternal = this.atLeastOneInternalNoCst;\n            this.manySepFirstInternal = this.manySepFirstInternalNoCst;\n            this.atLeastOneSepFirstInternal = this.atLeastOneSepFirstInternalNoCst;\n        }\n        else {\n            if (/full/i.test(this.nodeLocationTracking)) {\n                if (this.recoveryEnabled) {\n                    this.setNodeLocationFromToken = cst_1.setNodeLocationFull;\n                    this.setNodeLocationFromNode = cst_1.setNodeLocationFull;\n                    this.cstPostRule = utils_1.NOOP;\n                    this.setInitialNodeLocation = this.setInitialNodeLocationFullRecovery;\n                }\n                else {\n                    this.setNodeLocationFromToken = utils_1.NOOP;\n                    this.setNodeLocationFromNode = utils_1.NOOP;\n                    this.cstPostRule = this.cstPostRuleFull;\n                    this.setInitialNodeLocation = this.setInitialNodeLocationFullRegular;\n                }\n            }\n            else if (/onlyOffset/i.test(this.nodeLocationTracking)) {\n                if (this.recoveryEnabled) {\n                    this.setNodeLocationFromToken = (cst_1.setNodeLocationOnlyOffset);\n                    this.setNodeLocationFromNode = (cst_1.setNodeLocationOnlyOffset);\n                    this.cstPostRule = utils_1.NOOP;\n                    this.setInitialNodeLocation = this.setInitialNodeLocationOnlyOffsetRecovery;\n                }\n                else {\n                    this.setNodeLocationFromToken = utils_1.NOOP;\n                    this.setNodeLocationFromNode = utils_1.NOOP;\n                    this.cstPostRule = this.cstPostRuleOnlyOffset;\n                    this.setInitialNodeLocation = this.setInitialNodeLocationOnlyOffsetRegular;\n                }\n            }\n            else if (/none/i.test(this.nodeLocationTracking)) {\n                this.setNodeLocationFromToken = utils_1.NOOP;\n                this.setNodeLocationFromNode = utils_1.NOOP;\n                this.cstPostRule = utils_1.NOOP;\n                this.setInitialNodeLocation = utils_1.NOOP;\n            }\n            else {\n                throw Error(\"Invalid <nodeLocationTracking> config option: \\\"\" + config.nodeLocationTracking + \"\\\"\");\n            }\n        }\n    };\n    TreeBuilder.prototype.setInitialNodeLocationOnlyOffsetRecovery = function (cstNode) {\n        cstNode.location = {\n            startOffset: NaN,\n            endOffset: NaN\n        };\n    };\n    TreeBuilder.prototype.setInitialNodeLocationOnlyOffsetRegular = function (cstNode) {\n        cstNode.location = {\n            // without error recovery the starting Location of a new CstNode is guaranteed\n            // To be the next Token's startOffset (for valid inputs).\n            // For invalid inputs there won't be any CSTOutput so this potential\n            // inaccuracy does not matter\n            startOffset: this.LA(1).startOffset,\n            endOffset: NaN\n        };\n    };\n    TreeBuilder.prototype.setInitialNodeLocationFullRecovery = function (cstNode) {\n        cstNode.location = {\n            startOffset: NaN,\n            startLine: NaN,\n            startColumn: NaN,\n            endOffset: NaN,\n            endLine: NaN,\n            endColumn: NaN\n        };\n    };\n    /**\n     *  @see setInitialNodeLocationOnlyOffsetRegular for explanation why this work\n\n     * @param cstNode\n     */\n    TreeBuilder.prototype.setInitialNodeLocationFullRegular = function (cstNode) {\n        var nextToken = this.LA(1);\n        cstNode.location = {\n            startOffset: nextToken.startOffset,\n            startLine: nextToken.startLine,\n            startColumn: nextToken.startColumn,\n            endOffset: NaN,\n            endLine: NaN,\n            endColumn: NaN\n        };\n    };\n    // CST\n    TreeBuilder.prototype.cstNestedInvocationStateUpdate = function (nestedName, shortName) {\n        var cstNode = {\n            name: nestedName,\n            fullName: this.shortRuleNameToFull.get(this.getLastExplicitRuleShortName()) + nestedName,\n            children: {}\n        };\n        this.setInitialNodeLocation(cstNode);\n        this.CST_STACK.push(cstNode);\n    };\n    TreeBuilder.prototype.cstInvocationStateUpdate = function (fullRuleName, shortName) {\n        this.LAST_EXPLICIT_RULE_STACK.push(this.RULE_STACK.length - 1);\n        var cstNode = {\n            name: fullRuleName,\n            children: {}\n        };\n        this.setInitialNodeLocation(cstNode);\n        this.CST_STACK.push(cstNode);\n    };\n    TreeBuilder.prototype.cstFinallyStateUpdate = function () {\n        this.LAST_EXPLICIT_RULE_STACK.pop();\n        this.CST_STACK.pop();\n    };\n    TreeBuilder.prototype.cstNestedFinallyStateUpdate = function () {\n        var lastCstNode = this.CST_STACK.pop();\n        // TODO: the naming is bad, this should go directly to the\n        //       (correct) cstLocation update method\n        //       e.g if we put other logic in postRule...\n        this.cstPostRule(lastCstNode);\n    };\n    TreeBuilder.prototype.cstPostRuleFull = function (ruleCstNode) {\n        var prevToken = this.LA(0);\n        var loc = ruleCstNode.location;\n        // If this condition is true it means we consumed at least one Token\n        // In this CstNode or its nested children.\n        if (loc.startOffset <= prevToken.startOffset === true) {\n            loc.endOffset = prevToken.endOffset;\n            loc.endLine = prevToken.endLine;\n            loc.endColumn = prevToken.endColumn;\n        }\n        // \"empty\" CstNode edge case\n        else {\n            loc.startOffset = NaN;\n            loc.startLine = NaN;\n            loc.startColumn = NaN;\n        }\n    };\n    TreeBuilder.prototype.cstPostRuleOnlyOffset = function (ruleCstNode) {\n        var prevToken = this.LA(0);\n        var loc = ruleCstNode.location;\n        // If this condition is true it means we consumed at least one Token\n        // In this CstNode or its nested children.\n        if (loc.startOffset <= prevToken.startOffset === true) {\n            loc.endOffset = prevToken.endOffset;\n        }\n        // \"empty\" CstNode edge case\n        else {\n            loc.startOffset = NaN;\n        }\n    };\n    TreeBuilder.prototype.cstPostTerminal = function (key, consumedToken) {\n        var rootCst = this.CST_STACK[this.CST_STACK.length - 1];\n        cst_1.addTerminalToCst(rootCst, consumedToken, key);\n        // This is only used when **both** error recovery and CST Output are enabled.\n        this.setNodeLocationFromToken(rootCst.location, consumedToken);\n    };\n    TreeBuilder.prototype.cstPostNonTerminal = function (ruleCstResult, ruleName) {\n        var node = this.CST_STACK[this.CST_STACK.length - 1];\n        cst_1.addNoneTerminalToCst(node, ruleName, ruleCstResult);\n        // This is only used when **both** error recovery and CST Output are enabled.\n        this.setNodeLocationFromNode(node.location, ruleCstResult.location);\n    };\n    TreeBuilder.prototype.getBaseCstVisitorConstructor = function () {\n        if (utils_1.isUndefined(this.baseCstVisitorConstructor)) {\n            var newBaseCstVisitorConstructor = cst_visitor_1.createBaseSemanticVisitorConstructor(this.className, this.allRuleNames);\n            this.baseCstVisitorConstructor = newBaseCstVisitorConstructor;\n            return newBaseCstVisitorConstructor;\n        }\n        return this.baseCstVisitorConstructor;\n    };\n    TreeBuilder.prototype.getBaseCstVisitorConstructorWithDefaults = function () {\n        if (utils_1.isUndefined(this.baseCstVisitorWithDefaultsConstructor)) {\n            var newConstructor = cst_visitor_1.createBaseVisitorConstructorWithDefaults(this.className, this.allRuleNames, this.getBaseCstVisitorConstructor());\n            this.baseCstVisitorWithDefaultsConstructor = newConstructor;\n            return newConstructor;\n        }\n        return this.baseCstVisitorWithDefaultsConstructor;\n    };\n    TreeBuilder.prototype.nestedRuleBeforeClause = function (methodOpts, laKey) {\n        var nestedName;\n        if (methodOpts.NAME !== undefined) {\n            nestedName = methodOpts.NAME;\n            this.nestedRuleInvocationStateUpdate(nestedName, laKey);\n            return nestedName;\n        }\n        else {\n            return undefined;\n        }\n    };\n    TreeBuilder.prototype.nestedAltBeforeClause = function (methodOpts, occurrence, methodKeyIdx, altIdx) {\n        var ruleIdx = this.getLastExplicitRuleShortName();\n        var shortName = keys_1.getKeyForAltIndex(ruleIdx, methodKeyIdx, occurrence, altIdx);\n        var nestedName;\n        if (methodOpts.NAME !== undefined) {\n            nestedName = methodOpts.NAME;\n            this.nestedRuleInvocationStateUpdate(nestedName, shortName);\n            return {\n                shortName: shortName,\n                nestedName: nestedName\n            };\n        }\n        else {\n            return undefined;\n        }\n    };\n    TreeBuilder.prototype.nestedRuleFinallyClause = function (laKey, nestedName) {\n        var cstStack = this.CST_STACK;\n        var nestedRuleCst = cstStack[cstStack.length - 1];\n        this.nestedRuleFinallyStateUpdate();\n        // this return a different result than the previous invocation because \"nestedRuleFinallyStateUpdate\" pops the cst stack\n        var parentCstNode = cstStack[cstStack.length - 1];\n        cst_1.addNoneTerminalToCst(parentCstNode, nestedName, nestedRuleCst);\n        this.setNodeLocationFromNode(parentCstNode.location, nestedRuleCst.location);\n    };\n    TreeBuilder.prototype.getLastExplicitRuleShortName = function () {\n        var lastExplictIndex = this.LAST_EXPLICIT_RULE_STACK[this.LAST_EXPLICIT_RULE_STACK.length - 1];\n        return this.RULE_STACK[lastExplictIndex];\n    };\n    TreeBuilder.prototype.getLastExplicitRuleShortNameNoCst = function () {\n        var ruleStack = this.RULE_STACK;\n        return ruleStack[ruleStack.length - 1];\n    };\n    TreeBuilder.prototype.getPreviousExplicitRuleShortName = function () {\n        var lastExplicitIndex = this.LAST_EXPLICIT_RULE_STACK[this.LAST_EXPLICIT_RULE_STACK.length - 2];\n        return this.RULE_STACK[lastExplicitIndex];\n    };\n    TreeBuilder.prototype.getPreviousExplicitRuleShortNameNoCst = function () {\n        var ruleStack = this.RULE_STACK;\n        return ruleStack[ruleStack.length - 2];\n    };\n    TreeBuilder.prototype.getLastExplicitRuleOccurrenceIndex = function () {\n        var lastExplicitIndex = this.LAST_EXPLICIT_RULE_STACK[this.LAST_EXPLICIT_RULE_STACK.length - 1];\n        return this.RULE_OCCURRENCE_STACK[lastExplicitIndex];\n    };\n    TreeBuilder.prototype.getLastExplicitRuleOccurrenceIndexNoCst = function () {\n        var occurrenceStack = this.RULE_OCCURRENCE_STACK;\n        return occurrenceStack[occurrenceStack.length - 1];\n    };\n    TreeBuilder.prototype.nestedRuleInvocationStateUpdate = function (nestedRuleName, shortNameKey) {\n        this.RULE_OCCURRENCE_STACK.push(1);\n        this.RULE_STACK.push(shortNameKey);\n        this.cstNestedInvocationStateUpdate(nestedRuleName, shortNameKey);\n    };\n    TreeBuilder.prototype.nestedRuleFinallyStateUpdate = function () {\n        this.RULE_STACK.pop();\n        this.RULE_OCCURRENCE_STACK.pop();\n        // NOOP when cst is disabled\n        this.cstNestedFinallyStateUpdate();\n    };\n    return TreeBuilder;\n}());\nexports.TreeBuilder = TreeBuilder;\n//# sourceMappingURL=tree_builder.js.map", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar utils_1 = require(\"../../utils/utils\");\nvar lang_extensions_1 = require(\"../../lang/lang_extensions\");\nvar checks_1 = require(\"../grammar/checks\");\nfunction defaultVisit(ctx, param) {\n    var childrenNames = utils_1.keys(ctx);\n    var childrenNamesLength = childrenNames.length;\n    for (var i = 0; i < childrenNamesLength; i++) {\n        var currChildName = childrenNames[i];\n        var currChildArray = ctx[currChildName];\n        var currChildArrayLength = currChildArray.length;\n        for (var j = 0; j < currChildArrayLength; j++) {\n            var currChild = currChildArray[j];\n            // distinction between Tokens Children and CstNode children\n            if (currChild.tokenTypeIdx === undefined) {\n                if (currChild.fullName !== undefined) {\n                    this[currChild.fullName](currChild.children, param);\n                }\n                else {\n                    this[currChild.name](currChild.children, param);\n                }\n            }\n        }\n    }\n    // defaultVisit does not support generic out param\n    return undefined;\n}\nexports.defaultVisit = defaultVisit;\nfunction createBaseSemanticVisitorConstructor(grammarName, ruleNames) {\n    var derivedConstructor = function () { };\n    // can be overwritten according to:\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/\n    // name?redirectlocale=en-US&redirectslug=JavaScript%2FReference%2FGlobal_Objects%2FFunction%2Fname\n    lang_extensions_1.defineNameProp(derivedConstructor, grammarName + \"BaseSemantics\");\n    var semanticProto = {\n        visit: function (cstNode, param) {\n            // enables writing more concise visitor methods when CstNode has only a single child\n            if (utils_1.isArray(cstNode)) {\n                // A CST Node's children dictionary can never have empty arrays as values\n                // If a key is defined there will be at least one element in the corresponding value array.\n                cstNode = cstNode[0];\n            }\n            // enables passing optional CstNodes concisely.\n            if (utils_1.isUndefined(cstNode)) {\n                return undefined;\n            }\n            if (cstNode.fullName !== undefined) {\n                return this[cstNode.fullName](cstNode.children, param);\n            }\n            else {\n                return this[cstNode.name](cstNode.children, param);\n            }\n        },\n        validateVisitor: function () {\n            var semanticDefinitionErrors = validateVisitor(this, ruleNames);\n            if (!utils_1.isEmpty(semanticDefinitionErrors)) {\n                var errorMessages = utils_1.map(semanticDefinitionErrors, function (currDefError) { return currDefError.msg; });\n                throw Error(\"Errors Detected in CST Visitor <\" + lang_extensions_1.functionName(this.constructor) + \">:\\n\\t\" +\n                    (\"\" + errorMessages.join(\"\\n\\n\").replace(/\\n/g, \"\\n\\t\")));\n            }\n        }\n    };\n    derivedConstructor.prototype = semanticProto;\n    derivedConstructor.prototype.constructor = derivedConstructor;\n    derivedConstructor._RULE_NAMES = ruleNames;\n    return derivedConstructor;\n}\nexports.createBaseSemanticVisitorConstructor = createBaseSemanticVisitorConstructor;\nfunction createBaseVisitorConstructorWithDefaults(grammarName, ruleNames, baseConstructor) {\n    var derivedConstructor = function () { };\n    // can be overwritten according to:\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/\n    // name?redirectlocale=en-US&redirectslug=JavaScript%2FReference%2FGlobal_Objects%2FFunction%2Fname\n    lang_extensions_1.defineNameProp(derivedConstructor, grammarName + \"BaseSemanticsWithDefaults\");\n    var withDefaultsProto = Object.create(baseConstructor.prototype);\n    utils_1.forEach(ruleNames, function (ruleName) {\n        withDefaultsProto[ruleName] = defaultVisit;\n    });\n    derivedConstructor.prototype = withDefaultsProto;\n    derivedConstructor.prototype.constructor = derivedConstructor;\n    return derivedConstructor;\n}\nexports.createBaseVisitorConstructorWithDefaults = createBaseVisitorConstructorWithDefaults;\nvar CstVisitorDefinitionError;\n(function (CstVisitorDefinitionError) {\n    CstVisitorDefinitionError[CstVisitorDefinitionError[\"REDUNDANT_METHOD\"] = 0] = \"REDUNDANT_METHOD\";\n    CstVisitorDefinitionError[CstVisitorDefinitionError[\"MISSING_METHOD\"] = 1] = \"MISSING_METHOD\";\n})(CstVisitorDefinitionError = exports.CstVisitorDefinitionError || (exports.CstVisitorDefinitionError = {}));\nfunction validateVisitor(visitorInstance, ruleNames) {\n    var missingErrors = validateMissingCstMethods(visitorInstance, ruleNames);\n    var redundantErrors = validateRedundantMethods(visitorInstance, ruleNames);\n    return missingErrors.concat(redundantErrors);\n}\nexports.validateVisitor = validateVisitor;\nfunction validateMissingCstMethods(visitorInstance, ruleNames) {\n    var errors = utils_1.map(ruleNames, function (currRuleName) {\n        if (!utils_1.isFunction(visitorInstance[currRuleName])) {\n            return {\n                msg: \"Missing visitor method: <\" + currRuleName + \"> on \" + lang_extensions_1.functionName(visitorInstance.constructor) + \" CST Visitor.\",\n                type: CstVisitorDefinitionError.MISSING_METHOD,\n                methodName: currRuleName\n            };\n        }\n    });\n    return utils_1.compact(errors);\n}\nexports.validateMissingCstMethods = validateMissingCstMethods;\nvar VALID_PROP_NAMES = [\"constructor\", \"visit\", \"validateVisitor\"];\nfunction validateRedundantMethods(visitorInstance, ruleNames) {\n    var errors = [];\n    for (var prop in visitorInstance) {\n        if (checks_1.validTermsPattern.test(prop) &&\n            utils_1.isFunction(visitorInstance[prop]) &&\n            !utils_1.contains(VALID_PROP_NAMES, prop) &&\n            !utils_1.contains(ruleNames, prop)) {\n            errors.push({\n                msg: \"Redundant visitor method: <\" + prop + \"> on \" + lang_extensions_1.functionName(visitorInstance.constructor) + \" CST Visitor\\n\" +\n                    \"There is no Grammar Rule corresponding to this method's name.\\n\" +\n                    (\"For utility methods on visitor classes use methods names that do not match /\" + checks_1.validTermsPattern.source + \"/.\"),\n                type: CstVisitorDefinitionError.REDUNDANT_METHOD,\n                methodName: prop\n            });\n        }\n    }\n    return errors;\n}\nexports.validateRedundantMethods = validateRedundantMethods;\n//# sourceMappingURL=cst_visitor.js.map", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar parser_1 = require(\"../parser\");\n/**\n * Trait responsible abstracting over the interaction with Lexer output (Token vector).\n *\n * This could be generalized to support other kinds of lexers, e.g.\n * - Just in Time Lexing / Lexer-Less parsing.\n * - Streaming Lexer.\n */\nvar LexerAdapter = /** @class */ (function () {\n    function LexerAdapter() {\n    }\n    LexerAdapter.prototype.initLexerAdapter = function () {\n        this.tokVector = [];\n        this.tokVectorLength = 0;\n        this.currIdx = -1;\n    };\n    Object.defineProperty(LexerAdapter.prototype, \"input\", {\n        get: function () {\n            return this.tokVector;\n        },\n        set: function (newInput) {\n            this.reset();\n            this.tokVector = newInput;\n            this.tokVectorLength = newInput.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // skips a token and returns the next token\n    LexerAdapter.prototype.SKIP_TOKEN = function () {\n        if (this.currIdx <= this.tokVector.length - 2) {\n            this.consumeToken();\n            return this.LA(1);\n        }\n        else {\n            return parser_1.END_OF_FILE;\n        }\n    };\n    // Lexer (accessing Token vector) related methods which can be overridden to implement lazy lexers\n    // or lexers dependent on parser context.\n    LexerAdapter.prototype.LA = function (howMuch) {\n        // does: is this optimization (saving tokVectorLength benefits?)\n        if (this.currIdx + howMuch < 0 ||\n            this.tokVectorLength <= this.currIdx + howMuch) {\n            return parser_1.END_OF_FILE;\n        }\n        else {\n            return this.tokVector[this.currIdx + howMuch];\n        }\n    };\n    LexerAdapter.prototype.consumeToken = function () {\n        this.currIdx++;\n    };\n    LexerAdapter.prototype.exportLexerState = function () {\n        return this.currIdx;\n    };\n    LexerAdapter.prototype.importLexerState = function (newState) {\n        this.currIdx = newState;\n    };\n    LexerAdapter.prototype.resetLexerState = function () {\n        this.currIdx = -1;\n    };\n    LexerAdapter.prototype.moveToTerminatedState = function () {\n        this.currIdx = this.tokVector.length - 1;\n    };\n    LexerAdapter.prototype.getLexerPosition = function () {\n        return this.exportLexerState();\n    };\n    return LexerAdapter;\n}());\nexports.LexerAdapter = LexerAdapter;\n//# sourceMappingURL=lexer_adapter.js.map", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar utils_1 = require(\"../../../utils/utils\");\nvar exceptions_public_1 = require(\"../../exceptions_public\");\nvar parser_1 = require(\"../parser\");\nvar errors_public_1 = require(\"../../errors_public\");\nvar gast_builder_1 = require(\"../../gast_builder\");\nvar checks_1 = require(\"../../grammar/checks\");\nvar gast_public_1 = require(\"../../grammar/gast/gast_public\");\n/**\n * This trait is responsible for implementing the offical API\n * for defining Chevrotain parsers, i.e:\n * - CONSUME\n * - RULE\n * - OPTION\n * - ...\n */\nvar RecognizerApi = /** @class */ (function () {\n    function RecognizerApi() {\n    }\n    RecognizerApi.prototype.CONSUME = function (tokType, options) {\n        return this.consumeInternal(tokType, 0, options);\n    };\n    RecognizerApi.prototype.CONSUME1 = function (tokType, options) {\n        return this.consumeInternal(tokType, 1, options);\n    };\n    RecognizerApi.prototype.CONSUME2 = function (tokType, options) {\n        return this.consumeInternal(tokType, 2, options);\n    };\n    RecognizerApi.prototype.CONSUME3 = function (tokType, options) {\n        return this.consumeInternal(tokType, 3, options);\n    };\n    RecognizerApi.prototype.CONSUME4 = function (tokType, options) {\n        return this.consumeInternal(tokType, 4, options);\n    };\n    RecognizerApi.prototype.CONSUME5 = function (tokType, options) {\n        return this.consumeInternal(tokType, 5, options);\n    };\n    RecognizerApi.prototype.CONSUME6 = function (tokType, options) {\n        return this.consumeInternal(tokType, 6, options);\n    };\n    RecognizerApi.prototype.CONSUME7 = function (tokType, options) {\n        return this.consumeInternal(tokType, 7, options);\n    };\n    RecognizerApi.prototype.CONSUME8 = function (tokType, options) {\n        return this.consumeInternal(tokType, 8, options);\n    };\n    RecognizerApi.prototype.CONSUME9 = function (tokType, options) {\n        return this.consumeInternal(tokType, 9, options);\n    };\n    RecognizerApi.prototype.SUBRULE = function (ruleToCall, options) {\n        return this.subruleInternal(ruleToCall, 0, options);\n    };\n    RecognizerApi.prototype.SUBRULE1 = function (ruleToCall, options) {\n        return this.subruleInternal(ruleToCall, 1, options);\n    };\n    RecognizerApi.prototype.SUBRULE2 = function (ruleToCall, options) {\n        return this.subruleInternal(ruleToCall, 2, options);\n    };\n    RecognizerApi.prototype.SUBRULE3 = function (ruleToCall, options) {\n        return this.subruleInternal(ruleToCall, 3, options);\n    };\n    RecognizerApi.prototype.SUBRULE4 = function (ruleToCall, options) {\n        return this.subruleInternal(ruleToCall, 4, options);\n    };\n    RecognizerApi.prototype.SUBRULE5 = function (ruleToCall, options) {\n        return this.subruleInternal(ruleToCall, 5, options);\n    };\n    RecognizerApi.prototype.SUBRULE6 = function (ruleToCall, options) {\n        return this.subruleInternal(ruleToCall, 6, options);\n    };\n    RecognizerApi.prototype.SUBRULE7 = function (ruleToCall, options) {\n        return this.subruleInternal(ruleToCall, 7, options);\n    };\n    RecognizerApi.prototype.SUBRULE8 = function (ruleToCall, options) {\n        return this.subruleInternal(ruleToCall, 8, options);\n    };\n    RecognizerApi.prototype.SUBRULE9 = function (ruleToCall, options) {\n        return this.subruleInternal(ruleToCall, 9, options);\n    };\n    RecognizerApi.prototype.OPTION = function (actionORMethodDef) {\n        return this.optionInternal(actionORMethodDef, 0);\n    };\n    RecognizerApi.prototype.OPTION1 = function (actionORMethodDef) {\n        return this.optionInternal(actionORMethodDef, 1);\n    };\n    RecognizerApi.prototype.OPTION2 = function (actionORMethodDef) {\n        return this.optionInternal(actionORMethodDef, 2);\n    };\n    RecognizerApi.prototype.OPTION3 = function (actionORMethodDef) {\n        return this.optionInternal(actionORMethodDef, 3);\n    };\n    RecognizerApi.prototype.OPTION4 = function (actionORMethodDef) {\n        return this.optionInternal(actionORMethodDef, 4);\n    };\n    RecognizerApi.prototype.OPTION5 = function (actionORMethodDef) {\n        return this.optionInternal(actionORMethodDef, 5);\n    };\n    RecognizerApi.prototype.OPTION6 = function (actionORMethodDef) {\n        return this.optionInternal(actionORMethodDef, 6);\n    };\n    RecognizerApi.prototype.OPTION7 = function (actionORMethodDef) {\n        return this.optionInternal(actionORMethodDef, 7);\n    };\n    RecognizerApi.prototype.OPTION8 = function (actionORMethodDef) {\n        return this.optionInternal(actionORMethodDef, 8);\n    };\n    RecognizerApi.prototype.OPTION9 = function (actionORMethodDef) {\n        return this.optionInternal(actionORMethodDef, 9);\n    };\n    RecognizerApi.prototype.OR = function (altsOrOpts) {\n        return this.orInternal(altsOrOpts, 0);\n    };\n    RecognizerApi.prototype.OR1 = function (altsOrOpts) {\n        return this.orInternal(altsOrOpts, 1);\n    };\n    RecognizerApi.prototype.OR2 = function (altsOrOpts) {\n        return this.orInternal(altsOrOpts, 2);\n    };\n    RecognizerApi.prototype.OR3 = function (altsOrOpts) {\n        return this.orInternal(altsOrOpts, 3);\n    };\n    RecognizerApi.prototype.OR4 = function (altsOrOpts) {\n        return this.orInternal(altsOrOpts, 4);\n    };\n    RecognizerApi.prototype.OR5 = function (altsOrOpts) {\n        return this.orInternal(altsOrOpts, 5);\n    };\n    RecognizerApi.prototype.OR6 = function (altsOrOpts) {\n        return this.orInternal(altsOrOpts, 6);\n    };\n    RecognizerApi.prototype.OR7 = function (altsOrOpts) {\n        return this.orInternal(altsOrOpts, 7);\n    };\n    RecognizerApi.prototype.OR8 = function (altsOrOpts) {\n        return this.orInternal(altsOrOpts, 8);\n    };\n    RecognizerApi.prototype.OR9 = function (altsOrOpts) {\n        return this.orInternal(altsOrOpts, 9);\n    };\n    RecognizerApi.prototype.MANY = function (actionORMethodDef) {\n        this.manyInternal(0, actionORMethodDef);\n    };\n    RecognizerApi.prototype.MANY1 = function (actionORMethodDef) {\n        this.manyInternal(1, actionORMethodDef);\n    };\n    RecognizerApi.prototype.MANY2 = function (actionORMethodDef) {\n        this.manyInternal(2, actionORMethodDef);\n    };\n    RecognizerApi.prototype.MANY3 = function (actionORMethodDef) {\n        this.manyInternal(3, actionORMethodDef);\n    };\n    RecognizerApi.prototype.MANY4 = function (actionORMethodDef) {\n        this.manyInternal(4, actionORMethodDef);\n    };\n    RecognizerApi.prototype.MANY5 = function (actionORMethodDef) {\n        this.manyInternal(5, actionORMethodDef);\n    };\n    RecognizerApi.prototype.MANY6 = function (actionORMethodDef) {\n        this.manyInternal(6, actionORMethodDef);\n    };\n    RecognizerApi.prototype.MANY7 = function (actionORMethodDef) {\n        this.manyInternal(7, actionORMethodDef);\n    };\n    RecognizerApi.prototype.MANY8 = function (actionORMethodDef) {\n        this.manyInternal(8, actionORMethodDef);\n    };\n    RecognizerApi.prototype.MANY9 = function (actionORMethodDef) {\n        this.manyInternal(9, actionORMethodDef);\n    };\n    RecognizerApi.prototype.MANY_SEP = function (options) {\n        this.manySepFirstInternal(0, options);\n    };\n    RecognizerApi.prototype.MANY_SEP1 = function (options) {\n        this.manySepFirstInternal(1, options);\n    };\n    RecognizerApi.prototype.MANY_SEP2 = function (options) {\n        this.manySepFirstInternal(2, options);\n    };\n    RecognizerApi.prototype.MANY_SEP3 = function (options) {\n        this.manySepFirstInternal(3, options);\n    };\n    RecognizerApi.prototype.MANY_SEP4 = function (options) {\n        this.manySepFirstInternal(4, options);\n    };\n    RecognizerApi.prototype.MANY_SEP5 = function (options) {\n        this.manySepFirstInternal(5, options);\n    };\n    RecognizerApi.prototype.MANY_SEP6 = function (options) {\n        this.manySepFirstInternal(6, options);\n    };\n    RecognizerApi.prototype.MANY_SEP7 = function (options) {\n        this.manySepFirstInternal(7, options);\n    };\n    RecognizerApi.prototype.MANY_SEP8 = function (options) {\n        this.manySepFirstInternal(8, options);\n    };\n    RecognizerApi.prototype.MANY_SEP9 = function (options) {\n        this.manySepFirstInternal(9, options);\n    };\n    RecognizerApi.prototype.AT_LEAST_ONE = function (actionORMethodDef) {\n        this.atLeastOneInternal(0, actionORMethodDef);\n    };\n    RecognizerApi.prototype.AT_LEAST_ONE1 = function (actionORMethodDef) {\n        return this.atLeastOneInternal(1, actionORMethodDef);\n    };\n    RecognizerApi.prototype.AT_LEAST_ONE2 = function (actionORMethodDef) {\n        this.atLeastOneInternal(2, actionORMethodDef);\n    };\n    RecognizerApi.prototype.AT_LEAST_ONE3 = function (actionORMethodDef) {\n        this.atLeastOneInternal(3, actionORMethodDef);\n    };\n    RecognizerApi.prototype.AT_LEAST_ONE4 = function (actionORMethodDef) {\n        this.atLeastOneInternal(4, actionORMethodDef);\n    };\n    RecognizerApi.prototype.AT_LEAST_ONE5 = function (actionORMethodDef) {\n        this.atLeastOneInternal(5, actionORMethodDef);\n    };\n    RecognizerApi.prototype.AT_LEAST_ONE6 = function (actionORMethodDef) {\n        this.atLeastOneInternal(6, actionORMethodDef);\n    };\n    RecognizerApi.prototype.AT_LEAST_ONE7 = function (actionORMethodDef) {\n        this.atLeastOneInternal(7, actionORMethodDef);\n    };\n    RecognizerApi.prototype.AT_LEAST_ONE8 = function (actionORMethodDef) {\n        this.atLeastOneInternal(8, actionORMethodDef);\n    };\n    RecognizerApi.prototype.AT_LEAST_ONE9 = function (actionORMethodDef) {\n        this.atLeastOneInternal(9, actionORMethodDef);\n    };\n    RecognizerApi.prototype.AT_LEAST_ONE_SEP = function (options) {\n        this.atLeastOneSepFirstInternal(0, options);\n    };\n    RecognizerApi.prototype.AT_LEAST_ONE_SEP1 = function (options) {\n        this.atLeastOneSepFirstInternal(1, options);\n    };\n    RecognizerApi.prototype.AT_LEAST_ONE_SEP2 = function (options) {\n        this.atLeastOneSepFirstInternal(2, options);\n    };\n    RecognizerApi.prototype.AT_LEAST_ONE_SEP3 = function (options) {\n        this.atLeastOneSepFirstInternal(3, options);\n    };\n    RecognizerApi.prototype.AT_LEAST_ONE_SEP4 = function (options) {\n        this.atLeastOneSepFirstInternal(4, options);\n    };\n    RecognizerApi.prototype.AT_LEAST_ONE_SEP5 = function (options) {\n        this.atLeastOneSepFirstInternal(5, options);\n    };\n    RecognizerApi.prototype.AT_LEAST_ONE_SEP6 = function (options) {\n        this.atLeastOneSepFirstInternal(6, options);\n    };\n    RecognizerApi.prototype.AT_LEAST_ONE_SEP7 = function (options) {\n        this.atLeastOneSepFirstInternal(7, options);\n    };\n    RecognizerApi.prototype.AT_LEAST_ONE_SEP8 = function (options) {\n        this.atLeastOneSepFirstInternal(8, options);\n    };\n    RecognizerApi.prototype.AT_LEAST_ONE_SEP9 = function (options) {\n        this.atLeastOneSepFirstInternal(9, options);\n    };\n    RecognizerApi.prototype.RULE = function (name, implementation, \n    // TODO: how to describe the optional return type of CSTNode? T|CstNode is not good because it is not backward\n    // compatible, T|any is very general...\n    config) {\n        if (config === void 0) { config = parser_1.DEFAULT_RULE_CONFIG; }\n        if (utils_1.contains(this.definedRulesNames, name)) {\n            var errMsg = errors_public_1.defaultGrammarValidatorErrorProvider.buildDuplicateRuleNameError({\n                topLevelRule: name,\n                grammarName: this.className\n            });\n            var error = {\n                message: errMsg,\n                type: parser_1.ParserDefinitionErrorType.DUPLICATE_RULE_NAME,\n                ruleName: name\n            };\n            this.definitionErrors.push(error);\n        }\n        this.definedRulesNames.push(name);\n        // only build the gast representation once.\n        if (!this.gastProductionsCache.containsKey(name) &&\n            !this.serializedGrammar) {\n            var gastProduction = gast_builder_1.buildTopProduction(implementation.toString(), name, this.tokensMap);\n            this.gastProductionsCache.put(name, gastProduction);\n        }\n        var ruleImplementation = this.defineRule(name, implementation, config);\n        this[name] = ruleImplementation;\n        return ruleImplementation;\n    };\n    RecognizerApi.prototype.OVERRIDE_RULE = function (name, impl, config) {\n        if (config === void 0) { config = parser_1.DEFAULT_RULE_CONFIG; }\n        var ruleErrors = [];\n        ruleErrors = ruleErrors.concat(checks_1.validateRuleIsOverridden(name, this.definedRulesNames, this.className));\n        this.definitionErrors.push.apply(this.definitionErrors, ruleErrors); // mutability for the win\n        // Avoid constructing the GAST if we have serialized it\n        if (!this.serializedGrammar) {\n            var gastProduction = gast_builder_1.buildTopProduction(impl.toString(), name, this.tokensMap);\n            this.gastProductionsCache.put(name, gastProduction);\n        }\n        var ruleImplementation = this.defineRule(name, impl, config);\n        this[name] = ruleImplementation;\n        return ruleImplementation;\n    };\n    RecognizerApi.prototype.BACKTRACK = function (grammarRule, args) {\n        return function () {\n            // save org state\n            this.isBackTrackingStack.push(1);\n            var orgState = this.saveRecogState();\n            try {\n                grammarRule.apply(this, args);\n                // if no exception was thrown we have succeed parsing the rule.\n                return true;\n            }\n            catch (e) {\n                if (exceptions_public_1.isRecognitionException(e)) {\n                    return false;\n                }\n                else {\n                    throw e;\n                }\n            }\n            finally {\n                this.reloadRecogState(orgState);\n                this.isBackTrackingStack.pop();\n            }\n        };\n    };\n    // GAST export APIs\n    RecognizerApi.prototype.getGAstProductions = function () {\n        return this.gastProductionsCache;\n    };\n    RecognizerApi.prototype.getSerializedGastProductions = function () {\n        return gast_public_1.serializeGrammar(this.gastProductionsCache.values());\n    };\n    return RecognizerApi;\n}());\nexports.RecognizerApi = RecognizerApi;\n//# sourceMappingURL=recognizer_api.js.map", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar utils_1 = require(\"../../../utils/utils\");\nvar keys_1 = require(\"../../grammar/keys\");\nvar exceptions_public_1 = require(\"../../exceptions_public\");\nvar lookahead_1 = require(\"../../grammar/lookahead\");\nvar interpreter_1 = require(\"../../grammar/interpreter\");\nvar parser_1 = require(\"../parser\");\nvar recoverable_1 = require(\"./recoverable\");\nvar tokens_public_1 = require(\"../../../scan/tokens_public\");\nvar tokens_1 = require(\"../../../scan/tokens\");\nvar lang_extensions_1 = require(\"../../../lang/lang_extensions\");\n/**\n * This trait is responsible for the runtime parsing engine\n * Used by the official API (recognizer_api.ts)\n */\nvar RecognizerEngine = /** @class */ (function () {\n    function RecognizerEngine() {\n    }\n    RecognizerEngine.prototype.initRecognizerEngine = function (tokenVocabulary, config) {\n        this.className = lang_extensions_1.classNameFromInstance(this);\n        // TODO: would using an ES6 Map or plain object be faster (CST building scenario)\n        this.shortRuleNameToFull = new lang_extensions_1.HashTable();\n        this.fullRuleNameToShort = new lang_extensions_1.HashTable();\n        this.ruleShortNameIdx = 256;\n        this.tokenMatcher = tokens_1.tokenStructuredMatcherNoCategories;\n        this.definedRulesNames = [];\n        this.tokensMap = {};\n        this.allRuleNames = [];\n        this.isBackTrackingStack = [];\n        this.RULE_STACK = [];\n        this.RULE_OCCURRENCE_STACK = [];\n        this.gastProductionsCache = new lang_extensions_1.HashTable();\n        this.serializedGrammar = utils_1.has(config, \"serializedGrammar\")\n            ? config.serializedGrammar\n            : parser_1.DEFAULT_PARSER_CONFIG.serializedGrammar;\n        if (utils_1.isArray(tokenVocabulary)) {\n            // This only checks for Token vocabularies provided as arrays.\n            // That is good enough because the main objective is to detect users of pre-V4.0 APIs\n            // rather than all edge cases of empty Token vocabularies.\n            if (utils_1.isEmpty(tokenVocabulary)) {\n                throw Error(\"A Token Vocabulary cannot be empty.\\n\" +\n                    \"\\tNote that the first argument for the parser constructor\\n\" +\n                    \"\\tis no longer a Token vector (since v4.0).\");\n            }\n            if (typeof tokenVocabulary[0].startOffset === \"number\") {\n                throw Error(\"The Parser constructor no longer accepts a token vector as the first argument.\\n\" +\n                    \"\\tSee: https://sap.github.io/chevrotain/docs/changes/BREAKING_CHANGES.html#_4-0-0\\n\" +\n                    \"\\tFor Further details.\");\n            }\n        }\n        if (utils_1.isArray(tokenVocabulary)) {\n            this.tokensMap = utils_1.reduce(tokenVocabulary, function (acc, tokenClazz) {\n                acc[tokens_public_1.tokenName(tokenClazz)] = tokenClazz;\n                return acc;\n            }, {});\n        }\n        else if (utils_1.has(tokenVocabulary, \"modes\") &&\n            utils_1.every(utils_1.flatten(utils_1.values(tokenVocabulary.modes)), tokens_1.isTokenType)) {\n            var allTokenTypes = utils_1.flatten(utils_1.values(tokenVocabulary.modes));\n            var uniqueTokens = utils_1.uniq(allTokenTypes);\n            this.tokensMap = utils_1.reduce(uniqueTokens, function (acc, tokenClazz) {\n                acc[tokens_public_1.tokenName(tokenClazz)] = tokenClazz;\n                return acc;\n            }, {});\n        }\n        else if (utils_1.isObject(tokenVocabulary)) {\n            this.tokensMap = utils_1.cloneObj(tokenVocabulary);\n        }\n        else {\n            throw new Error(\"<tokensDictionary> argument must be An Array of Token constructors,\" +\n                \" A dictionary of Token constructors or an IMultiModeLexerDefinition\");\n        }\n        // always add EOF to the tokenNames -> constructors map. it is useful to assure all the input has been\n        // parsed with a clear error message (\"expecting EOF but found ...\")\n        /* tslint:disable */\n        this.tokensMap[\"EOF\"] = tokens_public_1.EOF;\n        // TODO: This check may not be accurate for multi mode lexers\n        var noTokenCategoriesUsed = utils_1.every(utils_1.values(tokenVocabulary), function (tokenConstructor) { return utils_1.isEmpty(tokenConstructor.categoryMatches); });\n        this.tokenMatcher = noTokenCategoriesUsed\n            ? tokens_1.tokenStructuredMatcherNoCategories\n            : tokens_1.tokenStructuredMatcher;\n        // Because ES2015+ syntax should be supported for creating Token classes\n        // We cannot assume that the Token classes were created using the \"extendToken\" utilities\n        // Therefore we must augment the Token classes both on Lexer initialization and on Parser initialization\n        tokens_1.augmentTokenTypes(utils_1.values(this.tokensMap));\n    };\n    RecognizerEngine.prototype.defineRule = function (ruleName, impl, config) {\n        if (this.selfAnalysisDone) {\n            throw Error(\"Grammar rule <\" + ruleName + \"> may not be defined after the 'performSelfAnalysis' method has been called'\\n\" +\n                \"Make sure that all grammar rule definitions are done before 'performSelfAnalysis' is called.\");\n        }\n        var resyncEnabled = utils_1.has(config, \"resyncEnabled\")\n            ? config.resyncEnabled\n            : parser_1.DEFAULT_RULE_CONFIG.resyncEnabled;\n        var recoveryValueFunc = utils_1.has(config, \"recoveryValueFunc\")\n            ? config.recoveryValueFunc\n            : parser_1.DEFAULT_RULE_CONFIG.recoveryValueFunc;\n        // performance optimization: Use small integers as keys for the longer human readable \"full\" rule names.\n        // this greatly improves Map access time (as much as 8% for some performance benchmarks).\n        /* tslint:disable */\n        var shortName = this.ruleShortNameIdx <<\n            (keys_1.BITS_FOR_METHOD_IDX + keys_1.BITS_FOR_OCCURRENCE_IDX);\n        /* tslint:enable */\n        this.ruleShortNameIdx++;\n        this.shortRuleNameToFull.put(shortName, ruleName);\n        this.fullRuleNameToShort.put(ruleName, shortName);\n        function invokeRuleWithTry(args) {\n            try {\n                // TODO: dynamically get rid of this?\n                if (this.outputCst === true) {\n                    impl.apply(this, args);\n                    var cst = this.CST_STACK[this.CST_STACK.length - 1];\n                    this.cstPostRule(cst);\n                    return cst;\n                }\n                else {\n                    return impl.apply(this, args);\n                }\n            }\n            catch (e) {\n                var isFirstInvokedRule = this.RULE_STACK.length === 1;\n                // note the reSync is always enabled for the first rule invocation, because we must always be able to\n                // reSync with EOF and just output some INVALID ParseTree\n                // during backtracking reSync recovery is disabled, otherwise we can't be certain the backtracking\n                // path is really the most valid one\n                var reSyncEnabled = resyncEnabled &&\n                    !this.isBackTracking() &&\n                    this.recoveryEnabled;\n                if (exceptions_public_1.isRecognitionException(e)) {\n                    if (reSyncEnabled) {\n                        var reSyncTokType = this.findReSyncTokenType();\n                        if (this.isInCurrentRuleReSyncSet(reSyncTokType)) {\n                            e.resyncedTokens = this.reSyncTo(reSyncTokType);\n                            if (this.outputCst) {\n                                var partialCstResult = this.CST_STACK[this.CST_STACK.length - 1];\n                                partialCstResult.recoveredNode = true;\n                                return partialCstResult;\n                            }\n                            else {\n                                return recoveryValueFunc();\n                            }\n                        }\n                        else {\n                            if (this.outputCst) {\n                                var partialCstResult = this.CST_STACK[this.CST_STACK.length - 1];\n                                partialCstResult.recoveredNode = true;\n                                e.partialCstResult = partialCstResult;\n                            }\n                            // to be handled Further up the call stack\n                            throw e;\n                        }\n                    }\n                    else if (isFirstInvokedRule) {\n                        // otherwise a Redundant input error will be created as well and we cannot guarantee that this is indeed the case\n                        this.moveToTerminatedState();\n                        // the parser should never throw one of its own errors outside its flow.\n                        // even if error recovery is disabled\n                        return recoveryValueFunc();\n                    }\n                    else {\n                        // to be handled Further up the call stack\n                        throw e;\n                    }\n                }\n                else {\n                    // some other Error type which we don't know how to handle (for example a built in JavaScript Error)\n                    throw e;\n                }\n            }\n            finally {\n                this.ruleFinallyStateUpdate();\n            }\n        }\n        var wrappedGrammarRule;\n        wrappedGrammarRule = function (idxInCallingRule, args) {\n            if (idxInCallingRule === void 0) { idxInCallingRule = 0; }\n            this.ruleInvocationStateUpdate(shortName, ruleName, idxInCallingRule);\n            return invokeRuleWithTry.call(this, args);\n        };\n        var ruleNamePropName = \"ruleName\";\n        wrappedGrammarRule[ruleNamePropName] = ruleName;\n        return wrappedGrammarRule;\n    };\n    // Implementation of parsing DSL\n    RecognizerEngine.prototype.optionInternal = function (actionORMethodDef, occurrence) {\n        var key = this.getKeyForAutomaticLookahead(keys_1.OPTION_IDX, occurrence);\n        var nestedName = this.nestedRuleBeforeClause(actionORMethodDef, key);\n        try {\n            return this.optionInternalLogic(actionORMethodDef, occurrence, key);\n        }\n        finally {\n            if (nestedName !== undefined) {\n                this.nestedRuleFinallyClause(key, nestedName);\n            }\n        }\n    };\n    RecognizerEngine.prototype.optionInternalNoCst = function (actionORMethodDef, occurrence) {\n        var key = this.getKeyForAutomaticLookahead(keys_1.OPTION_IDX, occurrence);\n        return this.optionInternalLogic(actionORMethodDef, occurrence, key);\n    };\n    RecognizerEngine.prototype.optionInternalLogic = function (actionORMethodDef, occurrence, key) {\n        var _this = this;\n        var lookAheadFunc = this.getLookaheadFuncForOption(key, occurrence);\n        var action;\n        var predicate;\n        if (actionORMethodDef.DEF !== undefined) {\n            action = actionORMethodDef.DEF;\n            predicate = actionORMethodDef.GATE;\n            // predicate present\n            if (predicate !== undefined) {\n                var orgLookaheadFunction_1 = lookAheadFunc;\n                lookAheadFunc = function () {\n                    return (predicate.call(_this) && orgLookaheadFunction_1.call(_this));\n                };\n            }\n        }\n        else {\n            action = actionORMethodDef;\n        }\n        if (lookAheadFunc.call(this) === true) {\n            return action.call(this);\n        }\n        return undefined;\n    };\n    RecognizerEngine.prototype.atLeastOneInternal = function (prodOccurrence, actionORMethodDef) {\n        var laKey = this.getKeyForAutomaticLookahead(keys_1.AT_LEAST_ONE_IDX, prodOccurrence);\n        var nestedName = this.nestedRuleBeforeClause(actionORMethodDef, laKey);\n        try {\n            return this.atLeastOneInternalLogic(prodOccurrence, actionORMethodDef, laKey);\n        }\n        finally {\n            if (nestedName !== undefined) {\n                this.nestedRuleFinallyClause(laKey, nestedName);\n            }\n        }\n    };\n    RecognizerEngine.prototype.atLeastOneInternalNoCst = function (prodOccurrence, actionORMethodDef) {\n        var key = this.getKeyForAutomaticLookahead(keys_1.AT_LEAST_ONE_IDX, prodOccurrence);\n        this.atLeastOneInternalLogic(prodOccurrence, actionORMethodDef, key);\n    };\n    RecognizerEngine.prototype.atLeastOneInternalLogic = function (prodOccurrence, actionORMethodDef, key) {\n        var _this = this;\n        var lookAheadFunc = this.getLookaheadFuncForAtLeastOne(key, prodOccurrence);\n        var action;\n        var predicate;\n        if (actionORMethodDef.DEF !== undefined) {\n            action = actionORMethodDef.DEF;\n            predicate = actionORMethodDef.GATE;\n            // predicate present\n            if (predicate !== undefined) {\n                var orgLookaheadFunction_2 = lookAheadFunc;\n                lookAheadFunc = function () {\n                    return (predicate.call(_this) && orgLookaheadFunction_2.call(_this));\n                };\n            }\n        }\n        else {\n            action = actionORMethodDef;\n        }\n        if (lookAheadFunc.call(this) === true) {\n            var notStuck = this.doSingleRepetition(action);\n            while (lookAheadFunc.call(this) === true &&\n                notStuck === true) {\n                notStuck = this.doSingleRepetition(action);\n            }\n        }\n        else {\n            throw this.raiseEarlyExitException(prodOccurrence, lookahead_1.PROD_TYPE.REPETITION_MANDATORY, actionORMethodDef.ERR_MSG);\n        }\n        // note that while it may seem that this can cause an error because by using a recursive call to\n        // AT_LEAST_ONE we change the grammar to AT_LEAST_TWO, AT_LEAST_THREE ... , the possible recursive call\n        // from the tryInRepetitionRecovery(...) will only happen IFF there really are TWO/THREE/.... items.\n        // Performance optimization: \"attemptInRepetitionRecovery\" will be defined as NOOP unless recovery is enabled\n        this.attemptInRepetitionRecovery(this.atLeastOneInternal, [prodOccurrence, actionORMethodDef], lookAheadFunc, keys_1.AT_LEAST_ONE_IDX, prodOccurrence, interpreter_1.NextTerminalAfterAtLeastOneWalker);\n    };\n    RecognizerEngine.prototype.atLeastOneSepFirstInternal = function (prodOccurrence, options) {\n        var laKey = this.getKeyForAutomaticLookahead(keys_1.AT_LEAST_ONE_SEP_IDX, prodOccurrence);\n        var nestedName = this.nestedRuleBeforeClause(options, laKey);\n        try {\n            this.atLeastOneSepFirstInternalLogic(prodOccurrence, options, laKey);\n        }\n        finally {\n            if (nestedName !== undefined) {\n                this.nestedRuleFinallyClause(laKey, nestedName);\n            }\n        }\n    };\n    RecognizerEngine.prototype.atLeastOneSepFirstInternalNoCst = function (prodOccurrence, options) {\n        var laKey = this.getKeyForAutomaticLookahead(keys_1.AT_LEAST_ONE_SEP_IDX, prodOccurrence);\n        this.atLeastOneSepFirstInternalLogic(prodOccurrence, options, laKey);\n    };\n    RecognizerEngine.prototype.atLeastOneSepFirstInternalLogic = function (prodOccurrence, options, key) {\n        var _this = this;\n        var action = options.DEF;\n        var separator = options.SEP;\n        var firstIterationLookaheadFunc = this.getLookaheadFuncForAtLeastOneSep(key, prodOccurrence);\n        // 1st iteration\n        if (firstIterationLookaheadFunc.call(this) === true) {\n            ;\n            action.call(this);\n            //  TODO: Optimization can move this function construction into \"attemptInRepetitionRecovery\"\n            //  because it is only needed in error recovery scenarios.\n            var separatorLookAheadFunc = function () {\n                return _this.tokenMatcher(_this.LA(1), separator);\n            };\n            // 2nd..nth iterations\n            while (this.tokenMatcher(this.LA(1), separator) === true) {\n                // note that this CONSUME will never enter recovery because\n                // the separatorLookAheadFunc checks that the separator really does exist.\n                this.CONSUME(separator);\n                action.call(this);\n            }\n            // Performance optimization: \"attemptInRepetitionRecovery\" will be defined as NOOP unless recovery is enabled\n            this.attemptInRepetitionRecovery(this.repetitionSepSecondInternal, [\n                prodOccurrence,\n                separator,\n                separatorLookAheadFunc,\n                action,\n                interpreter_1.NextTerminalAfterAtLeastOneSepWalker\n            ], separatorLookAheadFunc, keys_1.AT_LEAST_ONE_SEP_IDX, prodOccurrence, interpreter_1.NextTerminalAfterAtLeastOneSepWalker);\n        }\n        else {\n            throw this.raiseEarlyExitException(prodOccurrence, lookahead_1.PROD_TYPE.REPETITION_MANDATORY_WITH_SEPARATOR, options.ERR_MSG);\n        }\n    };\n    RecognizerEngine.prototype.manyInternal = function (prodOccurrence, actionORMethodDef) {\n        var laKey = this.getKeyForAutomaticLookahead(keys_1.MANY_IDX, prodOccurrence);\n        var nestedName = this.nestedRuleBeforeClause(actionORMethodDef, laKey);\n        try {\n            return this.manyInternalLogic(prodOccurrence, actionORMethodDef, laKey);\n        }\n        finally {\n            if (nestedName !== undefined) {\n                this.nestedRuleFinallyClause(laKey, nestedName);\n            }\n        }\n    };\n    RecognizerEngine.prototype.manyInternalNoCst = function (prodOccurrence, actionORMethodDef) {\n        var laKey = this.getKeyForAutomaticLookahead(keys_1.MANY_IDX, prodOccurrence);\n        return this.manyInternalLogic(prodOccurrence, actionORMethodDef, laKey);\n    };\n    RecognizerEngine.prototype.manyInternalLogic = function (prodOccurrence, actionORMethodDef, key) {\n        var _this = this;\n        var lookaheadFunction = this.getLookaheadFuncForMany(key, prodOccurrence);\n        var action;\n        var predicate;\n        if (actionORMethodDef.DEF !== undefined) {\n            action = actionORMethodDef.DEF;\n            predicate = actionORMethodDef.GATE;\n            // predicate present\n            if (predicate !== undefined) {\n                var orgLookaheadFunction_3 = lookaheadFunction;\n                lookaheadFunction = function () {\n                    return (predicate.call(_this) && orgLookaheadFunction_3.call(_this));\n                };\n            }\n        }\n        else {\n            action = actionORMethodDef;\n        }\n        var notStuck = true;\n        while (lookaheadFunction.call(this) === true && notStuck === true) {\n            notStuck = this.doSingleRepetition(action);\n        }\n        // Performance optimization: \"attemptInRepetitionRecovery\" will be defined as NOOP unless recovery is enabled\n        this.attemptInRepetitionRecovery(this.manyInternal, [prodOccurrence, actionORMethodDef], lookaheadFunction, keys_1.MANY_IDX, prodOccurrence, interpreter_1.NextTerminalAfterManyWalker);\n    };\n    RecognizerEngine.prototype.manySepFirstInternal = function (prodOccurrence, options) {\n        var laKey = this.getKeyForAutomaticLookahead(keys_1.MANY_SEP_IDX, prodOccurrence);\n        var nestedName = this.nestedRuleBeforeClause(options, laKey);\n        try {\n            this.manySepFirstInternalLogic(prodOccurrence, options, laKey);\n        }\n        finally {\n            if (nestedName !== undefined) {\n                this.nestedRuleFinallyClause(laKey, nestedName);\n            }\n        }\n    };\n    RecognizerEngine.prototype.manySepFirstInternalNoCst = function (prodOccurrence, options) {\n        var laKey = this.getKeyForAutomaticLookahead(keys_1.MANY_SEP_IDX, prodOccurrence);\n        this.manySepFirstInternalLogic(prodOccurrence, options, laKey);\n    };\n    RecognizerEngine.prototype.manySepFirstInternalLogic = function (prodOccurrence, options, key) {\n        var _this = this;\n        var action = options.DEF;\n        var separator = options.SEP;\n        var firstIterationLaFunc = this.getLookaheadFuncForManySep(key, prodOccurrence);\n        // 1st iteration\n        if (firstIterationLaFunc.call(this) === true) {\n            action.call(this);\n            var separatorLookAheadFunc = function () {\n                return _this.tokenMatcher(_this.LA(1), separator);\n            };\n            // 2nd..nth iterations\n            while (this.tokenMatcher(this.LA(1), separator) === true) {\n                // note that this CONSUME will never enter recovery because\n                // the separatorLookAheadFunc checks that the separator really does exist.\n                this.CONSUME(separator);\n                // No need for checking infinite loop here due to consuming the separator.\n                action.call(this);\n            }\n            // Performance optimization: \"attemptInRepetitionRecovery\" will be defined as NOOP unless recovery is enabled\n            this.attemptInRepetitionRecovery(this.repetitionSepSecondInternal, [\n                prodOccurrence,\n                separator,\n                separatorLookAheadFunc,\n                action,\n                interpreter_1.NextTerminalAfterManySepWalker\n            ], separatorLookAheadFunc, keys_1.MANY_SEP_IDX, prodOccurrence, interpreter_1.NextTerminalAfterManySepWalker);\n        }\n    };\n    RecognizerEngine.prototype.repetitionSepSecondInternal = function (prodOccurrence, separator, separatorLookAheadFunc, action, nextTerminalAfterWalker) {\n        while (separatorLookAheadFunc()) {\n            // note that this CONSUME will never enter recovery because\n            // the separatorLookAheadFunc checks that the separator really does exist.\n            this.CONSUME(separator);\n            action.call(this);\n        }\n        // we can only arrive to this function after an error\n        // has occurred (hence the name 'second') so the following\n        // IF will always be entered, its possible to remove it...\n        // however it is kept to avoid confusion and be consistent.\n        // Performance optimization: \"attemptInRepetitionRecovery\" will be defined as NOOP unless recovery is enabled\n        /* istanbul ignore else */\n        this.attemptInRepetitionRecovery(this.repetitionSepSecondInternal, [\n            prodOccurrence,\n            separator,\n            separatorLookAheadFunc,\n            action,\n            nextTerminalAfterWalker\n        ], separatorLookAheadFunc, keys_1.AT_LEAST_ONE_SEP_IDX, prodOccurrence, nextTerminalAfterWalker);\n    };\n    RecognizerEngine.prototype.doSingleRepetition = function (action) {\n        var beforeIteration = this.getLexerPosition();\n        action.call(this);\n        var afterIteration = this.getLexerPosition();\n        // This boolean will indicate if this repetition progressed\n        // or if we are \"stuck\" (potential infinite loop in the repetition).\n        return afterIteration > beforeIteration;\n    };\n    RecognizerEngine.prototype.orInternalNoCst = function (altsOrOpts, occurrence) {\n        var alts = utils_1.isArray(altsOrOpts)\n            ? altsOrOpts\n            : altsOrOpts.DEF;\n        var laFunc = this.getLookaheadFuncForOr(occurrence, alts);\n        var altIdxToTake = laFunc.call(this, alts);\n        if (altIdxToTake !== undefined) {\n            var chosenAlternative = alts[altIdxToTake];\n            return chosenAlternative.ALT.call(this);\n        }\n        this.raiseNoAltException(occurrence, altsOrOpts.ERR_MSG);\n    };\n    RecognizerEngine.prototype.orInternal = function (altsOrOpts, occurrence) {\n        var laKey = this.getKeyForAutomaticLookahead(keys_1.OR_IDX, occurrence);\n        var nestedName = this.nestedRuleBeforeClause(altsOrOpts, laKey);\n        try {\n            var alts = utils_1.isArray(altsOrOpts)\n                ? altsOrOpts\n                : altsOrOpts.DEF;\n            var laFunc = this.getLookaheadFuncForOr(occurrence, alts);\n            var altIdxToTake = laFunc.call(this, alts);\n            if (altIdxToTake !== undefined) {\n                var chosenAlternative = alts[altIdxToTake];\n                var nestedAltBeforeClauseResult = this.nestedAltBeforeClause(chosenAlternative, occurrence, keys_1.OR_IDX, altIdxToTake);\n                try {\n                    return chosenAlternative.ALT.call(this);\n                }\n                finally {\n                    if (nestedAltBeforeClauseResult !== undefined) {\n                        this.nestedRuleFinallyClause(nestedAltBeforeClauseResult.shortName, nestedAltBeforeClauseResult.nestedName);\n                    }\n                }\n            }\n            this.raiseNoAltException(occurrence, altsOrOpts.ERR_MSG);\n        }\n        finally {\n            if (nestedName !== undefined) {\n                this.nestedRuleFinallyClause(laKey, nestedName);\n            }\n        }\n    };\n    RecognizerEngine.prototype.ruleFinallyStateUpdate = function () {\n        this.RULE_STACK.pop();\n        this.RULE_OCCURRENCE_STACK.pop();\n        // NOOP when cst is disabled\n        this.cstFinallyStateUpdate();\n        if (this.RULE_STACK.length === 0 && !this.isAtEndOfInput()) {\n            var firstRedundantTok = this.LA(1);\n            var errMsg = this.errorMessageProvider.buildNotAllInputParsedMessage({\n                firstRedundant: firstRedundantTok,\n                ruleName: this.getCurrRuleFullName()\n            });\n            this.SAVE_ERROR(new exceptions_public_1.NotAllInputParsedException(errMsg, firstRedundantTok));\n        }\n    };\n    RecognizerEngine.prototype.subruleInternal = function (ruleToCall, idx, options) {\n        var ruleResult;\n        try {\n            var args = options !== undefined ? options.ARGS : undefined;\n            ruleResult = ruleToCall.call(this, idx, args);\n            this.cstPostNonTerminal(ruleResult, options !== undefined && options.LABEL !== undefined\n                ? options.LABEL\n                : ruleToCall.ruleName);\n            return ruleResult;\n        }\n        catch (e) {\n            if (exceptions_public_1.isRecognitionException(e) && e.partialCstResult !== undefined) {\n                this.cstPostNonTerminal(e.partialCstResult, options !== undefined && options.LABEL !== undefined\n                    ? options.LABEL\n                    : ruleToCall.ruleName);\n                delete e.partialCstResult;\n            }\n            throw e;\n        }\n    };\n    RecognizerEngine.prototype.consumeInternal = function (tokType, idx, options) {\n        var consumedToken;\n        try {\n            var nextToken = this.LA(1);\n            if (this.tokenMatcher(nextToken, tokType) === true) {\n                this.consumeToken();\n                consumedToken = nextToken;\n            }\n            else {\n                var msg = void 0;\n                var previousToken = this.LA(0);\n                if (options !== undefined && options.ERR_MSG) {\n                    msg = options.ERR_MSG;\n                }\n                else {\n                    msg = this.errorMessageProvider.buildMismatchTokenMessage({\n                        expected: tokType,\n                        actual: nextToken,\n                        previous: previousToken,\n                        ruleName: this.getCurrRuleFullName()\n                    });\n                }\n                throw this.SAVE_ERROR(new exceptions_public_1.MismatchedTokenException(msg, nextToken, previousToken));\n            }\n        }\n        catch (eFromConsumption) {\n            // no recovery allowed during backtracking, otherwise backtracking may recover invalid syntax and accept it\n            // but the original syntax could have been parsed successfully without any backtracking + recovery\n            if (this.recoveryEnabled &&\n                // TODO: more robust checking of the exception type. Perhaps Typescript extending expressions?\n                eFromConsumption.name === \"MismatchedTokenException\" &&\n                !this.isBackTracking()) {\n                var follows = this.getFollowsForInRuleRecovery(tokType, idx);\n                try {\n                    consumedToken = this.tryInRuleRecovery(tokType, follows);\n                }\n                catch (eFromInRuleRecovery) {\n                    if (eFromInRuleRecovery.name === recoverable_1.IN_RULE_RECOVERY_EXCEPTION) {\n                        // failed in RuleRecovery.\n                        // throw the original error in order to trigger reSync error recovery\n                        throw eFromConsumption;\n                    }\n                    else {\n                        throw eFromInRuleRecovery;\n                    }\n                }\n            }\n            else {\n                throw eFromConsumption;\n            }\n        }\n        this.cstPostTerminal(options !== undefined && options.LABEL !== undefined\n            ? options.LABEL\n            : tokType.tokenName, consumedToken);\n        return consumedToken;\n    };\n    RecognizerEngine.prototype.saveRecogState = function () {\n        // errors is a getter which will clone the errors array\n        var savedErrors = this.errors;\n        var savedRuleStack = utils_1.cloneArr(this.RULE_STACK);\n        return {\n            errors: savedErrors,\n            lexerState: this.exportLexerState(),\n            RULE_STACK: savedRuleStack,\n            CST_STACK: this.CST_STACK,\n            LAST_EXPLICIT_RULE_STACK: this.LAST_EXPLICIT_RULE_STACK\n        };\n    };\n    RecognizerEngine.prototype.reloadRecogState = function (newState) {\n        this.errors = newState.errors;\n        this.importLexerState(newState.lexerState);\n        this.RULE_STACK = newState.RULE_STACK;\n    };\n    RecognizerEngine.prototype.ruleInvocationStateUpdate = function (shortName, fullName, idxInCallingRule) {\n        this.RULE_OCCURRENCE_STACK.push(idxInCallingRule);\n        this.RULE_STACK.push(shortName);\n        // NOOP when cst is disabled\n        this.cstInvocationStateUpdate(fullName, shortName);\n    };\n    RecognizerEngine.prototype.isBackTracking = function () {\n        return !utils_1.isEmpty(this.isBackTrackingStack);\n    };\n    RecognizerEngine.prototype.getCurrRuleFullName = function () {\n        var shortName = this.getLastExplicitRuleShortName();\n        return this.shortRuleNameToFull.get(shortName);\n    };\n    RecognizerEngine.prototype.shortRuleNameToFullName = function (shortName) {\n        return this.shortRuleNameToFull.get(shortName);\n    };\n    RecognizerEngine.prototype.isAtEndOfInput = function () {\n        return this.tokenMatcher(this.LA(1), tokens_public_1.EOF);\n    };\n    RecognizerEngine.prototype.reset = function () {\n        this.resetLexerState();\n        this.isBackTrackingStack = [];\n        this.errors = [];\n        this.RULE_STACK = [];\n        this.LAST_EXPLICIT_RULE_STACK = [];\n        // TODO: extract a specific rest for TreeBuilder trait\n        this.CST_STACK = [];\n        this.RULE_OCCURRENCE_STACK = [];\n    };\n    return RecognizerEngine;\n}());\nexports.RecognizerEngine = RecognizerEngine;\n//# sourceMappingURL=recognizer_engine.js.map", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar exceptions_public_1 = require(\"../../exceptions_public\");\nvar utils_1 = require(\"../../../utils/utils\");\nvar lookahead_1 = require(\"../../grammar/lookahead\");\nvar parser_1 = require(\"../parser\");\n/**\n * Trait responsible for runtime parsing errors.\n */\nvar ErrorHandler = /** @class */ (function () {\n    function ErrorHandler() {\n    }\n    ErrorHandler.prototype.initErrorHandler = function (config) {\n        this._errors = [];\n        this.errorMessageProvider = utils_1.defaults(config.errorMessageProvider, parser_1.DEFAULT_PARSER_CONFIG.errorMessageProvider);\n    };\n    ErrorHandler.prototype.SAVE_ERROR = function (error) {\n        if (exceptions_public_1.isRecognitionException(error)) {\n            error.context = {\n                ruleStack: this.getHumanReadableRuleStack(),\n                ruleOccurrenceStack: utils_1.cloneArr(this.RULE_OCCURRENCE_STACK)\n            };\n            this._errors.push(error);\n            return error;\n        }\n        else {\n            throw Error(\"Trying to save an Error which is not a RecognitionException\");\n        }\n    };\n    Object.defineProperty(ErrorHandler.prototype, \"errors\", {\n        // TODO: extract these methods to ErrorHandler Trait?\n        get: function () {\n            return utils_1.cloneArr(this._errors);\n        },\n        set: function (newErrors) {\n            this._errors = newErrors;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // TODO: consider caching the error message computed information\n    ErrorHandler.prototype.raiseEarlyExitException = function (occurrence, prodType, userDefinedErrMsg) {\n        var ruleName = this.getCurrRuleFullName();\n        var ruleGrammar = this.getGAstProductions().get(ruleName);\n        var lookAheadPathsPerAlternative = lookahead_1.getLookaheadPathsForOptionalProd(occurrence, ruleGrammar, prodType, this.maxLookahead);\n        var insideProdPaths = lookAheadPathsPerAlternative[0];\n        var actualTokens = [];\n        for (var i = 1; i < this.maxLookahead; i++) {\n            actualTokens.push(this.LA(i));\n        }\n        var msg = this.errorMessageProvider.buildEarlyExitMessage({\n            expectedIterationPaths: insideProdPaths,\n            actual: actualTokens,\n            previous: this.LA(0),\n            customUserDescription: userDefinedErrMsg,\n            ruleName: ruleName\n        });\n        throw this.SAVE_ERROR(new exceptions_public_1.EarlyExitException(msg, this.LA(1), this.LA(0)));\n    };\n    // TODO: consider caching the error message computed information\n    ErrorHandler.prototype.raiseNoAltException = function (occurrence, errMsgTypes) {\n        var ruleName = this.getCurrRuleFullName();\n        var ruleGrammar = this.getGAstProductions().get(ruleName);\n        // TODO: getLookaheadPathsForOr can be slow for large enough maxLookahead and certain grammars, consider caching ?\n        var lookAheadPathsPerAlternative = lookahead_1.getLookaheadPathsForOr(occurrence, ruleGrammar, this.maxLookahead);\n        var actualTokens = [];\n        for (var i = 1; i <= this.maxLookahead; i++) {\n            actualTokens.push(this.LA(i));\n        }\n        var previousToken = this.LA(0);\n        var errMsg = this.errorMessageProvider.buildNoViableAltMessage({\n            expectedPathsPerAlt: lookAheadPathsPerAlternative,\n            actual: actualTokens,\n            previous: previousToken,\n            customUserDescription: errMsgTypes,\n            ruleName: this.getCurrRuleFullName()\n        });\n        throw this.SAVE_ERROR(new exceptions_public_1.NoViableAltException(errMsg, this.LA(1), previousToken));\n    };\n    return ErrorHandler;\n}());\nexports.ErrorHandler = ErrorHandler;\n//# sourceMappingURL=error_handler.js.map", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar interpreter_1 = require(\"../../grammar/interpreter\");\nvar utils_1 = require(\"../../../utils/utils\");\nvar ContentAssist = /** @class */ (function () {\n    function ContentAssist() {\n    }\n    ContentAssist.prototype.initContentAssist = function () { };\n    ContentAssist.prototype.computeContentAssist = function (startRuleName, precedingInput) {\n        var startRuleGast = this.gastProductionsCache.get(startRuleName);\n        if (utils_1.isUndefined(startRuleGast)) {\n            throw Error(\"Rule ->\" + startRuleName + \"<- does not exist in this grammar.\");\n        }\n        return interpreter_1.nextPossibleTokensAfter([startRuleGast], precedingInput, this.tokenMatcher, this.maxLookahead);\n    };\n    // TODO: should this be a member method or a utility? it does not have any state or usage of 'this'...\n    // TODO: should this be more explicitly part of the public API?\n    ContentAssist.prototype.getNextPossibleTokenTypes = function (grammarPath) {\n        var topRuleName = utils_1.first(grammarPath.ruleStack);\n        var gastProductions = this.getGAstProductions();\n        var topProduction = gastProductions.get(topRuleName);\n        var nextPossibleTokenTypes = new interpreter_1.NextAfterTokenWalker(topProduction, grammarPath).startWalking();\n        return nextPossibleTokenTypes;\n    };\n    return ContentAssist;\n}());\nexports.ContentAssist = ContentAssist;\n//# sourceMappingURL=context_assist.js.map", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar version_1 = require(\"../version\");\nfunction createSyntaxDiagramsCode(grammar, _a) {\n    var _b = _a === void 0 ? {} : _a, _c = _b.resourceBase, resourceBase = _c === void 0 ? \"https://unpkg.com/chevrotain@\" + version_1.VERSION + \"/diagrams/\" : _c, _d = _b.css, css = _d === void 0 ? \"https://unpkg.com/chevrotain@\" + version_1.VERSION + \"/diagrams/diagrams.css\" : _d;\n    var header = \"\\n<!-- This is a generated file -->\\n<!DOCTYPE html>\\n<meta charset=\\\"utf-8\\\">\\n<style>\\n  body {\\n    background-color: hsl(30, 20%, 95%)\\n  }\\n</style>\\n\\n\";\n    var cssHtml = \"\\n<link rel='stylesheet' href='\" + css + \"'>\\n\";\n    var scripts = \"\\n<script src='\" + resourceBase + \"vendor/railroad-diagrams.js'></script>\\n<script src='\" + resourceBase + \"src/diagrams_builder.js'></script>\\n<script src='\" + resourceBase + \"src/diagrams_behavior.js'></script>\\n<script src='\" + resourceBase + \"src/main.js'></script>\\n\";\n    var diagramsDiv = \"\\n<div id=\\\"diagrams\\\" align=\\\"center\\\"></div>    \\n\";\n    var serializedGrammar = \"\\n<script>\\n    window.serializedGrammar = \" + JSON.stringify(grammar, null, \"  \") + \";\\n</script>\\n\";\n    var initLogic = \"\\n<script>\\n    var diagramsDiv = document.getElementById(\\\"diagrams\\\");\\n    main.drawDiagramsFromSerializedGrammar(serializedGrammar, diagramsDiv);\\n</script>\\n\";\n    return (header + cssHtml + scripts + diagramsDiv + serializedGrammar + initLogic);\n}\nexports.createSyntaxDiagramsCode = createSyntaxDiagramsCode;\n//# sourceMappingURL=render_public.js.map", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar generate_1 = require(\"./generate\");\nfunction generateParserFactory(options) {\n    var wrapperText = generate_1.genWrapperFunction({\n        name: options.name,\n        rules: options.rules\n    });\n    var constructorWrapper = new Function(\"tokenVocabulary\", \"config\", \"chevrotain\", wrapperText);\n    return function (config) {\n        return constructorWrapper(options.tokenVocabulary, config, \n        // TODO: check how the require is transpiled/webpacked\n        require(\"../api\"));\n    };\n}\nexports.generateParserFactory = generateParserFactory;\nfunction generateParserModule(options) {\n    return generate_1.genUmdModule({ name: options.name, rules: options.rules });\n}\nexports.generateParserModule = generateParserModule;\n//# sourceMappingURL=generate_public.js.map", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar utils_1 = require(\"../utils/utils\");\nvar tokens_public_1 = require(\"../scan/tokens_public\");\nvar gast_public_1 = require(\"../parse/grammar/gast/gast_public\");\n/**\n * Missing features\n * 1. Rule arguments\n * 2. Gates\n * 3. embedded actions\n */\nvar NL = \"\\n\";\nfunction genUmdModule(options) {\n    return \"\\n(function (root, factory) {\\n    if (typeof define === 'function' && define.amd) {\\n        // AMD. Register as an anonymous module.\\n        define(['chevrotain'], factory);\\n    } else if (typeof module === 'object' && module.exports) {\\n        // Node. Does not work with strict CommonJS, but\\n        // only CommonJS-like environments that support module.exports,\\n        // like Node.\\n        module.exports = factory(require('chevrotain'));\\n    } else {\\n        // Browser globals (root is window)\\n        root.returnExports = factory(root.b);\\n    }\\n}(typeof self !== 'undefined' ? self : this, function (chevrotain) {\\n\\n\" + genClass(options) + \"\\n    \\nreturn {\\n    \" + options.name + \": \" + options.name + \" \\n}\\n}));\\n\";\n}\nexports.genUmdModule = genUmdModule;\nfunction genWrapperFunction(options) {\n    return \"    \\n\" + genClass(options) + \"\\nreturn new \" + options.name + \"(tokenVocabulary, config)    \\n\";\n}\nexports.genWrapperFunction = genWrapperFunction;\nfunction genClass(options) {\n    // TODO: how to pass the token vocabulary? Constructor? other?\n    var result = \"\\nfunction \" + options.name + \"(tokenVocabulary, config) {\\n    // invoke super constructor\\n    // No support for embedded actions currently, so we can 'hardcode'\\n    // The use of CstParser.\\n    chevrotain.CstParser.call(this, tokenVocabulary, config)\\n\\n    const $ = this\\n\\n    \" + genAllRules(options.rules) + \"\\n\\n    // very important to call this after all the rules have been defined.\\n    // otherwise the parser may not work correctly as it will lack information\\n    // derived during the self analysis phase.\\n    this.performSelfAnalysis(this)\\n}\\n\\n// inheritance as implemented in javascript in the previous decade... :(\\n\" + options.name + \".prototype = Object.create(chevrotain.CstParser.prototype)\\n\" + options.name + \".prototype.constructor = \" + options.name + \"    \\n    \";\n    return result;\n}\nexports.genClass = genClass;\nfunction genAllRules(rules) {\n    var rulesText = utils_1.map(rules, function (currRule) {\n        return genRule(currRule, 1);\n    });\n    return rulesText.join(\"\\n\");\n}\nexports.genAllRules = genAllRules;\nfunction genRule(prod, n) {\n    var result = indent(n, \"$.RULE(\\\"\" + prod.name + \"\\\", function() {\") + NL;\n    result += genDefinition(prod.definition, n + 1);\n    result += indent(n + 1, \"})\") + NL;\n    return result;\n}\nexports.genRule = genRule;\nfunction genTerminal(prod, n) {\n    var name = tokens_public_1.tokenName(prod.terminalType);\n    // TODO: potential performance optimization, avoid tokenMap Dictionary access\n    return indent(n, \"$.CONSUME\" + prod.idx + \"(this.tokensMap.\" + name + \")\" + NL);\n}\nexports.genTerminal = genTerminal;\nfunction genNonTerminal(prod, n) {\n    return indent(n, \"$.SUBRULE\" + prod.idx + \"($.\" + prod.nonTerminalName + \")\" + NL);\n}\nexports.genNonTerminal = genNonTerminal;\nfunction genAlternation(prod, n) {\n    var result = indent(n, \"$.OR\" + prod.idx + \"([\") + NL;\n    var alts = utils_1.map(prod.definition, function (altDef) { return genSingleAlt(altDef, n + 1); });\n    result += alts.join(\",\" + NL);\n    result += NL + indent(n, \"])\" + NL);\n    return result;\n}\nexports.genAlternation = genAlternation;\nfunction genSingleAlt(prod, n) {\n    var result = indent(n, \"{\") + NL;\n    if (prod.name) {\n        result += indent(n + 1, \"NAME: \\\"\" + prod.name + \"\\\",\") + NL;\n    }\n    result += indent(n + 1, \"ALT: function() {\") + NL;\n    result += genDefinition(prod.definition, n + 1);\n    result += indent(n + 1, \"}\") + NL;\n    result += indent(n, \"}\");\n    return result;\n}\nexports.genSingleAlt = genSingleAlt;\nfunction genProd(prod, n) {\n    /* istanbul ignore else */\n    if (prod instanceof gast_public_1.NonTerminal) {\n        return genNonTerminal(prod, n);\n    }\n    else if (prod instanceof gast_public_1.Option) {\n        return genDSLRule(\"OPTION\", prod, n);\n    }\n    else if (prod instanceof gast_public_1.RepetitionMandatory) {\n        return genDSLRule(\"AT_LEAST_ONE\", prod, n);\n    }\n    else if (prod instanceof gast_public_1.RepetitionMandatoryWithSeparator) {\n        return genDSLRule(\"AT_LEAST_ONE_SEP\", prod, n);\n    }\n    else if (prod instanceof gast_public_1.RepetitionWithSeparator) {\n        return genDSLRule(\"MANY_SEP\", prod, n);\n    }\n    else if (prod instanceof gast_public_1.Repetition) {\n        return genDSLRule(\"MANY\", prod, n);\n    }\n    else if (prod instanceof gast_public_1.Alternation) {\n        return genAlternation(prod, n);\n    }\n    else if (prod instanceof gast_public_1.Terminal) {\n        return genTerminal(prod, n);\n    }\n    else if (prod instanceof gast_public_1.Flat) {\n        return genDefinition(prod.definition, n);\n    }\n    else {\n        throw Error(\"non exhaustive match\");\n    }\n}\nfunction genDSLRule(dslName, prod, n) {\n    var result = indent(n, \"$.\" + (dslName + prod.idx) + \"(\");\n    if (prod.name || prod.separator) {\n        result += \"{\" + NL;\n        if (prod.name) {\n            result += indent(n + 1, \"NAME: \\\"\" + prod.name + \"\\\"\") + \",\" + NL;\n        }\n        if (prod.separator) {\n            result +=\n                indent(n + 1, \"SEP: this.tokensMap.\" + tokens_public_1.tokenName(prod.separator)) +\n                    \",\" +\n                    NL;\n        }\n        result += \"DEF: \" + genDefFunction(prod.definition, n + 2) + NL;\n        result += indent(n, \"}\") + NL;\n    }\n    else {\n        result += genDefFunction(prod.definition, n + 1);\n    }\n    result += indent(n, \")\") + NL;\n    return result;\n}\nfunction genDefFunction(definition, n) {\n    var def = \"function() {\" + NL;\n    def += genDefinition(definition, n);\n    def += indent(n, \"}\") + NL;\n    return def;\n}\nfunction genDefinition(def, n) {\n    var result = \"\";\n    utils_1.forEach(def, function (prod) {\n        result += genProd(prod, n + 1);\n    });\n    return result;\n}\nfunction indent(howMuch, text) {\n    var spaces = Array(howMuch * 4 + 1).join(\" \");\n    return spaces + text;\n}\n//# sourceMappingURL=generate.js.map", "var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar baseTokens = require('./tokens').baseTokens;\nimport { BaseSparqlParser } from './BaseSparqlParser';\nimport { Parser } from 'chevrotain';\nvar W3SpecSparqlParser = /** @class */ (function (_super) {\n    __extends(W3SpecSparqlParser, _super);\n    function W3SpecSparqlParser(options) {\n        var _this = _super.call(this, options, baseTokens) || this;\n        Parser.performSelfAnalysis(_this);\n        return _this;\n    }\n    return W3SpecSparqlParser;\n}(BaseSparqlParser));\nexport { W3SpecSparqlParser };\n", "var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar graphQlTokenMap = require('./tokens').graphQlTokenMap;\nimport { Parser, Lexer, } from 'chevrotain';\nvar BaseGraphQlParser = /** @class */ (function (_super) {\n    __extends(BaseGraphQlParser, _super);\n    function BaseGraphQlParser(options, tokenVocab) {\n        if (options === void 0) { options = {}; }\n        var _this = _super.call(this, tokenVocab, __assign({ recoveryEnabled: true, outputCst: true }, options.config)) || this;\n        _this.tokenize = function (document) {\n            return _this.lexer.tokenize(document).tokens;\n        };\n        _this.parse = function (document, entryRule) {\n            if (entryRule === void 0) { entryRule = _this.Document; }\n            _this.input = _this.lexer.tokenize(document).tokens;\n            var cst = entryRule.call(_this);\n            var errors = _this.errors;\n            return {\n                errors: errors,\n                cst: cst,\n            };\n        };\n        _this.Document = _this.RULE('Document', function () {\n            _this.AT_LEAST_ONE(function () { return _this.SUBRULE(_this.Definition); });\n        });\n        _this.Definition = _this.RULE('Definition', function () {\n            _this.OR([\n                { ALT: function () { return _this.SUBRULE(_this.ExecutableDefinition); } },\n                { ALT: function () { return _this.SUBRULE(_this.TypeSystemDefinition); } },\n                { ALT: function () { return _this.SUBRULE(_this.TypeSystemExtension); } },\n            ]);\n        });\n        _this.ExecutableDefinition = _this.RULE('ExecutableDefinition', function () {\n            _this.OR([\n                { ALT: function () { return _this.SUBRULE(_this.OperationDefinition); } },\n                { ALT: function () { return _this.SUBRULE(_this.FragmentDefinition); } },\n            ]);\n        });\n        _this.OperationDefinition = _this.RULE('OperationDefinition', function () {\n            _this.OR([\n                { ALT: function () { return _this.SUBRULE(_this.SelectionSet); } },\n                {\n                    ALT: function () {\n                        _this.SUBRULE(_this.OperationType);\n                        _this.OPTION(function () { return _this.CONSUME(graphQlTokenMap.Name); });\n                        _this.OPTION1(function () { return _this.SUBRULE(_this.VariableDefinitions); });\n                        _this.OPTION2(function () { return _this.SUBRULE(_this.Directives); });\n                        _this.SUBRULE1(_this.SelectionSet);\n                    },\n                },\n            ]);\n        });\n        _this.OperationType = _this.RULE('OperationType', function () {\n            _this.OR([\n                { ALT: function () { return _this.CONSUME(graphQlTokenMap.Query); } },\n                { ALT: function () { return _this.CONSUME(graphQlTokenMap.Mutation); } },\n                { ALT: function () { return _this.CONSUME(graphQlTokenMap.Subscription); } },\n            ]);\n        });\n        _this.SelectionSet = _this.RULE('SelectionSet', function () {\n            _this.CONSUME(graphQlTokenMap.LCurly);\n            _this.AT_LEAST_ONE(function () { return _this.SUBRULE(_this.Selection); });\n            _this.CONSUME(graphQlTokenMap.RCurly);\n        });\n        _this.Selection = _this.RULE('Selection', function () {\n            _this.OR([\n                { ALT: function () { return _this.SUBRULE(_this.Field); } },\n                { ALT: function () { return _this.SUBRULE(_this.InlineFragment); } },\n                { ALT: function () { return _this.SUBRULE(_this.FragmentSpread); } },\n            ]);\n        });\n        _this.Field = _this.RULE('Field', function () {\n            _this.OPTION(function () { return _this.SUBRULE(_this.Alias); });\n            _this.CONSUME(graphQlTokenMap.Name);\n            _this.OPTION1(function () {\n                return _this.SUBRULE(_this.Arguments, { ARGS: [false /* isConst */] });\n            });\n            _this.OPTION2(function () { return _this.SUBRULE(_this.Directives); });\n            _this.OPTION3(function () { return _this.SUBRULE(_this.SelectionSet); });\n        });\n        _this.Alias = _this.RULE('Alias', function () {\n            _this.CONSUME(graphQlTokenMap.Name);\n            _this.CONSUME(graphQlTokenMap.Colon);\n        });\n        _this.Arguments = _this.RULE('Arguments', function (isConst) {\n            _this.CONSUME(graphQlTokenMap.LParen);\n            _this.AT_LEAST_ONE(function () { return _this.SUBRULE(_this.Argument, { ARGS: [isConst] }); });\n            _this.CONSUME(graphQlTokenMap.RParen);\n        });\n        _this.Argument = _this.RULE('Argument', function (isConst) {\n            _this.SUBRULE(_this.Alias);\n            _this.SUBRULE(_this.Value, { ARGS: [isConst] });\n        });\n        _this.FragmentSpread = _this.RULE('FragmentSpread', function () {\n            _this.CONSUME(graphQlTokenMap.Spread);\n            _this.CONSUME(graphQlTokenMap.FragmentName);\n            _this.OPTION(function () { return _this.SUBRULE(_this.Directives); });\n        });\n        _this.InlineFragment = _this.RULE('InlineFragment', function () {\n            _this.CONSUME(graphQlTokenMap.Spread);\n            _this.OPTION(function () { return _this.SUBRULE(_this.TypeCondition); });\n            _this.OPTION1(function () { return _this.SUBRULE(_this.Directives); });\n            _this.SUBRULE(_this.SelectionSet);\n        });\n        _this.FragmentDefinition = _this.RULE('FragmentDefinition', function () {\n            _this.CONSUME(graphQlTokenMap.Fragment);\n            _this.CONSUME(graphQlTokenMap.FragmentName);\n            _this.SUBRULE(_this.TypeCondition);\n            _this.OPTION(function () { return _this.SUBRULE(_this.Directives); });\n            _this.SUBRULE(_this.SelectionSet);\n        });\n        _this.TypeCondition = _this.RULE('TypeCondition', function () {\n            _this.CONSUME(graphQlTokenMap.On);\n            _this.SUBRULE(_this.NamedType);\n        });\n        _this.Value = _this.RULE('Value', function (isConst) {\n            _this.OR([\n                { GATE: function () { return !isConst; }, ALT: function () { return _this.SUBRULE(_this.Variable); } },\n                { ALT: function () { return _this.SUBRULE(_this.IntValue); } },\n                { ALT: function () { return _this.SUBRULE(_this.FloatValue); } },\n                { ALT: function () { return _this.SUBRULE(_this.StringValue); } },\n                { ALT: function () { return _this.SUBRULE(_this.BooleanValue); } },\n                { ALT: function () { return _this.SUBRULE(_this.NullValue); } },\n                { ALT: function () { return _this.SUBRULE(_this.EnumValue); } },\n                { ALT: function () { return _this.SUBRULE(_this.ListValue, { ARGS: [isConst] }); } },\n                { ALT: function () { return _this.SUBRULE(_this.ObjectValue, { ARGS: [isConst] }); } },\n            ]);\n        });\n        _this.IntValue = _this.RULE('IntValue', function () {\n            _this.CONSUME(graphQlTokenMap.IntValueToken);\n        });\n        _this.FloatValue = _this.RULE('FloatValue', function () {\n            _this.CONSUME(graphQlTokenMap.FloatValueToken);\n        });\n        _this.StringValue = _this.RULE('StringValue', function () {\n            _this.CONSUME(graphQlTokenMap.StringValueToken);\n        });\n        _this.BooleanValue = _this.RULE('BooleanValue', function () {\n            _this.CONSUME(graphQlTokenMap.BooleanValueToken);\n        });\n        _this.NullValue = _this.RULE('NullValue', function () {\n            _this.CONSUME(graphQlTokenMap.NullValueToken);\n        });\n        _this.EnumValue = _this.RULE('EnumValue', function () {\n            _this.CONSUME(graphQlTokenMap.EnumValueToken);\n        });\n        _this.ListValue = _this.RULE('ListValue', function (isConst) {\n            _this.CONSUME(graphQlTokenMap.LBracket);\n            _this.MANY(function () { return _this.SUBRULE(_this.Value, { ARGS: [isConst] }); });\n            _this.CONSUME(graphQlTokenMap.RBracket);\n        });\n        _this.ObjectValue = _this.RULE('ObjectValue', function (isConst) {\n            _this.CONSUME(graphQlTokenMap.LCurly);\n            _this.MANY(function () { return _this.SUBRULE(_this.ObjectField, { ARGS: [isConst] }); });\n            _this.CONSUME(graphQlTokenMap.RCurly);\n        });\n        _this.ObjectField = _this.RULE('ObjectField', function (isConst) {\n            _this.SUBRULE(_this.Alias);\n            _this.SUBRULE(_this.Value, { ARGS: [isConst] });\n        });\n        _this.VariableDefinitions = _this.RULE('VariableDefinitions', function () {\n            _this.CONSUME(graphQlTokenMap.LParen);\n            _this.AT_LEAST_ONE(function () { return _this.SUBRULE(_this.VariableDefinition); });\n            _this.CONSUME(graphQlTokenMap.RParen);\n        });\n        _this.VariableDefinition = _this.RULE('VariableDefinition', function () {\n            _this.SUBRULE(_this.Variable);\n            _this.CONSUME(graphQlTokenMap.Colon);\n            _this.SUBRULE(_this.Type);\n            _this.OPTION(function () { return _this.SUBRULE(_this.DefaultValue); });\n        });\n        _this.Variable = _this.RULE('Variable', function () {\n            _this.CONSUME(graphQlTokenMap.Dollar);\n            _this.CONSUME(graphQlTokenMap.Name);\n        });\n        _this.DefaultValue = _this.RULE('DefaultValue', function () {\n            _this.CONSUME(graphQlTokenMap.Equals);\n            _this.SUBRULE(_this.Value, { ARGS: [true /* isConst */] });\n        });\n        _this.Type = _this.RULE('Type', function () {\n            _this.OR([\n                { ALT: function () { return _this.SUBRULE(_this.NamedType); } },\n                { ALT: function () { return _this.SUBRULE(_this.ListType); } },\n            ]);\n            _this.OPTION(function () { return _this.CONSUME(graphQlTokenMap.Bang); });\n        });\n        _this.NamedType = _this.RULE('NamedType', function () {\n            _this.CONSUME(graphQlTokenMap.Name);\n        });\n        _this.ListType = _this.RULE('ListType', function () {\n            _this.CONSUME(graphQlTokenMap.LBracket);\n            _this.SUBRULE(_this.Type);\n            _this.CONSUME(graphQlTokenMap.RBracket);\n        });\n        _this.Directives = _this.RULE('Directives', function (isConst) {\n            _this.AT_LEAST_ONE(function () { return _this.SUBRULE(_this.Directive, { ARGS: [isConst] }); });\n        });\n        _this.Directive = _this.RULE('Directive', function (isConst) {\n            _this.CONSUME(graphQlTokenMap.At);\n            _this.CONSUME(graphQlTokenMap.Name);\n            _this.OPTION(function () { return _this.SUBRULE(_this.Arguments, { ARGS: [isConst] }); });\n        });\n        _this.TypeSystemDefinition = _this.RULE('TypeSystemDefinition', function () {\n            _this.OR([\n                { ALT: function () { return _this.SUBRULE(_this.SchemaDefinition); } },\n                { ALT: function () { return _this.SUBRULE(_this.TypeDefinition); } },\n                { ALT: function () { return _this.SUBRULE(_this.DirectiveDefinition); } },\n            ]);\n        });\n        _this.TypeSystemExtension = _this.RULE('TypeSystemExtension', function () {\n            _this.OR([\n                { ALT: function () { return _this.SUBRULE(_this.SchemaExtension); } },\n                { ALT: function () { return _this.SUBRULE(_this.TypeExtension); } },\n            ]);\n        });\n        _this.SchemaDefinition = _this.RULE('SchemaDefinition', function () {\n            _this.CONSUME(graphQlTokenMap.Schema);\n            _this.OPTION(function () {\n                return _this.SUBRULE(_this.Directives, { ARGS: [true /* isConst */] });\n            });\n            _this.CONSUME(graphQlTokenMap.LCurly);\n            _this.AT_LEAST_ONE(function () { return _this.SUBRULE(_this.OperationTypeDefinition); });\n            _this.CONSUME(graphQlTokenMap.RCurly);\n        });\n        _this.SchemaExtension = _this.RULE('SchemaExtension', function () {\n            _this.CONSUME(graphQlTokenMap.Extend);\n            _this.CONSUME(graphQlTokenMap.Schema);\n            _this.OR([\n                {\n                    ALT: function () {\n                        _this.SUBRULE(_this.Directives, { ARGS: [true /* isConst */] });\n                        _this.OPTION(function () { return _this.SUBRULE1(_this.OperationTypeDefinitionList); });\n                    },\n                },\n                { ALT: function () { return _this.SUBRULE(_this.OperationTypeDefinitionList); } },\n            ]);\n        });\n        _this.OperationTypeDefinitionList = _this.RULE('OperationTypeDefinitionList', function () {\n            _this.CONSUME(graphQlTokenMap.LCurly);\n            _this.AT_LEAST_ONE(function () { return _this.SUBRULE(_this.OperationTypeDefinition); });\n            _this.CONSUME(graphQlTokenMap.RCurly);\n        });\n        _this.OperationTypeDefinition = _this.RULE('OperationTypeDefinition', function () {\n            _this.SUBRULE(_this.OperationType);\n            _this.CONSUME(graphQlTokenMap.Colon);\n            _this.SUBRULE(_this.NamedType);\n        });\n        _this.Description = _this.RULE('Description', function () {\n            _this.SUBRULE(_this.StringValue);\n        });\n        _this.TypeDefinition = _this.RULE('TypeDefinition', function () {\n            _this.OR([\n                { ALT: function () { return _this.SUBRULE(_this.ScalarTypeDefinition); } },\n                { ALT: function () { return _this.SUBRULE(_this.ObjectTypeDefinition); } },\n                { ALT: function () { return _this.SUBRULE(_this.InterfaceTypeDefinition); } },\n                { ALT: function () { return _this.SUBRULE(_this.UnionTypeDefinition); } },\n                { ALT: function () { return _this.SUBRULE(_this.EnumTypeDefinition); } },\n                { ALT: function () { return _this.SUBRULE(_this.InputObjectTypeDefinition); } },\n            ]);\n        });\n        _this.TypeExtension = _this.RULE('TypeExtension', function () {\n            _this.OR([\n                { ALT: function () { return _this.SUBRULE(_this.ScalarTypeExtension); } },\n                { ALT: function () { return _this.SUBRULE(_this.ObjectTypeExtension); } },\n                { ALT: function () { return _this.SUBRULE(_this.InterfaceTypeExtension); } },\n                { ALT: function () { return _this.SUBRULE(_this.UnionTypeExtension); } },\n                { ALT: function () { return _this.SUBRULE(_this.EnumTypeExtension); } },\n                { ALT: function () { return _this.SUBRULE(_this.InputObjectTypeExtension); } },\n            ]);\n        });\n        _this.ScalarTypeDefinition = _this.RULE('ScalarTypeDefinition', function () {\n            _this.OPTION(function () { return _this.SUBRULE(_this.Description); });\n            _this.CONSUME(graphQlTokenMap.Scalar);\n            _this.CONSUME(graphQlTokenMap.Name);\n            _this.OPTION1(function () {\n                return _this.SUBRULE(_this.Directives, { ARGS: [true /* isConst */] });\n            });\n        });\n        _this.ScalarTypeExtension = _this.RULE('ScalarTypeExtension', function () {\n            _this.CONSUME(graphQlTokenMap.Extend);\n            _this.CONSUME(graphQlTokenMap.Scalar);\n            _this.CONSUME(graphQlTokenMap.Name);\n            _this.SUBRULE(_this.Directives, { ARGS: [true /* isConst */] });\n        });\n        _this.ObjectTypeDefinition = _this.RULE('ObjectTypeDefinition', function () {\n            _this.OPTION(function () { return _this.SUBRULE(_this.Description); });\n            _this.CONSUME(graphQlTokenMap.TypeToken);\n            _this.CONSUME(graphQlTokenMap.Name);\n            _this.OPTION1(function () { return _this.SUBRULE(_this.ImplementsInterfaces); });\n            _this.OPTION2(function () {\n                return _this.SUBRULE1(_this.Directives, { ARGS: [true /* isConst */] });\n            });\n            _this.OPTION3(function () { return _this.SUBRULE(_this.FieldsDefinition); });\n        });\n        _this.ObjectTypeExtension = _this.RULE('ObjectTypeExtension', function () {\n            _this.CONSUME(graphQlTokenMap.Extend);\n            _this.CONSUME(graphQlTokenMap.TypeToken);\n            _this.CONSUME(graphQlTokenMap.Name);\n            _this.OR([\n                {\n                    ALT: function () {\n                        _this.SUBRULE(_this.ImplementsInterfaces);\n                        _this.OPTION(function () {\n                            return _this.SUBRULE1(_this.Directives, { ARGS: [true /* isConst */] });\n                        });\n                        _this.OPTION1(function () { return _this.SUBRULE(_this.FieldsDefinition); });\n                    },\n                },\n                {\n                    ALT: function () {\n                        _this.SUBRULE(_this.Directives, { ARGS: [true /* isConst */] });\n                        _this.OPTION2(function () { return _this.SUBRULE1(_this.FieldsDefinition); });\n                    },\n                },\n                { ALT: function () { return _this.SUBRULE2(_this.FieldsDefinition); } },\n            ]);\n        });\n        _this.ImplementsInterfaces = _this.RULE('ImplementsInterfaces', function () {\n            _this.CONSUME(graphQlTokenMap.Implements);\n            _this.OPTION(function () { return _this.CONSUME(graphQlTokenMap.Amp); });\n            _this.SUBRULE(_this.NamedType);\n            _this.MANY(function () {\n                _this.CONSUME1(graphQlTokenMap.Amp);\n                _this.SUBRULE1(_this.NamedType);\n            });\n        });\n        _this.FieldsDefinition = _this.RULE('FieldsDefinition', function () {\n            _this.CONSUME(graphQlTokenMap.LCurly);\n            _this.AT_LEAST_ONE(function () { return _this.SUBRULE(_this.FieldDefinition); });\n            _this.CONSUME(graphQlTokenMap.RCurly);\n        });\n        _this.FieldDefinition = _this.RULE('FieldDefinition', function () {\n            _this.OPTION(function () { return _this.SUBRULE(_this.Description); });\n            _this.CONSUME(graphQlTokenMap.Name);\n            _this.OPTION1(function () { return _this.SUBRULE(_this.ArgumentsDefinition); });\n            _this.CONSUME(graphQlTokenMap.Colon);\n            _this.SUBRULE(_this.Type);\n            _this.OPTION2(function () {\n                return _this.SUBRULE(_this.Directives, { ARGS: [true /* isConst */] });\n            });\n        });\n        _this.ArgumentsDefinition = _this.RULE('ArgumentsDefinition', function () {\n            _this.CONSUME(graphQlTokenMap.LParen);\n            _this.AT_LEAST_ONE(function () { return _this.SUBRULE(_this.InputValueDefinition); });\n            _this.CONSUME(graphQlTokenMap.RParen);\n        });\n        _this.InputValueDefinition = _this.RULE('InputValueDefinition', function () {\n            _this.OPTION(function () { return _this.SUBRULE(_this.Description); });\n            _this.CONSUME(graphQlTokenMap.Name);\n            _this.CONSUME(graphQlTokenMap.Colon);\n            _this.SUBRULE(_this.Type);\n            _this.OPTION1(function () { return _this.SUBRULE(_this.DefaultValue); });\n            _this.OPTION2(function () {\n                return _this.SUBRULE(_this.Directives, { ARGS: [true /* isConst */] });\n            });\n        });\n        _this.InterfaceTypeDefinition = _this.RULE('InterfaceTypeDefinition', function () {\n            _this.OPTION(function () { return _this.SUBRULE(_this.Description); });\n            _this.CONSUME(graphQlTokenMap.Interface);\n            _this.CONSUME(graphQlTokenMap.Name);\n            _this.OPTION2(function () {\n                return _this.SUBRULE(_this.Directives, { ARGS: [true /* isConst */] });\n            });\n            _this.OPTION3(function () { return _this.SUBRULE(_this.FieldsDefinition); });\n        });\n        _this.InterfaceTypeExtension = _this.RULE('InterfaceTypeExtension', function () {\n            _this.CONSUME(graphQlTokenMap.Extend);\n            _this.CONSUME(graphQlTokenMap.Interface);\n            _this.CONSUME(graphQlTokenMap.Name);\n            _this.OR([\n                {\n                    ALT: function () {\n                        _this.SUBRULE(_this.Directives, { ARGS: [true /* isConst */] });\n                        _this.OPTION(function () { return _this.SUBRULE(_this.FieldsDefinition); });\n                    },\n                },\n                { ALT: function () { return _this.SUBRULE1(_this.FieldsDefinition); } },\n            ]);\n        });\n        _this.UnionTypeDefinition = _this.RULE('UnionTypeDefinition', function () {\n            _this.OPTION(function () { return _this.SUBRULE(_this.Description); });\n            _this.CONSUME(graphQlTokenMap.Union);\n            _this.CONSUME(graphQlTokenMap.Name);\n            _this.OPTION1(function () {\n                return _this.SUBRULE(_this.Directives, { ARGS: [true /* isConst */] });\n            });\n            _this.OPTION2(function () { return _this.SUBRULE(_this.UnionMemberTypes); });\n        });\n        _this.UnionMemberTypes = _this.RULE('UnionMemberTypes', function () {\n            _this.CONSUME(graphQlTokenMap.Equals);\n            _this.OPTION(function () { return _this.CONSUME(graphQlTokenMap.Pipe); });\n            _this.SUBRULE(_this.NamedType);\n            _this.MANY(function () {\n                _this.CONSUME1(graphQlTokenMap.Pipe);\n                _this.SUBRULE1(_this.NamedType);\n            });\n        });\n        _this.UnionTypeExtension = _this.RULE('UnionTypeExtension', function () {\n            _this.CONSUME(graphQlTokenMap.Extend);\n            _this.CONSUME(graphQlTokenMap.Union);\n            _this.CONSUME(graphQlTokenMap.Name);\n            _this.OR([\n                {\n                    ALT: function () {\n                        _this.SUBRULE(_this.Directives, { ARGS: [true /* isConst */] });\n                        _this.OPTION(function () { return _this.SUBRULE(_this.UnionMemberTypes); });\n                    },\n                },\n                { ALT: function () { return _this.SUBRULE1(_this.UnionMemberTypes); } },\n            ]);\n        });\n        _this.EnumTypeDefinition = _this.RULE('EnumTypeDefinition', function () {\n            _this.OPTION(function () { return _this.SUBRULE(_this.Description); });\n            _this.CONSUME(graphQlTokenMap.Enum);\n            _this.CONSUME(graphQlTokenMap.Name);\n            _this.OPTION1(function () {\n                return _this.SUBRULE(_this.Directives, { ARGS: [true /* isConst */] });\n            });\n            _this.OPTION2(function () { return _this.SUBRULE(_this.EnumValuesDefinition); });\n        });\n        _this.EnumValuesDefinition = _this.RULE('EnumValuesDefinition', function () {\n            _this.CONSUME(graphQlTokenMap.LCurly);\n            _this.AT_LEAST_ONE(function () { return _this.SUBRULE(_this.EnumValueDefinition); });\n            _this.CONSUME(graphQlTokenMap.RCurly);\n        });\n        _this.EnumValueDefinition = _this.RULE('EnumValueDefinition', function () {\n            _this.OPTION(function () { return _this.SUBRULE(_this.Description); });\n            _this.SUBRULE(_this.EnumValue);\n            _this.OPTION1(function () {\n                return _this.SUBRULE(_this.Directives, { ARGS: [true /* isConst */] });\n            });\n        });\n        _this.EnumTypeExtension = _this.RULE('EnumTypeExtension', function () {\n            _this.CONSUME(graphQlTokenMap.Extend);\n            _this.CONSUME(graphQlTokenMap.Enum);\n            _this.CONSUME(graphQlTokenMap.Name);\n            _this.OR([\n                {\n                    ALT: function () {\n                        _this.SUBRULE(_this.Directives, { ARGS: [true /* isConst */] });\n                        _this.OPTION(function () { return _this.SUBRULE(_this.EnumValuesDefinition); });\n                    },\n                },\n                { ALT: function () { return _this.SUBRULE1(_this.EnumValuesDefinition); } },\n            ]);\n        });\n        _this.InputObjectTypeDefinition = _this.RULE('InputObjectTypeDefinition', function () {\n            _this.OPTION(function () { return _this.SUBRULE(_this.Description); });\n            _this.CONSUME(graphQlTokenMap.Input);\n            _this.CONSUME(graphQlTokenMap.Name);\n            _this.OPTION1(function () {\n                return _this.SUBRULE(_this.Directives, { ARGS: [true /* isConst */] });\n            });\n            _this.OPTION2(function () { return _this.SUBRULE(_this.InputFieldsDefinition); });\n        });\n        _this.InputFieldsDefinition = _this.RULE('InputFieldsDefinition', function () {\n            _this.CONSUME(graphQlTokenMap.LCurly);\n            _this.AT_LEAST_ONE(function () { return _this.SUBRULE(_this.InputValueDefinition); });\n            _this.CONSUME(graphQlTokenMap.RCurly);\n        });\n        _this.InputObjectTypeExtension = _this.RULE('InputObjectTypeExtension', function () {\n            _this.CONSUME(graphQlTokenMap.Extend);\n            _this.CONSUME(graphQlTokenMap.Input);\n            _this.CONSUME(graphQlTokenMap.Name);\n            _this.OR([\n                {\n                    ALT: function () {\n                        _this.SUBRULE(_this.Directives, { ARGS: [true /* isConst */] });\n                        _this.OPTION(function () { return _this.SUBRULE1(_this.InputFieldsDefinition); });\n                    },\n                },\n                { ALT: function () { return _this.SUBRULE(_this.InputFieldsDefinition); } },\n            ]);\n        });\n        _this.DirectiveDefinition = _this.RULE('DirectiveDefinition', function () {\n            _this.OPTION(function () { return _this.SUBRULE(_this.Description); });\n            _this.CONSUME(graphQlTokenMap.DirectiveToken);\n            _this.CONSUME(graphQlTokenMap.At);\n            _this.CONSUME(graphQlTokenMap.Name);\n            _this.OPTION1(function () { return _this.SUBRULE(_this.ArgumentsDefinition); });\n            _this.CONSUME(graphQlTokenMap.On);\n            _this.SUBRULE(_this.DirectiveLocations);\n        });\n        _this.DirectiveLocations = _this.RULE('DirectiveLocations', function () {\n            _this.OPTION(function () { return _this.CONSUME(graphQlTokenMap.Pipe); });\n            _this.SUBRULE(_this.DirectiveLocation);\n            _this.MANY(function () {\n                _this.CONSUME1(graphQlTokenMap.Pipe);\n                _this.SUBRULE1(_this.DirectiveLocation);\n            });\n        });\n        _this.DirectiveLocation = _this.RULE('DirectiveLocation', function () {\n            _this.OR([\n                { ALT: function () { return _this.SUBRULE(_this.ExecutableDirectiveLocation); } },\n                { ALT: function () { return _this.SUBRULE(_this.TypeSystemDirectiveLocation); } },\n            ]);\n        });\n        _this.ExecutableDirectiveLocation = _this.RULE('ExecutableDirectiveLocation', function () {\n            _this.OR([\n                { ALT: function () { return _this.CONSUME(graphQlTokenMap.QUERY); } },\n                { ALT: function () { return _this.CONSUME(graphQlTokenMap.MUTATION); } },\n                { ALT: function () { return _this.CONSUME(graphQlTokenMap.SUBSCRIPTION); } },\n                { ALT: function () { return _this.CONSUME(graphQlTokenMap.FIELD); } },\n                { ALT: function () { return _this.CONSUME(graphQlTokenMap.FRAGMENT_DEFINITION); } },\n                { ALT: function () { return _this.CONSUME(graphQlTokenMap.FRAGMENT_SPREAD); } },\n                { ALT: function () { return _this.CONSUME(graphQlTokenMap.INLINE_FRAGMENT); } },\n            ]);\n        });\n        _this.TypeSystemDirectiveLocation = _this.RULE('TypeSystemDirectiveLocation', function () {\n            _this.OR([\n                { ALT: function () { return _this.CONSUME(graphQlTokenMap.SCHEMA); } },\n                { ALT: function () { return _this.CONSUME(graphQlTokenMap.SCALAR); } },\n                { ALT: function () { return _this.CONSUME(graphQlTokenMap.OBJECT); } },\n                { ALT: function () { return _this.CONSUME(graphQlTokenMap.FIELD_DEFINITION); } },\n                { ALT: function () { return _this.CONSUME(graphQlTokenMap.ARGUMENT_DEFINITION); } },\n                { ALT: function () { return _this.CONSUME(graphQlTokenMap.INTERFACE); } },\n                { ALT: function () { return _this.CONSUME(graphQlTokenMap.UNION); } },\n                { ALT: function () { return _this.CONSUME(graphQlTokenMap.ENUM); } },\n                { ALT: function () { return _this.CONSUME(graphQlTokenMap.ENUM_VALUE); } },\n                { ALT: function () { return _this.CONSUME(graphQlTokenMap.INPUT_OBJECT); } },\n                { ALT: function () { return _this.CONSUME(graphQlTokenMap.INPUT_FIELD_DEFINITION); } },\n            ]);\n        });\n        _this.lexer = new Lexer(tokenVocab);\n        return _this;\n    }\n    return BaseGraphQlParser;\n}(Parser));\nexport { BaseGraphQlParser };\n", "import { tokenMatcher, } from 'chevrotain';\nimport { isCstNode } from 'helpers/chevrotain/cst';\nvar stardogGraphQlTokenMap = require('./tokens').stardogGraphQlTokenMap;\nvar _a = stardogGraphQlTokenMap, ToArgumentToken = _a.ToArgumentToken, IfArgumentToken = _a.IfArgumentToken, AliasArgumentToken = _a.AliasArgumentToken, GraphArgumentToken = _a.GraphArgumentToken, BindDirectiveToken = _a.BindDirectiveToken, ConfigDirectiveToken = _a.ConfigDirectiveToken, SkipDirectiveToken = _a.SkipDirectiveToken, IncludeDirectiveToken = _a.IncludeDirectiveToken, FilterDirectiveToken = _a.FilterDirectiveToken;\nvar conditionalDirectiveTokens = [\n    SkipDirectiveToken,\n    IncludeDirectiveToken,\n    FilterDirectiveToken,\n];\nvar sparqlReceivingStardogDirectiveTokens = [\n    BindDirectiveToken\n].concat(conditionalDirectiveTokens);\nfunction getArgumentTokenTypesForDirectiveNameToken(directiveNameToken) {\n    if (tokenMatcher(directiveNameToken, BindDirectiveToken)) {\n        return [ToArgumentToken];\n    }\n    else if (tokenMatcher(directiveNameToken, ConfigDirectiveToken)) {\n        return [AliasArgumentToken, GraphArgumentToken];\n    }\n    else if (conditionalDirectiveTokens.some(function (tokenType) {\n        return tokenMatcher(directiveNameToken, tokenType);\n    })) {\n        return [IfArgumentToken];\n    }\n    else {\n        return [];\n    }\n}\nfunction getArgumentNodes(argumentDictionary) {\n    if (!argumentDictionary || !argumentDictionary.Arguments) {\n        return [];\n    }\n    var argumentsNode = argumentDictionary.Arguments[0];\n    if (!isCstNode(argumentsNode)) {\n        return [];\n    }\n    return argumentsNode.children.Argument || []; // this should be an array of all 'Argument' nodes\n}\nfunction isSparqlReceivingStardogDirective(directiveToken) {\n    return sparqlReceivingStardogDirectiveTokens.some(function (tokenType) {\n        return tokenMatcher(directiveToken, tokenType);\n    });\n}\nexport var graphQlUtils = {\n    getArgumentNodes: getArgumentNodes,\n    getArgumentTokenTypesForDirectiveNameToken: getArgumentTokenTypesForDirectiveNameToken,\n    isSparqlReceivingStardogDirective: isSparqlReceivingStardogDirective,\n};\n", "export * from './BaseSparqlParser';\nexport * from './W3SpecSparqlParser';\nexport * from './StardogSparqlParser';\n// Convenience imports/exports that aren't core functionality:\n// NOTE: Tokens MUST be imported using CommonJS syntax; see here: https://github.com/SAP/chevrotain/issues/345\nexport var sparqlTokens = require('./tokens');\nexport var keywords = require('./keywords').keywords;\nexport var terminals = require('./terminals').terminals;\n", "var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { createToken, Lexer } from 'chevrotain';\nimport { regex } from 'helpers/regex';\nimport { STRING_LITERAL_LONG2 } from 'helpers/matchers';\n// Patterns:\nvar NAME_PATTERN = /[_A-Za-z][_0-9A-Za-z]*/;\nvar INTEGER_PART_PATTERN = /\\-?(?:0|[1-9][0-9]*)/;\nvar EXPONENT_PART_PATTERN = /[eE][+-]?[0-9]+/;\nvar ESCAPED_CHARACTER_PATTERN = /\\\\[\"\\\\/bfnrt]/;\nvar ESCAPED_UNICODE_PATTERN = /\\\\u[0-9A-Fa-f]{4}/;\nvar STRING_SOURCE_CHARACTER_PATTERN = /[\\u0009\\u0020\\u0021\\u0023-\\u005B\\u005D-\\uFFFF]/; // source character, but no '\"' or '\\' or line terminators\nvar STRING_CHARACTER_PATTERN = regex.and(/\"/, regex.many(regex.or(STRING_SOURCE_CHARACTER_PATTERN, ESCAPED_UNICODE_PATTERN, ESCAPED_CHARACTER_PATTERN)), /\"/);\nvar BOOLEAN_PATTERN = /true|false/;\nvar NULL_PATTERN = /null/;\nvar ON_PATTERN = /on/;\n// Holder of tokens; tokens are generally added and created in order, below.\nvar graphQlTokens = [];\n// Utility used primarily for keywords, which should also be counted as\n// matching the `Name` token and (except for special cases) the\n// `EnumValueToken` and `FragmentName` tokens. Ensures the created token has\n// those other tokens as categories, and ensures that `Name` will be matched\n// correctly for tokens that start with keyword characters but have additional\n// characters. Adds the created token to the `graphQlTokens` array.\nvar createAndPushTokenWithNameAlt = function (config) {\n    var categories = [Name];\n    if (config.pattern !== BOOLEAN_PATTERN && config.pattern !== NULL_PATTERN) {\n        categories.push(EnumValueToken);\n    }\n    if (config.pattern !== ON_PATTERN) {\n        categories.push(FragmentName);\n    }\n    return createAndPushToken({\n        name: config.name,\n        pattern: config.pattern,\n        longer_alt: Name,\n        categories: categories,\n    });\n};\nvar createAndPushPunctuator = function (config) {\n    return createAndPushToken(__assign({}, config, { categories: [Punctuator] }));\n};\n// Simple wrapper for `createToken` that also pushes the created token into\n// `graphQlTokens` at the time of creation, since order matters.\nvar createAndPushToken = function (config) {\n    var token = createToken(config);\n    graphQlTokens.push(token);\n    return token;\n};\n// Category tokens need to be created first, so they can be referenced by other\n// tokens. They are _not_ yet added to the `graphQlTokens` array so that they\n// do not match before various more specific keywords.\nvar Name = createToken({ name: 'Name', pattern: NAME_PATTERN });\n// `EnumValueToken` and `FragmentName` are purely abstract categories that will\n// be matched for all `Name` tokens _except_ the special tokens specified in\n// the GraphQL grammar. See `createAndPushTokenWithNameAlt` for details.\nvar EnumValueToken = createToken({\n    name: 'EnumValueToken',\n    pattern: Lexer.NA,\n});\nvar FragmentName = createToken({\n    name: 'FragmentName',\n    pattern: Lexer.NA,\n});\n// `StringValueToken` will match either BlockStrings or Strings.\nvar StringValueToken = createToken({\n    name: 'StringValueToken',\n    pattern: Lexer.NA,\n});\nvar Punctuator = createToken({\n    name: 'Punctuator',\n    pattern: Lexer.NA,\n});\n// Generally, anything that matches `Name` should match `EnumValueToken` and\n// `FragmentName`. NOTE, however that `On` will not match `FragmentName` and\n// `BooleanValueToken` and `NullValueToken` will not match `EnumValueToken`, in\n// accordance with the official grammar; this is handled by the fact that the\n// `On`, `BooleanValueToken`, and `FragmentName` tokens are defined and pushed\n// into the tokens array earlier than `Name`. Given\n// `createAndPushTokenWithNameAlt`, the latter tokens will also be treated as\n// `Name` tokens, but will NOT be treated as instances of the relevant\n// `EnumValueToken` or `FragmentName`. That's exactly what we want.\nName.CATEGORIES.push(EnumValueToken, FragmentName);\nvar ignoredTokens = {\n    WhiteSpace: createAndPushToken({\n        name: 'WhiteSpace',\n        pattern: /[ \\t]+/,\n        group: Lexer.SKIPPED,\n    }),\n    UnicodeBOM: createAndPushToken({\n        name: 'UnicodeBOM',\n        pattern: '\\\\uFFFE',\n        group: Lexer.SKIPPED,\n    }),\n    LineTerminator: createAndPushToken({\n        name: 'LineTerminator',\n        pattern: /\\n\\r|\\r|\\n/,\n        group: Lexer.SKIPPED,\n    }),\n    Comment: createAndPushToken({\n        name: 'Comment',\n        pattern: /#[^\\n\\r]*/,\n        group: Lexer.SKIPPED,\n    }),\n    Comma: createAndPushToken({\n        name: 'Comma',\n        pattern: ',',\n        group: Lexer.SKIPPED,\n    }),\n};\nvar punctuators = {\n    Bang: createAndPushPunctuator({ name: 'Bang', pattern: '!' }),\n    Dollar: createAndPushPunctuator({ name: 'Dollar', pattern: '$' }),\n    LParen: createAndPushPunctuator({ name: 'LParen', pattern: '(' }),\n    RParen: createAndPushPunctuator({ name: 'RParen', pattern: ')' }),\n    Spread: createAndPushPunctuator({ name: 'Spread', pattern: '...' }),\n    Colon: createAndPushPunctuator({ name: 'Colon', pattern: ':' }),\n    Equals: createAndPushPunctuator({ name: 'Equals', pattern: '=' }),\n    At: createAndPushPunctuator({ name: 'At', pattern: '@' }),\n    LBracket: createAndPushPunctuator({ name: 'LBracket', pattern: '[' }),\n    RBracket: createAndPushPunctuator({ name: 'RBracket', pattern: ']' }),\n    LCurly: createAndPushPunctuator({ name: 'LCurly', pattern: '{' }),\n    RCurly: createAndPushPunctuator({ name: 'RCurly', pattern: '}' }),\n    Pipe: createAndPushPunctuator({ name: 'Pipe', pattern: '|' }),\n    Amp: createAndPushPunctuator({ name: 'Amp', pattern: '&' }),\n    Punctuator: Punctuator,\n};\nvar nonKeywordTerminals = {\n    FloatValueToken: createAndPushToken({\n        name: 'FloatValueToken',\n        pattern: regex.and(INTEGER_PART_PATTERN, regex.or(regex.and(/\\.[0-9]+/, regex.option(EXPONENT_PART_PATTERN)), EXPONENT_PART_PATTERN)),\n    }),\n    IntValueToken: createAndPushToken({\n        name: 'IntValueToken',\n        pattern: INTEGER_PART_PATTERN,\n    }),\n    BlockStringToken: createAndPushToken({\n        name: 'BlockStringToken',\n        pattern: STRING_LITERAL_LONG2,\n        categories: [StringValueToken],\n    }),\n    StringToken: createAndPushToken({\n        name: 'StringToken',\n        pattern: STRING_CHARACTER_PATTERN,\n        categories: [StringValueToken],\n    }),\n    BooleanValueToken: createAndPushToken({\n        name: 'BooleanValueToken',\n        pattern: BOOLEAN_PATTERN,\n        longer_alt: Name,\n    }),\n    NullValueToken: createAndPushToken({\n        name: 'NullValueToken',\n        pattern: NULL_PATTERN,\n        longer_alt: Name,\n    }),\n    EnumValueToken: EnumValueToken,\n    FragmentName: FragmentName,\n    Name: Name,\n    StringValueToken: StringValueToken,\n};\nvar keywords = {\n    Query: createAndPushTokenWithNameAlt({\n        name: 'Query',\n        pattern: 'query',\n    }),\n    Mutation: createAndPushTokenWithNameAlt({\n        name: 'Mutation',\n        pattern: 'mutation',\n    }),\n    Subscription: createAndPushTokenWithNameAlt({\n        name: 'Subscription',\n        pattern: 'subscription',\n    }),\n    Fragment: createAndPushTokenWithNameAlt({\n        name: 'Fragment',\n        pattern: 'fragment',\n    }),\n    On: createAndPushTokenWithNameAlt({\n        name: 'On',\n        pattern: ON_PATTERN,\n    }),\n    Schema: createAndPushTokenWithNameAlt({\n        name: 'Schema',\n        pattern: 'schema',\n    }),\n    Extend: createAndPushTokenWithNameAlt({\n        name: 'Extend',\n        pattern: 'extend',\n    }),\n    Scalar: createAndPushTokenWithNameAlt({\n        name: 'Scalar',\n        pattern: 'scalar',\n    }),\n    TypeToken: createAndPushTokenWithNameAlt({\n        name: 'TypeToken',\n        pattern: 'type',\n    }),\n    Implements: createAndPushTokenWithNameAlt({\n        name: 'Implements',\n        pattern: 'implements',\n    }),\n    Interface: createAndPushTokenWithNameAlt({\n        name: 'Interface',\n        pattern: 'interface',\n    }),\n    Union: createAndPushTokenWithNameAlt({\n        name: 'Union',\n        pattern: 'union',\n    }),\n    Enum: createAndPushTokenWithNameAlt({\n        name: 'Enum',\n        pattern: 'enum',\n    }),\n    Input: createAndPushTokenWithNameAlt({\n        name: 'Input',\n        pattern: 'input',\n    }),\n    DirectiveToken: createAndPushTokenWithNameAlt({\n        name: 'DirectiveToken',\n        pattern: 'directive',\n    }),\n    QUERY: createAndPushTokenWithNameAlt({ name: 'QUERY', pattern: 'QUERY' }),\n    MUTATION: createAndPushTokenWithNameAlt({\n        name: 'MUTATION',\n        pattern: 'MUTATION',\n    }),\n    SUBSCRIPTION: createAndPushTokenWithNameAlt({\n        name: 'SUBSCRIPTION',\n        pattern: 'SUBSCRIPTION',\n    }),\n    FRAGMENT_DEFINITION: createAndPushTokenWithNameAlt({\n        name: 'FRAGMENT_DEFINITION',\n        pattern: 'FRAGMENT_DEFINITION',\n    }),\n    FRAGMENT_SPREAD: createAndPushTokenWithNameAlt({\n        name: 'FRAGMENT_SPREAD',\n        pattern: 'FRAGMENT_SPREAD',\n    }),\n    INLINE_FRAGMENT: createAndPushTokenWithNameAlt({\n        name: 'INLINE_FRAGMENT',\n        pattern: 'INLINE_FRAGMENT',\n    }),\n    SCHEMA: createAndPushTokenWithNameAlt({ name: 'SCHEMA', pattern: 'SCHEMA' }),\n    SCALAR: createAndPushTokenWithNameAlt({ name: 'SCALAR', pattern: 'SCALAR' }),\n    OBJECT: createAndPushTokenWithNameAlt({ name: 'OBJECT', pattern: 'OBJECT' }),\n    FIELD_DEFINITION: createAndPushTokenWithNameAlt({\n        name: 'FIELD_DEFINITION',\n        pattern: 'FIELD_DEFINITION',\n    }),\n    FIELD: createAndPushTokenWithNameAlt({ name: 'FIELD', pattern: 'FIELD' }),\n    ARGUMENT_DEFINITION: createAndPushTokenWithNameAlt({\n        name: 'ARGUMENT_DEFINITION',\n        pattern: 'ARGUMENT_DEFINITION',\n    }),\n    INTERFACE: createAndPushTokenWithNameAlt({\n        name: 'INTERFACE',\n        pattern: 'INTERFACE',\n    }),\n    UNION: createAndPushTokenWithNameAlt({ name: 'UNION', pattern: 'UNION' }),\n    ENUM_VALUE: createAndPushTokenWithNameAlt({\n        name: 'ENUM_VALUE',\n        pattern: 'ENUM_VALUE',\n    }),\n    ENUM: createAndPushTokenWithNameAlt({ name: 'ENUM', pattern: 'ENUM' }),\n    INPUT_OBJECT: createAndPushTokenWithNameAlt({\n        name: 'INPUT_OBJECT',\n        pattern: 'INPUT_OBJECT',\n    }),\n    INPUT_FIELD_DEFINITION: createAndPushTokenWithNameAlt({\n        name: 'INPUT_FIELD_DEFINITION',\n        pattern: 'INPUT_FIELD_DEFINITION',\n    }),\n};\nvar graphQlTokenMap = __assign({}, ignoredTokens, punctuators, nonKeywordTerminals, keywords, { Name: Name });\n// Category tokens for special Stardog directives/arguments. These are\n// especially useful in tools that use the parser, such as language servers\nvar StardogDirective = createToken({\n    name: 'StardogDirective',\n    pattern: Lexer.NA,\n});\nvar SparqlReceivingStardogDirective = createToken({\n    name: 'SparqlReceivingStardogDirective',\n    pattern: Lexer.NA,\n});\nvar StardogArgument = createToken({\n    name: 'StardogArgument',\n    pattern: Lexer.NA,\n});\nvar TopLevel = createToken({\n    name: 'TopLevel',\n    pattern: Lexer.NA,\n});\nvar stardogDirectives = [\n    'optional',\n    'bind',\n    'hide',\n    'skip',\n    'include',\n    'filter',\n    'prefix',\n    'config',\n]\n    .sort()\n    .reduce(function (accumulator, name) {\n    var _a;\n    var key = \"\" + name[0].toUpperCase() + name.slice(1) + \"DirectiveToken\";\n    var categories = [Name, EnumValueToken, FragmentName, StardogDirective];\n    if (['prefix', 'config'].includes(name)) {\n        categories.push(TopLevel);\n    }\n    if (['bind', 'skip', 'include', 'filter'].includes(name)) {\n        categories.push(SparqlReceivingStardogDirective);\n    }\n    var token = createToken({\n        name: key,\n        pattern: name,\n        categories: categories,\n        longer_alt: Name,\n    });\n    return __assign({}, accumulator, { tokenMap: __assign({}, accumulator.tokenMap, (_a = {}, _a[key] = token, _a)), orderedTokens: accumulator.orderedTokens.concat(token) });\n}, { tokenMap: {}, orderedTokens: [] });\nvar stardogArguments = [\n    'orderBy',\n    'first',\n    'to',\n    'if',\n    'alias',\n    'graph',\n    'offset',\n    'limit',\n    'iri',\n]\n    .sort()\n    .reduce(function (accumulator, name) {\n    var _a;\n    var key = \"\" + name[0].toUpperCase() + name.slice(1) + \"ArgumentToken\";\n    var categories = [Name, EnumValueToken, FragmentName, StardogArgument];\n    if (['orderBy', 'first', 'limit', 'offset'].includes(name)) {\n        categories.push(TopLevel);\n    }\n    var token = createToken({\n        name: key,\n        pattern: name,\n        categories: categories,\n        longer_alt: Name,\n    });\n    return __assign({}, accumulator, { tokenMap: __assign({}, accumulator.tokenMap, (_a = {}, _a[key] = token, _a)), orderedTokens: accumulator.orderedTokens.concat(token) });\n}, { tokenMap: {}, orderedTokens: [] });\n// These two tokens aren't really arguments or directives; instead, they're\n// fields of objects that can be passed as the stardog `orderBy` argument.\nvar stardogOrderByArgumentFieldPropertyToken = createToken({\n    name: 'OrderByArgumentFieldPropertyToken',\n    pattern: 'field',\n    categories: [Name, EnumValueToken, FragmentName],\n    longer_alt: Name,\n});\nvar stardogOrderByArgumentDescPropertyToken = createToken({\n    name: 'OrderByArgumentDescPropertyToken',\n    pattern: 'desc',\n    categories: [Name, EnumValueToken, FragmentName],\n    longer_alt: Name,\n});\nvar stardogGraphQlTokenMap = __assign({}, graphQlTokenMap, stardogDirectives.tokenMap, stardogArguments.tokenMap, { OrderByArgumentFieldPropertyToken: stardogOrderByArgumentFieldPropertyToken, OrderByArgumentDescPropertyToken: stardogOrderByArgumentDescPropertyToken, StardogDirective: StardogDirective,\n    SparqlReceivingStardogDirective: SparqlReceivingStardogDirective,\n    StardogArgument: StardogArgument,\n    TopLevel: TopLevel });\nvar stardogGraphQlTokens = graphQlTokens.concat(stardogDirectives.orderedTokens, stardogArguments.orderedTokens, [\n    stardogOrderByArgumentFieldPropertyToken,\n    stardogOrderByArgumentDescPropertyToken,\n    StardogDirective,\n    SparqlReceivingStardogDirective,\n    StardogArgument,\n    TopLevel,\n]);\n// Add shared category and catch-all tokens.\nvar finalTokens = [\n    FragmentName,\n    EnumValueToken,\n    Name,\n    StringValueToken,\n    Punctuator,\n];\ngraphQlTokens.push.apply(graphQlTokens, finalTokens);\nstardogGraphQlTokens.push.apply(stardogGraphQlTokens, finalTokens);\nexport { graphQlTokenMap, graphQlTokens, stardogGraphQlTokenMap, stardogGraphQlTokens, };\n", "/**\n * Lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright JS Foundation and other contributors <https://js.foundation/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    asyncTag = '[object AsyncFunction]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    nullTag = '[object Null]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    proxyTag = '[object Proxy]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]',\n    undefinedTag = '[object Undefined]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\ntypedArrayTags[errorTag] = typedArrayTags[funcTag] =\ntypedArrayTags[mapTag] = typedArrayTags[numberTag] =\ntypedArrayTags[objectTag] = typedArrayTags[regexpTag] =\ntypedArrayTags[setTag] = typedArrayTags[stringTag] =\ntypedArrayTags[weakMapTag] = false;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Detect free variable `process` from Node.js. */\nvar freeProcess = moduleExports && freeGlobal.process;\n\n/** Used to access faster Node.js helpers. */\nvar nodeUtil = (function() {\n  try {\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}());\n\n/* Node.js helper references. */\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n/**\n * A specialized version of `_.filter` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction arrayFilter(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n    if (predicate(value, index, array)) {\n      result[resIndex++] = value;\n    }\n  }\n  return result;\n}\n\n/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n  return array;\n}\n\n/**\n * A specialized version of `_.some` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction arraySome(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (predicate(array[index], index, array)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\n/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\n/**\n * Checks if a `cache` value for `key` exists.\n *\n * @private\n * @param {Object} cache The cache to query.\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction cacheHas(cache, key) {\n  return cache.has(key);\n}\n\n/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\n/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n\n  map.forEach(function(value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\n/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\n/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n\n  set.forEach(function(value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype,\n    funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined,\n    Symbol = root.Symbol,\n    Uint8Array = root.Uint8Array,\n    propertyIsEnumerable = objectProto.propertyIsEnumerable,\n    splice = arrayProto.splice,\n    symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols,\n    nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,\n    nativeKeys = overArg(Object.keys, Object);\n\n/* Built-in method references that are verified to be native. */\nvar DataView = getNative(root, 'DataView'),\n    Map = getNative(root, 'Map'),\n    Promise = getNative(root, 'Promise'),\n    Set = getNative(root, 'Set'),\n    WeakMap = getNative(root, 'WeakMap'),\n    nativeCreate = getNative(Object, 'create');\n\n/** Used to detect maps, sets, and weakmaps. */\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n  this.size = 0;\n}\n\n/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  var result = this.has(key) && delete this.__data__[key];\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n}\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  this.size += this.has(key) ? 0 : 1;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n  this.size = 0;\n}\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  --this.size;\n  return true;\n}\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    ++this.size;\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.size = 0;\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  var result = getMapData(this, key)['delete'](key);\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  var data = getMapData(this, key),\n      size = data.size;\n\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\n/**\n *\n * Creates an array cache object to store unique values.\n *\n * @private\n * @constructor\n * @param {Array} [values] The values to cache.\n */\nfunction SetCache(values) {\n  var index = -1,\n      length = values == null ? 0 : values.length;\n\n  this.__data__ = new MapCache;\n  while (++index < length) {\n    this.add(values[index]);\n  }\n}\n\n/**\n * Adds `value` to the array cache.\n *\n * @private\n * @name add\n * @memberOf SetCache\n * @alias push\n * @param {*} value The value to cache.\n * @returns {Object} Returns the cache instance.\n */\nfunction setCacheAdd(value) {\n  this.__data__.set(value, HASH_UNDEFINED);\n  return this;\n}\n\n/**\n * Checks if `value` is in the array cache.\n *\n * @private\n * @name has\n * @memberOf SetCache\n * @param {*} value The value to search for.\n * @returns {number} Returns `true` if `value` is found, else `false`.\n */\nfunction setCacheHas(value) {\n  return this.__data__.has(value);\n}\n\n// Add methods to `SetCache`.\nSetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\nSetCache.prototype.has = setCacheHas;\n\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Stack(entries) {\n  var data = this.__data__ = new ListCache(entries);\n  this.size = data.size;\n}\n\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\nfunction stackClear() {\n  this.__data__ = new ListCache;\n  this.size = 0;\n}\n\n/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  var data = this.__data__,\n      result = data['delete'](key);\n\n  this.size = data.size;\n  return result;\n}\n\n/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\n/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\nfunction stackSet(key, value) {\n  var data = this.__data__;\n  if (data instanceof ListCache) {\n    var pairs = data.__data__;\n    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n      pairs.push([key, value]);\n      this.size = ++data.size;\n      return this;\n    }\n    data = this.__data__ = new MapCache(pairs);\n  }\n  data.set(key, value);\n  this.size = data.size;\n  return this;\n}\n\n// Add methods to `Stack`.\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (\n           // Safari 9 has enumerable `arguments.length` in strict mode.\n           key == 'length' ||\n           // Node.js 0.10 has enumerable non-index properties on buffers.\n           (isBuff && (key == 'offset' || key == 'parent')) ||\n           // PhantomJS 2 has enumerable non-index properties on typed arrays.\n           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n           // Skip index properties.\n           isIndex(key, length)\n        ))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\n/**\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\n  var result = keysFunc(object);\n  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n}\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\n/**\n * The base implementation of `_.isEqual` which supports partial comparisons\n * and tracks traversed objects.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Unordered comparison\n *  2 - Partial comparison\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n */\nfunction baseIsEqual(value, other, bitmask, customizer, stack) {\n  if (value === other) {\n    return true;\n  }\n  if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\n    return value !== value && other !== other;\n  }\n  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n}\n\n/**\n * A specialized version of `baseIsEqual` for arrays and objects which performs\n * deep comparisons and tracks traversed objects enabling objects with circular\n * references to be compared.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n  var objIsArr = isArray(object),\n      othIsArr = isArray(other),\n      objTag = objIsArr ? arrayTag : getTag(object),\n      othTag = othIsArr ? arrayTag : getTag(other);\n\n  objTag = objTag == argsTag ? objectTag : objTag;\n  othTag = othTag == argsTag ? objectTag : othTag;\n\n  var objIsObj = objTag == objectTag,\n      othIsObj = othTag == objectTag,\n      isSameTag = objTag == othTag;\n\n  if (isSameTag && isBuffer(object)) {\n    if (!isBuffer(other)) {\n      return false;\n    }\n    objIsArr = true;\n    objIsObj = false;\n  }\n  if (isSameTag && !objIsObj) {\n    stack || (stack = new Stack);\n    return (objIsArr || isTypedArray(object))\n      ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\n      : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n  }\n  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n    if (objIsWrapped || othIsWrapped) {\n      var objUnwrapped = objIsWrapped ? object.value() : object,\n          othUnwrapped = othIsWrapped ? other.value() : other;\n\n      stack || (stack = new Stack);\n      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n    }\n  }\n  if (!isSameTag) {\n    return false;\n  }\n  stack || (stack = new Stack);\n  return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n}\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) &&\n    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * A specialized version of `baseIsEqualDeep` for arrays with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Array} array The array to compare.\n * @param {Array} other The other array to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `array` and `other` objects.\n * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n */\nfunction equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      arrLength = array.length,\n      othLength = other.length;\n\n  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n    return false;\n  }\n  // Assume cyclic values are equal.\n  var stacked = stack.get(array);\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n  var index = -1,\n      result = true,\n      seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;\n\n  stack.set(array, other);\n  stack.set(other, array);\n\n  // Ignore non-index properties.\n  while (++index < arrLength) {\n    var arrValue = array[index],\n        othValue = other[index];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, arrValue, index, other, array, stack)\n        : customizer(arrValue, othValue, index, array, other, stack);\n    }\n    if (compared !== undefined) {\n      if (compared) {\n        continue;\n      }\n      result = false;\n      break;\n    }\n    // Recursively compare arrays (susceptible to call stack limits).\n    if (seen) {\n      if (!arraySome(other, function(othValue, othIndex) {\n            if (!cacheHas(seen, othIndex) &&\n                (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n              return seen.push(othIndex);\n            }\n          })) {\n        result = false;\n        break;\n      }\n    } else if (!(\n          arrValue === othValue ||\n            equalFunc(arrValue, othValue, bitmask, customizer, stack)\n        )) {\n      result = false;\n      break;\n    }\n  }\n  stack['delete'](array);\n  stack['delete'](other);\n  return result;\n}\n\n/**\n * A specialized version of `baseIsEqualDeep` for comparing objects of\n * the same `toStringTag`.\n *\n * **Note:** This function only supports comparing values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {string} tag The `toStringTag` of the objects to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n  switch (tag) {\n    case dataViewTag:\n      if ((object.byteLength != other.byteLength) ||\n          (object.byteOffset != other.byteOffset)) {\n        return false;\n      }\n      object = object.buffer;\n      other = other.buffer;\n\n    case arrayBufferTag:\n      if ((object.byteLength != other.byteLength) ||\n          !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n        return false;\n      }\n      return true;\n\n    case boolTag:\n    case dateTag:\n    case numberTag:\n      // Coerce booleans to `1` or `0` and dates to milliseconds.\n      // Invalid dates are coerced to `NaN`.\n      return eq(+object, +other);\n\n    case errorTag:\n      return object.name == other.name && object.message == other.message;\n\n    case regexpTag:\n    case stringTag:\n      // Coerce regexes to strings and treat strings, primitives and objects,\n      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n      // for more details.\n      return object == (other + '');\n\n    case mapTag:\n      var convert = mapToArray;\n\n    case setTag:\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n      convert || (convert = setToArray);\n\n      if (object.size != other.size && !isPartial) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(object);\n      if (stacked) {\n        return stacked == other;\n      }\n      bitmask |= COMPARE_UNORDERED_FLAG;\n\n      // Recursively compare objects (susceptible to call stack limits).\n      stack.set(object, other);\n      var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n      stack['delete'](object);\n      return result;\n\n    case symbolTag:\n      if (symbolValueOf) {\n        return symbolValueOf.call(object) == symbolValueOf.call(other);\n      }\n  }\n  return false;\n}\n\n/**\n * A specialized version of `baseIsEqualDeep` for objects with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      objProps = getAllKeys(object),\n      objLength = objProps.length,\n      othProps = getAllKeys(other),\n      othLength = othProps.length;\n\n  if (objLength != othLength && !isPartial) {\n    return false;\n  }\n  var index = objLength;\n  while (index--) {\n    var key = objProps[index];\n    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n      return false;\n    }\n  }\n  // Assume cyclic values are equal.\n  var stacked = stack.get(object);\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n  var result = true;\n  stack.set(object, other);\n  stack.set(other, object);\n\n  var skipCtor = isPartial;\n  while (++index < objLength) {\n    key = objProps[index];\n    var objValue = object[key],\n        othValue = other[key];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, objValue, key, other, object, stack)\n        : customizer(objValue, othValue, key, object, other, stack);\n    }\n    // Recursively compare objects (susceptible to call stack limits).\n    if (!(compared === undefined\n          ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\n          : compared\n        )) {\n      result = false;\n      break;\n    }\n    skipCtor || (skipCtor = key == 'constructor');\n  }\n  if (result && !skipCtor) {\n    var objCtor = object.constructor,\n        othCtor = other.constructor;\n\n    // Non `Object` object instances with different constructors are not equal.\n    if (objCtor != othCtor &&\n        ('constructor' in object && 'constructor' in other) &&\n        !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n          typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n      result = false;\n    }\n  }\n  stack['delete'](object);\n  stack['delete'](other);\n  return result;\n}\n\n/**\n * Creates an array of own enumerable property names and symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeys(object) {\n  return baseGetAllKeys(object, keys, getSymbols);\n}\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\n/**\n * Creates an array of the own enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbols = !nativeGetSymbols ? stubArray : function(object) {\n  if (object == null) {\n    return [];\n  }\n  object = Object(object);\n  return arrayFilter(nativeGetSymbols(object), function(symbol) {\n    return propertyIsEnumerable.call(object, symbol);\n  });\n};\n\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nvar getTag = baseGetTag;\n\n// Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\nif ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n    (Map && getTag(new Map) != mapTag) ||\n    (Promise && getTag(Promise.resolve()) != promiseTag) ||\n    (Set && getTag(new Set) != setTag) ||\n    (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n  getTag = function(value) {\n    var result = baseGetTag(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : '';\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString: return dataViewTag;\n        case mapCtorString: return mapTag;\n        case promiseCtorString: return promiseTag;\n        case setCtorString: return setTag;\n        case weakMapCtorString: return weakMapTag;\n      }\n    }\n    return result;\n  };\n}\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return !!length &&\n    (typeof value == 'number' || reIsUint.test(value)) &&\n    (value > -1 && value % 1 == 0 && value < length);\n}\n\n/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\n/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nvar isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n    !propertyIsEnumerable.call(value, 'callee');\n};\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || stubFalse;\n\n/**\n * Performs a deep comparison between two values to determine if they are\n * equivalent.\n *\n * **Note:** This method supports comparing arrays, array buffers, booleans,\n * date objects, error objects, maps, numbers, `Object` objects, regexes,\n * sets, strings, symbols, and typed arrays. `Object` objects are compared\n * by their own, not inherited, enumerable properties. Functions and DOM\n * nodes are compared by strict equality, i.e. `===`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.isEqual(object, other);\n * // => true\n *\n * object === other;\n * // => false\n */\nfunction isEqual(value, other) {\n  return baseIsEqual(value, other);\n}\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\n/**\n * This method returns a new empty array.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Array} Returns the new empty array.\n * @example\n *\n * var arrays = _.times(2, _.stubArray);\n *\n * console.log(arrays);\n * // => [[], []]\n *\n * console.log(arrays[0] === arrays[1]);\n * // => false\n */\nfunction stubArray() {\n  return [];\n}\n\n/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = isEqual;\n", "var _a;\nvar _b = require('../turtle/tokens'), turtleTokenTypes = _b.turtleTokenTypes, turtleTokenMap = _b.turtleTokenMap;\nvar sparqlTokenMap = require('../sparql/tokens').sparqlTokenMap;\nimport { createToken } from 'chevrotain';\nimport { CATCH_ALL_AT_LEAST_ONE } from '../helpers/matchers';\nvar LexerMode;\n(function (LexerMode) {\n    LexerMode[\"TURTLE\"] = \"turtle\";\n    LexerMode[\"IFCLAUSE\"] = \"ifclause\";\n    LexerMode[\"THENCLAUSE\"] = \"thenclause\";\n})(LexerMode || (LexerMode = {}));\nvar Rule = createToken({\n    name: 'Rule',\n    pattern: /rule/i,\n});\nvar If = createToken({\n    name: 'If',\n    pattern: /if/i,\n    push_mode: LexerMode.IFCLAUSE,\n});\nvar Then = createToken({\n    name: 'Then',\n    pattern: /then/i,\n    push_mode: LexerMode.THENCLAUSE,\n});\nvar EndThen = createToken({\n    name: 'EndThen',\n    pattern: '}',\n    pop_mode: true,\n});\n// NOTE: Not a SPARQL GroupGraphPattern. Rather, a placeholder for one. We have\n// to let the SRS parser create this token, then replace with a token returned\n// by the SPARQL sub-parser.\nvar GroupGraphPattern = createToken({\n    name: 'GroupGraphPattern',\n    pattern: function (text, startOffset) {\n        if (startOffset === void 0) { startOffset = 0; }\n        // Capture a single brace and then anything up to its closing brace.\n        if (text[startOffset] !== '{') {\n            return null;\n        }\n        var unclosedBraceCount = 1;\n        var cursor;\n        for (cursor = startOffset + 1; cursor < text.length && unclosedBraceCount > 0; cursor++) {\n            if (text[cursor] === '{') {\n                unclosedBraceCount++;\n            }\n            else if (text[cursor] === '}') {\n                unclosedBraceCount--;\n            }\n        }\n        if (unclosedBraceCount > 0) {\n            return null;\n        }\n        return CATCH_ALL_AT_LEAST_ONE.exec(text.slice(startOffset, cursor));\n    },\n    line_breaks: true,\n    pop_mode: true,\n});\n// NOTE: Not a SPARQL TriplesBlock. Rather, a placeholder for one. We have\n// to let the SRS parser create this token, then replace with a token returned\n// by the SPARQL sub-parser.\nvar TriplesBlock = createToken({\n    name: 'TriplesBlock',\n    pattern: /[^{}]+/,\n    line_breaks: true,\n});\nvar indexOfIriRef = turtleTokenTypes.indexOf(turtleTokenMap.IRIREF);\nexport var multiModeLexerDefinition = {\n    modes: (_a = {},\n        _a[LexerMode.TURTLE] = turtleTokenTypes.slice(0, indexOfIriRef + 1).concat([\n            Rule,\n            If,\n            Then\n        ], turtleTokenTypes.slice(indexOfIriRef + 1)),\n        _a[LexerMode.IFCLAUSE] = [turtleTokenMap.WhiteSpace, GroupGraphPattern],\n        _a[LexerMode.THENCLAUSE] = [\n            turtleTokenMap.WhiteSpace,\n            sparqlTokenMap.LCurly,\n            EndThen,\n            TriplesBlock,\n        ],\n        _a),\n    defaultMode: LexerMode.TURTLE,\n};\nexport var srsTokenMap = {\n    Rule: Rule,\n    If: If,\n    Then: Then,\n    EndThen: EndThen,\n    GroupGraphPattern: GroupGraphPattern,\n    TriplesBlock: TriplesBlock,\n};\nexport var srsTokenTypes = [\n    Rule,\n    If,\n    Then,\n    EndThen,\n    sparqlTokenMap.LCurly\n].concat(turtleTokenTypes, [\n    GroupGraphPattern,\n    TriplesBlock,\n]);\n", "var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar _a = require('./tokens'), trigTokenMap = _a.trigTokenMap, trigTokenTypes = _a.trigTokenTypes;\nimport { Parser, } from 'chevrotain';\nimport { TurtleParser } from '../turtle/TurtleParser';\nvar TrigParser = /** @class */ (function (_super) {\n    __extends(TrigParser, _super);\n    function TrigParser(config, tokens, lexerDefinition, performSelfAnalysis) {\n        if (tokens === void 0) { tokens = trigTokenTypes; }\n        if (lexerDefinition === void 0) { lexerDefinition = trigTokenTypes; }\n        if (performSelfAnalysis === void 0) { performSelfAnalysis = true; }\n        var _this = _super.call(this, config, tokens, lexerDefinition, false) || this;\n        // NOTE: This parser can parse in two modes, 'standard' and 'stardog'. The\n        // latter includes non-standard features like embedded triples patterns (edge\n        // properties). Things are done this way to avoid deep inheritance trees\n        // (e.g., one alternative is to create a StardogTurtleParser that extends\n        // TurtleParser, then a StardogTrigParser that extends the\n        // StardogTurtleParser, but that gets ugly...).\n        _this.parse = function (document, mode) {\n            if (mode === void 0) { mode = 'standard'; }\n            _this.input = _this.lexer.tokenize(document).tokens;\n            var cst = _this.trigDoc(0, [mode]);\n            // Next two items are copied so that they can be returned/held after parse\n            // state is cleared.\n            var errors = _this.errors.slice();\n            var semanticErrors = _this.semanticErrors.slice();\n            _this.resetManagedState();\n            return {\n                errors: errors,\n                semanticErrors: semanticErrors,\n                cst: cst,\n            };\n        };\n        _this.trigDoc = _this.RULE('trigDoc', function (mode) {\n            var allowEdgeProperties = mode === 'stardog';\n            _this.MANY(function () {\n                _this.OR([\n                    { ALT: function () { return _this.SUBRULE(_this.directive); } },\n                    {\n                        ALT: function () { return _this.SUBRULE(_this.block, { ARGS: [allowEdgeProperties] }); },\n                    },\n                ]);\n            });\n        });\n        _this.block = _this.RULE('block', function (allowEdgeProperties) {\n            _this.OR([\n                {\n                    ALT: function () {\n                        return _this.SUBRULE(_this.triplesOrGraph, { ARGS: [allowEdgeProperties] });\n                    },\n                },\n                {\n                    ALT: function () {\n                        return _this.SUBRULE(_this.wrappedGraph, { ARGS: [allowEdgeProperties] });\n                    },\n                },\n                { ALT: function () { return _this.SUBRULE(_this.triples2); } },\n                {\n                    ALT: function () {\n                        _this.CONSUME(trigTokenMap.GRAPH);\n                        _this.SUBRULE(_this.labelOrSubject);\n                        _this.SUBRULE1(_this.wrappedGraph, { ARGS: [allowEdgeProperties] });\n                    },\n                },\n            ]);\n        });\n        _this.triplesOrGraph = _this.RULE('triplesOrGraph', function (allowEdgeProperties) {\n            var didParseEmbeddedTriplePattern = false;\n            _this.OR([\n                {\n                    ALT: function () { return _this.SUBRULE(_this.labelOrSubject); },\n                },\n                {\n                    GATE: function () { return Boolean(allowEdgeProperties); },\n                    ALT: function () {\n                        var result = _this.SUBRULE(_this.EmbeddedTriplePattern);\n                        didParseEmbeddedTriplePattern =\n                            result.name === 'EmbeddedTriplePattern';\n                    },\n                },\n            ]);\n            _this.OR1([\n                {\n                    // embedded triple patterns cannot precede wrapped graphs\n                    GATE: function () { return !didParseEmbeddedTriplePattern; },\n                    ALT: function () {\n                        return _this.SUBRULE(_this.wrappedGraph, { ARGS: [allowEdgeProperties] });\n                    },\n                },\n                {\n                    ALT: function () {\n                        _this.SUBRULE(_this.predicateObjectList);\n                        _this.CONSUME(trigTokenMap.Period);\n                    },\n                },\n            ]);\n        });\n        _this.triples2 = _this.RULE('triples2', function () {\n            _this.OR([\n                {\n                    ALT: function () {\n                        _this.SUBRULE(_this.blankNodePropertyList);\n                        _this.OPTION(function () { return _this.SUBRULE(_this.predicateObjectList); });\n                        _this.CONSUME(trigTokenMap.Period);\n                    },\n                },\n                {\n                    ALT: function () {\n                        _this.SUBRULE(_this.collection);\n                        _this.SUBRULE1(_this.predicateObjectList);\n                        _this.CONSUME1(trigTokenMap.Period);\n                    },\n                },\n            ]);\n        });\n        _this.wrappedGraph = _this.RULE('wrappedGraph', function (allowEdgeProperties) {\n            _this.CONSUME(trigTokenMap.LCurly);\n            _this.OPTION(function () {\n                return _this.SUBRULE(_this.triplesBlock, { ARGS: [allowEdgeProperties] });\n            });\n            _this.CONSUME(trigTokenMap.RCurly);\n        });\n        _this.triplesBlock = _this.RULE('triplesBlock', function (allowEdgeProperties) {\n            _this.SUBRULE(_this.triples, { ARGS: [allowEdgeProperties] });\n            _this.OPTION(function () {\n                _this.CONSUME(trigTokenMap.Period);\n                _this.OPTION1(function () {\n                    return _this.SUBRULE(_this.triplesBlock, { ARGS: [allowEdgeProperties] });\n                });\n            });\n        });\n        _this.labelOrSubject = _this.RULE('labelOrSubject', function () {\n            _this.OR([\n                { ALT: function () { return _this.SUBRULE(_this.iri); } },\n                { ALT: function () { return _this.SUBRULE(_this.BlankNode); } },\n            ]);\n        });\n        if (performSelfAnalysis) {\n            Parser.performSelfAnalysis(_this);\n        }\n        return _this;\n    }\n    return TrigParser;\n}(TurtleParser));\nexport { TrigParser };\n", "var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar turtleTokenTypes = require('../turtle/tokens').turtleTokenTypes;\nimport { turtleTokenMap } from 'turtle/tokens';\nimport { sparqlTokenMap } from 'sparql/tokens';\nexport var trigTokenMap = __assign({ GRAPH: sparqlTokenMap.GRAPH }, turtleTokenMap);\nvar indexOfPnCharsBase = turtleTokenTypes.indexOf(turtleTokenMap.PN_CHARS_BASE);\nexport var trigTokenTypes = turtleTokenTypes.slice(0, indexOfPnCharsBase).concat([\n    sparqlTokenMap.GRAPH\n], turtleTokenTypes.slice(indexOfPnCharsBase));\n", "var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar _a = require('./tokens'), smsTokenTypes = _a.smsTokenTypes, smsTokenMap = _a.smsTokenMap;\nimport { Parser } from 'chevrotain';\nimport { StardogSparqlParser } from '../sparql';\nvar SmsParser = /** @class */ (function (_super) {\n    __extends(SmsParser, _super);\n    function SmsParser(config) {\n        var _this = _super.call(this, __assign({ outputCst: true, recoveryEnabled: true }, config), smsTokenTypes, true) || this;\n        _this.parse = function (document) {\n            _this.input = _this.tokenize(document);\n            var cst = _this.MappingDoc();\n            var errors = _this.errors;\n            return {\n                errors: errors,\n                cst: cst,\n            };\n        };\n        _this.MappingDoc = _this.RULE('MappingDoc', function () {\n            _this.MANY(function () { return _this.SUBRULE(_this.PrefixDecl); });\n            _this.OPTION(function () {\n                _this.SUBRULE(_this.MappingClause);\n                _this.MANY1(function () {\n                    _this.CONSUME(smsTokenMap.Semicolon);\n                    _this.SUBRULE1(_this.MappingClause);\n                });\n            });\n        });\n        _this.MappingClause = _this.RULE('MappingClause', function () {\n            _this.SUBRULE(_this.MappingDecl);\n            _this.SUBRULE(_this.FromClause);\n            _this.SUBRULE(_this.ToClause);\n            _this.SUBRULE(_this.WhereClause);\n        });\n        _this.MappingDecl = _this.RULE('MappingDecl', function () {\n            _this.CONSUME(smsTokenMap.Mapping);\n            _this.OPTION(function () { return _this.SUBRULE(_this.iri); });\n        });\n        _this.FromClause = _this.RULE('FromClause', function () {\n            _this.CONSUME(smsTokenMap.FROM);\n            _this.OR([\n                {\n                    ALT: function () { return _this.SUBRULE(_this.SqlClause); },\n                },\n                {\n                    ALT: function () { return _this.SUBRULE(_this.JsonClause); },\n                },\n                {\n                    ALT: function () { return _this.SUBRULE(_this.GraphQlClause); },\n                },\n                {\n                    ALT: function () { return _this.SUBRULE(_this.CsvClause); },\n                },\n            ]);\n        });\n        _this.JsonClause = _this.RULE('JsonClause', function () {\n            _this.CONSUME(smsTokenMap.Json);\n            _this.CONSUME(smsTokenMap.JsonBlock);\n        });\n        _this.GraphQlClause = _this.RULE('GraphQlClause', function () {\n            _this.CONSUME(smsTokenMap.GraphQl);\n            _this.CONSUME(smsTokenMap.LCurly);\n            _this.CONSUME(smsTokenMap.GraphQlBlock);\n            _this.CONSUME(smsTokenMap.RCurly);\n        });\n        _this.SqlClause = _this.RULE('SqlClause', function () {\n            _this.CONSUME(smsTokenMap.Sql);\n            _this.CONSUME(smsTokenMap.LCurly);\n            _this.CONSUME(smsTokenMap.SqlBlock);\n            _this.CONSUME(smsTokenMap.RCurly);\n        });\n        _this.CsvClause = _this.RULE('CsvClause', function () {\n            _this.CONSUME(smsTokenMap.Csv);\n            _this.OPTION(function () {\n                _this.CONSUME(smsTokenMap.LCurly);\n                _this.CONSUME(smsTokenMap.RCurly);\n            });\n        });\n        _this.ToClause = _this.RULE('ToClause', function () {\n            _this.CONSUME(smsTokenMap.TO);\n            _this.SUBRULE(_this.ConstructTemplate);\n        });\n        _this.WhereClause = _this.OVERRIDE_RULE('WhereClause', function () {\n            _this.CONSUME(smsTokenMap.WHERE);\n            _this.CONSUME(smsTokenMap.LCurly);\n            _this.MANY(function () { return _this.SUBRULE(_this.Bind); });\n            _this.CONSUME(smsTokenMap.RCurly);\n        });\n        _this.Bind = _this.OVERRIDE_RULE('Bind', function () {\n            _this.CONSUME(smsTokenMap.BIND);\n            _this.CONSUME(smsTokenMap.LParen);\n            _this.SUBRULE(_this.BindExpression);\n            _this.CONSUME(smsTokenMap.AS);\n            _this.SUBRULE(_this.Var);\n            _this.CONSUME(smsTokenMap.RParen);\n        });\n        _this.BindExpression = _this.RULE('BindExpression', function () {\n            _this.OR([\n                { ALT: function () { return _this.SUBRULE(_this.TemplateFunc); } },\n                { ALT: function () { return _this.SUBRULE(_this.Expression); } },\n            ]);\n        });\n        _this.TemplateFunc = _this.RULE('TemplateFunc', function () {\n            _this.CONSUME(smsTokenMap.Template);\n            _this.CONSUME(smsTokenMap.LParen);\n            _this.SUBRULE(_this.String);\n            _this.CONSUME(smsTokenMap.RParen);\n        });\n        _this.Object = _this.OVERRIDE_RULE('Object', function () {\n            _this.SUBRULE(_this.GraphNode);\n        });\n        Parser.performSelfAnalysis(_this);\n        return _this;\n    }\n    return SmsParser;\n}(StardogSparqlParser));\nexport { SmsParser };\n", "var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar _a = require('../sparql/tokens'), sparqlTokenMap = _a.sparqlTokenMap, stardogSparqlTokens = _a.stardogSparqlTokens;\nimport { createToken } from 'chevrotain';\nimport { createKeyword } from '../sparql/keywords';\nvar FROM_BLOCK_END_MATCHER = /^\\s*to\\s*{/i;\nvar FROM_JSON_BLOCK_END_MATCHER = /((?:.|\\s)*?)to\\s*{/i;\n// Because the end of `FROM` clauses in SMS are not explicit, tokenizing them\n// using regexes can be incredibly inefficient. This function gives us a bit\n// more control; it scans through the document character by character until\n// it finds a character which is _likely_ to be followed by an ending pattern,\n// and only then does it use a regex to confirm.\nvar explicitEndMatcher = function (textToMatch, endCandidateChar, // Char which, if found, triggers an exec of endMatcher\nendMatcher // Regex which matches an end pattern\n) {\n    for (var offset = 0, char = void 0; offset < textToMatch.length; offset++) {\n        char = textToMatch[offset];\n        if (char === endCandidateChar) {\n            var blockEndCandidate = textToMatch.slice(offset + 1);\n            var match = endMatcher.exec(blockEndCandidate);\n            if (!match) {\n                continue;\n            }\n            else {\n                var blockText = textToMatch.slice(0, offset);\n                var response = [blockText];\n                return response;\n            }\n        }\n    }\n    return null;\n};\nexport var smsTokenMap = __assign({}, sparqlTokenMap, { Template: createKeyword({ name: 'Template' }), Sql: createKeyword({ name: 'Sql' }), GraphQl: createKeyword({ name: 'GraphQl' }), Json: createKeyword({ name: 'Json' }), Csv: createKeyword({ name: 'Csv' }), Mapping: createKeyword({ name: 'Mapping' }), SqlBlock: createToken({\n        name: 'SqlBlock',\n        pattern: function (text, startOffset, matchedTokensSoFar) {\n            if (startOffset === void 0) { startOffset = 0; }\n            var _a = matchedTokensSoFar.slice(-2), secondToLastToken = _a[0], lastToken = _a[1];\n            if (!secondToLastToken ||\n                !lastToken ||\n                secondToLastToken.tokenType.tokenName !== smsTokenMap.Sql.tokenName ||\n                lastToken.tokenType.tokenName !== smsTokenMap.LCurly.tokenName) {\n                return null;\n            }\n            var textToMatch = text.slice(startOffset);\n            return explicitEndMatcher(textToMatch, '}', FROM_BLOCK_END_MATCHER);\n        },\n        line_breaks: true,\n    }), JsonBlock: createToken({\n        name: 'JsonBlock',\n        pattern: function (text, startOffset, matchedTokensSoFar) {\n            if (startOffset === void 0) { startOffset = 0; }\n            var lastToken = matchedTokensSoFar.slice(-1)[0];\n            if (!lastToken ||\n                lastToken.tokenType.tokenName !== smsTokenMap.Json.tokenName) {\n                return null;\n            }\n            var textToMatch = text.slice(startOffset);\n            var match = FROM_JSON_BLOCK_END_MATCHER.exec(textToMatch);\n            if (!match) {\n                return null;\n            }\n            var capturedMatch = match.slice(1);\n            return capturedMatch;\n        },\n        line_breaks: true,\n    }), GraphQlBlock: createToken({\n        name: 'GraphQlBlock',\n        pattern: function (text, startOffset, matchedTokensSoFar) {\n            if (startOffset === void 0) { startOffset = 0; }\n            var _a = matchedTokensSoFar.slice(-2), secondToLastToken = _a[0], lastToken = _a[1];\n            if (!secondToLastToken ||\n                !lastToken ||\n                secondToLastToken.tokenType.tokenName !==\n                    smsTokenMap.GraphQl.tokenName ||\n                lastToken.tokenType.tokenName !== smsTokenMap.LCurly.tokenName) {\n                return null;\n            }\n            var textToMatch = text.slice(startOffset);\n            return explicitEndMatcher(textToMatch, '}', FROM_BLOCK_END_MATCHER);\n        },\n        line_breaks: true,\n    }) });\nvar smsOnlyTokens = [\n    smsTokenMap.Template,\n    smsTokenMap.Sql,\n    smsTokenMap.GraphQl,\n    smsTokenMap.Json,\n    smsTokenMap.Csv,\n    smsTokenMap.Mapping,\n    smsTokenMap.SqlBlock,\n    smsTokenMap.JsonBlock,\n    smsTokenMap.GraphQlBlock,\n];\nexport var smsTokenTypes = smsOnlyTokens.concat(stardogSparqlTokens);\n", "var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar graphQlTokens = require('./tokens').graphQlTokens;\nimport { BaseGraphQlParser } from './BaseGraphQlParser';\nimport { Parser } from 'chevrotain';\nvar StandardGraphQlParser = /** @class */ (function (_super) {\n    __extends(StandardGraphQlParser, _super);\n    function StandardGraphQlParser(options) {\n        var _this = _super.call(this, options, graphQlTokens) || this;\n        Parser.performSelfAnalysis(_this);\n        return _this;\n    }\n    return StandardGraphQlParser;\n}(BaseGraphQlParser));\nexport { StandardGraphQlParser };\n", "var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { StardogSparqlParser } from '../sparql';\n// Returns a custom visitor that extends the BaseVisitor for the SRS parser.\n// When the visitor encounters an SRS `IfClause` or an SRS `ThenClause`, it\n// delegates parsing of the block to the existing SPARQL parser's relevant\n// sub-rule (GroupGraphPattern or TriplesBlock).\nexport var getSparqlSrsVisitor = function (BaseVisitor) {\n    var SparqlSrsVisitor = /** @class */ (function (_super) {\n        __extends(SparqlSrsVisitor, _super);\n        function SparqlSrsVisitor() {\n            var _this = _super.call(this) || this;\n            _this.groupGraphPatterns = [];\n            _this.triplesBlocks = [];\n            // Get and store the SPARQL `GroupGraphPattern` that should replace the\n            // SRS placeholder `GroupGraphPattern` token inside of an SRS `IfClause`.\n            _this.IfClause = function (ctx, cstInputTokens) {\n                var GroupGraphPattern = ctx.GroupGraphPattern;\n                _this.$storePlaceholderTokenReplacement({\n                    tokenStore: _this.groupGraphPatterns,\n                    originalTokenContext: GroupGraphPattern,\n                    subParserRule: _this.sparqlParser.parseGroupGraphPattern.bind(_this.sparqlParser),\n                    cstInputTokens: cstInputTokens,\n                });\n            };\n            // Get and store the SPARQL `TriplesBlock` that should replace the\n            // SRS placeholder `TriplesBlock` token inside of an SRS `ThenClause`.\n            _this.ThenClause = function (ctx, cstInputTokens) {\n                var TriplesBlock = ctx.TriplesBlock;\n                _this.$storePlaceholderTokenReplacement({\n                    tokenStore: _this.triplesBlocks,\n                    originalTokenContext: TriplesBlock,\n                    subParserRule: _this.sparqlParser.parseTriplesBlock.bind(_this.sparqlParser),\n                    cstInputTokens: cstInputTokens,\n                });\n            };\n            // Utility methods ('$' prefix is necessary to prevent chevrotain's\n            // `validateVisitor` method from complaining that these are not grammar\n            // rules):\n            _this.$storePlaceholderTokenReplacement = function (_a) {\n                var tokenStore = _a.tokenStore, _b = _a.originalTokenContext, originalTokenContext = _b === void 0 ? [] : _b, subParserRule = _a.subParserRule, cstInputTokens = _a.cstInputTokens, stripWrappers = _a.stripWrappers;\n                var originalToken = originalTokenContext[0];\n                if (!originalToken || typeof originalToken.image !== 'string') {\n                    return;\n                }\n                var replacement = _this.$getPlaceholderTokenReplacement(originalToken, subParserRule, cstInputTokens, stripWrappers);\n                tokenStore.push({\n                    parseResult: replacement,\n                    originalToken: originalToken,\n                });\n            };\n            _this.$getPlaceholderTokenReplacement = function (originalToken, subParserRule, cstInputTokens, stripWrappers) {\n                if (stripWrappers === void 0) { stripWrappers = false; }\n                // Because we are replacing tokens by delegating the parsing of parts\n                // of the original document to sub-parsers, we add some empty padding to\n                // the part that is passed to the sub-parser, where the amount of padding\n                // matches the start line and offset of the token we are replacing. This\n                // ensures that all tokens have the right positions in the resulting CST\n                // (otherwise, the sub-parsers assume that the text starts at offset 0).\n                var image = originalToken.image;\n                var frontPadding = '';\n                var latestEndOffset = 0;\n                var latestEndLine = 0;\n                // Traditional `for` loop because we need to `break`.\n                for (var i = 0; i < cstInputTokens.length; i++) {\n                    var token = cstInputTokens[i];\n                    if (i > 0) {\n                        // Account for whitespace between this token and the previous one.\n                        var linesBetweenTokens = token.startLine - latestEndLine;\n                        var untokenizedSpaceBetweenTokens = token.startOffset - 1 - latestEndOffset - linesBetweenTokens;\n                        if (linesBetweenTokens > 0) {\n                            frontPadding += '\\n'.repeat(linesBetweenTokens - 1);\n                            frontPadding +=\n                                ' '.repeat(Math.max(untokenizedSpaceBetweenTokens, 0)) + '\\n';\n                        }\n                        else {\n                            frontPadding += ' '.repeat(Math.max(untokenizedSpaceBetweenTokens, 0));\n                        }\n                    }\n                    if (token === originalToken) {\n                        break;\n                    }\n                    // We haven't hit the token we're replacing yet, so we need to continue\n                    // accumulating padding by adding the newlines _inside_ the current\n                    // token, and replacing all non-newline characters inside the current\n                    // token with spaces.\n                    var newlinesInToken = token.image.split('\\n');\n                    newlinesInToken.forEach(function (line, idx) {\n                        if (idx > 0) {\n                            frontPadding += '\\n';\n                        }\n                        frontPadding += ' '.repeat(line.length);\n                    });\n                    // Track where the current token ends, in case the next token starts\n                    // much later (meaning that there was untokenized stuff (e.g.,\n                    // whitespace) in between) that needs to be accounted for.\n                    latestEndOffset = token.endOffset;\n                    latestEndLine = token.endLine;\n                }\n                // Finally, if we're stripping the wrappers (e.g., braces), replace them\n                // with whitespace.\n                var parseImage = stripWrappers ? \" \" + image.slice(1, -1) + \" \" : image;\n                return subParserRule(\"\" + frontPadding + parseImage);\n            };\n            _this.$getGroupGraphPatterns = function () { return _this.groupGraphPatterns; };\n            _this.$getTriplesBlocks = function () { return _this.triplesBlocks; };\n            _this.$resetState = function () {\n                _this.groupGraphPatterns = [];\n                _this.triplesBlocks = [];\n            };\n            _this.sparqlParser = new StardogSparqlParser();\n            _this.validateVisitor();\n            return _this;\n        }\n        return SparqlSrsVisitor;\n    }(BaseVisitor));\n    return new SparqlSrsVisitor();\n};\nexport function reduceVisitorItemErrors(acc, item) {\n    return acc.concat(item.parseResult.errors);\n}\n// The SRS cst contains placeholder tokens for unparsed blocks of SPARQL\n// inside of an SRS `IfClause` or `ThenClause`. This method swaps out those\n// placeholders with the actual SPARQL CST created by the SparqlSrsVisitor.\nexport function findAndSwapPlaceholders(node, parentNode, visitorItems, key) {\n    var matchingVisitorItem = visitorItems.find(function (visitorItem) { return visitorItem.originalToken === node; });\n    if (matchingVisitorItem) {\n        parentNode.children[key] = [matchingVisitorItem.parseResult.cst];\n    }\n    return matchingVisitorItem;\n}\n", "var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nexport var defaultNamespacesMap = Object.freeze(['', 'rdf', 'rdfs', 'xsd', 'owl', 'stardog'].reduce(function (namespacesMap, prefix) {\n    var _a;\n    return (__assign({}, namespacesMap, (_a = {}, _a[prefix] = true, _a)));\n}, {}));\n", "var _a;\nimport { isCstNode, traverse, } from '../helpers/chevrotain/cst';\nimport { sparqlTokenMap } from '../sparql/tokens';\n// RegEx for matching any relevant children of `Expression` inside of `Bind`;\n// used to avoid false negatives in the check for disallowed literals inside of\n// `Bind`.\nvar subExpressionMatcher = /(?:[A-Z]+Expression|ValueLogical)$/i;\n// Default: just don't abort early at all. Used in the stack unwinding process\n// that creates an error rule stack.\nvar defaultEarlyAbortTest = function () { return false; };\n// Tokens that are allowed in SPARQL but not inside the `IfClause` of SRS.\nvar disallowedSparqlTokenNameToRuleMap = (_a = {},\n    _a[sparqlTokenMap.EXISTS.tokenName] = 'ExistsFunction',\n    _a[sparqlTokenMap.NOT_EXISTS.tokenName] = 'NotExistsFunction',\n    _a[sparqlTokenMap.NOW.tokenName] = 'BuiltInCall_NOW',\n    _a[sparqlTokenMap.LEmbed.tokenName] = 'LeftEmbed',\n    _a[sparqlTokenMap.REmbed.tokenName] = 'RightEmbed',\n    _a);\nvar disallowedSparqlTokenNames = Object.keys(disallowedSparqlTokenNameToRuleMap);\n// Token names for literals; these are not allowed in the subject position of\n// certain patterns in SRS.\nvar disallowedSparqlLiteralTokenNames = [\n    sparqlTokenMap.DOUBLE,\n    sparqlTokenMap.DECIMAL,\n    sparqlTokenMap.INTEGER,\n    sparqlTokenMap.DOUBLE_POSITIVE,\n    sparqlTokenMap.DECIMAL_POSITIVE,\n    sparqlTokenMap.INTEGER_POSITIVE,\n    sparqlTokenMap.DOUBLE_NEGATIVE,\n    sparqlTokenMap.DECIMAL_NEGATIVE,\n    sparqlTokenMap.INTEGER_NEGATIVE,\n    sparqlTokenMap.STRING_LITERAL1,\n    sparqlTokenMap.STRING_LITERAL2,\n    sparqlTokenMap.STRING_LITERAL_LONG1,\n    sparqlTokenMap.STRING_LITERAL_LONG2,\n].map(function (token) { return token.tokenName; });\n// Helper functions for more \"literate\" code.\nvar isCstNodeTraverseContext = function (ctx) {\n    return Boolean(ctx && ctx.node);\n};\n// Is the parent node an Expression child of a Bind node or an Expression\n// child of an ExpressionOrEmbeddedTriplePattern node that is itself a child\n// of a Bind node? The former accounts for standard SPARQL; the latter accounts\n// for Stardog SPARQL with edge properties. This lets certain custom errors\n// work with the output of either the W3CSpecSparqlParser or the\n// StardogSparqlParser.\nvar isParentBindOrBoundExpressionOrEmbeddedTriplePattern = function (parentCtx) {\n    if (!isCstNodeTraverseContext(parentCtx)) {\n        return false;\n    }\n    var parentNodeName = parentCtx.node.name;\n    return (parentNodeName === 'Bind' ||\n        (parentNodeName === 'ExpressionOrEmbeddedTriplePattern' &&\n            isCstNodeTraverseContext(parentCtx.parentCtx) &&\n            parentCtx.parentCtx.node.name === 'Bind'));\n};\n// Walks back up the tree to construct the rule stack, first going upward\n// through the provided `traverseCtx`, and then continuing up through the\n// `fullCtx`. `traverseCtx` is intended to be the \"inner\" ITraverseContext\n// representing the results of the SPARQL sub-parser used by the\n// SparqlSrsVisitor. `fullCtx` is intended to be the \"outer\" ITraverseContext\n// representing the results of the SRS parser itself. The SRS parser delegates\n// blocks of SPARQL to a SPARQL sub-parser, so, by combinging the two contexts,\n// we get the full parser stack. The traversal adds rules to the stack only\n// once a rule matching one of the `startRuleNames` is hit.\n//\n// At the point where the traversal of `traverseCtx` ends and the traversal of\n// `fullCtx` begins, you may need to insert a rule into the stack (e.g.,\n// because the `traverseCtx` doesn't include the top-level rule for that\n// parse). If so, use `topLevelSubParserRuleName`.\n//\n// In some cases, there is a need to track nodes and potentially bail out early\n// at certain points while constructing the rule stack. For that, use\n// `earlyAbortTest`. If that method returns true, the rule stack construction\n// will abort.\nfunction getCustomErrorRuleStack(traverseCtx, fullCtx, startRuleNames, topLevelSubParserRuleName, earlyAbortTest) {\n    if (earlyAbortTest === void 0) { earlyAbortTest = defaultEarlyAbortTest; }\n    if (!traverseCtx) {\n        return []; // forced early exit\n    }\n    var ruleStack = [];\n    var stackUnwindingPointer = traverseCtx;\n    // Move up from current context to the first rule that should \"start\" the stack.\n    while (isCstNode(stackUnwindingPointer.node) &&\n        !startRuleNames.includes(stackUnwindingPointer.node.name)) {\n        if (earlyAbortTest(stackUnwindingPointer)) {\n            return [];\n        }\n        stackUnwindingPointer = stackUnwindingPointer.parentCtx;\n    }\n    // Now start adding all found rules to the stack as we move upward.\n    while (isCstNode(stackUnwindingPointer.node)) {\n        ruleStack.unshift(stackUnwindingPointer.node.name);\n        if (earlyAbortTest(stackUnwindingPointer)) {\n            return [];\n        }\n        stackUnwindingPointer = stackUnwindingPointer.parentCtx;\n    }\n    // If the rule stack of the sub-parser doesn't get all the way up to the\n    // relevant top-level rule, this will force the top-level rule to be put onto\n    // the stack before proceeding.\n    if (typeof topLevelSubParserRuleName === 'string') {\n        ruleStack.unshift(topLevelSubParserRuleName);\n    }\n    // Now that we've got the sub-parser's rule stack, we trace the remaining\n    // outer parser's stack to get to the true bottom of the stack.\n    stackUnwindingPointer = fullCtx;\n    while (stackUnwindingPointer) {\n        if (isCstNode(stackUnwindingPointer.node)) {\n            ruleStack.unshift(stackUnwindingPointer.node.name);\n            if (earlyAbortTest(stackUnwindingPointer)) {\n                return [];\n            }\n        }\n        stackUnwindingPointer = stackUnwindingPointer.parentCtx;\n    }\n    return ['SrsDoc'].concat(ruleStack);\n}\nvar getCustomIRecognitionException = function (_a) {\n    var name = _a.name, message = _a.message, node = _a.node, ruleStack = _a.ruleStack;\n    return ({\n        name: name,\n        message: message,\n        token: node,\n        context: {\n            ruleStack: ruleStack,\n            // `ruleOccurrenceStack` is meaningless to us as it just\n            // records the number used when the chevrotain rule is\n            // created (e.g., SUBRULE1 vs SUBRULE2); we can't know that\n            // or care about that here\n            ruleOccurrenceStack: [],\n        },\n        resyncedTokens: [],\n    });\n};\nvar getNoPrefixError = function (node, parentCtx, fullCtx, subParserRuleName) {\n    return getCustomIRecognitionException({\n        name: 'NoNamespacePrefixError',\n        message: \"A prefix (\\\"\" + node.image + \"\\\") was used for which there was no namespace defined.\",\n        node: node,\n        ruleStack: getCustomErrorRuleStack(parentCtx, fullCtx, ['PrefixedName'], subParserRuleName),\n    });\n};\nvar getDisallowedTokenError = function (node, parentCtx, fullCtx, subParserRuleName) {\n    if (subParserRuleName === void 0) { subParserRuleName = 'GroupGraphPattern'; }\n    return getCustomIRecognitionException({\n        name: 'DisallowedTokenError',\n        message: \"Token \" + node.tokenType.tokenName + \" cannot be used in Stardog Rules.\",\n        node: node,\n        ruleStack: getCustomErrorRuleStack(parentCtx, fullCtx, [disallowedSparqlTokenNameToRuleMap[node.tokenType.tokenName]], subParserRuleName),\n    });\n};\nvar getDisallowedLiteralError = function (node, parentCtx, fullCtx, subParserRuleName) {\n    var foundPropertyListPathNotEmptyCtx = null;\n    var didFindSubExpressionWithMultipleChildren = false;\n    var errorContext = null;\n    var errorRuleStack = getCustomErrorRuleStack(parentCtx, fullCtx, ['Expression', 'TriplesSameSubjectPath'], subParserRuleName, function (stackCtx) {\n        var node = stackCtx.node, parentCtx = stackCtx.parentCtx;\n        var nodeName = node.name;\n        if (nodeName === 'PropertyListPathNotEmpty') {\n            // Track the found `PropertyListPathNotEmmpty` node and keep going.\n            foundPropertyListPathNotEmptyCtx = stackCtx;\n            return false;\n        }\n        if (!didFindSubExpressionWithMultipleChildren &&\n            subExpressionMatcher.test(nodeName)) {\n            // Track that we found a sub-expression with multiple children, then\n            // keep going.\n            didFindSubExpressionWithMultipleChildren =\n                parentCtx.node.children[nodeName].length > 1;\n            return false;\n        }\n        var isExpression = nodeName === 'Expression';\n        var isTriplesBlock = nodeName === 'TriplesSameSubjectPath';\n        if (!isExpression && !isTriplesBlock) {\n            return false;\n        }\n        var isBoundExpressionWithLiteralSubject = isExpression &&\n            // If we've found a sub-expression with multiple children, it's highly\n            // likely (maybe definite?) that this `Bind` does not include an invalid\n            // literal as a subject, so we don't count this as an error. This _may_\n            // allow rare false positives, but it definitely prevents false\n            // negatives of the sort described in https://github.com/stardog-union/millan/issues/22\n            !didFindSubExpressionWithMultipleChildren &&\n            isParentBindOrBoundExpressionOrEmbeddedTriplePattern(parentCtx);\n        var isTriplesBlockSubject = isTriplesBlock &&\n            (!foundPropertyListPathNotEmptyCtx ||\n                foundPropertyListPathNotEmptyCtx.parentCtx.node.name !==\n                    'TriplesSameSubjectPath');\n        if (isBoundExpressionWithLiteralSubject || isTriplesBlockSubject) {\n            errorContext = isBoundExpressionWithLiteralSubject\n                ? 'Bind'\n                : 'TriplesBlock';\n            return false;\n        }\n        // We got to the Expression or TriplesBlock containing the literal, but\n        // the literal wasn't in the subject position (i.e., was not the lead\n        // Expression inside of Bind and was not the subject of\n        // TriplesSameSubjectPath), so we can bail early here.\n        return true;\n    });\n    if (errorRuleStack.length === 0) {\n        return;\n    }\n    return getCustomIRecognitionException({\n        name: 'DisallowedLiteralError',\n        message: \"Token \" + node.tokenType.tokenName + \" (\" + node.image + \") cannot be used as a subject inside of a \" + errorContext + \" in Stardog Rules Syntax.\",\n        node: node,\n        ruleStack: errorRuleStack,\n    });\n};\n// Since the SRS parser delegates to the SPARQL parser inside of\n// an SRS `IfClause`, and SPARQL allows certain constructs that SRS does not,\n// we need to create our own errors for SRS-specific restrictions here.\nexport function addIfClauseErrorsToErrors(_a) {\n    var cst = _a.cst, namespacesMap = _a.namespacesMap, fullCtx = _a.fullCtx, errors = _a.errors, semanticErrors = _a.semanticErrors;\n    traverse(cst, function (ctx, next) {\n        var node = ctx.node, parentCtx = ctx.parentCtx;\n        if (isCstNode(node)) {\n            return next();\n        }\n        var tokenName = node.tokenType.tokenName;\n        if (disallowedSparqlTokenNames.some(function (name) { return name === tokenName; })) {\n            errors.push(getDisallowedTokenError(node, parentCtx, fullCtx));\n        }\n        if (disallowedSparqlLiteralTokenNames.some(function (tokenName) { return tokenName === node.tokenType.tokenName; })) {\n            var error = getDisallowedLiteralError(node, parentCtx, fullCtx, 'GroupGraphPattern');\n            if (error) {\n                errors.push(error);\n            }\n        }\n        if (tokenName === 'PNAME_NS' || tokenName === 'PNAME_LN') {\n            var prefix = node.image.split(':').shift();\n            if (!namespacesMap[prefix]) {\n                semanticErrors.push(getNoPrefixError(node, parentCtx, fullCtx, 'GroupGraphPattern'));\n            }\n        }\n    });\n    return {\n        errors: errors,\n        semanticErrors: semanticErrors,\n    };\n}\nexport function addThenClauseErrorsToErrors(_a) {\n    var cst = _a.cst, namespacesMap = _a.namespacesMap, errors = _a.errors, semanticErrors = _a.semanticErrors, fullCtx = _a.fullCtx;\n    traverse(cst, function (ctx, next) {\n        var node = ctx.node, parentCtx = ctx.parentCtx;\n        if (isCstNode(node)) {\n            return next();\n        }\n        var tokenName = node.tokenType.tokenName;\n        if (disallowedSparqlLiteralTokenNames.some(function (tokenName) { return tokenName === node.tokenType.tokenName; })) {\n            var error = getDisallowedLiteralError(node, parentCtx, fullCtx, 'GroupGraphPattern');\n            if (error) {\n                errors.push(error);\n            }\n        }\n        // No embedded triple patterns in SRS THEN clauses.\n        if (tokenName === sparqlTokenMap.LEmbed.name ||\n            tokenName === sparqlTokenMap.REmbed.name) {\n            errors.push(getDisallowedTokenError(node, parentCtx, fullCtx, 'TriplesBlock'));\n        }\n        if (tokenName === 'PNAME_NS' || tokenName === 'PNAME_LN') {\n            var prefix = node.image.split(':').shift();\n            if (!namespacesMap[prefix]) {\n                semanticErrors.push(getNoPrefixError(node, parentCtx, fullCtx, 'TriplesBlock'));\n            }\n        }\n    });\n    return {\n        errors: errors,\n        semanticErrors: semanticErrors,\n    };\n}\n", "var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\n// tslint:disable:function-name\nvar sparqlTokenMap = require('../sparql/tokens').sparqlTokenMap;\nvar _a = require('./tokens'), srsTokenMap = _a.srsTokenMap, srsTokenTypes = _a.srsTokenTypes, multiModeLexerDefinition = _a.multiModeLexerDefinition;\nimport { Parser, Lexer, } from 'chevrotain';\nimport { TurtleParser } from '../turtle/TurtleParser';\nimport { isCstNode, unsafeTraverse } from '../helpers/chevrotain/cst';\nimport { defaultNamespacesMap } from 'turtle/defaultNamespaces';\nimport { getSparqlSrsVisitor, reduceVisitorItemErrors, findAndSwapPlaceholders, } from './visitor';\nimport { addThenClauseErrorsToErrors, addIfClauseErrorsToErrors, } from './customErrors';\nvar SrsParser = /** @class */ (function (_super) {\n    __extends(SrsParser, _super);\n    function SrsParser(config) {\n        var _this = _super.call(this, __assign({ outputCst: true, recoveryEnabled: true }, config), srsTokenTypes, multiModeLexerDefinition, false) || this;\n        _this.baseNamespacesMap = Object.freeze(__assign({}, defaultNamespacesMap));\n        _this.namespacesMap = {};\n        _this.visitCst = function (cst) {\n            // To save resources while parsing, the sparqlSrsVisitor is a singleton.\n            if (!_this.sparqlSrsVisitor) {\n                var BaseSrsVisitor = _this.getBaseCstVisitorConstructorWithDefaults();\n                _this.sparqlSrsVisitor = getSparqlSrsVisitor(BaseSrsVisitor);\n            }\n            else {\n                _this.sparqlSrsVisitor.$resetState();\n            }\n            _this.sparqlSrsVisitor.visit(cst, _this.input);\n        };\n        _this.getSparqlRulesFromVisitor = function (cst) {\n            _this.visitCst(cst);\n            return {\n                groupGraphPatterns: _this.sparqlSrsVisitor.$getGroupGraphPatterns(),\n                triplesBlocks: _this.sparqlSrsVisitor.$getTriplesBlocks(),\n            };\n        };\n        _this.resetManagedState = function () {\n            _this.namespacesMap = __assign({}, defaultNamespacesMap);\n            _this.semanticErrors = [];\n        };\n        _this.setBaseNamespaces = function (newBaseNamespaces) {\n            _this.baseNamespacesMap = __assign({}, newBaseNamespaces);\n        };\n        _this.tokenize = function (document) {\n            return _this.lexer.tokenize(document).tokens;\n        };\n        _this.parse = function (document, mode) {\n            if (mode === void 0) { mode = 'standard'; }\n            _this.resetManagedState();\n            _this.input = _this.lexer.tokenize(document).tokens;\n            var cst = _this.SrsDoc(0, [mode]);\n            var _a = _this.getSparqlRulesFromVisitor(cst), groupGraphPatterns = _a.groupGraphPatterns, triplesBlocks = _a.triplesBlocks;\n            // Pull visitor errors\n            var errors = _this.errors.concat(groupGraphPatterns.reduce(reduceVisitorItemErrors, []), triplesBlocks.reduce(reduceVisitorItemErrors, []));\n            var semanticErrors = _this.semanticErrors.slice();\n            // Replace placeholder CST nodes created by the SRS parser with CST nodes\n            // returned by the visitor sub-parsers.\n            unsafeTraverse(cst, function (ctx, next) {\n                var node = ctx.node, parentCtx = ctx.parentCtx;\n                if (isCstNode(node)) {\n                    return next();\n                }\n                var currentTokenName = node.tokenType.tokenName;\n                if (currentTokenName !== 'GroupGraphPattern' &&\n                    currentTokenName !== 'TriplesBlock') {\n                    return;\n                }\n                var parentNode = parentCtx.node;\n                // The SRS parser parses only Turtle and SRS-specific content (RULE, IF,\n                // THEN), and creates placeholder tokens for the blocks where SPARQL is\n                // valid. The SparqlSrsVisitor visits these nodes and delegates their\n                // parsing to a SPARQL parser. Here, we replace the placeholder nodes\n                // (`GroupGraphPattern` and `TriplesBlock`) with the real ones from the\n                // SPARQL parser, collecting some custom SRS-specific errors along the\n                // way.\n                if (parentNode.name === 'IfClause') {\n                    var matchingVisitorItem = findAndSwapPlaceholders(node, parentNode, groupGraphPatterns, 'GroupGraphPattern');\n                    if (matchingVisitorItem) {\n                        addIfClauseErrorsToErrors({\n                            fullCtx: ctx,\n                            namespacesMap: __assign({}, _this.baseNamespacesMap, _this.namespacesMap),\n                            cst: matchingVisitorItem.parseResult.cst,\n                            errors: errors,\n                            semanticErrors: semanticErrors,\n                        });\n                    }\n                }\n                else if (parentNode.name === 'ThenClause') {\n                    var matchingVisitorItem = findAndSwapPlaceholders(node, parentNode, triplesBlocks, 'TriplesBlock');\n                    if (matchingVisitorItem) {\n                        addThenClauseErrorsToErrors({\n                            fullCtx: ctx,\n                            namespacesMap: __assign({}, _this.baseNamespacesMap, _this.namespacesMap),\n                            cst: matchingVisitorItem.parseResult.cst,\n                            errors: errors,\n                            semanticErrors: semanticErrors,\n                        });\n                    }\n                }\n            });\n            return {\n                semanticErrors: semanticErrors,\n                errors: errors,\n                cst: cst,\n            };\n        };\n        _this.SrsDoc = _this.RULE('SrsDoc', function (mode) {\n            var allowEdgeProperties = mode === 'stardog';\n            _this.SUBRULE(_this.turtleDoc, { ARGS: [mode] });\n            _this.MANY(function () {\n                _this.SUBRULE(_this.RuleDoc);\n                _this.MANY1(function () {\n                    _this.SUBRULE(_this.triples, { ARGS: [allowEdgeProperties] });\n                    _this.CONSUME(sparqlTokenMap.Period);\n                });\n            });\n        });\n        _this.RuleDoc = _this.RULE('RuleDoc', function () {\n            _this.OPTION(function () { return _this.SUBRULE(_this.RuleClause); });\n            _this.SUBRULE(_this.IfClause);\n            _this.SUBRULE(_this.ThenClause);\n        });\n        _this.RuleClause = _this.RULE('RuleClause', function () {\n            _this.CONSUME(srsTokenMap.Rule);\n            _this.SUBRULE(_this.iri);\n        });\n        _this.IfClause = _this.RULE('IfClause', function () {\n            _this.CONSUME(srsTokenMap.If);\n            _this.CONSUME(srsTokenMap.GroupGraphPattern);\n        });\n        _this.ThenClause = _this.RULE('ThenClause', function () {\n            _this.CONSUME(srsTokenMap.Then);\n            _this.CONSUME(sparqlTokenMap.LCurly);\n            _this.CONSUME(srsTokenMap.TriplesBlock);\n            _this.CONSUME(srsTokenMap.EndThen);\n        });\n        _this.lexer = new Lexer(multiModeLexerDefinition);\n        Parser.performSelfAnalysis(_this);\n        return _this;\n    }\n    return SrsParser;\n}(TurtleParser));\nexport { SrsParser };\n", "var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport escapeStringRegexp from 'escape-string-regexp';\nimport { isCstNode } from 'helpers/chevrotain/cst';\n// Given a SHACL prefix, returns a RegExp that can be used for grabbing the\n// local name (e.g., the 'NodeShape' in 'sh:NodeShape') from either a full\n// SHACL IRI or a prefixed local name.\nvar getShaclLocalNameMatcher = function (shaclPrefix) {\n    return new RegExp(\"(?:shacl#|\" + escapeStringRegexp(shaclPrefix) + \":)(\\\\S+?)>?$\");\n};\n// Traverses the tree of descendants for a given CstNode until a token is\n// found. Returns the \"start\" token for the CstNode (i.e., the earliest token\n// encompassed by the CstNode). This is useful for diagnostics.\nvar getUnderlyingStartToken = function (ctx) {\n    var currentNode = ctx;\n    while (currentNode.children) {\n        var currentNodeKey = Object.keys(currentNode.children)[0];\n        currentNode = currentNode.children[currentNodeKey][0];\n    }\n    return currentNode;\n};\n// Grabs the local name (e.g., the 'NodeShape' in 'sh:NodeShape') from either\n// a full SHACL IRI or a prefixed local name, if it is available.\nvar getLocalName = function (iri, matcher) {\n    var result = matcher.exec(iri);\n    if (result) {\n        return result[1];\n    }\n};\n// Given an initial (possibly partially complete) `shape` object and an array\n// of CstElements matching the `shaclRulePredicateObjectList` grammar rule,\n// transforms the `shape` into a complete `ShaclShape` with associated SHACL\n// types and predicates.\n// NOTE: mutates `shape`!\nvar addPredicatesAndTypesToShape = function (shape, shaclRulePredicateObjectListNodes) {\n    shaclRulePredicateObjectListNodes.forEach(function (node) {\n        var child = node.children[Object.keys(node.children)[0]][0];\n        switch (child.name) {\n            case 'shaclVerbShape': {\n                var token = getUnderlyingStartToken(child);\n                var verbTokenInsensitive = token.image.toLowerCase();\n                var isTypeVerb = verbTokenInsensitive === 'a' ||\n                    verbTokenInsensitive === 'rdf:type' ||\n                    verbTokenInsensitive ===\n                        '<http://www.w3.org/1999/02/22-rdf-syntax-ns#type>';\n                if (!isTypeVerb) {\n                    return;\n                }\n                Object.keys(child.children).forEach(function (key) {\n                    if (key !== 'shaclShapeType') {\n                        return;\n                    }\n                    var shapeTypeNode = child.children[key][0];\n                    if (shapeTypeNode.children.SHACL_NodeShape) {\n                        shape.types.push({\n                            type: 'NodeShape',\n                            token: getUnderlyingStartToken(shapeTypeNode),\n                        });\n                    }\n                    else if (shapeTypeNode.children.SHACL_PropertyShape) {\n                        shape.types.push({\n                            type: 'PropertyShape',\n                            token: getUnderlyingStartToken(shapeTypeNode),\n                        });\n                    }\n                });\n                break;\n            }\n            case 'shaclPredicateIRI': {\n                if (child.children.SingleIriTakingPredicate) {\n                    shape.predicates.push({\n                        type: 'SingleIriTakingPredicate',\n                        token: getUnderlyingStartToken(child.children.SingleIriTakingPredicate[0]),\n                    });\n                }\n                else if (child.children.ManyIriTakingPredicate) {\n                    shape.predicates.push({\n                        type: 'ManyIriTakingPredicate',\n                        token: getUnderlyingStartToken(child.children.ManyIriTakingPredicate[0]),\n                    });\n                }\n                break;\n            }\n            case 'shaclNodeKind':\n                shape.predicates.push({\n                    type: 'nodeKind',\n                    token: child.children.SHACL_nodeKind[0],\n                });\n                break;\n            case 'shaclTargetNode':\n                shape.predicates.push({\n                    type: 'targetNode',\n                    token: child.children.SHACL_targetNode[0],\n                });\n                break;\n            case 'shaclPropertyPath':\n                shape.predicates.push({\n                    type: 'path',\n                    token: child.children.SHACL_path[0],\n                });\n                break;\n            case 'shaclLiteralConstraint':\n                shape.predicates.push({\n                    type: 'LiteralConstraint',\n                    token: getUnderlyingStartToken(child),\n                });\n                break;\n            case 'shaclListTakingConstraint':\n                shape.predicates.push({\n                    type: 'ListTakingConstraint',\n                    token: getUnderlyingStartToken(child),\n                });\n                break;\n            case 'shaclShapeExpectingConstraint':\n                shape.predicates.push({\n                    type: 'ShapeExpectingPredicate',\n                    token: child.children.ShapeExpectingPredicate[0],\n                });\n                break;\n            case 'shaclHasValueConstraint':\n                shape.predicates.push({\n                    type: 'hasValue',\n                    token: child.children.SHACL_hasValue[0],\n                });\n                break;\n            default:\n                console.log(\"SHACL predicateObjectList with name \" + child.name + \" not recognized.\");\n        }\n    });\n};\n// Utility method for constructing a `ShaclShape` from CstElements matching the\n// `shaclShape` grammar rule.\nvar getShaclShapeFromBlankNodePropertyList = function (ctx) {\n    var blankNodeNode = ctx.blankNodePropertyList[0];\n    var predicateObjectListNode = blankNodeNode.children.predicateObjectList[0];\n    var optionalPredicateObjectListNode = ctx.predicateObjectList\n        ? ctx.predicateObjectList[0]\n        : null;\n    if (!isCstNode(predicateObjectListNode) &&\n        !isCstNode(optionalPredicateObjectListNode)) {\n        return;\n    }\n    var shaclRulePredicateObjectListNodes = optionalPredicateObjectListNode &&\n        optionalPredicateObjectListNode.children &&\n        optionalPredicateObjectListNode.children.shaclRulePredicateObjectList\n        ? (predicateObjectListNode.children.shaclRulePredicateObjectList ||\n            []).concat(optionalPredicateObjectListNode.children\n            .shaclRulePredicateObjectList) : predicateObjectListNode.children.shaclRulePredicateObjectList;\n    if (!shaclRulePredicateObjectListNodes) {\n        return;\n    }\n    var shape = {\n        subject: {\n            type: 'blankNodePropertyList',\n            token: getUnderlyingStartToken(blankNodeNode),\n        },\n        types: [],\n        predicates: [],\n    };\n    addPredicatesAndTypesToShape(shape, shaclRulePredicateObjectListNodes);\n    return shape;\n};\n// Returns a new SHACL visitor that extends that given BaseVisitor. The SHACL\n// visitor is capable of constructing ShaclShape objects from a given CST and\n// then using those shapes to perform validations that cannot be performed in\n// the initial parse of a SHACL document.\nexport var getShaclVisitor = function (BaseVisitor) {\n    var ShaclVisitor = /** @class */ (function (_super) {\n        __extends(ShaclVisitor, _super);\n        function ShaclVisitor() {\n            var _this = _super.call(this) || this;\n            // `triples` have two alternatives, one with a `subject` and one with a\n            // `blankNodePropertyList`. This method constructs SHACL shapes for each\n            // alternative.\n            _this.triples = function (ctx) {\n                if (ctx.subject) {\n                    var predicateObjectListNode = ctx.predicateObjectList[0];\n                    if (!isCstNode(predicateObjectListNode)) {\n                        return;\n                    }\n                    var shaclRulePredicateObjectListNodes = predicateObjectListNode.children.shaclRulePredicateObjectList;\n                    if (!shaclRulePredicateObjectListNodes) {\n                        return;\n                    }\n                    var shape = {\n                        subject: {\n                            type: Object.keys(ctx.subject[0].children)[0] === 'collection'\n                                ? 'collection'\n                                : 'subject',\n                            token: getUnderlyingStartToken(ctx.subject[0]),\n                        },\n                        types: [],\n                        predicates: [],\n                    };\n                    addPredicatesAndTypesToShape(shape, shaclRulePredicateObjectListNodes);\n                    _this.shapes.push(shape);\n                    _this.visit(ctx.subject);\n                    _this.visit(predicateObjectListNode);\n                }\n                else {\n                    var shape = getShaclShapeFromBlankNodePropertyList(ctx);\n                    if (!shape) {\n                        return;\n                    }\n                    _this.shapes.push(shape);\n                    _this.visit(ctx.blankNodePropertyList);\n                    if (ctx.predicateObjectList) {\n                        _this.visit(ctx.predicateObjectList);\n                    }\n                }\n            };\n            // Some SHACL shapes (e.g., nested PropertyShapes) are not matched\n            // by the `triples` grammar rule; instead, they match `shapeShape`.\n            _this.shaclShape = function (ctx) {\n                if (!ctx.blankNodePropertyList) {\n                    // Not an inline shape we need to traverse, just an identifier.\n                    return;\n                }\n                var shape = getShaclShapeFromBlankNodePropertyList(ctx);\n                if (!shape) {\n                    return;\n                }\n                _this.shapes.push(shape);\n                _this.visit(ctx.blankNodePropertyList);\n            };\n            _this.$resetState = function () {\n                _this.shapes = [];\n            };\n            _this.$validateShapes = function (_a) {\n                var shaclPrefix = _a.shacl;\n                var validationErrors = [];\n                var localNameMatcher = getShaclLocalNameMatcher(shaclPrefix);\n                var bnodeCount = 0;\n                var shapesConsolidatedBySubject = _this.shapes.reduce(function (consolidatedShapes, shape) {\n                    var image = shape.subject.token.image;\n                    var subjectImage = image === '[' ? \"bnode\" + ++bnodeCount : image;\n                    if (!consolidatedShapes[subjectImage]) {\n                        consolidatedShapes[subjectImage] = {\n                            subjects: [shape.subject],\n                            types: shape.types,\n                            predicates: shape.predicates,\n                        };\n                    }\n                    else {\n                        var consolidatedShape = consolidatedShapes[subjectImage];\n                        consolidatedShapes[subjectImage] = {\n                            subjects: consolidatedShape.subjects.concat([shape.subject]),\n                            types: consolidatedShape.types.concat(shape.types),\n                            predicates: consolidatedShape.predicates.concat(shape.predicates),\n                        };\n                    }\n                    return consolidatedShapes;\n                }, {});\n                Object.keys(shapesConsolidatedBySubject).forEach(function (subjectImage) {\n                    var _a = shapesConsolidatedBySubject[subjectImage], subjects = _a.subjects, types = _a.types, predicates = _a.predicates;\n                    var shapeType;\n                    types.forEach(function (_a) {\n                        var type = _a.type;\n                        if (shapeType && type !== shapeType) {\n                            validationErrors.push({\n                                name: 'ShapeTypeError',\n                                message: 'A SHACL shape can be at most one of NodeShape or PropertyShape.',\n                                token: subjects[0].token,\n                            });\n                        }\n                        else if (!shapeType) {\n                            shapeType = type;\n                        }\n                    });\n                    var pathPredicates = [];\n                    var nonPathPredicateMap = {};\n                    predicates.forEach(function (predicate) {\n                        var image = predicate.token.image;\n                        var localName = getLocalName(image, localNameMatcher);\n                        var predicateImage = localName\n                            ? shaclPrefix + \":\" + localName\n                            : image;\n                        if (predicateImage === shaclPrefix + \":path\") {\n                            pathPredicates.push(predicate);\n                        }\n                        else {\n                            if (!nonPathPredicateMap[predicateImage]) {\n                                nonPathPredicateMap[predicateImage] = [];\n                            }\n                            nonPathPredicateMap[predicateImage].push(predicate);\n                        }\n                    });\n                    if (pathPredicates.length > 0) {\n                        if (shapeType === 'NodeShape') {\n                            validationErrors.push({\n                                name: 'ShapePropertyError',\n                                message: 'SHACL instances of `NodeShape` cannot have a value for the `path` property.',\n                                token: pathPredicates[0].token,\n                            });\n                        }\n                        else {\n                            shapeType = 'PropertyShape';\n                        }\n                        if (pathPredicates.length > 1) {\n                            validationErrors.push({\n                                name: 'ShapePropertyError',\n                                message: 'A shape can have at most one value for sh:path.',\n                                token: pathPredicates[1].token,\n                            });\n                        }\n                    }\n                    if (shapeType === 'NodeShape') {\n                        [\n                            'minCount',\n                            'maxCount',\n                            'uniqueLang',\n                            'lessThan',\n                            'lessThanOrEquals',\n                            'qualifiedValueShape',\n                        ].forEach(function (image) {\n                            var prefixedImage = shaclPrefix + \":\" + image;\n                            if (nonPathPredicateMap[prefixedImage]) {\n                                validationErrors.push({\n                                    name: 'ShapePropertyError',\n                                    message: \"A NodeShape cannot have any value for \" + prefixedImage + \".\",\n                                    token: nonPathPredicateMap[prefixedImage][0].token,\n                                });\n                            }\n                        });\n                    }\n                    else {\n                        [\n                            'deactivated',\n                            'severity',\n                            'datatype',\n                            'nodeKind',\n                            'minCount',\n                            'maxCount',\n                            'minExclusive',\n                            'minInclusive',\n                            'maxExclusive',\n                            'maxInclusive',\n                            'minLength',\n                            'maxLength',\n                            'languageIn',\n                            'uniqueLang',\n                            'in',\n                        ].forEach(function (image) {\n                            var prefixedImage = shaclPrefix + \":\" + image;\n                            if (nonPathPredicateMap[prefixedImage] &&\n                                nonPathPredicateMap[prefixedImage].length > 1) {\n                                validationErrors.push({\n                                    name: 'ShapePropertyError',\n                                    message: \"A shape can have at most one value for \" + prefixedImage + \".\",\n                                    token: nonPathPredicateMap[prefixedImage][1].token,\n                                });\n                            }\n                        });\n                    }\n                });\n                return { validationErrors: validationErrors };\n            };\n            _this.validateVisitor();\n            _this.shapes = [];\n            return _this;\n        }\n        return ShaclVisitor;\n    }(BaseVisitor));\n    return new ShaclVisitor();\n};\n", "var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { TurtleParser } from '../turtle/TurtleParser';\nimport { Lexer, Parser, } from 'chevrotain';\nimport { getShaclVisitor } from 'shacl/visitor';\nvar _a = require('./tokens'), getShaclTokenTypes = _a.getShaclTokenTypes, getShaclTokenMap = _a.getShaclTokenMap, categoryTokenMap = _a.categoryTokenMap;\nvar turtleTokenMap = require('../turtle/tokens').turtleTokenMap;\n// A SHACL parser for the Turtle serialization of SHACL only. The parser can\n// can accept any arbitrary namespace prefix for SHACL/XSD and still tokenize\n// and parse the document correctly (it will also, of course, parse docuemnts\n// using the full SHACL/XSD IRIs). The parser runs both a parse phase and a\n// second validation phase (using a visitor) in order to accommodate SHACL\n// rules that are not purely syntactic.\nvar ShaclParser = /** @class */ (function (_super) {\n    __extends(ShaclParser, _super);\n    function ShaclParser(config, prefixes) {\n        if (prefixes === void 0) { prefixes = { shacl: 'sh', xsd: 'xsd' }; }\n        var _this = _super.call(this, __assign({ outputCst: true, recoveryEnabled: true }, config), getShaclTokenTypes(prefixes), getShaclTokenTypes(prefixes), false) || this;\n        // Some SHACL rules cannot be checked for violations during the first parse.\n        // The visitor accepts the CST that results from parsing and checks\n        // conformity with these SHACL rules.\n        _this.validateWithVisitor = function (cst) {\n            // To save resources while parsing, the shaclVisitor is a singleton.\n            if (!_this.shaclVisitor) {\n                var BaseSrsVisitor = _this.getBaseCstVisitorConstructorWithDefaults();\n                _this.shaclVisitor = getShaclVisitor(BaseSrsVisitor);\n            }\n            else {\n                _this.shaclVisitor.$resetState();\n            }\n            _this.shaclVisitor.visit(cst);\n            return _this.shaclVisitor.$validateShapes(_this.prefixes);\n        };\n        _this.tokenize = function (document) {\n            return _this.lexer.tokenize(document).tokens;\n        };\n        _this.parse = function (document) {\n            _this.input = _this.tokenize(document);\n            var cst = _this.turtleDoc();\n            var validationErrors = _this.validateWithVisitor(cst).validationErrors;\n            // Next two items are copied so that they can be returned/held after parse\n            // state is cleared.\n            var errors = _this.errors.slice();\n            var semanticErrors = _this.semanticErrors.concat(validationErrors);\n            return {\n                errors: errors,\n                semanticErrors: semanticErrors,\n                cst: cst,\n            };\n        };\n        _this.predicateObjectList = _this.OVERRIDE_RULE('predicateObjectList', function () {\n            _this.OR([\n                {\n                    ALT: function () {\n                        _this.SUBRULE(_this.shaclRulePredicateObjectList);\n                    },\n                },\n                {\n                    ALT: function () {\n                        _this.SUBRULE(_this.verb);\n                        _this.SUBRULE(_this.objectList);\n                    },\n                },\n            ]);\n            _this.MANY(function () {\n                _this.CONSUME(turtleTokenMap.Semicolon);\n                _this.OPTION(function () {\n                    _this.OR1([\n                        {\n                            ALT: function () {\n                                _this.SUBRULE1(_this.shaclRulePredicateObjectList);\n                            },\n                        },\n                        {\n                            ALT: function () {\n                                _this.SUBRULE1(_this.verb);\n                                _this.SUBRULE1(_this.objectList);\n                            },\n                        },\n                    ]);\n                });\n            });\n        });\n        _this.shaclRulePredicateObjectList = _this.RULE('shaclRulePredicateObjectList', function () {\n            _this.OR([\n                {\n                    ALT: function () { return _this.SUBRULE(_this.shaclPredicateIRI); },\n                },\n                {\n                    ALT: function () { return _this.SUBRULE(_this.shaclNodeKind); },\n                },\n                {\n                    ALT: function () { return _this.SUBRULE(_this.shaclTargetNode); },\n                },\n                {\n                    ALT: function () { return _this.SUBRULE(_this.shaclPropertyPath); },\n                },\n                {\n                    ALT: function () { return _this.SUBRULE(_this.shaclLiteralConstraint); },\n                },\n                {\n                    ALT: function () { return _this.SUBRULE(_this.shaclListTakingConstraint); },\n                },\n                {\n                    ALT: function () { return _this.SUBRULE(_this.shaclShapeExpectingConstraint); },\n                },\n                {\n                    ALT: function () { return _this.SUBRULE(_this.shaclHasValueConstraint); },\n                },\n                {\n                    ALT: function () { return _this.SUBRULE(_this.shaclVerbShape); },\n                },\n            ]);\n        });\n        _this.shaclPredicateIRI = _this.RULE('shaclPredicateIRI', function () {\n            _this.OR([\n                {\n                    ALT: function () {\n                        _this.CONSUME(categoryTokenMap.SingleIriTakingPredicate);\n                        _this.SUBRULE(_this.iri);\n                    },\n                },\n                {\n                    ALT: function () {\n                        _this.CONSUME(categoryTokenMap.ManyIriTakingPredicate);\n                        _this.SUBRULE1(_this.iri);\n                        _this.MANY(function () {\n                            _this.CONSUME(turtleTokenMap.Comma);\n                            _this.SUBRULE2(_this.iri);\n                        });\n                    },\n                },\n            ]);\n        });\n        _this.shaclNodeKind = _this.RULE('shaclNodeKind', function () {\n            _this.CONSUME(_this.shaclTokenMap.SHACL_nodeKind);\n            _this.CONSUME(categoryTokenMap.NodeKindIRI);\n        });\n        _this.shaclTargetNode = _this.RULE('shaclTargetNode', function () {\n            _this.CONSUME(_this.shaclTokenMap.SHACL_targetNode);\n            _this.SUBRULE(_this.shaclIRIOrLiteral);\n            _this.MANY(function () {\n                _this.CONSUME(turtleTokenMap.Comma);\n                _this.SUBRULE1(_this.shaclIRIOrLiteral);\n            });\n        });\n        _this.shaclVerbShape = _this.RULE('shaclVerbShape', function () {\n            _this.SUBRULE(_this.verb);\n            _this.SUBRULE(_this.shaclShapeType);\n            _this.MANY(function () {\n                _this.CONSUME(turtleTokenMap.Comma);\n                _this.SUBRULE1(_this.shaclShapeType);\n            });\n        });\n        _this.shaclShapeType = _this.RULE('shaclShapeType', function () {\n            _this.OR([\n                {\n                    ALT: function () { return _this.CONSUME(_this.shaclTokenMap.SHACL_Shape); },\n                },\n                {\n                    ALT: function () { return _this.CONSUME(_this.shaclTokenMap.SHACL_NodeShape); },\n                },\n                {\n                    ALT: function () { return _this.CONSUME(_this.shaclTokenMap.SHACL_PropertyShape); },\n                },\n            ]);\n        });\n        _this.shaclPropertyPath = _this.RULE('shaclPropertyPath', function () {\n            _this.CONSUME(_this.shaclTokenMap.SHACL_path);\n            _this.SUBRULE(_this.shaclPropertyPathPath);\n        });\n        _this.shaclPropertyPathPath = _this.RULE('shaclPropertyPathPath', function () {\n            _this.OR([\n                {\n                    ALT: function () { return _this.SUBRULE(_this.shaclPredicatePath); },\n                },\n                {\n                    ALT: function () { return _this.SUBRULE(_this.shaclSequencePath); },\n                },\n                {\n                    ALT: function () { return _this.SUBRULE(_this.shaclAlternativePath); },\n                },\n                {\n                    ALT: function () { return _this.SUBRULE(_this.shaclInversePath); },\n                },\n                {\n                    ALT: function () { return _this.SUBRULE(_this.shaclZeroOrMorePath); },\n                },\n                {\n                    ALT: function () { return _this.SUBRULE(_this.shaclOneOrMorePath); },\n                },\n                {\n                    ALT: function () { return _this.SUBRULE(_this.shaclZeroOrOnePath); },\n                },\n            ]);\n        });\n        _this.shaclPredicatePath = _this.RULE('shaclPredicatePath', function () {\n            _this.OR([\n                {\n                    ALT: function () { return _this.SUBRULE(_this.iri); },\n                },\n                {\n                    // This case does not seem to be allowed by the SHACL spec, but the\n                    // online W3C validator accepts one level of parens wrapping the IRI.\n                    ALT: function () {\n                        _this.CONSUME(turtleTokenMap.LParen);\n                        _this.SUBRULE1(_this.iri);\n                        _this.CONSUME(turtleTokenMap.RParen);\n                    },\n                },\n            ]);\n        });\n        _this.shaclSequencePath = _this.RULE('shaclSequencePath', function () {\n            _this.CONSUME(turtleTokenMap.LParen);\n            _this.SUBRULE(_this.shaclPropertyPathPath);\n            _this.AT_LEAST_ONE(function () { return _this.SUBRULE1(_this.shaclPropertyPathPath); });\n            _this.OPTION(function () { return _this.CONSUME(turtleTokenMap.Semicolon); });\n            _this.CONSUME(turtleTokenMap.RParen);\n        });\n        _this.shaclAlternativePath = _this.RULE('shaclAlternativePath', function () {\n            _this.CONSUME(turtleTokenMap.LBracket);\n            _this.CONSUME(_this.shaclTokenMap.SHACL_alternativePath);\n            _this.SUBRULE(_this.shaclPropertyPathPath); // This does not match the SHACL spec, but it does match the test cases, which violate the spec. ;_;\n            _this.OPTION(function () { return _this.CONSUME(turtleTokenMap.Semicolon); });\n            _this.CONSUME(turtleTokenMap.RBracket);\n        });\n        _this.shaclInversePath = _this.RULE('shaclInversePath', function () {\n            _this.CONSUME(turtleTokenMap.LBracket);\n            _this.CONSUME(_this.shaclTokenMap.SHACL_inversePath);\n            _this.SUBRULE(_this.shaclPropertyPathPath);\n            _this.OPTION(function () { return _this.CONSUME(turtleTokenMap.Semicolon); });\n            _this.CONSUME(turtleTokenMap.RBracket);\n        });\n        _this.shaclZeroOrMorePath = _this.RULE('shaclZeroOrMorePath', function () {\n            _this.CONSUME(turtleTokenMap.LBracket);\n            _this.CONSUME(_this.shaclTokenMap.SHACL_zeroOrMorePath);\n            _this.SUBRULE(_this.shaclPropertyPathPath);\n            _this.OPTION(function () { return _this.CONSUME(turtleTokenMap.Semicolon); });\n            _this.CONSUME(turtleTokenMap.RBracket);\n        });\n        _this.shaclOneOrMorePath = _this.RULE('shaclOneOrMorePath', function () {\n            _this.CONSUME(turtleTokenMap.LBracket);\n            _this.CONSUME(_this.shaclTokenMap.SHACL_oneOrMorePath);\n            _this.SUBRULE(_this.shaclPropertyPathPath);\n            _this.OPTION(function () { return _this.CONSUME(turtleTokenMap.Semicolon); });\n            _this.CONSUME(turtleTokenMap.RBracket);\n        });\n        _this.shaclZeroOrOnePath = _this.RULE('shaclZeroOrOnePath', function () {\n            _this.CONSUME(turtleTokenMap.LBracket);\n            _this.CONSUME(_this.shaclTokenMap.SHACL_zeroOrOnePath);\n            _this.SUBRULE(_this.shaclPropertyPathPath);\n            _this.OPTION(function () { return _this.CONSUME(turtleTokenMap.Semicolon); });\n            _this.CONSUME(turtleTokenMap.RBracket);\n        });\n        _this.shaclLiteralConstraint = _this.RULE('shaclLiteralConstraint', function () {\n            _this.OR([\n                {\n                    ALT: function () { return _this.SUBRULE(_this.shaclIntConstraint); },\n                },\n                // TODO: Some specificity here is possibly unnecessary -- e.g., maybe `shaclStringConstraint` and `shaclStringLiteralQuoteConstraint` can be consolidated in some way?\n                {\n                    ALT: function () { return _this.SUBRULE(_this.shaclStringConstraint); },\n                },\n                {\n                    ALT: function () { return _this.SUBRULE(_this.shaclStringLiteralQuoteConstraint); },\n                },\n                {\n                    ALT: function () { return _this.SUBRULE(_this.shaclLangStringConstraint); },\n                },\n                {\n                    ALT: function () { return _this.SUBRULE(_this.shaclBooleanConstraint); },\n                },\n                {\n                    ALT: function () { return _this.SUBRULE(_this.shaclAnyLiteralConstraint); },\n                },\n            ]);\n        });\n        _this.shaclIntConstraint = _this.RULE('shaclIntConstraint', function () {\n            _this.CONSUME(categoryTokenMap.IntTakingPredicate);\n            _this.OR([\n                {\n                    ALT: function () { return _this.CONSUME(turtleTokenMap.INTEGER); },\n                },\n                {\n                    ALT: function () { return _this.SUBRULE(_this.shaclXsdInteger); },\n                },\n            ]);\n        });\n        _this.shaclStringConstraint = _this.RULE('shaclStringConstraint', function () {\n            _this.OR([\n                {\n                    ALT: function () { return _this.CONSUME(_this.shaclTokenMap.SHACL_select); },\n                },\n                {\n                    ALT: function () { return _this.CONSUME(_this.shaclTokenMap.SHACL_ask); },\n                },\n            ]);\n            _this.SUBRULE(_this.String); // TODO: a bit too lax?\n        });\n        _this.shaclStringLiteralQuoteConstraint = _this.RULE('shaclStringLiteralQuoteConstraint', function () {\n            _this.CONSUME(categoryTokenMap.StringLiteralQuoteTakingPredicate);\n            _this.CONSUME(turtleTokenMap.STRING_LITERAL_QUOTE);\n            _this.OPTION(function () {\n                _this.OR([\n                    {\n                        ALT: function () { return _this.CONSUME(turtleTokenMap.LANGTAG); },\n                    },\n                    {\n                        ALT: function () {\n                            _this.CONSUME(turtleTokenMap.DoubleCaret);\n                            _this.CONSUME(_this.shaclTokenMap.SHACL_xsd_string);\n                        },\n                    },\n                    {\n                        ALT: function () {\n                            _this.CONSUME1(turtleTokenMap.DoubleCaret);\n                            _this.CONSUME(_this.shaclTokenMap.SHACL_xsd_anyURI);\n                        },\n                    },\n                ]);\n            });\n        });\n        _this.shaclLangStringConstraint = _this.RULE('shaclLangStringConstraint', function () {\n            _this.CONSUME(categoryTokenMap.LangStringTakingPredicate);\n            _this.SUBRULE(_this.String);\n            _this.OPTION(function () {\n                _this.OR([\n                    {\n                        ALT: function () { return _this.CONSUME(turtleTokenMap.LANGTAG); },\n                    },\n                    {\n                        ALT: function () {\n                            _this.CONSUME(turtleTokenMap.DoubleCaret);\n                            _this.CONSUME(_this.shaclTokenMap.SHACL_xsd_string);\n                        },\n                    },\n                ]);\n            });\n        });\n        _this.shaclBooleanConstraint = _this.RULE('shaclBooleanConstraint', function () {\n            _this.CONSUME(categoryTokenMap.BooleanTakingPredicate);\n            _this.OR([\n                {\n                    ALT: function () { return _this.CONSUME(turtleTokenMap.TRUE); },\n                },\n                {\n                    ALT: function () { return _this.CONSUME(turtleTokenMap.FALSE); },\n                },\n                {\n                    ALT: function () { return _this.SUBRULE(_this.shaclXsdBoolean); },\n                },\n            ]);\n        });\n        _this.shaclAnyLiteralConstraint = _this.RULE('shaclAnyLiteralConstraint', function () {\n            _this.CONSUME(categoryTokenMap.AnyLiteralTakingPredicate);\n            _this.SUBRULE(_this.literal);\n        });\n        _this.shaclListTakingConstraint = _this.RULE('shaclListTakingConstraint', function () {\n            _this.OR([\n                {\n                    ALT: function () { return _this.SUBRULE(_this.shaclLanguageInConstraint); },\n                },\n                {\n                    ALT: function () { return _this.SUBRULE(_this.shaclShapeListTakingConstraint); },\n                },\n                {\n                    ALT: function () { return _this.SUBRULE(_this.shaclIRIListTakingConstraint); },\n                },\n                {\n                    ALT: function () { return _this.SUBRULE(_this.shaclShapeOrLiteralListTakingConstraint); },\n                },\n            ]);\n        });\n        _this.shaclLanguageInConstraint = _this.RULE('shaclLanguageInConstraint', function () {\n            _this.CONSUME(_this.shaclTokenMap.SHACL_languageIn);\n            _this.SUBRULE(_this.shaclStringCollection);\n        });\n        _this.shaclStringCollection = _this.RULE('shaclStringCollection', function () {\n            _this.CONSUME(turtleTokenMap.LParen);\n            _this.MANY(function () {\n                _this.CONSUME(turtleTokenMap.STRING_LITERAL_QUOTE);\n            });\n            _this.CONSUME(turtleTokenMap.RParen);\n        });\n        _this.shaclShapeListTakingConstraint = _this.RULE('shaclShapeListTakingConstraint', function () {\n            _this.OR([\n                {\n                    ALT: function () { return _this.CONSUME(_this.shaclTokenMap.SHACL_and); },\n                },\n                {\n                    ALT: function () { return _this.CONSUME(_this.shaclTokenMap.SHACL_or); },\n                },\n                {\n                    ALT: function () { return _this.CONSUME(_this.shaclTokenMap.SHACL_xone); },\n                },\n            ]);\n            _this.SUBRULE(_this.shaclShapeCollection);\n        });\n        _this.shaclShapeCollection = _this.RULE('shaclShapeCollection', function () {\n            _this.CONSUME(turtleTokenMap.LParen);\n            _this.MANY(function () {\n                _this.SUBRULE(_this.shaclShape);\n            });\n            _this.CONSUME(turtleTokenMap.RParen);\n        });\n        _this.shaclIRIListTakingConstraint = _this.RULE('shaclIRIListTakingConstraint', function () {\n            _this.CONSUME(_this.shaclTokenMap.SHACL_ignoredProperties);\n            _this.SUBRULE(_this.shaclIRICollection);\n        });\n        _this.shaclIRICollection = _this.RULE('shaclIRICollection', function () {\n            _this.CONSUME(turtleTokenMap.LParen);\n            _this.MANY(function () {\n                _this.SUBRULE(_this.iri);\n            });\n            _this.CONSUME(turtleTokenMap.RParen);\n        });\n        _this.shaclShapeOrLiteralListTakingConstraint = _this.RULE('shaclShapeOrLiteralListTakingConstraint', function () {\n            _this.CONSUME(_this.shaclTokenMap.SHACL_in);\n            _this.SUBRULE(_this.shaclShapeOrLiteralCollection);\n        });\n        _this.shaclShapeOrLiteralCollection = _this.RULE('shaclShapeOrLiteralCollection', function () {\n            _this.CONSUME(turtleTokenMap.LParen);\n            _this.MANY(function () {\n                _this.SUBRULE(_this.shaclShapeOrLiteral);\n            });\n            _this.CONSUME(turtleTokenMap.RParen);\n        });\n        _this.shaclShapeExpectingConstraint = _this.RULE('shaclShapeExpectingConstraint', function () {\n            _this.CONSUME(categoryTokenMap.ShapeExpectingPredicate);\n            _this.SUBRULE(_this.shaclShape);\n        });\n        _this.shaclHasValueConstraint = _this.RULE('shaclHasValueConstraint', function () {\n            _this.CONSUME(_this.shaclTokenMap.SHACL_hasValue);\n            _this.SUBRULE(_this.shaclShapeOrLiteral);\n        });\n        _this.shaclShape = _this.RULE('shaclShape', function () {\n            _this.OR([\n                {\n                    ALT: function () { return _this.SUBRULE(_this.iri); },\n                },\n                {\n                    ALT: function () { return _this.SUBRULE(_this.blankNodePropertyList); },\n                },\n                {\n                    ALT: function () { return _this.SUBRULE(_this.BlankNode); },\n                },\n            ]);\n        });\n        _this.shaclShapeOrLiteral = _this.RULE('shaclShapeOrLiteral', function () {\n            _this.OR([\n                {\n                    ALT: function () { return _this.SUBRULE(_this.shaclShape); },\n                },\n                {\n                    ALT: function () { return _this.SUBRULE(_this.literal); },\n                },\n            ]);\n        });\n        _this.shaclIRIOrLiteral = _this.RULE('shaclIRIOrLiteral', function () {\n            _this.OR([\n                {\n                    ALT: function () { return _this.SUBRULE(_this.iri); },\n                },\n                {\n                    ALT: function () { return _this.SUBRULE(_this.literal); },\n                },\n            ]);\n        });\n        _this.shaclXsdBoolean = _this.RULE('shaclXsdBoolean', function () {\n            _this.SUBRULE(_this.shaclStringWithDoubleCaret);\n            _this.CONSUME(_this.shaclTokenMap.SHACL_xsd_boolean);\n        });\n        _this.shaclXsdString = _this.RULE('shaclXsdString', function () {\n            _this.SUBRULE(_this.shaclStringWithDoubleCaret);\n            _this.CONSUME(_this.shaclTokenMap.SHACL_xsd_string);\n        });\n        _this.shaclXsdInteger = _this.RULE('shaclXsdInteger', function () {\n            _this.SUBRULE(_this.shaclStringWithDoubleCaret);\n            _this.CONSUME(_this.shaclTokenMap.SHACL_xsd_integer);\n        });\n        _this.shaclXsdDate = _this.RULE('shaclXsdDate', function () {\n            _this.SUBRULE(_this.shaclStringWithDoubleCaret);\n            _this.CONSUME(_this.shaclTokenMap.SHACL_xsd_date);\n        });\n        _this.shaclXsdAnyURI = _this.RULE('shaclXsdAnyURI', function () {\n            _this.SUBRULE(_this.shaclStringWithDoubleCaret);\n            _this.CONSUME(_this.shaclTokenMap.SHACL_xsd_anyURI);\n        });\n        _this.shaclStringWithDoubleCaret = _this.RULE('shaclStringWithDoubleCaret', function () {\n            _this.SUBRULE(_this.String);\n            _this.CONSUME(turtleTokenMap.DoubleCaret);\n        });\n        _this.prefixes = prefixes;\n        _this.lexer = new Lexer(getShaclTokenTypes(prefixes));\n        _this.shaclTokenMap = getShaclTokenMap(prefixes);\n        Parser.performSelfAnalysis(_this);\n        return _this;\n    }\n    return ShaclParser;\n}(TurtleParser));\nexport { ShaclParser };\n", "var shallowEqual = function shallowEqual(newValue, oldValue) {\n  return newValue === oldValue;\n};\n\nvar simpleIsEqual = function simpleIsEqual(newArgs, lastArgs) {\n  return newArgs.length === lastArgs.length && newArgs.every(function (newArg, index) {\n    return shallowEqual(newArg, lastArgs[index]);\n  });\n};\n\nfunction index (resultFn, isEqual) {\n  if (isEqual === void 0) {\n    isEqual = simpleIsEqual;\n  }\n\n  var lastThis;\n  var lastArgs = [];\n  var lastResult;\n  var calledOnce = false;\n\n  var result = function result() {\n    for (var _len = arguments.length, newArgs = new Array(_len), _key = 0; _key < _len; _key++) {\n      newArgs[_key] = arguments[_key];\n    }\n\n    if (calledOnce && lastThis === this && isEqual(newArgs, lastArgs)) {\n      return lastResult;\n    }\n\n    lastResult = resultFn.apply(this, newArgs);\n    calledOnce = true;\n    lastThis = this;\n    lastArgs = newArgs;\n    return lastResult;\n  };\n\n  return result;\n}\n\nexport default index;\n", "var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar _a = require('../turtle/tokens'), turtleTokenTypes = _a.turtleTokenTypes, turtleTokenMap = _a.turtleTokenMap;\nvar sparqlTokenMap = require('../sparql/tokens').sparqlTokenMap;\nimport { createToken, Lexer } from 'chevrotain';\nimport memoize from 'memoize-one';\nimport { getAsTypedTuple } from 'helpers/chevrotain/types';\nimport isDeepEqual from 'lodash.isequal';\nvar shaclIriNamespace = 'http://www.w3.org/ns/shacl#';\nvar xsdIriNamespace = 'http://www.w3.org/2001/XMLSchema#';\n// Token categories, useful for making the parser rules simpler.\nexport var categoryTokenMap = {\n    ManyIriTakingPredicate: createToken({\n        name: 'ManyIriTakingPredicate',\n        pattern: Lexer.NA,\n    }),\n    SingleIriTakingPredicate: createToken({\n        name: 'SingleIriTakingPredicate',\n        pattern: Lexer.NA,\n    }),\n    NodeKindIRI: createToken({\n        name: 'NodeKindIRI',\n        pattern: Lexer.NA,\n    }),\n    IntTakingPredicate: createToken({\n        name: 'IntTakingPredicate',\n        pattern: Lexer.NA,\n    }),\n    StringLiteralQuoteTakingPredicate: createToken({\n        name: 'StringLiteralQuoteTakingPredicate',\n        pattern: Lexer.NA,\n    }),\n    LangStringTakingPredicate: createToken({\n        name: 'LangStringTakingPredicate',\n        pattern: Lexer.NA,\n    }),\n    BooleanTakingPredicate: createToken({\n        name: 'BooleanTakingPredicate',\n        pattern: Lexer.NA,\n    }),\n    ShapeExpectingPredicate: createToken({\n        name: 'ShapeExpectingPredicate',\n        pattern: Lexer.NA,\n    }),\n    AnyLiteralTakingPredicate: createToken({\n        name: 'AnyLiteralTakingPredicate',\n        pattern: Lexer.NA,\n    }),\n};\nexport var categoryTokens = Object.keys(categoryTokenMap).map(function (key) { return categoryTokenMap[key]; });\nvar localNamesByCategory = {\n    ManyIriTakingPredicate: getAsTypedTuple('equals', 'disjoint', 'lessThan', 'lessThanOrEquals', 'targetClass', 'targetSubjectsOf', 'targetObjectsOf'),\n    SingleIriTakingPredicate: getAsTypedTuple('class', 'datatype', 'severity'),\n    NodeKindIRI: getAsTypedTuple('IRI', 'BlankNode', 'Literal', 'BlankNodeOrIRI', 'BlankNodeOrLiteral', 'IRIOrLiteral'),\n    IntTakingPredicate: getAsTypedTuple('minCount', 'maxCount', 'minLength', 'maxLength', 'qualifiedMinCount', 'qualifiedMaxCount'),\n    StringLiteralQuoteTakingPredicate: getAsTypedTuple('pattern', 'flags', 'prefix', 'namespace'),\n    LangStringTakingPredicate: getAsTypedTuple('message', 'labelTemplate'),\n    BooleanTakingPredicate: getAsTypedTuple('uniqueLang', 'qualifiedValueShapesDisjoint', 'closed', 'deactivated', 'optional'),\n    ShapeExpectingPredicate: getAsTypedTuple('not', 'node', 'property', 'qualifiedValueShape', 'sparql', 'declare', 'prefixes', 'parameter', 'nodeValidator', 'propertyValidator', 'validator'),\n    AnyLiteralTakingPredicate: getAsTypedTuple('minExclusive', 'minInclusive', 'maxExclusive', 'maxInclusive'),\n    other: getAsTypedTuple('Shape', 'NodeShape', 'PropertyShape', 'targetNode', 'message', 'path', 'alternativePath', 'inversePath', 'zeroOrMorePath', 'oneOrMorePath', 'zeroOrOnePath', 'nodeKind', 'languageIn', 'and', 'or', 'xone', 'ignoredProperties', 'hasValue', 'in', 'select', 'ask'),\n};\nvar xsdLocalNames = getAsTypedTuple('boolean', 'integer', 'string', 'date', 'dateTime', 'anyURI');\n// Map of local names back to their categories, for easier lookup:\nvar localNameToCategoryMap = Object.keys(localNamesByCategory).reduce(function (nameToCategoryMap, category) {\n    var categoryLocalNames = localNamesByCategory[category];\n    categoryLocalNames.forEach(function (localName) { return (nameToCategoryMap[localName] = category); });\n    return nameToCategoryMap;\n}, {});\nvar localNames = Object.keys(localNameToCategoryMap);\n// We can pre-compute all tokens for the `xsd` namespace except for those that\n// include prefixes (since we don't know a priori what the prefix will be).\n// For each XSD local name, we will create a \"category\" token that will\n// ultimately be used as the single token encompassing either the full\n// (un-prefixed) IRI or the prefixed name (i.e., `xsd:string). At this point,\n// we create only the category token and the full (un-prefixed) IRI token; the\n// prefixed token is created later (via `getShaclTokenTypes`) once we actually\n// know what the `xsd` prefix is.\nvar xsdUnprefixedTokenMap = xsdLocalNames.reduce(function (tokenMap, localName) {\n    var _a;\n    var tokenName = \"SHACL_xsd_\" + localName; // category token name\n    var iriTokenName = tokenName + \"_IRI\"; // IRI token name\n    // Category token that will ultimately select either an XSD IRI or an XSD PN_LOCAL:\n    var iriOrPrefixCategoryToken = createToken({\n        name: tokenName,\n        pattern: Lexer.NA,\n    });\n    return __assign({}, tokenMap, (_a = {}, _a[tokenName] = iriOrPrefixCategoryToken, _a[iriTokenName] = createToken({\n        name: iriTokenName,\n        pattern: \"<\" + xsdIriNamespace + localName,\n        categories: [iriOrPrefixCategoryToken, turtleTokenMap.IRIREF],\n    }), _a));\n}, {});\n// We can also pre-compute all SHACL tokens except for those that include\n// prefixes (again, since we don't know a priori what the SHACL prefix will be).\n// This helps keep our parser quick. We do it in the same way that we did for\n// XSD tokens, above -- we create a \"category\" token for each SHACL local name\n// that will be used to match either the full (un-prefixed) IRI or the prefixed\n// name (once we know what the SHACL prefix is).\nvar shaclUnprefixedTokenMap = localNames.reduce(function (tokenMap, localName) {\n    var _a;\n    var category = localNameToCategoryMap[localName];\n    var categoryToken = categoryTokenMap[category];\n    var tokenName = \"SHACL_\" + localName;\n    var iriTokenName = tokenName + \"_IRI\";\n    // Category token that will select either a SHACL IRI or a SHACL PN_LOCAL:\n    var iriOrPrefixCategoryToken = createToken({\n        name: tokenName,\n        pattern: Lexer.NA,\n        categories: categoryToken ? [categoryToken] : [],\n    });\n    return __assign({}, tokenMap, (_a = {}, _a[tokenName] = iriOrPrefixCategoryToken, _a[iriTokenName] = createToken({\n        name: iriTokenName,\n        pattern: \"<\" + shaclIriNamespace + localName + \">\",\n        categories: [iriOrPrefixCategoryToken, turtleTokenMap.IRIREF],\n    }), _a));\n}, xsdUnprefixedTokenMap);\nvar makePrefixer = function (prefix) { return function (localName) {\n    return prefix + \":\" + localName;\n}; };\n// Retrieves the complete map of all SHACL/XSD tokens, given the SHACL and XSD\n// prefixes. The map contains, for every local name, a token matching the full\n// IRI, a token matching the prefixed local name, and a \"category\" token that\n// matches both. The category token is useful for simplifying parser rules (not\n// having to match every SHACL token as both a full IRI and a prefixed local\n// name.)\n// This function is called by the SHACL parser. It is memoized because the\n// arguments are small and unlikely to change often, and the parser needs to be\n// fast, so we should avoid re-computing.\nexport var getShaclTokenMap = memoize(function (prefixes) {\n    var prefixWithShacl = makePrefixer(prefixes.shacl);\n    var prefixWithXsd = makePrefixer(prefixes.xsd);\n    // Add the prefixed local names to the SHACL token map now that we know the\n    // prefixes.\n    var shaclTokenMap = localNames.reduce(function (tokenMap, localName) {\n        var _a;\n        var tokenName = \"SHACL_\" + localName;\n        var prefixedTokenName = tokenName + \"_prefixed\";\n        return __assign({}, tokenMap, (_a = {}, _a[prefixedTokenName] = createToken({\n            name: prefixedTokenName,\n            pattern: prefixWithShacl(localName),\n            categories: [tokenMap[tokenName], turtleTokenMap.PNAME_LN],\n        }), _a));\n    }, shaclUnprefixedTokenMap);\n    // Add the prefixed local names to the XSD token map now that we know the\n    // prefixes.\n    return xsdLocalNames.reduce(function (tokenMap, localName) {\n        var _a;\n        var tokenName = \"SHACL_xsd_\" + localName;\n        var prefixedTokenName = tokenName + \"_prefixed\";\n        return __assign({}, tokenMap, (_a = {}, _a[prefixedTokenName] = createToken({\n            name: prefixedTokenName,\n            pattern: \"\" + prefixWithXsd(localName),\n            categories: [tokenMap[tokenName], turtleTokenMap.PNAME_LN],\n        }), _a));\n    }, shaclTokenMap);\n}, isDeepEqual);\n// Get the index of PNAME_NS and IRIREF so that we can re-use existing Turtle\n// tokens but ensure that our special SHACL/XSD tokens are inserted at the\n// right place (since order of tokens matters for chevrotain).\nvar pnameIndex = turtleTokenTypes.indexOf(sparqlTokenMap.PNAME_NS);\nvar iriIndex = turtleTokenTypes.indexOf(turtleTokenMap.IRIREF);\n// tokenMap keys will need to be sorted in reverse order so that tokens with\n// partial overlap are in the right order in the TokenType array.\nvar reverseSort = function (a, b) {\n    // @ts-ignore: unused variable\n    var _a = a.split('_'), aIgnored = _a[0], aName = _a[1], aRemainder = _a.slice(2);\n    // @ts-ignore: unused variable\n    var _b = b.split('_'), bIgnored = _b[0], bName = _b[1], bRemainder = _b.slice(2);\n    // Grab the local name and lowercase it:\n    var aSortString = (aName === 'xsd' ? aRemainder[0] : aName).toLowerCase();\n    var bSortString = (bName === 'xsd' ? bRemainder[0] : bName).toLowerCase();\n    if (aSortString === bSortString) {\n        // If local names are identical, prefer the one without a suffix to those with suffixes.\n        var aSuffix = aName === 'xsd' ? aRemainder[1] : aRemainder[0];\n        var bSuffix = bName === 'xsd' ? bRemainder[1] : bRemainder[0];\n        if (aSuffix && bSuffix) {\n            return 0; // when both local names have suffixes, treat as lexicographically the same for sorting\n        }\n        else {\n            return aSuffix ? 1 : -1;\n        }\n    }\n    else {\n        return aSortString < bSortString ? 1 : bSortString < aSortString ? -1 : 0;\n    }\n};\n// Given SHACL and XSD prefixes, this method returns an array of Turtle +\n// SHACL/XSD tokens, including tokens for prefixed local names, with the\n// SHACL/XSD tokens inserted at the proper positions so that they are matched\n// before the more generic Turtle tokens.\nexport var getShaclTokenTypes = memoize(function (prefixes) {\n    var tokenMap = getShaclTokenMap(prefixes);\n    var _a = Object.keys(tokenMap)\n        .sort(reverseSort)\n        .reduce(function (accumulator, key) {\n        if (key.endsWith('_IRI')) {\n            if (iriIndex < pnameIndex) {\n                accumulator.iriTokens.push(tokenMap[key.slice(0, -4)]);\n            }\n            accumulator.iriTokens.push(tokenMap[key]);\n        }\n        else if (key.endsWith('_prefixed')) {\n            if (pnameIndex < iriIndex) {\n                accumulator.pnameTokens.push(tokenMap[key.slice(0, -9)]);\n            }\n            accumulator.pnameTokens.push(tokenMap[key]);\n        }\n        return accumulator;\n    }, { pnameTokens: [], iriTokens: [] }), pnameTokens = _a.pnameTokens, iriTokens = _a.iriTokens;\n    if (pnameIndex < iriIndex) {\n        return turtleTokenTypes.slice(0, pnameIndex).concat(categoryTokens, pnameTokens, turtleTokenTypes.slice(pnameIndex, iriIndex), iriTokens, turtleTokenTypes.slice(iriIndex));\n    }\n    else {\n        return turtleTokenTypes.slice(0, iriIndex).concat(categoryTokens, iriTokens, turtleTokenTypes.slice(iriIndex, pnameIndex), pnameTokens, turtleTokenTypes.slice(pnameIndex));\n    }\n}, isDeepEqual);\n", "var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { StardogSparqlParser } from '../sparql/StardogSparqlParser';\nimport { getFirstChildCstElementByRuleStack, isIToken, } from 'helpers/chevrotain/cst';\nimport { graphQlUtils } from 'graphql/utils';\nvar getArgumentNodes = graphQlUtils.getArgumentNodes, getArgumentTokenTypesForDirectiveNameToken = graphQlUtils.getArgumentTokenTypesForDirectiveNameToken, isSparqlReceivingStardogDirective = graphQlUtils.isSparqlReceivingStardogDirective;\nfunction parseSparqlExpression(stringValueToken, stardogSparqlParser) {\n    var innerExpressionImage = stringValueToken.image.slice(1, -1); // remove quotes\n    return stardogSparqlParser.parse(innerExpressionImage, stardogSparqlParser.Expression);\n}\n// Make the embedded SPARQL errors have proper locations for use in error\n// diagnostics. NOTE: This does NOT modify the locations of the error's\n// `previousToken` property. If that ends up being needed, it's a TODO.\nfunction mapSparqlErrors(sparqlErrors, tokenForOffset, offsetPadding) {\n    if (offsetPadding === void 0) { offsetPadding = 0; }\n    var tokenStartOffset = tokenForOffset.startOffset, tokenEndOffset = tokenForOffset.endOffset, tokenStartColumn = tokenForOffset.startColumn, tokenEndColumn = tokenForOffset.endColumn;\n    return sparqlErrors.map(function (error) {\n        var token = error.token;\n        var errorStartOffset = token.startOffset, errorEndOffset = token.endOffset, errorStartColumn = token.startColumn, errorEndColumn = token.endColumn;\n        return __assign({}, error, { token: __assign({}, token, { \n                // error token's offsets might be set explicitly to null\n                startOffset: tokenStartOffset + (errorStartOffset || 0) + offsetPadding, endOffset: tokenEndOffset + (errorEndOffset || 0) + offsetPadding, startColumn: tokenStartColumn + (errorStartColumn || 0) + offsetPadding, endColumn: tokenEndColumn + (errorEndColumn || 0) + offsetPadding, startLine: tokenForOffset.startLine, endLine: tokenForOffset.endLine }) });\n    });\n}\n// Checks that the right number of arguments are supplied, accumulating errors\n// otherwise.\nfunction validateDirectiveArgumentsArity(_a) {\n    var allowedArgumentTokenTypes = _a.allowedArgumentTokenTypes, directiveImage = _a.directiveImage, errorAccumulator = _a.errorAccumulator, numMinimumArguments = _a.numMinimumArguments, suppliedArgumentNodes = _a.suppliedArgumentNodes;\n    var numSuppliedArguments = suppliedArgumentNodes.length;\n    var numAllowedArguments = allowedArgumentTokenTypes.length;\n    var validArgumentsPhrase = \"valid arguments: \" + allowedArgumentTokenTypes\n        .map(function (argumentTokenType) { return \"`\" + argumentTokenType.PATTERN + \"`\"; })\n        .join(', ');\n    var errorTypeName = 'ArgumentArityError';\n    if (numSuppliedArguments < numMinimumArguments) {\n        var requiresPhrase = \"requires \" + numMinimumArguments + \" argument\" + (numMinimumArguments > 1 ? 's' : '');\n        errorAccumulator.stardogGraphQlErrors.push({\n            name: errorTypeName,\n            message: \"The \" + directiveImage + \" directive \" + requiresPhrase + \" (\" + validArgumentsPhrase + \")\",\n        });\n    }\n    else if (numSuppliedArguments > numAllowedArguments) {\n        errorAccumulator.stardogGraphQlErrors.push({\n            name: errorTypeName,\n            message: \"Too many arguments provided to \" + directiveImage + \" directive (\" + validArgumentsPhrase + \")\",\n        });\n    }\n}\n// Checks that the supplied argument names and values conform to the allowed\n// arguments of a directive and have valid embedded SPARQL.\nfunction validateDirectiveArgumentsNameAndValue(_a) {\n    var allowedArgumentTokenTypes = _a.allowedArgumentTokenTypes, directiveImage = _a.directiveImage, errorAccumulator = _a.errorAccumulator, sparqlParser = _a.sparqlParser, suppliedArgumentNodes = _a.suppliedArgumentNodes;\n    var validArgumentsPhrase = \"valid arguments: \" + allowedArgumentTokenTypes\n        .map(function (argumentTokenType) { return \"`\" + argumentTokenType.PATTERN + \"`\"; })\n        .join(', ');\n    suppliedArgumentNodes.forEach(function (argumentNode) {\n        var _a;\n        var argumentNameToken = getFirstChildCstElementByRuleStack(['Alias', 'Name'], argumentNode);\n        if (!isIToken(argumentNameToken)) {\n            // This should never be an actual possibility, but we'll be safe in\n            // case it somehow occurs.\n            return;\n        }\n        var argumentTokenTypeName = argumentNameToken.tokenType.name;\n        var isAllowedArgument = allowedArgumentTokenTypes.some(function (argumentTokenType) { return argumentTokenType.name === argumentTokenTypeName; });\n        if (!isAllowedArgument) {\n            errorAccumulator.stardogGraphQlErrors.push({\n                name: 'InvalidArgumentError',\n                message: \"Invalid argument `\" + argumentNameToken.image + \"` for \" + directiveImage + \" directive (\" + validArgumentsPhrase + \")\",\n            });\n        }\n        else {\n            // For allowed arguments, we provide embedded SPARQL parsing. Note\n            // again that we are currently *only* handling Stardog-specific\n            // directives that receive SPARQL here.\n            var argumentStringValueToken = getFirstChildCstElementByRuleStack(['Value', 'StringValue', 'StringValueToken'], argumentNode);\n            if (!isIToken(argumentStringValueToken)) {\n                // As noted above, we are currently only checking string arguments to\n                // ensure they parse as valid SPARQL expressions. We bail on\n                // non-strings.\n                return;\n            }\n            var errors = parseSparqlExpression(argumentStringValueToken, sparqlParser).errors;\n            // Possible future TODO: replace the CST nodes with those returned\n            // from the stardogSparqlParser, like we do for the IfClause and\n            // ThenClause in the SRS Parser\n            if (errors.length > 0) {\n                (_a = errorAccumulator.sparqlErrors).push.apply(_a, mapSparqlErrors(errors, argumentStringValueToken, 1));\n            }\n        }\n    });\n}\nfunction validateDirectiveArguments(_a) {\n    var validatorOptions = _a.validatorOptions, validators = _a.validators;\n    validators.forEach(function (validator) { return validator(validatorOptions); });\n}\n// Delegates to the appropriate validator for a specific directive.\nfunction validateSuppliedArgumentsForDirective(suppliedArgumentNodes, directiveNameToken, sparqlParser) {\n    var errorAccumulator = {\n        stardogGraphQlErrors: [],\n        sparqlErrors: [],\n    };\n    var allowedArgumentTokenTypes = getArgumentTokenTypesForDirectiveNameToken(directiveNameToken);\n    var directiveImage = directiveNameToken.tokenType.PATTERN;\n    validateDirectiveArguments({\n        validatorOptions: {\n            allowedArgumentTokenTypes: allowedArgumentTokenTypes,\n            directiveImage: directiveImage,\n            errorAccumulator: errorAccumulator,\n            numMinimumArguments: 1,\n            sparqlParser: sparqlParser,\n            suppliedArgumentNodes: suppliedArgumentNodes,\n        },\n        // We do things this way to be \"forward-looking.\" In the future, we may\n        // want to define custom validators for certain directives that have\n        // special rules. In that case, we could add custom validators here based\n        // on the type of the `directiveNameToken`.\n        validators: [\n            validateDirectiveArgumentsArity,\n            validateDirectiveArgumentsNameAndValue,\n        ],\n    });\n    return errorAccumulator;\n}\n// Returns a custom visitor that extends the BaseVisitor for the\n// StardogGraphQlParser. When the visitor encounters any custom Stardog\n// directive that can contain a SPARQL expression, it locates the expression\n// and ensures that it parses as valid SPARQL (by delegating to the\n// StardogSparqlParser). Similarly, the visitor applies some special checks\n// (with corresponding error messages) for Stardog-specific GraphQL directives\n// that are not built into the GraphQL grammar itself.\nexport var getStardogGraphQlVisitor = function (BaseVisitor, parserInstance) {\n    var stardogSparqlParser = new StardogSparqlParser(); // for parsing embedded SPARQL;\n    var StardogGraphQlVisitor = /** @class */ (function (_super) {\n        __extends(StardogGraphQlVisitor, _super);\n        function StardogGraphQlVisitor() {\n            var _this = _super.call(this) || this;\n            _this.sparqlErrors = [];\n            _this.stardogGraphQlErrors = [];\n            _this.visit = function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                _super.prototype.visit.apply(_this, args);\n                return {\n                    sparqlErrors: _this.sparqlErrors,\n                    stardogGraphQlErrors: _this.stardogGraphQlErrors,\n                };\n            };\n            _this.Directive = function (ctx) {\n                var _a, _b;\n                if (!ctx.Name || !ctx.Name[0]) {\n                    // Somehow we have a directive with no Name token. This shouldn't be\n                    // possible, but we check just to be safe (and bail otherwise).\n                    return;\n                }\n                var directiveNameToken = ctx.Name[0];\n                // NOTE: We currently only provide special handling for Stardog-specific\n                // directives that accept SPARQL, so we bail early in all other cases.\n                // We may want to expand this later.\n                if (!isSparqlReceivingStardogDirective(directiveNameToken)) {\n                    return;\n                }\n                var suppliedArguments = getArgumentNodes(ctx);\n                var accumulatedErrors = validateSuppliedArgumentsForDirective(suppliedArguments, directiveNameToken, stardogSparqlParser);\n                if (accumulatedErrors.stardogGraphQlErrors.length > 0) {\n                    // The accumulated errors up to this point do not have stack\n                    // information. We add it here (only once, for performance reasons).\n                    var ruleStack_1 = parserInstance.getHumanReadableRuleStack();\n                    var ruleOccurrenceStack_1 = parserInstance\n                        .RULE_OCCURRENCE_STACK;\n                    (_a = _this.stardogGraphQlErrors).push.apply(_a, accumulatedErrors.stardogGraphQlErrors.map(function (partialError) { return (__assign({}, partialError, { token: directiveNameToken, context: {\n                            ruleStack: ruleStack_1,\n                            ruleOccurrenceStack: ruleOccurrenceStack_1,\n                        }, resyncedTokens: [] })); }));\n                }\n                (_b = _this.sparqlErrors).push.apply(_b, accumulatedErrors.sparqlErrors.map(function (sparqlError) { return (__assign({}, sparqlError, { name: \"SPARQL Error: \" + sparqlError.name })); }));\n            };\n            _this.$resetState = function () {\n                _this.stardogGraphQlErrors = [];\n                _this.sparqlErrors = [];\n            };\n            _this.validateVisitor();\n            return _this;\n        }\n        return StardogGraphQlVisitor;\n    }(BaseVisitor));\n    return new StardogGraphQlVisitor();\n};\n", "var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar stardogGraphQlTokens = require('./tokens').stardogGraphQlTokens;\nimport { BaseGraphQlParser } from './BaseGraphQlParser';\nimport { getStardogGraphQlVisitor } from 'graphql/StardogGraphQlVisitor';\nvar StardogGraphQlParser = /** @class */ (function (_super) {\n    __extends(StardogGraphQlParser, _super);\n    function StardogGraphQlParser(options) {\n        var _this = _super.call(this, options, stardogGraphQlTokens) || this;\n        _this.visitCst = function (cst) {\n            // To save resources while parsing, the visitor is a singleton.\n            if (!_this.stardogGraphQlVisitor) {\n                var BaseStardogGraphQlVisitor = _this.getBaseCstVisitorConstructorWithDefaults();\n                _this.stardogGraphQlVisitor = getStardogGraphQlVisitor(BaseStardogGraphQlVisitor, _this);\n            }\n            else {\n                _this.stardogGraphQlVisitor.$resetState();\n            }\n            return _this.stardogGraphQlVisitor.visit(cst, _this.input);\n        };\n        _this.parse = function (document, entryRule) {\n            if (entryRule === void 0) { entryRule = _this.Document; }\n            _this.input = _this.tokenize(document);\n            var cst = entryRule.call(_this);\n            var _a = _this.visitCst(cst), sparqlErrors = _a.sparqlErrors, stardogGraphQlErrors = _a.stardogGraphQlErrors;\n            var graphQlErrors = _this.errors;\n            return {\n                errors: graphQlErrors.concat(stardogGraphQlErrors, sparqlErrors),\n                cst: cst,\n            };\n        };\n        _this.performSelfAnalysis();\n        return _this;\n    }\n    return StardogGraphQlParser;\n}(BaseGraphQlParser));\nexport { StardogGraphQlParser };\n", "'use strict';\n\nconst matchOperatorsRegex = /[|\\\\{}()[\\]^$+*?.-]/g;\n\nmodule.exports = string => {\n\tif (typeof string !== 'string') {\n\t\tthrow new TypeError('Expected a string');\n\t}\n\n\treturn string.replace(matchOperatorsRegex, '\\\\$&');\n};\n", "var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n", "module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n", "export * from './sparql/BaseSparqlParser';\nexport * from './sparql/StardogSparqlParser';\nexport * from './sparql/W3SpecSparqlParser';\nexport * from './turtle/TurtleParser';\nexport * from './srs/SrsParser';\nexport * from './trig/TrigParser';\nexport * from './sms/SmsParser';\nexport * from './shacl/ShaclParser';\nexport * from './graphql/BaseGraphQlParser';\nexport * from './graphql/StandardGraphQlParser';\nexport * from './graphql/StardogGraphQlParser';\nexport * from './graphql/utils';\nexport * from './helpers/chevrotain/cst';\nexport * from './helpers/chevrotain/types';\n// Convenience imports/exports that aren't core functionality:\n// NOTE: Tokens MUST be imported using CommonJS syntax; see here: https://github.com/SAP/chevrotain/issues/345\nvar sparqlTokens = require('./sparql/tokens');\nvar turtleTokens = require('./turtle/tokens');\nvar srsTokens = require('./srs/tokens');\nvar trigTokens = require('./trig/tokens');\nvar smsTokens = require('./sms/tokens');\nvar shaclTokens = require('./shacl/tokens');\nvar graphQlTokens = require('./graphql/tokens');\nimport { keywords as sparqlKeywords } from './sparql/keywords';\nimport { terminals as sparqlTerminals } from './sparql/terminals';\nimport * as matchers from './helpers/matchers';\nexport { sparqlTokens, turtleTokens, srsTokens, trigTokens, smsTokens, shaclTokens, graphQlTokens, sparqlKeywords, sparqlTerminals, matchers, };\n", "\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.asPromise = exports.thenable = exports.typedArray = exports.stringArray = exports.array = exports.func = exports.error = exports.number = exports.string = exports.boolean = void 0;\nfunction boolean(value) {\n    return value === true || value === false;\n}\nexports.boolean = boolean;\nfunction string(value) {\n    return typeof value === 'string' || value instanceof String;\n}\nexports.string = string;\nfunction number(value) {\n    return typeof value === 'number' || value instanceof Number;\n}\nexports.number = number;\nfunction error(value) {\n    return value instanceof Error;\n}\nexports.error = error;\nfunction func(value) {\n    return typeof value === 'function';\n}\nexports.func = func;\nfunction array(value) {\n    return Array.isArray(value);\n}\nexports.array = array;\nfunction stringArray(value) {\n    return array(value) && value.every(elem => string(elem));\n}\nexports.stringArray = stringArray;\nfunction typedArray(value, check) {\n    return Array.isArray(value) && value.every(check);\n}\nexports.typedArray = typedArray;\nfunction thenable(value) {\n    return value && func(value.then);\n}\nexports.thenable = thenable;\nfunction asPromise(value) {\n    if (value instanceof Promise) {\n        return value;\n    }\n    else if (thenable(value)) {\n        return new Promise((resolve, reject) => {\n            value.then((resolved) => resolve(resolved), (error) => reject(error));\n        });\n    }\n    else {\n        return Promise.resolve(value);\n    }\n}\nexports.asPromise = asPromise;\n", "\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.stringArray = exports.array = exports.func = exports.error = exports.number = exports.string = exports.boolean = void 0;\nfunction boolean(value) {\n    return value === true || value === false;\n}\nexports.boolean = boolean;\nfunction string(value) {\n    return typeof value === 'string' || value instanceof String;\n}\nexports.string = string;\nfunction number(value) {\n    return typeof value === 'number' || value instanceof Number;\n}\nexports.number = number;\nfunction error(value) {\n    return value instanceof Error;\n}\nexports.error = error;\nfunction func(value) {\n    return typeof value === 'function';\n}\nexports.func = func;\nfunction array(value) {\n    return Array.isArray(value);\n}\nexports.array = array;\nfunction stringArray(value) {\n    return array(value) && value.every(elem => string(elem));\n}\nexports.stringArray = stringArray;\n", "\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Message = exports.NotificationType9 = exports.NotificationType8 = exports.NotificationType7 = exports.NotificationType6 = exports.NotificationType5 = exports.NotificationType4 = exports.NotificationType3 = exports.NotificationType2 = exports.NotificationType1 = exports.NotificationType0 = exports.NotificationType = exports.RequestType9 = exports.RequestType8 = exports.RequestType7 = exports.RequestType6 = exports.RequestType5 = exports.RequestType4 = exports.RequestType3 = exports.RequestType2 = exports.RequestType1 = exports.RequestType = exports.RequestType0 = exports.AbstractMessageSignature = exports.ParameterStructures = exports.ResponseError = exports.ErrorCodes = void 0;\nconst is = require(\"./is\");\n/**\n * Predefined error codes.\n */\nvar ErrorCodes;\n(function (ErrorCodes) {\n    // Defined by JSON RPC\n    ErrorCodes.ParseError = -32700;\n    ErrorCodes.InvalidRequest = -32600;\n    ErrorCodes.MethodNotFound = -32601;\n    ErrorCodes.InvalidParams = -32602;\n    ErrorCodes.InternalError = -32603;\n    /**\n     * This is the start range of JSON RPC reserved error codes.\n     * It doesn't denote a real error code. No application error codes should\n     * be defined between the start and end range. For backwards\n     * compatibility the `ServerNotInitialized` and the `UnknownErrorCode`\n     * are left in the range.\n     *\n     * @since 3.16.0\n    */\n    ErrorCodes.jsonrpcReservedErrorRangeStart = -32099;\n    /** @deprecated use  jsonrpcReservedErrorRangeStart */\n    ErrorCodes.serverErrorStart = -32099;\n    /**\n     * An error occurred when write a message to the transport layer.\n     */\n    ErrorCodes.MessageWriteError = -32099;\n    /**\n     * An error occurred when reading a message from the transport layer.\n     */\n    ErrorCodes.MessageReadError = -32098;\n    /**\n     * The connection got disposed or lost and all pending responses got\n     * rejected.\n     */\n    ErrorCodes.PendingResponseRejected = -32097;\n    /**\n     * The connection is inactive and a use of it failed.\n     */\n    ErrorCodes.ConnectionInactive = -32096;\n    /**\n     * Error code indicating that a server received a notification or\n     * request before the server has received the `initialize` request.\n     */\n    ErrorCodes.ServerNotInitialized = -32002;\n    ErrorCodes.UnknownErrorCode = -32001;\n    /**\n     * This is the end range of JSON RPC reserved error codes.\n     * It doesn't denote a real error code.\n     *\n     * @since 3.16.0\n    */\n    ErrorCodes.jsonrpcReservedErrorRangeEnd = -32000;\n    /** @deprecated use  jsonrpcReservedErrorRangeEnd */\n    ErrorCodes.serverErrorEnd = -32000;\n})(ErrorCodes || (exports.ErrorCodes = ErrorCodes = {}));\n/**\n * An error object return in a response in case a request\n * has failed.\n */\nclass ResponseError extends Error {\n    constructor(code, message, data) {\n        super(message);\n        this.code = is.number(code) ? code : ErrorCodes.UnknownErrorCode;\n        this.data = data;\n        Object.setPrototypeOf(this, ResponseError.prototype);\n    }\n    toJson() {\n        const result = {\n            code: this.code,\n            message: this.message\n        };\n        if (this.data !== undefined) {\n            result.data = this.data;\n        }\n        return result;\n    }\n}\nexports.ResponseError = ResponseError;\nclass ParameterStructures {\n    constructor(kind) {\n        this.kind = kind;\n    }\n    static is(value) {\n        return value === ParameterStructures.auto || value === ParameterStructures.byName || value === ParameterStructures.byPosition;\n    }\n    toString() {\n        return this.kind;\n    }\n}\nexports.ParameterStructures = ParameterStructures;\n/**\n * The parameter structure is automatically inferred on the number of parameters\n * and the parameter type in case of a single param.\n */\nParameterStructures.auto = new ParameterStructures('auto');\n/**\n * Forces `byPosition` parameter structure. This is useful if you have a single\n * parameter which has a literal type.\n */\nParameterStructures.byPosition = new ParameterStructures('byPosition');\n/**\n * Forces `byName` parameter structure. This is only useful when having a single\n * parameter. The library will report errors if used with a different number of\n * parameters.\n */\nParameterStructures.byName = new ParameterStructures('byName');\n/**\n * An abstract implementation of a MessageType.\n */\nclass AbstractMessageSignature {\n    constructor(method, numberOfParams) {\n        this.method = method;\n        this.numberOfParams = numberOfParams;\n    }\n    get parameterStructures() {\n        return ParameterStructures.auto;\n    }\n}\nexports.AbstractMessageSignature = AbstractMessageSignature;\n/**\n * Classes to type request response pairs\n */\nclass RequestType0 extends AbstractMessageSignature {\n    constructor(method) {\n        super(method, 0);\n    }\n}\nexports.RequestType0 = RequestType0;\nclass RequestType extends AbstractMessageSignature {\n    constructor(method, _parameterStructures = ParameterStructures.auto) {\n        super(method, 1);\n        this._parameterStructures = _parameterStructures;\n    }\n    get parameterStructures() {\n        return this._parameterStructures;\n    }\n}\nexports.RequestType = RequestType;\nclass RequestType1 extends AbstractMessageSignature {\n    constructor(method, _parameterStructures = ParameterStructures.auto) {\n        super(method, 1);\n        this._parameterStructures = _parameterStructures;\n    }\n    get parameterStructures() {\n        return this._parameterStructures;\n    }\n}\nexports.RequestType1 = RequestType1;\nclass RequestType2 extends AbstractMessageSignature {\n    constructor(method) {\n        super(method, 2);\n    }\n}\nexports.RequestType2 = RequestType2;\nclass RequestType3 extends AbstractMessageSignature {\n    constructor(method) {\n        super(method, 3);\n    }\n}\nexports.RequestType3 = RequestType3;\nclass RequestType4 extends AbstractMessageSignature {\n    constructor(method) {\n        super(method, 4);\n    }\n}\nexports.RequestType4 = RequestType4;\nclass RequestType5 extends AbstractMessageSignature {\n    constructor(method) {\n        super(method, 5);\n    }\n}\nexports.RequestType5 = RequestType5;\nclass RequestType6 extends AbstractMessageSignature {\n    constructor(method) {\n        super(method, 6);\n    }\n}\nexports.RequestType6 = RequestType6;\nclass RequestType7 extends AbstractMessageSignature {\n    constructor(method) {\n        super(method, 7);\n    }\n}\nexports.RequestType7 = RequestType7;\nclass RequestType8 extends AbstractMessageSignature {\n    constructor(method) {\n        super(method, 8);\n    }\n}\nexports.RequestType8 = RequestType8;\nclass RequestType9 extends AbstractMessageSignature {\n    constructor(method) {\n        super(method, 9);\n    }\n}\nexports.RequestType9 = RequestType9;\nclass NotificationType extends AbstractMessageSignature {\n    constructor(method, _parameterStructures = ParameterStructures.auto) {\n        super(method, 1);\n        this._parameterStructures = _parameterStructures;\n    }\n    get parameterStructures() {\n        return this._parameterStructures;\n    }\n}\nexports.NotificationType = NotificationType;\nclass NotificationType0 extends AbstractMessageSignature {\n    constructor(method) {\n        super(method, 0);\n    }\n}\nexports.NotificationType0 = NotificationType0;\nclass NotificationType1 extends AbstractMessageSignature {\n    constructor(method, _parameterStructures = ParameterStructures.auto) {\n        super(method, 1);\n        this._parameterStructures = _parameterStructures;\n    }\n    get parameterStructures() {\n        return this._parameterStructures;\n    }\n}\nexports.NotificationType1 = NotificationType1;\nclass NotificationType2 extends AbstractMessageSignature {\n    constructor(method) {\n        super(method, 2);\n    }\n}\nexports.NotificationType2 = NotificationType2;\nclass NotificationType3 extends AbstractMessageSignature {\n    constructor(method) {\n        super(method, 3);\n    }\n}\nexports.NotificationType3 = NotificationType3;\nclass NotificationType4 extends AbstractMessageSignature {\n    constructor(method) {\n        super(method, 4);\n    }\n}\nexports.NotificationType4 = NotificationType4;\nclass NotificationType5 extends AbstractMessageSignature {\n    constructor(method) {\n        super(method, 5);\n    }\n}\nexports.NotificationType5 = NotificationType5;\nclass NotificationType6 extends AbstractMessageSignature {\n    constructor(method) {\n        super(method, 6);\n    }\n}\nexports.NotificationType6 = NotificationType6;\nclass NotificationType7 extends AbstractMessageSignature {\n    constructor(method) {\n        super(method, 7);\n    }\n}\nexports.NotificationType7 = NotificationType7;\nclass NotificationType8 extends AbstractMessageSignature {\n    constructor(method) {\n        super(method, 8);\n    }\n}\nexports.NotificationType8 = NotificationType8;\nclass NotificationType9 extends AbstractMessageSignature {\n    constructor(method) {\n        super(method, 9);\n    }\n}\nexports.NotificationType9 = NotificationType9;\nvar Message;\n(function (Message) {\n    /**\n     * Tests if the given message is a request message\n     */\n    function isRequest(message) {\n        const candidate = message;\n        return candidate && is.string(candidate.method) && (is.string(candidate.id) || is.number(candidate.id));\n    }\n    Message.isRequest = isRequest;\n    /**\n     * Tests if the given message is a notification message\n     */\n    function isNotification(message) {\n        const candidate = message;\n        return candidate && is.string(candidate.method) && message.id === void 0;\n    }\n    Message.isNotification = isNotification;\n    /**\n     * Tests if the given message is a response message\n     */\n    function isResponse(message) {\n        const candidate = message;\n        return candidate && (candidate.result !== void 0 || !!candidate.error) && (is.string(candidate.id) || is.number(candidate.id) || candidate.id === null);\n    }\n    Message.isResponse = isResponse;\n})(Message || (exports.Message = Message = {}));\n", "\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar _a;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LRUCache = exports.LinkedMap = exports.Touch = void 0;\nvar Touch;\n(function (Touch) {\n    Touch.None = 0;\n    Touch.First = 1;\n    Touch.AsOld = Touch.First;\n    Touch.Last = 2;\n    Touch.AsNew = Touch.Last;\n})(Touch || (exports.Touch = Touch = {}));\nclass LinkedMap {\n    constructor() {\n        this[_a] = 'LinkedMap';\n        this._map = new Map();\n        this._head = undefined;\n        this._tail = undefined;\n        this._size = 0;\n        this._state = 0;\n    }\n    clear() {\n        this._map.clear();\n        this._head = undefined;\n        this._tail = undefined;\n        this._size = 0;\n        this._state++;\n    }\n    isEmpty() {\n        return !this._head && !this._tail;\n    }\n    get size() {\n        return this._size;\n    }\n    get first() {\n        return this._head?.value;\n    }\n    get last() {\n        return this._tail?.value;\n    }\n    has(key) {\n        return this._map.has(key);\n    }\n    get(key, touch = Touch.None) {\n        const item = this._map.get(key);\n        if (!item) {\n            return undefined;\n        }\n        if (touch !== Touch.None) {\n            this.touch(item, touch);\n        }\n        return item.value;\n    }\n    set(key, value, touch = Touch.None) {\n        let item = this._map.get(key);\n        if (item) {\n            item.value = value;\n            if (touch !== Touch.None) {\n                this.touch(item, touch);\n            }\n        }\n        else {\n            item = { key, value, next: undefined, previous: undefined };\n            switch (touch) {\n                case Touch.None:\n                    this.addItemLast(item);\n                    break;\n                case Touch.First:\n                    this.addItemFirst(item);\n                    break;\n                case Touch.Last:\n                    this.addItemLast(item);\n                    break;\n                default:\n                    this.addItemLast(item);\n                    break;\n            }\n            this._map.set(key, item);\n            this._size++;\n        }\n        return this;\n    }\n    delete(key) {\n        return !!this.remove(key);\n    }\n    remove(key) {\n        const item = this._map.get(key);\n        if (!item) {\n            return undefined;\n        }\n        this._map.delete(key);\n        this.removeItem(item);\n        this._size--;\n        return item.value;\n    }\n    shift() {\n        if (!this._head && !this._tail) {\n            return undefined;\n        }\n        if (!this._head || !this._tail) {\n            throw new Error('Invalid list');\n        }\n        const item = this._head;\n        this._map.delete(item.key);\n        this.removeItem(item);\n        this._size--;\n        return item.value;\n    }\n    forEach(callbackfn, thisArg) {\n        const state = this._state;\n        let current = this._head;\n        while (current) {\n            if (thisArg) {\n                callbackfn.bind(thisArg)(current.value, current.key, this);\n            }\n            else {\n                callbackfn(current.value, current.key, this);\n            }\n            if (this._state !== state) {\n                throw new Error(`LinkedMap got modified during iteration.`);\n            }\n            current = current.next;\n        }\n    }\n    keys() {\n        const state = this._state;\n        let current = this._head;\n        const iterator = {\n            [Symbol.iterator]: () => {\n                return iterator;\n            },\n            next: () => {\n                if (this._state !== state) {\n                    throw new Error(`LinkedMap got modified during iteration.`);\n                }\n                if (current) {\n                    const result = { value: current.key, done: false };\n                    current = current.next;\n                    return result;\n                }\n                else {\n                    return { value: undefined, done: true };\n                }\n            }\n        };\n        return iterator;\n    }\n    values() {\n        const state = this._state;\n        let current = this._head;\n        const iterator = {\n            [Symbol.iterator]: () => {\n                return iterator;\n            },\n            next: () => {\n                if (this._state !== state) {\n                    throw new Error(`LinkedMap got modified during iteration.`);\n                }\n                if (current) {\n                    const result = { value: current.value, done: false };\n                    current = current.next;\n                    return result;\n                }\n                else {\n                    return { value: undefined, done: true };\n                }\n            }\n        };\n        return iterator;\n    }\n    entries() {\n        const state = this._state;\n        let current = this._head;\n        const iterator = {\n            [Symbol.iterator]: () => {\n                return iterator;\n            },\n            next: () => {\n                if (this._state !== state) {\n                    throw new Error(`LinkedMap got modified during iteration.`);\n                }\n                if (current) {\n                    const result = { value: [current.key, current.value], done: false };\n                    current = current.next;\n                    return result;\n                }\n                else {\n                    return { value: undefined, done: true };\n                }\n            }\n        };\n        return iterator;\n    }\n    [(_a = Symbol.toStringTag, Symbol.iterator)]() {\n        return this.entries();\n    }\n    trimOld(newSize) {\n        if (newSize >= this.size) {\n            return;\n        }\n        if (newSize === 0) {\n            this.clear();\n            return;\n        }\n        let current = this._head;\n        let currentSize = this.size;\n        while (current && currentSize > newSize) {\n            this._map.delete(current.key);\n            current = current.next;\n            currentSize--;\n        }\n        this._head = current;\n        this._size = currentSize;\n        if (current) {\n            current.previous = undefined;\n        }\n        this._state++;\n    }\n    addItemFirst(item) {\n        // First time Insert\n        if (!this._head && !this._tail) {\n            this._tail = item;\n        }\n        else if (!this._head) {\n            throw new Error('Invalid list');\n        }\n        else {\n            item.next = this._head;\n            this._head.previous = item;\n        }\n        this._head = item;\n        this._state++;\n    }\n    addItemLast(item) {\n        // First time Insert\n        if (!this._head && !this._tail) {\n            this._head = item;\n        }\n        else if (!this._tail) {\n            throw new Error('Invalid list');\n        }\n        else {\n            item.previous = this._tail;\n            this._tail.next = item;\n        }\n        this._tail = item;\n        this._state++;\n    }\n    removeItem(item) {\n        if (item === this._head && item === this._tail) {\n            this._head = undefined;\n            this._tail = undefined;\n        }\n        else if (item === this._head) {\n            // This can only happened if size === 1 which is handle\n            // by the case above.\n            if (!item.next) {\n                throw new Error('Invalid list');\n            }\n            item.next.previous = undefined;\n            this._head = item.next;\n        }\n        else if (item === this._tail) {\n            // This can only happened if size === 1 which is handle\n            // by the case above.\n            if (!item.previous) {\n                throw new Error('Invalid list');\n            }\n            item.previous.next = undefined;\n            this._tail = item.previous;\n        }\n        else {\n            const next = item.next;\n            const previous = item.previous;\n            if (!next || !previous) {\n                throw new Error('Invalid list');\n            }\n            next.previous = previous;\n            previous.next = next;\n        }\n        item.next = undefined;\n        item.previous = undefined;\n        this._state++;\n    }\n    touch(item, touch) {\n        if (!this._head || !this._tail) {\n            throw new Error('Invalid list');\n        }\n        if ((touch !== Touch.First && touch !== Touch.Last)) {\n            return;\n        }\n        if (touch === Touch.First) {\n            if (item === this._head) {\n                return;\n            }\n            const next = item.next;\n            const previous = item.previous;\n            // Unlink the item\n            if (item === this._tail) {\n                // previous must be defined since item was not head but is tail\n                // So there are more than on item in the map\n                previous.next = undefined;\n                this._tail = previous;\n            }\n            else {\n                // Both next and previous are not undefined since item was neither head nor tail.\n                next.previous = previous;\n                previous.next = next;\n            }\n            // Insert the node at head\n            item.previous = undefined;\n            item.next = this._head;\n            this._head.previous = item;\n            this._head = item;\n            this._state++;\n        }\n        else if (touch === Touch.Last) {\n            if (item === this._tail) {\n                return;\n            }\n            const next = item.next;\n            const previous = item.previous;\n            // Unlink the item.\n            if (item === this._head) {\n                // next must be defined since item was not tail but is head\n                // So there are more than on item in the map\n                next.previous = undefined;\n                this._head = next;\n            }\n            else {\n                // Both next and previous are not undefined since item was neither head nor tail.\n                next.previous = previous;\n                previous.next = next;\n            }\n            item.next = undefined;\n            item.previous = this._tail;\n            this._tail.next = item;\n            this._tail = item;\n            this._state++;\n        }\n    }\n    toJSON() {\n        const data = [];\n        this.forEach((value, key) => {\n            data.push([key, value]);\n        });\n        return data;\n    }\n    fromJSON(data) {\n        this.clear();\n        for (const [key, value] of data) {\n            this.set(key, value);\n        }\n    }\n}\nexports.LinkedMap = LinkedMap;\nclass LRUCache extends LinkedMap {\n    constructor(limit, ratio = 1) {\n        super();\n        this._limit = limit;\n        this._ratio = Math.min(Math.max(0, ratio), 1);\n    }\n    get limit() {\n        return this._limit;\n    }\n    set limit(limit) {\n        this._limit = limit;\n        this.checkTrim();\n    }\n    get ratio() {\n        return this._ratio;\n    }\n    set ratio(ratio) {\n        this._ratio = Math.min(Math.max(0, ratio), 1);\n        this.checkTrim();\n    }\n    get(key, touch = Touch.AsNew) {\n        return super.get(key, touch);\n    }\n    peek(key) {\n        return super.get(key, Touch.None);\n    }\n    set(key, value) {\n        super.set(key, value, Touch.Last);\n        this.checkTrim();\n        return this;\n    }\n    checkTrim() {\n        if (this.size > this._limit) {\n            this.trimOld(Math.round(this._limit * this._ratio));\n        }\n    }\n}\nexports.LRUCache = LRUCache;\n", "\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Disposable = void 0;\nvar Disposable;\n(function (Disposable) {\n    function create(func) {\n        return {\n            dispose: func\n        };\n    }\n    Disposable.create = create;\n})(Disposable || (exports.Disposable = Disposable = {}));\n", "\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nlet _ral;\nfunction RAL() {\n    if (_ral === undefined) {\n        throw new Error(`No runtime abstraction layer installed`);\n    }\n    return _ral;\n}\n(function (RAL) {\n    function install(ral) {\n        if (ral === undefined) {\n            throw new Error(`No runtime abstraction layer provided`);\n        }\n        _ral = ral;\n    }\n    RAL.install = install;\n})(RAL || (RAL = {}));\nexports.default = RAL;\n", "\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Emitter = exports.Event = void 0;\nconst ral_1 = require(\"./ral\");\nvar Event;\n(function (Event) {\n    const _disposable = { dispose() { } };\n    Event.None = function () { return _disposable; };\n})(Event || (exports.Event = Event = {}));\nclass CallbackList {\n    add(callback, context = null, bucket) {\n        if (!this._callbacks) {\n            this._callbacks = [];\n            this._contexts = [];\n        }\n        this._callbacks.push(callback);\n        this._contexts.push(context);\n        if (Array.isArray(bucket)) {\n            bucket.push({ dispose: () => this.remove(callback, context) });\n        }\n    }\n    remove(callback, context = null) {\n        if (!this._callbacks) {\n            return;\n        }\n        let foundCallbackWithDifferentContext = false;\n        for (let i = 0, len = this._callbacks.length; i < len; i++) {\n            if (this._callbacks[i] === callback) {\n                if (this._contexts[i] === context) {\n                    // callback & context match => remove it\n                    this._callbacks.splice(i, 1);\n                    this._contexts.splice(i, 1);\n                    return;\n                }\n                else {\n                    foundCallbackWithDifferentContext = true;\n                }\n            }\n        }\n        if (foundCallbackWithDifferentContext) {\n            throw new Error('When adding a listener with a context, you should remove it with the same context');\n        }\n    }\n    invoke(...args) {\n        if (!this._callbacks) {\n            return [];\n        }\n        const ret = [], callbacks = this._callbacks.slice(0), contexts = this._contexts.slice(0);\n        for (let i = 0, len = callbacks.length; i < len; i++) {\n            try {\n                ret.push(callbacks[i].apply(contexts[i], args));\n            }\n            catch (e) {\n                // eslint-disable-next-line no-console\n                (0, ral_1.default)().console.error(e);\n            }\n        }\n        return ret;\n    }\n    isEmpty() {\n        return !this._callbacks || this._callbacks.length === 0;\n    }\n    dispose() {\n        this._callbacks = undefined;\n        this._contexts = undefined;\n    }\n}\nclass Emitter {\n    constructor(_options) {\n        this._options = _options;\n    }\n    /**\n     * For the public to allow to subscribe\n     * to events from this Emitter\n     */\n    get event() {\n        if (!this._event) {\n            this._event = (listener, thisArgs, disposables) => {\n                if (!this._callbacks) {\n                    this._callbacks = new CallbackList();\n                }\n                if (this._options && this._options.onFirstListenerAdd && this._callbacks.isEmpty()) {\n                    this._options.onFirstListenerAdd(this);\n                }\n                this._callbacks.add(listener, thisArgs);\n                const result = {\n                    dispose: () => {\n                        if (!this._callbacks) {\n                            // disposable is disposed after emitter is disposed.\n                            return;\n                        }\n                        this._callbacks.remove(listener, thisArgs);\n                        result.dispose = Emitter._noop;\n                        if (this._options && this._options.onLastListenerRemove && this._callbacks.isEmpty()) {\n                            this._options.onLastListenerRemove(this);\n                        }\n                    }\n                };\n                if (Array.isArray(disposables)) {\n                    disposables.push(result);\n                }\n                return result;\n            };\n        }\n        return this._event;\n    }\n    /**\n     * To be kept private to fire an event to\n     * subscribers\n     */\n    fire(event) {\n        if (this._callbacks) {\n            this._callbacks.invoke.call(this._callbacks, event);\n        }\n    }\n    dispose() {\n        if (this._callbacks) {\n            this._callbacks.dispose();\n            this._callbacks = undefined;\n        }\n    }\n}\nexports.Emitter = Emitter;\nEmitter._noop = function () { };\n", "\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CancellationTokenSource = exports.CancellationToken = void 0;\nconst ral_1 = require(\"./ral\");\nconst Is = require(\"./is\");\nconst events_1 = require(\"./events\");\nvar CancellationToken;\n(function (CancellationToken) {\n    CancellationToken.None = Object.freeze({\n        isCancellationRequested: false,\n        onCancellationRequested: events_1.Event.None\n    });\n    CancellationToken.Cancelled = Object.freeze({\n        isCancellationRequested: true,\n        onCancellationRequested: events_1.Event.None\n    });\n    function is(value) {\n        const candidate = value;\n        return candidate && (candidate === CancellationToken.None\n            || candidate === CancellationToken.Cancelled\n            || (Is.boolean(candidate.isCancellationRequested) && !!candidate.onCancellationRequested));\n    }\n    CancellationToken.is = is;\n})(CancellationToken || (exports.CancellationToken = CancellationToken = {}));\nconst shortcutEvent = Object.freeze(function (callback, context) {\n    const handle = (0, ral_1.default)().timer.setTimeout(callback.bind(context), 0);\n    return { dispose() { handle.dispose(); } };\n});\nclass MutableToken {\n    constructor() {\n        this._isCancelled = false;\n    }\n    cancel() {\n        if (!this._isCancelled) {\n            this._isCancelled = true;\n            if (this._emitter) {\n                this._emitter.fire(undefined);\n                this.dispose();\n            }\n        }\n    }\n    get isCancellationRequested() {\n        return this._isCancelled;\n    }\n    get onCancellationRequested() {\n        if (this._isCancelled) {\n            return shortcutEvent;\n        }\n        if (!this._emitter) {\n            this._emitter = new events_1.Emitter();\n        }\n        return this._emitter.event;\n    }\n    dispose() {\n        if (this._emitter) {\n            this._emitter.dispose();\n            this._emitter = undefined;\n        }\n    }\n}\nclass CancellationTokenSource {\n    get token() {\n        if (!this._token) {\n            // be lazy and create the token only when\n            // actually needed\n            this._token = new MutableToken();\n        }\n        return this._token;\n    }\n    cancel() {\n        if (!this._token) {\n            // save an object by returning the default\n            // cancelled token when cancellation happens\n            // before someone asks for the token\n            this._token = CancellationToken.Cancelled;\n        }\n        else {\n            this._token.cancel();\n        }\n    }\n    dispose() {\n        if (!this._token) {\n            // ensure to initialize with an empty token if we had none\n            this._token = CancellationToken.None;\n        }\n        else if (this._token instanceof MutableToken) {\n            // actually dispose\n            this._token.dispose();\n        }\n    }\n}\nexports.CancellationTokenSource = CancellationTokenSource;\n", "\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SharedArrayReceiverStrategy = exports.SharedArraySenderStrategy = void 0;\nconst cancellation_1 = require(\"./cancellation\");\nvar CancellationState;\n(function (CancellationState) {\n    CancellationState.Continue = 0;\n    CancellationState.Cancelled = 1;\n})(CancellationState || (CancellationState = {}));\nclass SharedArraySenderStrategy {\n    constructor() {\n        this.buffers = new Map();\n    }\n    enableCancellation(request) {\n        if (request.id === null) {\n            return;\n        }\n        const buffer = new SharedArrayBuffer(4);\n        const data = new Int32Array(buffer, 0, 1);\n        data[0] = CancellationState.Continue;\n        this.buffers.set(request.id, buffer);\n        request.$cancellationData = buffer;\n    }\n    async sendCancellation(_conn, id) {\n        const buffer = this.buffers.get(id);\n        if (buffer === undefined) {\n            return;\n        }\n        const data = new Int32Array(buffer, 0, 1);\n        Atomics.store(data, 0, CancellationState.Cancelled);\n    }\n    cleanup(id) {\n        this.buffers.delete(id);\n    }\n    dispose() {\n        this.buffers.clear();\n    }\n}\nexports.SharedArraySenderStrategy = SharedArraySenderStrategy;\nclass SharedArrayBufferCancellationToken {\n    constructor(buffer) {\n        this.data = new Int32Array(buffer, 0, 1);\n    }\n    get isCancellationRequested() {\n        return Atomics.load(this.data, 0) === CancellationState.Cancelled;\n    }\n    get onCancellationRequested() {\n        throw new Error(`Cancellation over SharedArrayBuffer doesn't support cancellation events`);\n    }\n}\nclass SharedArrayBufferCancellationTokenSource {\n    constructor(buffer) {\n        this.token = new SharedArrayBufferCancellationToken(buffer);\n    }\n    cancel() {\n    }\n    dispose() {\n    }\n}\nclass SharedArrayReceiverStrategy {\n    constructor() {\n        this.kind = 'request';\n    }\n    createCancellationTokenSource(request) {\n        const buffer = request.$cancellationData;\n        if (buffer === undefined) {\n            return new cancellation_1.CancellationTokenSource();\n        }\n        return new SharedArrayBufferCancellationTokenSource(buffer);\n    }\n}\nexports.SharedArrayReceiverStrategy = SharedArrayReceiverStrategy;\n", "\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Semaphore = void 0;\nconst ral_1 = require(\"./ral\");\nclass Semaphore {\n    constructor(capacity = 1) {\n        if (capacity <= 0) {\n            throw new Error('Capacity must be greater than 0');\n        }\n        this._capacity = capacity;\n        this._active = 0;\n        this._waiting = [];\n    }\n    lock(thunk) {\n        return new Promise((resolve, reject) => {\n            this._waiting.push({ thunk, resolve, reject });\n            this.runNext();\n        });\n    }\n    get active() {\n        return this._active;\n    }\n    runNext() {\n        if (this._waiting.length === 0 || this._active === this._capacity) {\n            return;\n        }\n        (0, ral_1.default)().timer.setImmediate(() => this.doRunNext());\n    }\n    doRunNext() {\n        if (this._waiting.length === 0 || this._active === this._capacity) {\n            return;\n        }\n        const next = this._waiting.shift();\n        this._active++;\n        if (this._active > this._capacity) {\n            throw new Error(`To many thunks active`);\n        }\n        try {\n            const result = next.thunk();\n            if (result instanceof Promise) {\n                result.then((value) => {\n                    this._active--;\n                    next.resolve(value);\n                    this.runNext();\n                }, (err) => {\n                    this._active--;\n                    next.reject(err);\n                    this.runNext();\n                });\n            }\n            else {\n                this._active--;\n                next.resolve(result);\n                this.runNext();\n            }\n        }\n        catch (err) {\n            this._active--;\n            next.reject(err);\n            this.runNext();\n        }\n    }\n}\nexports.Semaphore = Semaphore;\n", "\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ReadableStreamMessageReader = exports.AbstractMessageReader = exports.MessageReader = void 0;\nconst ral_1 = require(\"./ral\");\nconst Is = require(\"./is\");\nconst events_1 = require(\"./events\");\nconst semaphore_1 = require(\"./semaphore\");\nvar MessageReader;\n(function (MessageReader) {\n    function is(value) {\n        let candidate = value;\n        return candidate && Is.func(candidate.listen) && Is.func(candidate.dispose) &&\n            Is.func(candidate.onError) && Is.func(candidate.onClose) && Is.func(candidate.onPartialMessage);\n    }\n    MessageReader.is = is;\n})(MessageReader || (exports.MessageReader = MessageReader = {}));\nclass AbstractMessageReader {\n    constructor() {\n        this.errorEmitter = new events_1.Emitter();\n        this.closeEmitter = new events_1.Emitter();\n        this.partialMessageEmitter = new events_1.Emitter();\n    }\n    dispose() {\n        this.errorEmitter.dispose();\n        this.closeEmitter.dispose();\n    }\n    get onError() {\n        return this.errorEmitter.event;\n    }\n    fireError(error) {\n        this.errorEmitter.fire(this.asError(error));\n    }\n    get onClose() {\n        return this.closeEmitter.event;\n    }\n    fireClose() {\n        this.closeEmitter.fire(undefined);\n    }\n    get onPartialMessage() {\n        return this.partialMessageEmitter.event;\n    }\n    firePartialMessage(info) {\n        this.partialMessageEmitter.fire(info);\n    }\n    asError(error) {\n        if (error instanceof Error) {\n            return error;\n        }\n        else {\n            return new Error(`Reader received error. Reason: ${Is.string(error.message) ? error.message : 'unknown'}`);\n        }\n    }\n}\nexports.AbstractMessageReader = AbstractMessageReader;\nvar ResolvedMessageReaderOptions;\n(function (ResolvedMessageReaderOptions) {\n    function fromOptions(options) {\n        let charset;\n        let result;\n        let contentDecoder;\n        const contentDecoders = new Map();\n        let contentTypeDecoder;\n        const contentTypeDecoders = new Map();\n        if (options === undefined || typeof options === 'string') {\n            charset = options ?? 'utf-8';\n        }\n        else {\n            charset = options.charset ?? 'utf-8';\n            if (options.contentDecoder !== undefined) {\n                contentDecoder = options.contentDecoder;\n                contentDecoders.set(contentDecoder.name, contentDecoder);\n            }\n            if (options.contentDecoders !== undefined) {\n                for (const decoder of options.contentDecoders) {\n                    contentDecoders.set(decoder.name, decoder);\n                }\n            }\n            if (options.contentTypeDecoder !== undefined) {\n                contentTypeDecoder = options.contentTypeDecoder;\n                contentTypeDecoders.set(contentTypeDecoder.name, contentTypeDecoder);\n            }\n            if (options.contentTypeDecoders !== undefined) {\n                for (const decoder of options.contentTypeDecoders) {\n                    contentTypeDecoders.set(decoder.name, decoder);\n                }\n            }\n        }\n        if (contentTypeDecoder === undefined) {\n            contentTypeDecoder = (0, ral_1.default)().applicationJson.decoder;\n            contentTypeDecoders.set(contentTypeDecoder.name, contentTypeDecoder);\n        }\n        return { charset, contentDecoder, contentDecoders, contentTypeDecoder, contentTypeDecoders };\n    }\n    ResolvedMessageReaderOptions.fromOptions = fromOptions;\n})(ResolvedMessageReaderOptions || (ResolvedMessageReaderOptions = {}));\nclass ReadableStreamMessageReader extends AbstractMessageReader {\n    constructor(readable, options) {\n        super();\n        this.readable = readable;\n        this.options = ResolvedMessageReaderOptions.fromOptions(options);\n        this.buffer = (0, ral_1.default)().messageBuffer.create(this.options.charset);\n        this._partialMessageTimeout = 10000;\n        this.nextMessageLength = -1;\n        this.messageToken = 0;\n        this.readSemaphore = new semaphore_1.Semaphore(1);\n    }\n    set partialMessageTimeout(timeout) {\n        this._partialMessageTimeout = timeout;\n    }\n    get partialMessageTimeout() {\n        return this._partialMessageTimeout;\n    }\n    listen(callback) {\n        this.nextMessageLength = -1;\n        this.messageToken = 0;\n        this.partialMessageTimer = undefined;\n        this.callback = callback;\n        const result = this.readable.onData((data) => {\n            this.onData(data);\n        });\n        this.readable.onError((error) => this.fireError(error));\n        this.readable.onClose(() => this.fireClose());\n        return result;\n    }\n    onData(data) {\n        try {\n            this.buffer.append(data);\n            while (true) {\n                if (this.nextMessageLength === -1) {\n                    const headers = this.buffer.tryReadHeaders(true);\n                    if (!headers) {\n                        return;\n                    }\n                    const contentLength = headers.get('content-length');\n                    if (!contentLength) {\n                        this.fireError(new Error(`Header must provide a Content-Length property.\\n${JSON.stringify(Object.fromEntries(headers))}`));\n                        return;\n                    }\n                    const length = parseInt(contentLength);\n                    if (isNaN(length)) {\n                        this.fireError(new Error(`Content-Length value must be a number. Got ${contentLength}`));\n                        return;\n                    }\n                    this.nextMessageLength = length;\n                }\n                const body = this.buffer.tryReadBody(this.nextMessageLength);\n                if (body === undefined) {\n                    /** We haven't received the full message yet. */\n                    this.setPartialMessageTimer();\n                    return;\n                }\n                this.clearPartialMessageTimer();\n                this.nextMessageLength = -1;\n                // Make sure that we convert one received message after the\n                // other. Otherwise it could happen that a decoding of a second\n                // smaller message finished before the decoding of a first larger\n                // message and then we would deliver the second message first.\n                this.readSemaphore.lock(async () => {\n                    const bytes = this.options.contentDecoder !== undefined\n                        ? await this.options.contentDecoder.decode(body)\n                        : body;\n                    const message = await this.options.contentTypeDecoder.decode(bytes, this.options);\n                    this.callback(message);\n                }).catch((error) => {\n                    this.fireError(error);\n                });\n            }\n        }\n        catch (error) {\n            this.fireError(error);\n        }\n    }\n    clearPartialMessageTimer() {\n        if (this.partialMessageTimer) {\n            this.partialMessageTimer.dispose();\n            this.partialMessageTimer = undefined;\n        }\n    }\n    setPartialMessageTimer() {\n        this.clearPartialMessageTimer();\n        if (this._partialMessageTimeout <= 0) {\n            return;\n        }\n        this.partialMessageTimer = (0, ral_1.default)().timer.setTimeout((token, timeout) => {\n            this.partialMessageTimer = undefined;\n            if (token === this.messageToken) {\n                this.firePartialMessage({ messageToken: token, waitingTime: timeout });\n                this.setPartialMessageTimer();\n            }\n        }, this._partialMessageTimeout, this.messageToken, this._partialMessageTimeout);\n    }\n}\nexports.ReadableStreamMessageReader = ReadableStreamMessageReader;\n", "\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WriteableStreamMessageWriter = exports.AbstractMessageWriter = exports.MessageWriter = void 0;\nconst ral_1 = require(\"./ral\");\nconst Is = require(\"./is\");\nconst semaphore_1 = require(\"./semaphore\");\nconst events_1 = require(\"./events\");\nconst ContentLength = 'Content-Length: ';\nconst CRLF = '\\r\\n';\nvar MessageWriter;\n(function (MessageWriter) {\n    function is(value) {\n        let candidate = value;\n        return candidate && Is.func(candidate.dispose) && Is.func(candidate.onClose) &&\n            Is.func(candidate.onError) && Is.func(candidate.write);\n    }\n    MessageWriter.is = is;\n})(MessageWriter || (exports.MessageWriter = MessageWriter = {}));\nclass AbstractMessageWriter {\n    constructor() {\n        this.errorEmitter = new events_1.Emitter();\n        this.closeEmitter = new events_1.Emitter();\n    }\n    dispose() {\n        this.errorEmitter.dispose();\n        this.closeEmitter.dispose();\n    }\n    get onError() {\n        return this.errorEmitter.event;\n    }\n    fireError(error, message, count) {\n        this.errorEmitter.fire([this.asError(error), message, count]);\n    }\n    get onClose() {\n        return this.closeEmitter.event;\n    }\n    fireClose() {\n        this.closeEmitter.fire(undefined);\n    }\n    asError(error) {\n        if (error instanceof Error) {\n            return error;\n        }\n        else {\n            return new Error(`Writer received error. Reason: ${Is.string(error.message) ? error.message : 'unknown'}`);\n        }\n    }\n}\nexports.AbstractMessageWriter = AbstractMessageWriter;\nvar ResolvedMessageWriterOptions;\n(function (ResolvedMessageWriterOptions) {\n    function fromOptions(options) {\n        if (options === undefined || typeof options === 'string') {\n            return { charset: options ?? 'utf-8', contentTypeEncoder: (0, ral_1.default)().applicationJson.encoder };\n        }\n        else {\n            return { charset: options.charset ?? 'utf-8', contentEncoder: options.contentEncoder, contentTypeEncoder: options.contentTypeEncoder ?? (0, ral_1.default)().applicationJson.encoder };\n        }\n    }\n    ResolvedMessageWriterOptions.fromOptions = fromOptions;\n})(ResolvedMessageWriterOptions || (ResolvedMessageWriterOptions = {}));\nclass WriteableStreamMessageWriter extends AbstractMessageWriter {\n    constructor(writable, options) {\n        super();\n        this.writable = writable;\n        this.options = ResolvedMessageWriterOptions.fromOptions(options);\n        this.errorCount = 0;\n        this.writeSemaphore = new semaphore_1.Semaphore(1);\n        this.writable.onError((error) => this.fireError(error));\n        this.writable.onClose(() => this.fireClose());\n    }\n    async write(msg) {\n        return this.writeSemaphore.lock(async () => {\n            const payload = this.options.contentTypeEncoder.encode(msg, this.options).then((buffer) => {\n                if (this.options.contentEncoder !== undefined) {\n                    return this.options.contentEncoder.encode(buffer);\n                }\n                else {\n                    return buffer;\n                }\n            });\n            return payload.then((buffer) => {\n                const headers = [];\n                headers.push(ContentLength, buffer.byteLength.toString(), CRLF);\n                headers.push(CRLF);\n                return this.doWrite(msg, headers, buffer);\n            }, (error) => {\n                this.fireError(error);\n                throw error;\n            });\n        });\n    }\n    async doWrite(msg, headers, data) {\n        try {\n            await this.writable.write(headers.join(''), 'ascii');\n            return this.writable.write(data);\n        }\n        catch (error) {\n            this.handleError(error, msg);\n            return Promise.reject(error);\n        }\n    }\n    handleError(error, msg) {\n        this.errorCount++;\n        this.fireError(error, msg, this.errorCount);\n    }\n    end() {\n        this.writable.end();\n    }\n}\nexports.WriteableStreamMessageWriter = WriteableStreamMessageWriter;\n", "\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AbstractMessageBuffer = void 0;\nconst CR = 13;\nconst LF = 10;\nconst CRLF = '\\r\\n';\nclass AbstractMessageBuffer {\n    constructor(encoding = 'utf-8') {\n        this._encoding = encoding;\n        this._chunks = [];\n        this._totalLength = 0;\n    }\n    get encoding() {\n        return this._encoding;\n    }\n    append(chunk) {\n        const toAppend = typeof chunk === 'string' ? this.fromString(chunk, this._encoding) : chunk;\n        this._chunks.push(toAppend);\n        this._totalLength += toAppend.byteLength;\n    }\n    tryReadHeaders(lowerCaseKeys = false) {\n        if (this._chunks.length === 0) {\n            return undefined;\n        }\n        let state = 0;\n        let chunkIndex = 0;\n        let offset = 0;\n        let chunkBytesRead = 0;\n        row: while (chunkIndex < this._chunks.length) {\n            const chunk = this._chunks[chunkIndex];\n            offset = 0;\n            column: while (offset < chunk.length) {\n                const value = chunk[offset];\n                switch (value) {\n                    case CR:\n                        switch (state) {\n                            case 0:\n                                state = 1;\n                                break;\n                            case 2:\n                                state = 3;\n                                break;\n                            default:\n                                state = 0;\n                        }\n                        break;\n                    case LF:\n                        switch (state) {\n                            case 1:\n                                state = 2;\n                                break;\n                            case 3:\n                                state = 4;\n                                offset++;\n                                break row;\n                            default:\n                                state = 0;\n                        }\n                        break;\n                    default:\n                        state = 0;\n                }\n                offset++;\n            }\n            chunkBytesRead += chunk.byteLength;\n            chunkIndex++;\n        }\n        if (state !== 4) {\n            return undefined;\n        }\n        // The buffer contains the two CRLF at the end. So we will\n        // have two empty lines after the split at the end as well.\n        const buffer = this._read(chunkBytesRead + offset);\n        const result = new Map();\n        const headers = this.toString(buffer, 'ascii').split(CRLF);\n        if (headers.length < 2) {\n            return result;\n        }\n        for (let i = 0; i < headers.length - 2; i++) {\n            const header = headers[i];\n            const index = header.indexOf(':');\n            if (index === -1) {\n                throw new Error(`Message header must separate key and value using ':'\\n${header}`);\n            }\n            const key = header.substr(0, index);\n            const value = header.substr(index + 1).trim();\n            result.set(lowerCaseKeys ? key.toLowerCase() : key, value);\n        }\n        return result;\n    }\n    tryReadBody(length) {\n        if (this._totalLength < length) {\n            return undefined;\n        }\n        return this._read(length);\n    }\n    get numberOfBytes() {\n        return this._totalLength;\n    }\n    _read(byteCount) {\n        if (byteCount === 0) {\n            return this.emptyBuffer();\n        }\n        if (byteCount > this._totalLength) {\n            throw new Error(`Cannot read so many bytes!`);\n        }\n        if (this._chunks[0].byteLength === byteCount) {\n            // super fast path, precisely first chunk must be returned\n            const chunk = this._chunks[0];\n            this._chunks.shift();\n            this._totalLength -= byteCount;\n            return this.asNative(chunk);\n        }\n        if (this._chunks[0].byteLength > byteCount) {\n            // fast path, the reading is entirely within the first chunk\n            const chunk = this._chunks[0];\n            const result = this.asNative(chunk, byteCount);\n            this._chunks[0] = chunk.slice(byteCount);\n            this._totalLength -= byteCount;\n            return result;\n        }\n        const result = this.allocNative(byteCount);\n        let resultOffset = 0;\n        let chunkIndex = 0;\n        while (byteCount > 0) {\n            const chunk = this._chunks[chunkIndex];\n            if (chunk.byteLength > byteCount) {\n                // this chunk will survive\n                const chunkPart = chunk.slice(0, byteCount);\n                result.set(chunkPart, resultOffset);\n                resultOffset += byteCount;\n                this._chunks[chunkIndex] = chunk.slice(byteCount);\n                this._totalLength -= byteCount;\n                byteCount -= byteCount;\n            }\n            else {\n                // this chunk will be entirely read\n                result.set(chunk, resultOffset);\n                resultOffset += chunk.byteLength;\n                this._chunks.shift();\n                this._totalLength -= chunk.byteLength;\n                byteCount -= chunk.byteLength;\n            }\n        }\n        return result;\n    }\n}\nexports.AbstractMessageBuffer = AbstractMessageBuffer;\n", "\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createMessageConnection = exports.ConnectionOptions = exports.MessageStrategy = exports.CancellationStrategy = exports.CancellationSenderStrategy = exports.CancellationReceiverStrategy = exports.RequestCancellationReceiverStrategy = exports.IdCancellationReceiverStrategy = exports.ConnectionStrategy = exports.ConnectionError = exports.ConnectionErrors = exports.LogTraceNotification = exports.SetTraceNotification = exports.TraceFormat = exports.TraceValues = exports.Trace = exports.NullLogger = exports.ProgressType = exports.ProgressToken = void 0;\nconst ral_1 = require(\"./ral\");\nconst Is = require(\"./is\");\nconst messages_1 = require(\"./messages\");\nconst linkedMap_1 = require(\"./linkedMap\");\nconst events_1 = require(\"./events\");\nconst cancellation_1 = require(\"./cancellation\");\nvar CancelNotification;\n(function (CancelNotification) {\n    CancelNotification.type = new messages_1.NotificationType('$/cancelRequest');\n})(CancelNotification || (CancelNotification = {}));\nvar ProgressToken;\n(function (ProgressToken) {\n    function is(value) {\n        return typeof value === 'string' || typeof value === 'number';\n    }\n    ProgressToken.is = is;\n})(ProgressToken || (exports.ProgressToken = ProgressToken = {}));\nvar ProgressNotification;\n(function (ProgressNotification) {\n    ProgressNotification.type = new messages_1.NotificationType('$/progress');\n})(ProgressNotification || (ProgressNotification = {}));\nclass ProgressType {\n    constructor() {\n    }\n}\nexports.ProgressType = ProgressType;\nvar StarRequestHandler;\n(function (StarRequestHandler) {\n    function is(value) {\n        return Is.func(value);\n    }\n    StarRequestHandler.is = is;\n})(StarRequestHandler || (StarRequestHandler = {}));\nexports.NullLogger = Object.freeze({\n    error: () => { },\n    warn: () => { },\n    info: () => { },\n    log: () => { }\n});\nvar Trace;\n(function (Trace) {\n    Trace[Trace[\"Off\"] = 0] = \"Off\";\n    Trace[Trace[\"Messages\"] = 1] = \"Messages\";\n    Trace[Trace[\"Compact\"] = 2] = \"Compact\";\n    Trace[Trace[\"Verbose\"] = 3] = \"Verbose\";\n})(Trace || (exports.Trace = Trace = {}));\nvar TraceValues;\n(function (TraceValues) {\n    /**\n     * Turn tracing off.\n     */\n    TraceValues.Off = 'off';\n    /**\n     * Trace messages only.\n     */\n    TraceValues.Messages = 'messages';\n    /**\n     * Compact message tracing.\n     */\n    TraceValues.Compact = 'compact';\n    /**\n     * Verbose message tracing.\n     */\n    TraceValues.Verbose = 'verbose';\n})(TraceValues || (exports.TraceValues = TraceValues = {}));\n(function (Trace) {\n    function fromString(value) {\n        if (!Is.string(value)) {\n            return Trace.Off;\n        }\n        value = value.toLowerCase();\n        switch (value) {\n            case 'off':\n                return Trace.Off;\n            case 'messages':\n                return Trace.Messages;\n            case 'compact':\n                return Trace.Compact;\n            case 'verbose':\n                return Trace.Verbose;\n            default:\n                return Trace.Off;\n        }\n    }\n    Trace.fromString = fromString;\n    function toString(value) {\n        switch (value) {\n            case Trace.Off:\n                return 'off';\n            case Trace.Messages:\n                return 'messages';\n            case Trace.Compact:\n                return 'compact';\n            case Trace.Verbose:\n                return 'verbose';\n            default:\n                return 'off';\n        }\n    }\n    Trace.toString = toString;\n})(Trace || (exports.Trace = Trace = {}));\nvar TraceFormat;\n(function (TraceFormat) {\n    TraceFormat[\"Text\"] = \"text\";\n    TraceFormat[\"JSON\"] = \"json\";\n})(TraceFormat || (exports.TraceFormat = TraceFormat = {}));\n(function (TraceFormat) {\n    function fromString(value) {\n        if (!Is.string(value)) {\n            return TraceFormat.Text;\n        }\n        value = value.toLowerCase();\n        if (value === 'json') {\n            return TraceFormat.JSON;\n        }\n        else {\n            return TraceFormat.Text;\n        }\n    }\n    TraceFormat.fromString = fromString;\n})(TraceFormat || (exports.TraceFormat = TraceFormat = {}));\nvar SetTraceNotification;\n(function (SetTraceNotification) {\n    SetTraceNotification.type = new messages_1.NotificationType('$/setTrace');\n})(SetTraceNotification || (exports.SetTraceNotification = SetTraceNotification = {}));\nvar LogTraceNotification;\n(function (LogTraceNotification) {\n    LogTraceNotification.type = new messages_1.NotificationType('$/logTrace');\n})(LogTraceNotification || (exports.LogTraceNotification = LogTraceNotification = {}));\nvar ConnectionErrors;\n(function (ConnectionErrors) {\n    /**\n     * The connection is closed.\n     */\n    ConnectionErrors[ConnectionErrors[\"Closed\"] = 1] = \"Closed\";\n    /**\n     * The connection got disposed.\n     */\n    ConnectionErrors[ConnectionErrors[\"Disposed\"] = 2] = \"Disposed\";\n    /**\n     * The connection is already in listening mode.\n     */\n    ConnectionErrors[ConnectionErrors[\"AlreadyListening\"] = 3] = \"AlreadyListening\";\n})(ConnectionErrors || (exports.ConnectionErrors = ConnectionErrors = {}));\nclass ConnectionError extends Error {\n    constructor(code, message) {\n        super(message);\n        this.code = code;\n        Object.setPrototypeOf(this, ConnectionError.prototype);\n    }\n}\nexports.ConnectionError = ConnectionError;\nvar ConnectionStrategy;\n(function (ConnectionStrategy) {\n    function is(value) {\n        const candidate = value;\n        return candidate && Is.func(candidate.cancelUndispatched);\n    }\n    ConnectionStrategy.is = is;\n})(ConnectionStrategy || (exports.ConnectionStrategy = ConnectionStrategy = {}));\nvar IdCancellationReceiverStrategy;\n(function (IdCancellationReceiverStrategy) {\n    function is(value) {\n        const candidate = value;\n        return candidate && (candidate.kind === undefined || candidate.kind === 'id') && Is.func(candidate.createCancellationTokenSource) && (candidate.dispose === undefined || Is.func(candidate.dispose));\n    }\n    IdCancellationReceiverStrategy.is = is;\n})(IdCancellationReceiverStrategy || (exports.IdCancellationReceiverStrategy = IdCancellationReceiverStrategy = {}));\nvar RequestCancellationReceiverStrategy;\n(function (RequestCancellationReceiverStrategy) {\n    function is(value) {\n        const candidate = value;\n        return candidate && candidate.kind === 'request' && Is.func(candidate.createCancellationTokenSource) && (candidate.dispose === undefined || Is.func(candidate.dispose));\n    }\n    RequestCancellationReceiverStrategy.is = is;\n})(RequestCancellationReceiverStrategy || (exports.RequestCancellationReceiverStrategy = RequestCancellationReceiverStrategy = {}));\nvar CancellationReceiverStrategy;\n(function (CancellationReceiverStrategy) {\n    CancellationReceiverStrategy.Message = Object.freeze({\n        createCancellationTokenSource(_) {\n            return new cancellation_1.CancellationTokenSource();\n        }\n    });\n    function is(value) {\n        return IdCancellationReceiverStrategy.is(value) || RequestCancellationReceiverStrategy.is(value);\n    }\n    CancellationReceiverStrategy.is = is;\n})(CancellationReceiverStrategy || (exports.CancellationReceiverStrategy = CancellationReceiverStrategy = {}));\nvar CancellationSenderStrategy;\n(function (CancellationSenderStrategy) {\n    CancellationSenderStrategy.Message = Object.freeze({\n        sendCancellation(conn, id) {\n            return conn.sendNotification(CancelNotification.type, { id });\n        },\n        cleanup(_) { }\n    });\n    function is(value) {\n        const candidate = value;\n        return candidate && Is.func(candidate.sendCancellation) && Is.func(candidate.cleanup);\n    }\n    CancellationSenderStrategy.is = is;\n})(CancellationSenderStrategy || (exports.CancellationSenderStrategy = CancellationSenderStrategy = {}));\nvar CancellationStrategy;\n(function (CancellationStrategy) {\n    CancellationStrategy.Message = Object.freeze({\n        receiver: CancellationReceiverStrategy.Message,\n        sender: CancellationSenderStrategy.Message\n    });\n    function is(value) {\n        const candidate = value;\n        return candidate && CancellationReceiverStrategy.is(candidate.receiver) && CancellationSenderStrategy.is(candidate.sender);\n    }\n    CancellationStrategy.is = is;\n})(CancellationStrategy || (exports.CancellationStrategy = CancellationStrategy = {}));\nvar MessageStrategy;\n(function (MessageStrategy) {\n    function is(value) {\n        const candidate = value;\n        return candidate && Is.func(candidate.handleMessage);\n    }\n    MessageStrategy.is = is;\n})(MessageStrategy || (exports.MessageStrategy = MessageStrategy = {}));\nvar ConnectionOptions;\n(function (ConnectionOptions) {\n    function is(value) {\n        const candidate = value;\n        return candidate && (CancellationStrategy.is(candidate.cancellationStrategy) || ConnectionStrategy.is(candidate.connectionStrategy) || MessageStrategy.is(candidate.messageStrategy));\n    }\n    ConnectionOptions.is = is;\n})(ConnectionOptions || (exports.ConnectionOptions = ConnectionOptions = {}));\nvar ConnectionState;\n(function (ConnectionState) {\n    ConnectionState[ConnectionState[\"New\"] = 1] = \"New\";\n    ConnectionState[ConnectionState[\"Listening\"] = 2] = \"Listening\";\n    ConnectionState[ConnectionState[\"Closed\"] = 3] = \"Closed\";\n    ConnectionState[ConnectionState[\"Disposed\"] = 4] = \"Disposed\";\n})(ConnectionState || (ConnectionState = {}));\nfunction createMessageConnection(messageReader, messageWriter, _logger, options) {\n    const logger = _logger !== undefined ? _logger : exports.NullLogger;\n    let sequenceNumber = 0;\n    let notificationSequenceNumber = 0;\n    let unknownResponseSequenceNumber = 0;\n    const version = '2.0';\n    let starRequestHandler = undefined;\n    const requestHandlers = new Map();\n    let starNotificationHandler = undefined;\n    const notificationHandlers = new Map();\n    const progressHandlers = new Map();\n    let timer;\n    let messageQueue = new linkedMap_1.LinkedMap();\n    let responsePromises = new Map();\n    let knownCanceledRequests = new Set();\n    let requestTokens = new Map();\n    let trace = Trace.Off;\n    let traceFormat = TraceFormat.Text;\n    let tracer;\n    let state = ConnectionState.New;\n    const errorEmitter = new events_1.Emitter();\n    const closeEmitter = new events_1.Emitter();\n    const unhandledNotificationEmitter = new events_1.Emitter();\n    const unhandledProgressEmitter = new events_1.Emitter();\n    const disposeEmitter = new events_1.Emitter();\n    const cancellationStrategy = (options && options.cancellationStrategy) ? options.cancellationStrategy : CancellationStrategy.Message;\n    function createRequestQueueKey(id) {\n        if (id === null) {\n            throw new Error(`Can't send requests with id null since the response can't be correlated.`);\n        }\n        return 'req-' + id.toString();\n    }\n    function createResponseQueueKey(id) {\n        if (id === null) {\n            return 'res-unknown-' + (++unknownResponseSequenceNumber).toString();\n        }\n        else {\n            return 'res-' + id.toString();\n        }\n    }\n    function createNotificationQueueKey() {\n        return 'not-' + (++notificationSequenceNumber).toString();\n    }\n    function addMessageToQueue(queue, message) {\n        if (messages_1.Message.isRequest(message)) {\n            queue.set(createRequestQueueKey(message.id), message);\n        }\n        else if (messages_1.Message.isResponse(message)) {\n            queue.set(createResponseQueueKey(message.id), message);\n        }\n        else {\n            queue.set(createNotificationQueueKey(), message);\n        }\n    }\n    function cancelUndispatched(_message) {\n        return undefined;\n    }\n    function isListening() {\n        return state === ConnectionState.Listening;\n    }\n    function isClosed() {\n        return state === ConnectionState.Closed;\n    }\n    function isDisposed() {\n        return state === ConnectionState.Disposed;\n    }\n    function closeHandler() {\n        if (state === ConnectionState.New || state === ConnectionState.Listening) {\n            state = ConnectionState.Closed;\n            closeEmitter.fire(undefined);\n        }\n        // If the connection is disposed don't sent close events.\n    }\n    function readErrorHandler(error) {\n        errorEmitter.fire([error, undefined, undefined]);\n    }\n    function writeErrorHandler(data) {\n        errorEmitter.fire(data);\n    }\n    messageReader.onClose(closeHandler);\n    messageReader.onError(readErrorHandler);\n    messageWriter.onClose(closeHandler);\n    messageWriter.onError(writeErrorHandler);\n    function triggerMessageQueue() {\n        if (timer || messageQueue.size === 0) {\n            return;\n        }\n        timer = (0, ral_1.default)().timer.setImmediate(() => {\n            timer = undefined;\n            processMessageQueue();\n        });\n    }\n    function handleMessage(message) {\n        if (messages_1.Message.isRequest(message)) {\n            handleRequest(message);\n        }\n        else if (messages_1.Message.isNotification(message)) {\n            handleNotification(message);\n        }\n        else if (messages_1.Message.isResponse(message)) {\n            handleResponse(message);\n        }\n        else {\n            handleInvalidMessage(message);\n        }\n    }\n    function processMessageQueue() {\n        if (messageQueue.size === 0) {\n            return;\n        }\n        const message = messageQueue.shift();\n        try {\n            const messageStrategy = options?.messageStrategy;\n            if (MessageStrategy.is(messageStrategy)) {\n                messageStrategy.handleMessage(message, handleMessage);\n            }\n            else {\n                handleMessage(message);\n            }\n        }\n        finally {\n            triggerMessageQueue();\n        }\n    }\n    const callback = (message) => {\n        try {\n            // We have received a cancellation message. Check if the message is still in the queue\n            // and cancel it if allowed to do so.\n            if (messages_1.Message.isNotification(message) && message.method === CancelNotification.type.method) {\n                const cancelId = message.params.id;\n                const key = createRequestQueueKey(cancelId);\n                const toCancel = messageQueue.get(key);\n                if (messages_1.Message.isRequest(toCancel)) {\n                    const strategy = options?.connectionStrategy;\n                    const response = (strategy && strategy.cancelUndispatched) ? strategy.cancelUndispatched(toCancel, cancelUndispatched) : cancelUndispatched(toCancel);\n                    if (response && (response.error !== undefined || response.result !== undefined)) {\n                        messageQueue.delete(key);\n                        requestTokens.delete(cancelId);\n                        response.id = toCancel.id;\n                        traceSendingResponse(response, message.method, Date.now());\n                        messageWriter.write(response).catch(() => logger.error(`Sending response for canceled message failed.`));\n                        return;\n                    }\n                }\n                const cancellationToken = requestTokens.get(cancelId);\n                // The request is already running. Cancel the token\n                if (cancellationToken !== undefined) {\n                    cancellationToken.cancel();\n                    traceReceivedNotification(message);\n                    return;\n                }\n                else {\n                    // Remember the cancel but still queue the message to\n                    // clean up state in process message.\n                    knownCanceledRequests.add(cancelId);\n                }\n            }\n            addMessageToQueue(messageQueue, message);\n        }\n        finally {\n            triggerMessageQueue();\n        }\n    };\n    function handleRequest(requestMessage) {\n        if (isDisposed()) {\n            // we return here silently since we fired an event when the\n            // connection got disposed.\n            return;\n        }\n        function reply(resultOrError, method, startTime) {\n            const message = {\n                jsonrpc: version,\n                id: requestMessage.id\n            };\n            if (resultOrError instanceof messages_1.ResponseError) {\n                message.error = resultOrError.toJson();\n            }\n            else {\n                message.result = resultOrError === undefined ? null : resultOrError;\n            }\n            traceSendingResponse(message, method, startTime);\n            messageWriter.write(message).catch(() => logger.error(`Sending response failed.`));\n        }\n        function replyError(error, method, startTime) {\n            const message = {\n                jsonrpc: version,\n                id: requestMessage.id,\n                error: error.toJson()\n            };\n            traceSendingResponse(message, method, startTime);\n            messageWriter.write(message).catch(() => logger.error(`Sending response failed.`));\n        }\n        function replySuccess(result, method, startTime) {\n            // The JSON RPC defines that a response must either have a result or an error\n            // So we can't treat undefined as a valid response result.\n            if (result === undefined) {\n                result = null;\n            }\n            const message = {\n                jsonrpc: version,\n                id: requestMessage.id,\n                result: result\n            };\n            traceSendingResponse(message, method, startTime);\n            messageWriter.write(message).catch(() => logger.error(`Sending response failed.`));\n        }\n        traceReceivedRequest(requestMessage);\n        const element = requestHandlers.get(requestMessage.method);\n        let type;\n        let requestHandler;\n        if (element) {\n            type = element.type;\n            requestHandler = element.handler;\n        }\n        const startTime = Date.now();\n        if (requestHandler || starRequestHandler) {\n            const tokenKey = requestMessage.id ?? String(Date.now()); //\n            const cancellationSource = IdCancellationReceiverStrategy.is(cancellationStrategy.receiver)\n                ? cancellationStrategy.receiver.createCancellationTokenSource(tokenKey)\n                : cancellationStrategy.receiver.createCancellationTokenSource(requestMessage);\n            if (requestMessage.id !== null && knownCanceledRequests.has(requestMessage.id)) {\n                cancellationSource.cancel();\n            }\n            if (requestMessage.id !== null) {\n                requestTokens.set(tokenKey, cancellationSource);\n            }\n            try {\n                let handlerResult;\n                if (requestHandler) {\n                    if (requestMessage.params === undefined) {\n                        if (type !== undefined && type.numberOfParams !== 0) {\n                            replyError(new messages_1.ResponseError(messages_1.ErrorCodes.InvalidParams, `Request ${requestMessage.method} defines ${type.numberOfParams} params but received none.`), requestMessage.method, startTime);\n                            return;\n                        }\n                        handlerResult = requestHandler(cancellationSource.token);\n                    }\n                    else if (Array.isArray(requestMessage.params)) {\n                        if (type !== undefined && type.parameterStructures === messages_1.ParameterStructures.byName) {\n                            replyError(new messages_1.ResponseError(messages_1.ErrorCodes.InvalidParams, `Request ${requestMessage.method} defines parameters by name but received parameters by position`), requestMessage.method, startTime);\n                            return;\n                        }\n                        handlerResult = requestHandler(...requestMessage.params, cancellationSource.token);\n                    }\n                    else {\n                        if (type !== undefined && type.parameterStructures === messages_1.ParameterStructures.byPosition) {\n                            replyError(new messages_1.ResponseError(messages_1.ErrorCodes.InvalidParams, `Request ${requestMessage.method} defines parameters by position but received parameters by name`), requestMessage.method, startTime);\n                            return;\n                        }\n                        handlerResult = requestHandler(requestMessage.params, cancellationSource.token);\n                    }\n                }\n                else if (starRequestHandler) {\n                    handlerResult = starRequestHandler(requestMessage.method, requestMessage.params, cancellationSource.token);\n                }\n                const promise = handlerResult;\n                if (!handlerResult) {\n                    requestTokens.delete(tokenKey);\n                    replySuccess(handlerResult, requestMessage.method, startTime);\n                }\n                else if (promise.then) {\n                    promise.then((resultOrError) => {\n                        requestTokens.delete(tokenKey);\n                        reply(resultOrError, requestMessage.method, startTime);\n                    }, error => {\n                        requestTokens.delete(tokenKey);\n                        if (error instanceof messages_1.ResponseError) {\n                            replyError(error, requestMessage.method, startTime);\n                        }\n                        else if (error && Is.string(error.message)) {\n                            replyError(new messages_1.ResponseError(messages_1.ErrorCodes.InternalError, `Request ${requestMessage.method} failed with message: ${error.message}`), requestMessage.method, startTime);\n                        }\n                        else {\n                            replyError(new messages_1.ResponseError(messages_1.ErrorCodes.InternalError, `Request ${requestMessage.method} failed unexpectedly without providing any details.`), requestMessage.method, startTime);\n                        }\n                    });\n                }\n                else {\n                    requestTokens.delete(tokenKey);\n                    reply(handlerResult, requestMessage.method, startTime);\n                }\n            }\n            catch (error) {\n                requestTokens.delete(tokenKey);\n                if (error instanceof messages_1.ResponseError) {\n                    reply(error, requestMessage.method, startTime);\n                }\n                else if (error && Is.string(error.message)) {\n                    replyError(new messages_1.ResponseError(messages_1.ErrorCodes.InternalError, `Request ${requestMessage.method} failed with message: ${error.message}`), requestMessage.method, startTime);\n                }\n                else {\n                    replyError(new messages_1.ResponseError(messages_1.ErrorCodes.InternalError, `Request ${requestMessage.method} failed unexpectedly without providing any details.`), requestMessage.method, startTime);\n                }\n            }\n        }\n        else {\n            replyError(new messages_1.ResponseError(messages_1.ErrorCodes.MethodNotFound, `Unhandled method ${requestMessage.method}`), requestMessage.method, startTime);\n        }\n    }\n    function handleResponse(responseMessage) {\n        if (isDisposed()) {\n            // See handle request.\n            return;\n        }\n        if (responseMessage.id === null) {\n            if (responseMessage.error) {\n                logger.error(`Received response message without id: Error is: \\n${JSON.stringify(responseMessage.error, undefined, 4)}`);\n            }\n            else {\n                logger.error(`Received response message without id. No further error information provided.`);\n            }\n        }\n        else {\n            const key = responseMessage.id;\n            const responsePromise = responsePromises.get(key);\n            traceReceivedResponse(responseMessage, responsePromise);\n            if (responsePromise !== undefined) {\n                responsePromises.delete(key);\n                try {\n                    if (responseMessage.error) {\n                        const error = responseMessage.error;\n                        responsePromise.reject(new messages_1.ResponseError(error.code, error.message, error.data));\n                    }\n                    else if (responseMessage.result !== undefined) {\n                        responsePromise.resolve(responseMessage.result);\n                    }\n                    else {\n                        throw new Error('Should never happen.');\n                    }\n                }\n                catch (error) {\n                    if (error.message) {\n                        logger.error(`Response handler '${responsePromise.method}' failed with message: ${error.message}`);\n                    }\n                    else {\n                        logger.error(`Response handler '${responsePromise.method}' failed unexpectedly.`);\n                    }\n                }\n            }\n        }\n    }\n    function handleNotification(message) {\n        if (isDisposed()) {\n            // See handle request.\n            return;\n        }\n        let type = undefined;\n        let notificationHandler;\n        if (message.method === CancelNotification.type.method) {\n            const cancelId = message.params.id;\n            knownCanceledRequests.delete(cancelId);\n            traceReceivedNotification(message);\n            return;\n        }\n        else {\n            const element = notificationHandlers.get(message.method);\n            if (element) {\n                notificationHandler = element.handler;\n                type = element.type;\n            }\n        }\n        if (notificationHandler || starNotificationHandler) {\n            try {\n                traceReceivedNotification(message);\n                if (notificationHandler) {\n                    if (message.params === undefined) {\n                        if (type !== undefined) {\n                            if (type.numberOfParams !== 0 && type.parameterStructures !== messages_1.ParameterStructures.byName) {\n                                logger.error(`Notification ${message.method} defines ${type.numberOfParams} params but received none.`);\n                            }\n                        }\n                        notificationHandler();\n                    }\n                    else if (Array.isArray(message.params)) {\n                        // There are JSON-RPC libraries that send progress message as positional params although\n                        // specified as named. So convert them if this is the case.\n                        const params = message.params;\n                        if (message.method === ProgressNotification.type.method && params.length === 2 && ProgressToken.is(params[0])) {\n                            notificationHandler({ token: params[0], value: params[1] });\n                        }\n                        else {\n                            if (type !== undefined) {\n                                if (type.parameterStructures === messages_1.ParameterStructures.byName) {\n                                    logger.error(`Notification ${message.method} defines parameters by name but received parameters by position`);\n                                }\n                                if (type.numberOfParams !== message.params.length) {\n                                    logger.error(`Notification ${message.method} defines ${type.numberOfParams} params but received ${params.length} arguments`);\n                                }\n                            }\n                            notificationHandler(...params);\n                        }\n                    }\n                    else {\n                        if (type !== undefined && type.parameterStructures === messages_1.ParameterStructures.byPosition) {\n                            logger.error(`Notification ${message.method} defines parameters by position but received parameters by name`);\n                        }\n                        notificationHandler(message.params);\n                    }\n                }\n                else if (starNotificationHandler) {\n                    starNotificationHandler(message.method, message.params);\n                }\n            }\n            catch (error) {\n                if (error.message) {\n                    logger.error(`Notification handler '${message.method}' failed with message: ${error.message}`);\n                }\n                else {\n                    logger.error(`Notification handler '${message.method}' failed unexpectedly.`);\n                }\n            }\n        }\n        else {\n            unhandledNotificationEmitter.fire(message);\n        }\n    }\n    function handleInvalidMessage(message) {\n        if (!message) {\n            logger.error('Received empty message.');\n            return;\n        }\n        logger.error(`Received message which is neither a response nor a notification message:\\n${JSON.stringify(message, null, 4)}`);\n        // Test whether we find an id to reject the promise\n        const responseMessage = message;\n        if (Is.string(responseMessage.id) || Is.number(responseMessage.id)) {\n            const key = responseMessage.id;\n            const responseHandler = responsePromises.get(key);\n            if (responseHandler) {\n                responseHandler.reject(new Error('The received response has neither a result nor an error property.'));\n            }\n        }\n    }\n    function stringifyTrace(params) {\n        if (params === undefined || params === null) {\n            return undefined;\n        }\n        switch (trace) {\n            case Trace.Verbose:\n                return JSON.stringify(params, null, 4);\n            case Trace.Compact:\n                return JSON.stringify(params);\n            default:\n                return undefined;\n        }\n    }\n    function traceSendingRequest(message) {\n        if (trace === Trace.Off || !tracer) {\n            return;\n        }\n        if (traceFormat === TraceFormat.Text) {\n            let data = undefined;\n            if ((trace === Trace.Verbose || trace === Trace.Compact) && message.params) {\n                data = `Params: ${stringifyTrace(message.params)}\\n\\n`;\n            }\n            tracer.log(`Sending request '${message.method} - (${message.id})'.`, data);\n        }\n        else {\n            logLSPMessage('send-request', message);\n        }\n    }\n    function traceSendingNotification(message) {\n        if (trace === Trace.Off || !tracer) {\n            return;\n        }\n        if (traceFormat === TraceFormat.Text) {\n            let data = undefined;\n            if (trace === Trace.Verbose || trace === Trace.Compact) {\n                if (message.params) {\n                    data = `Params: ${stringifyTrace(message.params)}\\n\\n`;\n                }\n                else {\n                    data = 'No parameters provided.\\n\\n';\n                }\n            }\n            tracer.log(`Sending notification '${message.method}'.`, data);\n        }\n        else {\n            logLSPMessage('send-notification', message);\n        }\n    }\n    function traceSendingResponse(message, method, startTime) {\n        if (trace === Trace.Off || !tracer) {\n            return;\n        }\n        if (traceFormat === TraceFormat.Text) {\n            let data = undefined;\n            if (trace === Trace.Verbose || trace === Trace.Compact) {\n                if (message.error && message.error.data) {\n                    data = `Error data: ${stringifyTrace(message.error.data)}\\n\\n`;\n                }\n                else {\n                    if (message.result) {\n                        data = `Result: ${stringifyTrace(message.result)}\\n\\n`;\n                    }\n                    else if (message.error === undefined) {\n                        data = 'No result returned.\\n\\n';\n                    }\n                }\n            }\n            tracer.log(`Sending response '${method} - (${message.id})'. Processing request took ${Date.now() - startTime}ms`, data);\n        }\n        else {\n            logLSPMessage('send-response', message);\n        }\n    }\n    function traceReceivedRequest(message) {\n        if (trace === Trace.Off || !tracer) {\n            return;\n        }\n        if (traceFormat === TraceFormat.Text) {\n            let data = undefined;\n            if ((trace === Trace.Verbose || trace === Trace.Compact) && message.params) {\n                data = `Params: ${stringifyTrace(message.params)}\\n\\n`;\n            }\n            tracer.log(`Received request '${message.method} - (${message.id})'.`, data);\n        }\n        else {\n            logLSPMessage('receive-request', message);\n        }\n    }\n    function traceReceivedNotification(message) {\n        if (trace === Trace.Off || !tracer || message.method === LogTraceNotification.type.method) {\n            return;\n        }\n        if (traceFormat === TraceFormat.Text) {\n            let data = undefined;\n            if (trace === Trace.Verbose || trace === Trace.Compact) {\n                if (message.params) {\n                    data = `Params: ${stringifyTrace(message.params)}\\n\\n`;\n                }\n                else {\n                    data = 'No parameters provided.\\n\\n';\n                }\n            }\n            tracer.log(`Received notification '${message.method}'.`, data);\n        }\n        else {\n            logLSPMessage('receive-notification', message);\n        }\n    }\n    function traceReceivedResponse(message, responsePromise) {\n        if (trace === Trace.Off || !tracer) {\n            return;\n        }\n        if (traceFormat === TraceFormat.Text) {\n            let data = undefined;\n            if (trace === Trace.Verbose || trace === Trace.Compact) {\n                if (message.error && message.error.data) {\n                    data = `Error data: ${stringifyTrace(message.error.data)}\\n\\n`;\n                }\n                else {\n                    if (message.result) {\n                        data = `Result: ${stringifyTrace(message.result)}\\n\\n`;\n                    }\n                    else if (message.error === undefined) {\n                        data = 'No result returned.\\n\\n';\n                    }\n                }\n            }\n            if (responsePromise) {\n                const error = message.error ? ` Request failed: ${message.error.message} (${message.error.code}).` : '';\n                tracer.log(`Received response '${responsePromise.method} - (${message.id})' in ${Date.now() - responsePromise.timerStart}ms.${error}`, data);\n            }\n            else {\n                tracer.log(`Received response ${message.id} without active response promise.`, data);\n            }\n        }\n        else {\n            logLSPMessage('receive-response', message);\n        }\n    }\n    function logLSPMessage(type, message) {\n        if (!tracer || trace === Trace.Off) {\n            return;\n        }\n        const lspMessage = {\n            isLSPMessage: true,\n            type,\n            message,\n            timestamp: Date.now()\n        };\n        tracer.log(lspMessage);\n    }\n    function throwIfClosedOrDisposed() {\n        if (isClosed()) {\n            throw new ConnectionError(ConnectionErrors.Closed, 'Connection is closed.');\n        }\n        if (isDisposed()) {\n            throw new ConnectionError(ConnectionErrors.Disposed, 'Connection is disposed.');\n        }\n    }\n    function throwIfListening() {\n        if (isListening()) {\n            throw new ConnectionError(ConnectionErrors.AlreadyListening, 'Connection is already listening');\n        }\n    }\n    function throwIfNotListening() {\n        if (!isListening()) {\n            throw new Error('Call listen() first.');\n        }\n    }\n    function undefinedToNull(param) {\n        if (param === undefined) {\n            return null;\n        }\n        else {\n            return param;\n        }\n    }\n    function nullToUndefined(param) {\n        if (param === null) {\n            return undefined;\n        }\n        else {\n            return param;\n        }\n    }\n    function isNamedParam(param) {\n        return param !== undefined && param !== null && !Array.isArray(param) && typeof param === 'object';\n    }\n    function computeSingleParam(parameterStructures, param) {\n        switch (parameterStructures) {\n            case messages_1.ParameterStructures.auto:\n                if (isNamedParam(param)) {\n                    return nullToUndefined(param);\n                }\n                else {\n                    return [undefinedToNull(param)];\n                }\n            case messages_1.ParameterStructures.byName:\n                if (!isNamedParam(param)) {\n                    throw new Error(`Received parameters by name but param is not an object literal.`);\n                }\n                return nullToUndefined(param);\n            case messages_1.ParameterStructures.byPosition:\n                return [undefinedToNull(param)];\n            default:\n                throw new Error(`Unknown parameter structure ${parameterStructures.toString()}`);\n        }\n    }\n    function computeMessageParams(type, params) {\n        let result;\n        const numberOfParams = type.numberOfParams;\n        switch (numberOfParams) {\n            case 0:\n                result = undefined;\n                break;\n            case 1:\n                result = computeSingleParam(type.parameterStructures, params[0]);\n                break;\n            default:\n                result = [];\n                for (let i = 0; i < params.length && i < numberOfParams; i++) {\n                    result.push(undefinedToNull(params[i]));\n                }\n                if (params.length < numberOfParams) {\n                    for (let i = params.length; i < numberOfParams; i++) {\n                        result.push(null);\n                    }\n                }\n                break;\n        }\n        return result;\n    }\n    const connection = {\n        sendNotification: (type, ...args) => {\n            throwIfClosedOrDisposed();\n            let method;\n            let messageParams;\n            if (Is.string(type)) {\n                method = type;\n                const first = args[0];\n                let paramStart = 0;\n                let parameterStructures = messages_1.ParameterStructures.auto;\n                if (messages_1.ParameterStructures.is(first)) {\n                    paramStart = 1;\n                    parameterStructures = first;\n                }\n                let paramEnd = args.length;\n                const numberOfParams = paramEnd - paramStart;\n                switch (numberOfParams) {\n                    case 0:\n                        messageParams = undefined;\n                        break;\n                    case 1:\n                        messageParams = computeSingleParam(parameterStructures, args[paramStart]);\n                        break;\n                    default:\n                        if (parameterStructures === messages_1.ParameterStructures.byName) {\n                            throw new Error(`Received ${numberOfParams} parameters for 'by Name' notification parameter structure.`);\n                        }\n                        messageParams = args.slice(paramStart, paramEnd).map(value => undefinedToNull(value));\n                        break;\n                }\n            }\n            else {\n                const params = args;\n                method = type.method;\n                messageParams = computeMessageParams(type, params);\n            }\n            const notificationMessage = {\n                jsonrpc: version,\n                method: method,\n                params: messageParams\n            };\n            traceSendingNotification(notificationMessage);\n            return messageWriter.write(notificationMessage).catch((error) => {\n                logger.error(`Sending notification failed.`);\n                throw error;\n            });\n        },\n        onNotification: (type, handler) => {\n            throwIfClosedOrDisposed();\n            let method;\n            if (Is.func(type)) {\n                starNotificationHandler = type;\n            }\n            else if (handler) {\n                if (Is.string(type)) {\n                    method = type;\n                    notificationHandlers.set(type, { type: undefined, handler });\n                }\n                else {\n                    method = type.method;\n                    notificationHandlers.set(type.method, { type, handler });\n                }\n            }\n            return {\n                dispose: () => {\n                    if (method !== undefined) {\n                        notificationHandlers.delete(method);\n                    }\n                    else {\n                        starNotificationHandler = undefined;\n                    }\n                }\n            };\n        },\n        onProgress: (_type, token, handler) => {\n            if (progressHandlers.has(token)) {\n                throw new Error(`Progress handler for token ${token} already registered`);\n            }\n            progressHandlers.set(token, handler);\n            return {\n                dispose: () => {\n                    progressHandlers.delete(token);\n                }\n            };\n        },\n        sendProgress: (_type, token, value) => {\n            // This should not await but simple return to ensure that we don't have another\n            // async scheduling. Otherwise one send could overtake another send.\n            return connection.sendNotification(ProgressNotification.type, { token, value });\n        },\n        onUnhandledProgress: unhandledProgressEmitter.event,\n        sendRequest: (type, ...args) => {\n            throwIfClosedOrDisposed();\n            throwIfNotListening();\n            let method;\n            let messageParams;\n            let token = undefined;\n            if (Is.string(type)) {\n                method = type;\n                const first = args[0];\n                const last = args[args.length - 1];\n                let paramStart = 0;\n                let parameterStructures = messages_1.ParameterStructures.auto;\n                if (messages_1.ParameterStructures.is(first)) {\n                    paramStart = 1;\n                    parameterStructures = first;\n                }\n                let paramEnd = args.length;\n                if (cancellation_1.CancellationToken.is(last)) {\n                    paramEnd = paramEnd - 1;\n                    token = last;\n                }\n                const numberOfParams = paramEnd - paramStart;\n                switch (numberOfParams) {\n                    case 0:\n                        messageParams = undefined;\n                        break;\n                    case 1:\n                        messageParams = computeSingleParam(parameterStructures, args[paramStart]);\n                        break;\n                    default:\n                        if (parameterStructures === messages_1.ParameterStructures.byName) {\n                            throw new Error(`Received ${numberOfParams} parameters for 'by Name' request parameter structure.`);\n                        }\n                        messageParams = args.slice(paramStart, paramEnd).map(value => undefinedToNull(value));\n                        break;\n                }\n            }\n            else {\n                const params = args;\n                method = type.method;\n                messageParams = computeMessageParams(type, params);\n                const numberOfParams = type.numberOfParams;\n                token = cancellation_1.CancellationToken.is(params[numberOfParams]) ? params[numberOfParams] : undefined;\n            }\n            const id = sequenceNumber++;\n            let disposable;\n            if (token) {\n                disposable = token.onCancellationRequested(() => {\n                    const p = cancellationStrategy.sender.sendCancellation(connection, id);\n                    if (p === undefined) {\n                        logger.log(`Received no promise from cancellation strategy when cancelling id ${id}`);\n                        return Promise.resolve();\n                    }\n                    else {\n                        return p.catch(() => {\n                            logger.log(`Sending cancellation messages for id ${id} failed`);\n                        });\n                    }\n                });\n            }\n            const requestMessage = {\n                jsonrpc: version,\n                id: id,\n                method: method,\n                params: messageParams\n            };\n            traceSendingRequest(requestMessage);\n            if (typeof cancellationStrategy.sender.enableCancellation === 'function') {\n                cancellationStrategy.sender.enableCancellation(requestMessage);\n            }\n            return new Promise(async (resolve, reject) => {\n                const resolveWithCleanup = (r) => {\n                    resolve(r);\n                    cancellationStrategy.sender.cleanup(id);\n                    disposable?.dispose();\n                };\n                const rejectWithCleanup = (r) => {\n                    reject(r);\n                    cancellationStrategy.sender.cleanup(id);\n                    disposable?.dispose();\n                };\n                const responsePromise = { method: method, timerStart: Date.now(), resolve: resolveWithCleanup, reject: rejectWithCleanup };\n                try {\n                    await messageWriter.write(requestMessage);\n                    responsePromises.set(id, responsePromise);\n                }\n                catch (error) {\n                    logger.error(`Sending request failed.`);\n                    // Writing the message failed. So we need to reject the promise.\n                    responsePromise.reject(new messages_1.ResponseError(messages_1.ErrorCodes.MessageWriteError, error.message ? error.message : 'Unknown reason'));\n                    throw error;\n                }\n            });\n        },\n        onRequest: (type, handler) => {\n            throwIfClosedOrDisposed();\n            let method = null;\n            if (StarRequestHandler.is(type)) {\n                method = undefined;\n                starRequestHandler = type;\n            }\n            else if (Is.string(type)) {\n                method = null;\n                if (handler !== undefined) {\n                    method = type;\n                    requestHandlers.set(type, { handler: handler, type: undefined });\n                }\n            }\n            else {\n                if (handler !== undefined) {\n                    method = type.method;\n                    requestHandlers.set(type.method, { type, handler });\n                }\n            }\n            return {\n                dispose: () => {\n                    if (method === null) {\n                        return;\n                    }\n                    if (method !== undefined) {\n                        requestHandlers.delete(method);\n                    }\n                    else {\n                        starRequestHandler = undefined;\n                    }\n                }\n            };\n        },\n        hasPendingResponse: () => {\n            return responsePromises.size > 0;\n        },\n        trace: async (_value, _tracer, sendNotificationOrTraceOptions) => {\n            let _sendNotification = false;\n            let _traceFormat = TraceFormat.Text;\n            if (sendNotificationOrTraceOptions !== undefined) {\n                if (Is.boolean(sendNotificationOrTraceOptions)) {\n                    _sendNotification = sendNotificationOrTraceOptions;\n                }\n                else {\n                    _sendNotification = sendNotificationOrTraceOptions.sendNotification || false;\n                    _traceFormat = sendNotificationOrTraceOptions.traceFormat || TraceFormat.Text;\n                }\n            }\n            trace = _value;\n            traceFormat = _traceFormat;\n            if (trace === Trace.Off) {\n                tracer = undefined;\n            }\n            else {\n                tracer = _tracer;\n            }\n            if (_sendNotification && !isClosed() && !isDisposed()) {\n                await connection.sendNotification(SetTraceNotification.type, { value: Trace.toString(_value) });\n            }\n        },\n        onError: errorEmitter.event,\n        onClose: closeEmitter.event,\n        onUnhandledNotification: unhandledNotificationEmitter.event,\n        onDispose: disposeEmitter.event,\n        end: () => {\n            messageWriter.end();\n        },\n        dispose: () => {\n            if (isDisposed()) {\n                return;\n            }\n            state = ConnectionState.Disposed;\n            disposeEmitter.fire(undefined);\n            const error = new messages_1.ResponseError(messages_1.ErrorCodes.PendingResponseRejected, 'Pending response rejected since connection got disposed');\n            for (const promise of responsePromises.values()) {\n                promise.reject(error);\n            }\n            responsePromises = new Map();\n            requestTokens = new Map();\n            knownCanceledRequests = new Set();\n            messageQueue = new linkedMap_1.LinkedMap();\n            // Test for backwards compatibility\n            if (Is.func(messageWriter.dispose)) {\n                messageWriter.dispose();\n            }\n            if (Is.func(messageReader.dispose)) {\n                messageReader.dispose();\n            }\n        },\n        listen: () => {\n            throwIfClosedOrDisposed();\n            throwIfListening();\n            state = ConnectionState.Listening;\n            messageReader.listen(callback);\n        },\n        inspect: () => {\n            // eslint-disable-next-line no-console\n            (0, ral_1.default)().console.log('inspect');\n        }\n    };\n    connection.onNotification(LogTraceNotification.type, (params) => {\n        if (trace === Trace.Off || !tracer) {\n            return;\n        }\n        const verbose = trace === Trace.Verbose || trace === Trace.Compact;\n        tracer.log(params.message, verbose ? params.verbose : undefined);\n    });\n    connection.onNotification(ProgressNotification.type, (params) => {\n        const handler = progressHandlers.get(params.token);\n        if (handler) {\n            handler(params.value);\n        }\n        else {\n            unhandledProgressEmitter.fire(params);\n        }\n    });\n    return connection;\n}\nexports.createMessageConnection = createMessageConnection;\n", "\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\n/// <reference path=\"../../typings/thenable.d.ts\" />\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ProgressType = exports.ProgressToken = exports.createMessageConnection = exports.NullLogger = exports.ConnectionOptions = exports.ConnectionStrategy = exports.AbstractMessageBuffer = exports.WriteableStreamMessageWriter = exports.AbstractMessageWriter = exports.MessageWriter = exports.ReadableStreamMessageReader = exports.AbstractMessageReader = exports.MessageReader = exports.SharedArrayReceiverStrategy = exports.SharedArraySenderStrategy = exports.CancellationToken = exports.CancellationTokenSource = exports.Emitter = exports.Event = exports.Disposable = exports.LRUCache = exports.Touch = exports.LinkedMap = exports.ParameterStructures = exports.NotificationType9 = exports.NotificationType8 = exports.NotificationType7 = exports.NotificationType6 = exports.NotificationType5 = exports.NotificationType4 = exports.NotificationType3 = exports.NotificationType2 = exports.NotificationType1 = exports.NotificationType0 = exports.NotificationType = exports.ErrorCodes = exports.ResponseError = exports.RequestType9 = exports.RequestType8 = exports.RequestType7 = exports.RequestType6 = exports.RequestType5 = exports.RequestType4 = exports.RequestType3 = exports.RequestType2 = exports.RequestType1 = exports.RequestType0 = exports.RequestType = exports.Message = exports.RAL = void 0;\nexports.MessageStrategy = exports.CancellationStrategy = exports.CancellationSenderStrategy = exports.CancellationReceiverStrategy = exports.ConnectionError = exports.ConnectionErrors = exports.LogTraceNotification = exports.SetTraceNotification = exports.TraceFormat = exports.TraceValues = exports.Trace = void 0;\nconst messages_1 = require(\"./messages\");\nObject.defineProperty(exports, \"Message\", { enumerable: true, get: function () { return messages_1.Message; } });\nObject.defineProperty(exports, \"RequestType\", { enumerable: true, get: function () { return messages_1.RequestType; } });\nObject.defineProperty(exports, \"RequestType0\", { enumerable: true, get: function () { return messages_1.RequestType0; } });\nObject.defineProperty(exports, \"RequestType1\", { enumerable: true, get: function () { return messages_1.RequestType1; } });\nObject.defineProperty(exports, \"RequestType2\", { enumerable: true, get: function () { return messages_1.RequestType2; } });\nObject.defineProperty(exports, \"RequestType3\", { enumerable: true, get: function () { return messages_1.RequestType3; } });\nObject.defineProperty(exports, \"RequestType4\", { enumerable: true, get: function () { return messages_1.RequestType4; } });\nObject.defineProperty(exports, \"RequestType5\", { enumerable: true, get: function () { return messages_1.RequestType5; } });\nObject.defineProperty(exports, \"RequestType6\", { enumerable: true, get: function () { return messages_1.RequestType6; } });\nObject.defineProperty(exports, \"RequestType7\", { enumerable: true, get: function () { return messages_1.RequestType7; } });\nObject.defineProperty(exports, \"RequestType8\", { enumerable: true, get: function () { return messages_1.RequestType8; } });\nObject.defineProperty(exports, \"RequestType9\", { enumerable: true, get: function () { return messages_1.RequestType9; } });\nObject.defineProperty(exports, \"ResponseError\", { enumerable: true, get: function () { return messages_1.ResponseError; } });\nObject.defineProperty(exports, \"ErrorCodes\", { enumerable: true, get: function () { return messages_1.ErrorCodes; } });\nObject.defineProperty(exports, \"NotificationType\", { enumerable: true, get: function () { return messages_1.NotificationType; } });\nObject.defineProperty(exports, \"NotificationType0\", { enumerable: true, get: function () { return messages_1.NotificationType0; } });\nObject.defineProperty(exports, \"NotificationType1\", { enumerable: true, get: function () { return messages_1.NotificationType1; } });\nObject.defineProperty(exports, \"NotificationType2\", { enumerable: true, get: function () { return messages_1.NotificationType2; } });\nObject.defineProperty(exports, \"NotificationType3\", { enumerable: true, get: function () { return messages_1.NotificationType3; } });\nObject.defineProperty(exports, \"NotificationType4\", { enumerable: true, get: function () { return messages_1.NotificationType4; } });\nObject.defineProperty(exports, \"NotificationType5\", { enumerable: true, get: function () { return messages_1.NotificationType5; } });\nObject.defineProperty(exports, \"NotificationType6\", { enumerable: true, get: function () { return messages_1.NotificationType6; } });\nObject.defineProperty(exports, \"NotificationType7\", { enumerable: true, get: function () { return messages_1.NotificationType7; } });\nObject.defineProperty(exports, \"NotificationType8\", { enumerable: true, get: function () { return messages_1.NotificationType8; } });\nObject.defineProperty(exports, \"NotificationType9\", { enumerable: true, get: function () { return messages_1.NotificationType9; } });\nObject.defineProperty(exports, \"ParameterStructures\", { enumerable: true, get: function () { return messages_1.ParameterStructures; } });\nconst linkedMap_1 = require(\"./linkedMap\");\nObject.defineProperty(exports, \"LinkedMap\", { enumerable: true, get: function () { return linkedMap_1.LinkedMap; } });\nObject.defineProperty(exports, \"LRUCache\", { enumerable: true, get: function () { return linkedMap_1.LRUCache; } });\nObject.defineProperty(exports, \"Touch\", { enumerable: true, get: function () { return linkedMap_1.Touch; } });\nconst disposable_1 = require(\"./disposable\");\nObject.defineProperty(exports, \"Disposable\", { enumerable: true, get: function () { return disposable_1.Disposable; } });\nconst events_1 = require(\"./events\");\nObject.defineProperty(exports, \"Event\", { enumerable: true, get: function () { return events_1.Event; } });\nObject.defineProperty(exports, \"Emitter\", { enumerable: true, get: function () { return events_1.Emitter; } });\nconst cancellation_1 = require(\"./cancellation\");\nObject.defineProperty(exports, \"CancellationTokenSource\", { enumerable: true, get: function () { return cancellation_1.CancellationTokenSource; } });\nObject.defineProperty(exports, \"CancellationToken\", { enumerable: true, get: function () { return cancellation_1.CancellationToken; } });\nconst sharedArrayCancellation_1 = require(\"./sharedArrayCancellation\");\nObject.defineProperty(exports, \"SharedArraySenderStrategy\", { enumerable: true, get: function () { return sharedArrayCancellation_1.SharedArraySenderStrategy; } });\nObject.defineProperty(exports, \"SharedArrayReceiverStrategy\", { enumerable: true, get: function () { return sharedArrayCancellation_1.SharedArrayReceiverStrategy; } });\nconst messageReader_1 = require(\"./messageReader\");\nObject.defineProperty(exports, \"MessageReader\", { enumerable: true, get: function () { return messageReader_1.MessageReader; } });\nObject.defineProperty(exports, \"AbstractMessageReader\", { enumerable: true, get: function () { return messageReader_1.AbstractMessageReader; } });\nObject.defineProperty(exports, \"ReadableStreamMessageReader\", { enumerable: true, get: function () { return messageReader_1.ReadableStreamMessageReader; } });\nconst messageWriter_1 = require(\"./messageWriter\");\nObject.defineProperty(exports, \"MessageWriter\", { enumerable: true, get: function () { return messageWriter_1.MessageWriter; } });\nObject.defineProperty(exports, \"AbstractMessageWriter\", { enumerable: true, get: function () { return messageWriter_1.AbstractMessageWriter; } });\nObject.defineProperty(exports, \"WriteableStreamMessageWriter\", { enumerable: true, get: function () { return messageWriter_1.WriteableStreamMessageWriter; } });\nconst messageBuffer_1 = require(\"./messageBuffer\");\nObject.defineProperty(exports, \"AbstractMessageBuffer\", { enumerable: true, get: function () { return messageBuffer_1.AbstractMessageBuffer; } });\nconst connection_1 = require(\"./connection\");\nObject.defineProperty(exports, \"ConnectionStrategy\", { enumerable: true, get: function () { return connection_1.ConnectionStrategy; } });\nObject.defineProperty(exports, \"ConnectionOptions\", { enumerable: true, get: function () { return connection_1.ConnectionOptions; } });\nObject.defineProperty(exports, \"NullLogger\", { enumerable: true, get: function () { return connection_1.NullLogger; } });\nObject.defineProperty(exports, \"createMessageConnection\", { enumerable: true, get: function () { return connection_1.createMessageConnection; } });\nObject.defineProperty(exports, \"ProgressToken\", { enumerable: true, get: function () { return connection_1.ProgressToken; } });\nObject.defineProperty(exports, \"ProgressType\", { enumerable: true, get: function () { return connection_1.ProgressType; } });\nObject.defineProperty(exports, \"Trace\", { enumerable: true, get: function () { return connection_1.Trace; } });\nObject.defineProperty(exports, \"TraceValues\", { enumerable: true, get: function () { return connection_1.TraceValues; } });\nObject.defineProperty(exports, \"TraceFormat\", { enumerable: true, get: function () { return connection_1.TraceFormat; } });\nObject.defineProperty(exports, \"SetTraceNotification\", { enumerable: true, get: function () { return connection_1.SetTraceNotification; } });\nObject.defineProperty(exports, \"LogTraceNotification\", { enumerable: true, get: function () { return connection_1.LogTraceNotification; } });\nObject.defineProperty(exports, \"ConnectionErrors\", { enumerable: true, get: function () { return connection_1.ConnectionErrors; } });\nObject.defineProperty(exports, \"ConnectionError\", { enumerable: true, get: function () { return connection_1.ConnectionError; } });\nObject.defineProperty(exports, \"CancellationReceiverStrategy\", { enumerable: true, get: function () { return connection_1.CancellationReceiverStrategy; } });\nObject.defineProperty(exports, \"CancellationSenderStrategy\", { enumerable: true, get: function () { return connection_1.CancellationSenderStrategy; } });\nObject.defineProperty(exports, \"CancellationStrategy\", { enumerable: true, get: function () { return connection_1.CancellationStrategy; } });\nObject.defineProperty(exports, \"MessageStrategy\", { enumerable: true, get: function () { return connection_1.MessageStrategy; } });\nconst ral_1 = require(\"./ral\");\nexports.RAL = ral_1.default;\n", "\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst util_1 = require(\"util\");\nconst api_1 = require(\"../common/api\");\nclass MessageBuffer extends api_1.AbstractMessageBuffer {\n    constructor(encoding = 'utf-8') {\n        super(encoding);\n    }\n    emptyBuffer() {\n        return MessageBuffer.emptyBuffer;\n    }\n    fromString(value, encoding) {\n        return Buffer.from(value, encoding);\n    }\n    toString(value, encoding) {\n        if (value instanceof Buffer) {\n            return value.toString(encoding);\n        }\n        else {\n            return new util_1.TextDecoder(encoding).decode(value);\n        }\n    }\n    asNative(buffer, length) {\n        if (length === undefined) {\n            return buffer instanceof Buffer ? buffer : Buffer.from(buffer);\n        }\n        else {\n            return buffer instanceof Buffer ? buffer.slice(0, length) : Buffer.from(buffer, 0, length);\n        }\n    }\n    allocNative(length) {\n        return Buffer.allocUnsafe(length);\n    }\n}\nMessageBuffer.emptyBuffer = Buffer.allocUnsafe(0);\nclass ReadableStreamWrapper {\n    constructor(stream) {\n        this.stream = stream;\n    }\n    onClose(listener) {\n        this.stream.on('close', listener);\n        return api_1.Disposable.create(() => this.stream.off('close', listener));\n    }\n    onError(listener) {\n        this.stream.on('error', listener);\n        return api_1.Disposable.create(() => this.stream.off('error', listener));\n    }\n    onEnd(listener) {\n        this.stream.on('end', listener);\n        return api_1.Disposable.create(() => this.stream.off('end', listener));\n    }\n    onData(listener) {\n        this.stream.on('data', listener);\n        return api_1.Disposable.create(() => this.stream.off('data', listener));\n    }\n}\nclass WritableStreamWrapper {\n    constructor(stream) {\n        this.stream = stream;\n    }\n    onClose(listener) {\n        this.stream.on('close', listener);\n        return api_1.Disposable.create(() => this.stream.off('close', listener));\n    }\n    onError(listener) {\n        this.stream.on('error', listener);\n        return api_1.Disposable.create(() => this.stream.off('error', listener));\n    }\n    onEnd(listener) {\n        this.stream.on('end', listener);\n        return api_1.Disposable.create(() => this.stream.off('end', listener));\n    }\n    write(data, encoding) {\n        return new Promise((resolve, reject) => {\n            const callback = (error) => {\n                if (error === undefined || error === null) {\n                    resolve();\n                }\n                else {\n                    reject(error);\n                }\n            };\n            if (typeof data === 'string') {\n                this.stream.write(data, encoding, callback);\n            }\n            else {\n                this.stream.write(data, callback);\n            }\n        });\n    }\n    end() {\n        this.stream.end();\n    }\n}\nconst _ril = Object.freeze({\n    messageBuffer: Object.freeze({\n        create: (encoding) => new MessageBuffer(encoding)\n    }),\n    applicationJson: Object.freeze({\n        encoder: Object.freeze({\n            name: 'application/json',\n            encode: (msg, options) => {\n                try {\n                    return Promise.resolve(Buffer.from(JSON.stringify(msg, undefined, 0), options.charset));\n                }\n                catch (err) {\n                    return Promise.reject(err);\n                }\n            }\n        }),\n        decoder: Object.freeze({\n            name: 'application/json',\n            decode: (buffer, options) => {\n                try {\n                    if (buffer instanceof Buffer) {\n                        return Promise.resolve(JSON.parse(buffer.toString(options.charset)));\n                    }\n                    else {\n                        return Promise.resolve(JSON.parse(new util_1.TextDecoder(options.charset).decode(buffer)));\n                    }\n                }\n                catch (err) {\n                    return Promise.reject(err);\n                }\n            }\n        })\n    }),\n    stream: Object.freeze({\n        asReadableStream: (stream) => new ReadableStreamWrapper(stream),\n        asWritableStream: (stream) => new WritableStreamWrapper(stream)\n    }),\n    console: console,\n    timer: Object.freeze({\n        setTimeout(callback, ms, ...args) {\n            const handle = setTimeout(callback, ms, ...args);\n            return { dispose: () => clearTimeout(handle) };\n        },\n        setImmediate(callback, ...args) {\n            const handle = setImmediate(callback, ...args);\n            return { dispose: () => clearImmediate(handle) };\n        },\n        setInterval(callback, ms, ...args) {\n            const handle = setInterval(callback, ms, ...args);\n            return { dispose: () => clearInterval(handle) };\n        }\n    })\n});\nfunction RIL() {\n    return _ril;\n}\n(function (RIL) {\n    function install() {\n        api_1.RAL.install(_ril);\n    }\n    RIL.install = install;\n})(RIL || (RIL = {}));\nexports.default = RIL;\n", "\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createMessageConnection = exports.createServerSocketTransport = exports.createClientSocketTransport = exports.createServerPipeTransport = exports.createClientPipeTransport = exports.generateRandomPipeName = exports.StreamMessageWriter = exports.StreamMessageReader = exports.SocketMessageWriter = exports.SocketMessageReader = exports.PortMessageWriter = exports.PortMessageReader = exports.IPCMessageWriter = exports.IPCMessageReader = void 0;\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ----------------------------------------------------------------------------------------- */\nconst ril_1 = require(\"./ril\");\n// Install the node runtime abstract.\nril_1.default.install();\nconst path = require(\"path\");\nconst os = require(\"os\");\nconst crypto_1 = require(\"crypto\");\nconst net_1 = require(\"net\");\nconst api_1 = require(\"../common/api\");\n__exportStar(require(\"../common/api\"), exports);\nclass IPCMessageReader extends api_1.AbstractMessageReader {\n    constructor(process) {\n        super();\n        this.process = process;\n        let eventEmitter = this.process;\n        eventEmitter.on('error', (error) => this.fireError(error));\n        eventEmitter.on('close', () => this.fireClose());\n    }\n    listen(callback) {\n        this.process.on('message', callback);\n        return api_1.Disposable.create(() => this.process.off('message', callback));\n    }\n}\nexports.IPCMessageReader = IPCMessageReader;\nclass IPCMessageWriter extends api_1.AbstractMessageWriter {\n    constructor(process) {\n        super();\n        this.process = process;\n        this.errorCount = 0;\n        const eventEmitter = this.process;\n        eventEmitter.on('error', (error) => this.fireError(error));\n        eventEmitter.on('close', () => this.fireClose);\n    }\n    write(msg) {\n        try {\n            if (typeof this.process.send === 'function') {\n                this.process.send(msg, undefined, undefined, (error) => {\n                    if (error) {\n                        this.errorCount++;\n                        this.handleError(error, msg);\n                    }\n                    else {\n                        this.errorCount = 0;\n                    }\n                });\n            }\n            return Promise.resolve();\n        }\n        catch (error) {\n            this.handleError(error, msg);\n            return Promise.reject(error);\n        }\n    }\n    handleError(error, msg) {\n        this.errorCount++;\n        this.fireError(error, msg, this.errorCount);\n    }\n    end() {\n    }\n}\nexports.IPCMessageWriter = IPCMessageWriter;\nclass PortMessageReader extends api_1.AbstractMessageReader {\n    constructor(port) {\n        super();\n        this.onData = new api_1.Emitter;\n        port.on('close', () => this.fireClose);\n        port.on('error', (error) => this.fireError(error));\n        port.on('message', (message) => {\n            this.onData.fire(message);\n        });\n    }\n    listen(callback) {\n        return this.onData.event(callback);\n    }\n}\nexports.PortMessageReader = PortMessageReader;\nclass PortMessageWriter extends api_1.AbstractMessageWriter {\n    constructor(port) {\n        super();\n        this.port = port;\n        this.errorCount = 0;\n        port.on('close', () => this.fireClose());\n        port.on('error', (error) => this.fireError(error));\n    }\n    write(msg) {\n        try {\n            this.port.postMessage(msg);\n            return Promise.resolve();\n        }\n        catch (error) {\n            this.handleError(error, msg);\n            return Promise.reject(error);\n        }\n    }\n    handleError(error, msg) {\n        this.errorCount++;\n        this.fireError(error, msg, this.errorCount);\n    }\n    end() {\n    }\n}\nexports.PortMessageWriter = PortMessageWriter;\nclass SocketMessageReader extends api_1.ReadableStreamMessageReader {\n    constructor(socket, encoding = 'utf-8') {\n        super((0, ril_1.default)().stream.asReadableStream(socket), encoding);\n    }\n}\nexports.SocketMessageReader = SocketMessageReader;\nclass SocketMessageWriter extends api_1.WriteableStreamMessageWriter {\n    constructor(socket, options) {\n        super((0, ril_1.default)().stream.asWritableStream(socket), options);\n        this.socket = socket;\n    }\n    dispose() {\n        super.dispose();\n        this.socket.destroy();\n    }\n}\nexports.SocketMessageWriter = SocketMessageWriter;\nclass StreamMessageReader extends api_1.ReadableStreamMessageReader {\n    constructor(readable, encoding) {\n        super((0, ril_1.default)().stream.asReadableStream(readable), encoding);\n    }\n}\nexports.StreamMessageReader = StreamMessageReader;\nclass StreamMessageWriter extends api_1.WriteableStreamMessageWriter {\n    constructor(writable, options) {\n        super((0, ril_1.default)().stream.asWritableStream(writable), options);\n    }\n}\nexports.StreamMessageWriter = StreamMessageWriter;\nconst XDG_RUNTIME_DIR = process.env['XDG_RUNTIME_DIR'];\nconst safeIpcPathLengths = new Map([\n    ['linux', 107],\n    ['darwin', 103]\n]);\nfunction generateRandomPipeName() {\n    const randomSuffix = (0, crypto_1.randomBytes)(21).toString('hex');\n    if (process.platform === 'win32') {\n        return `\\\\\\\\.\\\\pipe\\\\vscode-jsonrpc-${randomSuffix}-sock`;\n    }\n    let result;\n    if (XDG_RUNTIME_DIR) {\n        result = path.join(XDG_RUNTIME_DIR, `vscode-ipc-${randomSuffix}.sock`);\n    }\n    else {\n        result = path.join(os.tmpdir(), `vscode-${randomSuffix}.sock`);\n    }\n    const limit = safeIpcPathLengths.get(process.platform);\n    if (limit !== undefined && result.length > limit) {\n        (0, ril_1.default)().console.warn(`WARNING: IPC handle \"${result}\" is longer than ${limit} characters.`);\n    }\n    return result;\n}\nexports.generateRandomPipeName = generateRandomPipeName;\nfunction createClientPipeTransport(pipeName, encoding = 'utf-8') {\n    let connectResolve;\n    const connected = new Promise((resolve, _reject) => {\n        connectResolve = resolve;\n    });\n    return new Promise((resolve, reject) => {\n        let server = (0, net_1.createServer)((socket) => {\n            server.close();\n            connectResolve([\n                new SocketMessageReader(socket, encoding),\n                new SocketMessageWriter(socket, encoding)\n            ]);\n        });\n        server.on('error', reject);\n        server.listen(pipeName, () => {\n            server.removeListener('error', reject);\n            resolve({\n                onConnected: () => { return connected; }\n            });\n        });\n    });\n}\nexports.createClientPipeTransport = createClientPipeTransport;\nfunction createServerPipeTransport(pipeName, encoding = 'utf-8') {\n    const socket = (0, net_1.createConnection)(pipeName);\n    return [\n        new SocketMessageReader(socket, encoding),\n        new SocketMessageWriter(socket, encoding)\n    ];\n}\nexports.createServerPipeTransport = createServerPipeTransport;\nfunction createClientSocketTransport(port, encoding = 'utf-8') {\n    let connectResolve;\n    const connected = new Promise((resolve, _reject) => {\n        connectResolve = resolve;\n    });\n    return new Promise((resolve, reject) => {\n        const server = (0, net_1.createServer)((socket) => {\n            server.close();\n            connectResolve([\n                new SocketMessageReader(socket, encoding),\n                new SocketMessageWriter(socket, encoding)\n            ]);\n        });\n        server.on('error', reject);\n        server.listen(port, '127.0.0.1', () => {\n            server.removeListener('error', reject);\n            resolve({\n                onConnected: () => { return connected; }\n            });\n        });\n    });\n}\nexports.createClientSocketTransport = createClientSocketTransport;\nfunction createServerSocketTransport(port, encoding = 'utf-8') {\n    const socket = (0, net_1.createConnection)(port, '127.0.0.1');\n    return [\n        new SocketMessageReader(socket, encoding),\n        new SocketMessageWriter(socket, encoding)\n    ];\n}\nexports.createServerSocketTransport = createServerSocketTransport;\nfunction isReadableStream(value) {\n    const candidate = value;\n    return candidate.read !== undefined && candidate.addListener !== undefined;\n}\nfunction isWritableStream(value) {\n    const candidate = value;\n    return candidate.write !== undefined && candidate.addListener !== undefined;\n}\nfunction createMessageConnection(input, output, logger, options) {\n    if (!logger) {\n        logger = api_1.NullLogger;\n    }\n    const reader = isReadableStream(input) ? new StreamMessageReader(input) : input;\n    const writer = isWritableStream(output) ? new StreamMessageWriter(output) : output;\n    if (api_1.ConnectionStrategy.is(options)) {\n        options = { connectionStrategy: options };\n    }\n    return (0, api_1.createMessageConnection)(reader, writer, logger, options);\n}\nexports.createMessageConnection = createMessageConnection;\n", "/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ----------------------------------------------------------------------------------------- */\n'use strict';\n\nmodule.exports = require('./lib/node/main');", "(function (factory) {\n    if (typeof module === \"object\" && typeof module.exports === \"object\") {\n        var v = factory(require, exports);\n        if (v !== undefined) module.exports = v;\n    }\n    else if (typeof define === \"function\" && define.amd) {\n        define([\"require\", \"exports\"], factory);\n    }\n})(function (require, exports) {\n    /* --------------------------------------------------------------------------------------------\n     * Copyright (c) Microsoft Corporation. All rights reserved.\n     * Licensed under the MIT License. See License.txt in the project root for license information.\n     * ------------------------------------------------------------------------------------------ */\n    'use strict';\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    exports.TextDocument = exports.EOL = exports.WorkspaceFolder = exports.InlineCompletionContext = exports.SelectedCompletionInfo = exports.InlineCompletionTriggerKind = exports.InlineCompletionList = exports.InlineCompletionItem = exports.StringValue = exports.InlayHint = exports.InlayHintLabelPart = exports.InlayHintKind = exports.InlineValueContext = exports.InlineValueEvaluatableExpression = exports.InlineValueVariableLookup = exports.InlineValueText = exports.SemanticTokens = exports.SemanticTokenModifiers = exports.SemanticTokenTypes = exports.SelectionRange = exports.DocumentLink = exports.FormattingOptions = exports.CodeLens = exports.CodeAction = exports.CodeActionContext = exports.CodeActionTriggerKind = exports.CodeActionKind = exports.DocumentSymbol = exports.WorkspaceSymbol = exports.SymbolInformation = exports.SymbolTag = exports.SymbolKind = exports.DocumentHighlight = exports.DocumentHighlightKind = exports.SignatureInformation = exports.ParameterInformation = exports.Hover = exports.MarkedString = exports.CompletionList = exports.CompletionItem = exports.CompletionItemLabelDetails = exports.InsertTextMode = exports.InsertReplaceEdit = exports.CompletionItemTag = exports.InsertTextFormat = exports.CompletionItemKind = exports.MarkupContent = exports.MarkupKind = exports.TextDocumentItem = exports.OptionalVersionedTextDocumentIdentifier = exports.VersionedTextDocumentIdentifier = exports.TextDocumentIdentifier = exports.WorkspaceChange = exports.WorkspaceEdit = exports.DeleteFile = exports.RenameFile = exports.CreateFile = exports.TextDocumentEdit = exports.AnnotatedTextEdit = exports.ChangeAnnotationIdentifier = exports.ChangeAnnotation = exports.TextEdit = exports.Command = exports.Diagnostic = exports.CodeDescription = exports.DiagnosticTag = exports.DiagnosticSeverity = exports.DiagnosticRelatedInformation = exports.FoldingRange = exports.FoldingRangeKind = exports.ColorPresentation = exports.ColorInformation = exports.Color = exports.LocationLink = exports.Location = exports.Range = exports.Position = exports.uinteger = exports.integer = exports.URI = exports.DocumentUri = void 0;\n    var DocumentUri;\n    (function (DocumentUri) {\n        function is(value) {\n            return typeof value === 'string';\n        }\n        DocumentUri.is = is;\n    })(DocumentUri || (exports.DocumentUri = DocumentUri = {}));\n    var URI;\n    (function (URI) {\n        function is(value) {\n            return typeof value === 'string';\n        }\n        URI.is = is;\n    })(URI || (exports.URI = URI = {}));\n    var integer;\n    (function (integer) {\n        integer.MIN_VALUE = -2147483648;\n        integer.MAX_VALUE = 2147483647;\n        function is(value) {\n            return typeof value === 'number' && integer.MIN_VALUE <= value && value <= integer.MAX_VALUE;\n        }\n        integer.is = is;\n    })(integer || (exports.integer = integer = {}));\n    var uinteger;\n    (function (uinteger) {\n        uinteger.MIN_VALUE = 0;\n        uinteger.MAX_VALUE = 2147483647;\n        function is(value) {\n            return typeof value === 'number' && uinteger.MIN_VALUE <= value && value <= uinteger.MAX_VALUE;\n        }\n        uinteger.is = is;\n    })(uinteger || (exports.uinteger = uinteger = {}));\n    /**\n     * The Position namespace provides helper functions to work with\n     * {@link Position} literals.\n     */\n    var Position;\n    (function (Position) {\n        /**\n         * Creates a new Position literal from the given line and character.\n         * @param line The position's line.\n         * @param character The position's character.\n         */\n        function create(line, character) {\n            if (line === Number.MAX_VALUE) {\n                line = uinteger.MAX_VALUE;\n            }\n            if (character === Number.MAX_VALUE) {\n                character = uinteger.MAX_VALUE;\n            }\n            return { line: line, character: character };\n        }\n        Position.create = create;\n        /**\n         * Checks whether the given literal conforms to the {@link Position} interface.\n         */\n        function is(value) {\n            var candidate = value;\n            return Is.objectLiteral(candidate) && Is.uinteger(candidate.line) && Is.uinteger(candidate.character);\n        }\n        Position.is = is;\n    })(Position || (exports.Position = Position = {}));\n    /**\n     * The Range namespace provides helper functions to work with\n     * {@link Range} literals.\n     */\n    var Range;\n    (function (Range) {\n        function create(one, two, three, four) {\n            if (Is.uinteger(one) && Is.uinteger(two) && Is.uinteger(three) && Is.uinteger(four)) {\n                return { start: Position.create(one, two), end: Position.create(three, four) };\n            }\n            else if (Position.is(one) && Position.is(two)) {\n                return { start: one, end: two };\n            }\n            else {\n                throw new Error(\"Range#create called with invalid arguments[\".concat(one, \", \").concat(two, \", \").concat(three, \", \").concat(four, \"]\"));\n            }\n        }\n        Range.create = create;\n        /**\n         * Checks whether the given literal conforms to the {@link Range} interface.\n         */\n        function is(value) {\n            var candidate = value;\n            return Is.objectLiteral(candidate) && Position.is(candidate.start) && Position.is(candidate.end);\n        }\n        Range.is = is;\n    })(Range || (exports.Range = Range = {}));\n    /**\n     * The Location namespace provides helper functions to work with\n     * {@link Location} literals.\n     */\n    var Location;\n    (function (Location) {\n        /**\n         * Creates a Location literal.\n         * @param uri The location's uri.\n         * @param range The location's range.\n         */\n        function create(uri, range) {\n            return { uri: uri, range: range };\n        }\n        Location.create = create;\n        /**\n         * Checks whether the given literal conforms to the {@link Location} interface.\n         */\n        function is(value) {\n            var candidate = value;\n            return Is.objectLiteral(candidate) && Range.is(candidate.range) && (Is.string(candidate.uri) || Is.undefined(candidate.uri));\n        }\n        Location.is = is;\n    })(Location || (exports.Location = Location = {}));\n    /**\n     * The LocationLink namespace provides helper functions to work with\n     * {@link LocationLink} literals.\n     */\n    var LocationLink;\n    (function (LocationLink) {\n        /**\n         * Creates a LocationLink literal.\n         * @param targetUri The definition's uri.\n         * @param targetRange The full range of the definition.\n         * @param targetSelectionRange The span of the symbol definition at the target.\n         * @param originSelectionRange The span of the symbol being defined in the originating source file.\n         */\n        function create(targetUri, targetRange, targetSelectionRange, originSelectionRange) {\n            return { targetUri: targetUri, targetRange: targetRange, targetSelectionRange: targetSelectionRange, originSelectionRange: originSelectionRange };\n        }\n        LocationLink.create = create;\n        /**\n         * Checks whether the given literal conforms to the {@link LocationLink} interface.\n         */\n        function is(value) {\n            var candidate = value;\n            return Is.objectLiteral(candidate) && Range.is(candidate.targetRange) && Is.string(candidate.targetUri)\n                && Range.is(candidate.targetSelectionRange)\n                && (Range.is(candidate.originSelectionRange) || Is.undefined(candidate.originSelectionRange));\n        }\n        LocationLink.is = is;\n    })(LocationLink || (exports.LocationLink = LocationLink = {}));\n    /**\n     * The Color namespace provides helper functions to work with\n     * {@link Color} literals.\n     */\n    var Color;\n    (function (Color) {\n        /**\n         * Creates a new Color literal.\n         */\n        function create(red, green, blue, alpha) {\n            return {\n                red: red,\n                green: green,\n                blue: blue,\n                alpha: alpha,\n            };\n        }\n        Color.create = create;\n        /**\n         * Checks whether the given literal conforms to the {@link Color} interface.\n         */\n        function is(value) {\n            var candidate = value;\n            return Is.objectLiteral(candidate) && Is.numberRange(candidate.red, 0, 1)\n                && Is.numberRange(candidate.green, 0, 1)\n                && Is.numberRange(candidate.blue, 0, 1)\n                && Is.numberRange(candidate.alpha, 0, 1);\n        }\n        Color.is = is;\n    })(Color || (exports.Color = Color = {}));\n    /**\n     * The ColorInformation namespace provides helper functions to work with\n     * {@link ColorInformation} literals.\n     */\n    var ColorInformation;\n    (function (ColorInformation) {\n        /**\n         * Creates a new ColorInformation literal.\n         */\n        function create(range, color) {\n            return {\n                range: range,\n                color: color,\n            };\n        }\n        ColorInformation.create = create;\n        /**\n         * Checks whether the given literal conforms to the {@link ColorInformation} interface.\n         */\n        function is(value) {\n            var candidate = value;\n            return Is.objectLiteral(candidate) && Range.is(candidate.range) && Color.is(candidate.color);\n        }\n        ColorInformation.is = is;\n    })(ColorInformation || (exports.ColorInformation = ColorInformation = {}));\n    /**\n     * The Color namespace provides helper functions to work with\n     * {@link ColorPresentation} literals.\n     */\n    var ColorPresentation;\n    (function (ColorPresentation) {\n        /**\n         * Creates a new ColorInformation literal.\n         */\n        function create(label, textEdit, additionalTextEdits) {\n            return {\n                label: label,\n                textEdit: textEdit,\n                additionalTextEdits: additionalTextEdits,\n            };\n        }\n        ColorPresentation.create = create;\n        /**\n         * Checks whether the given literal conforms to the {@link ColorInformation} interface.\n         */\n        function is(value) {\n            var candidate = value;\n            return Is.objectLiteral(candidate) && Is.string(candidate.label)\n                && (Is.undefined(candidate.textEdit) || TextEdit.is(candidate))\n                && (Is.undefined(candidate.additionalTextEdits) || Is.typedArray(candidate.additionalTextEdits, TextEdit.is));\n        }\n        ColorPresentation.is = is;\n    })(ColorPresentation || (exports.ColorPresentation = ColorPresentation = {}));\n    /**\n     * A set of predefined range kinds.\n     */\n    var FoldingRangeKind;\n    (function (FoldingRangeKind) {\n        /**\n         * Folding range for a comment\n         */\n        FoldingRangeKind.Comment = 'comment';\n        /**\n         * Folding range for an import or include\n         */\n        FoldingRangeKind.Imports = 'imports';\n        /**\n         * Folding range for a region (e.g. `#region`)\n         */\n        FoldingRangeKind.Region = 'region';\n    })(FoldingRangeKind || (exports.FoldingRangeKind = FoldingRangeKind = {}));\n    /**\n     * The folding range namespace provides helper functions to work with\n     * {@link FoldingRange} literals.\n     */\n    var FoldingRange;\n    (function (FoldingRange) {\n        /**\n         * Creates a new FoldingRange literal.\n         */\n        function create(startLine, endLine, startCharacter, endCharacter, kind, collapsedText) {\n            var result = {\n                startLine: startLine,\n                endLine: endLine\n            };\n            if (Is.defined(startCharacter)) {\n                result.startCharacter = startCharacter;\n            }\n            if (Is.defined(endCharacter)) {\n                result.endCharacter = endCharacter;\n            }\n            if (Is.defined(kind)) {\n                result.kind = kind;\n            }\n            if (Is.defined(collapsedText)) {\n                result.collapsedText = collapsedText;\n            }\n            return result;\n        }\n        FoldingRange.create = create;\n        /**\n         * Checks whether the given literal conforms to the {@link FoldingRange} interface.\n         */\n        function is(value) {\n            var candidate = value;\n            return Is.objectLiteral(candidate) && Is.uinteger(candidate.startLine) && Is.uinteger(candidate.startLine)\n                && (Is.undefined(candidate.startCharacter) || Is.uinteger(candidate.startCharacter))\n                && (Is.undefined(candidate.endCharacter) || Is.uinteger(candidate.endCharacter))\n                && (Is.undefined(candidate.kind) || Is.string(candidate.kind));\n        }\n        FoldingRange.is = is;\n    })(FoldingRange || (exports.FoldingRange = FoldingRange = {}));\n    /**\n     * The DiagnosticRelatedInformation namespace provides helper functions to work with\n     * {@link DiagnosticRelatedInformation} literals.\n     */\n    var DiagnosticRelatedInformation;\n    (function (DiagnosticRelatedInformation) {\n        /**\n         * Creates a new DiagnosticRelatedInformation literal.\n         */\n        function create(location, message) {\n            return {\n                location: location,\n                message: message\n            };\n        }\n        DiagnosticRelatedInformation.create = create;\n        /**\n         * Checks whether the given literal conforms to the {@link DiagnosticRelatedInformation} interface.\n         */\n        function is(value) {\n            var candidate = value;\n            return Is.defined(candidate) && Location.is(candidate.location) && Is.string(candidate.message);\n        }\n        DiagnosticRelatedInformation.is = is;\n    })(DiagnosticRelatedInformation || (exports.DiagnosticRelatedInformation = DiagnosticRelatedInformation = {}));\n    /**\n     * The diagnostic's severity.\n     */\n    var DiagnosticSeverity;\n    (function (DiagnosticSeverity) {\n        /**\n         * Reports an error.\n         */\n        DiagnosticSeverity.Error = 1;\n        /**\n         * Reports a warning.\n         */\n        DiagnosticSeverity.Warning = 2;\n        /**\n         * Reports an information.\n         */\n        DiagnosticSeverity.Information = 3;\n        /**\n         * Reports a hint.\n         */\n        DiagnosticSeverity.Hint = 4;\n    })(DiagnosticSeverity || (exports.DiagnosticSeverity = DiagnosticSeverity = {}));\n    /**\n     * The diagnostic tags.\n     *\n     * @since 3.15.0\n     */\n    var DiagnosticTag;\n    (function (DiagnosticTag) {\n        /**\n         * Unused or unnecessary code.\n         *\n         * Clients are allowed to render diagnostics with this tag faded out instead of having\n         * an error squiggle.\n         */\n        DiagnosticTag.Unnecessary = 1;\n        /**\n         * Deprecated or obsolete code.\n         *\n         * Clients are allowed to rendered diagnostics with this tag strike through.\n         */\n        DiagnosticTag.Deprecated = 2;\n    })(DiagnosticTag || (exports.DiagnosticTag = DiagnosticTag = {}));\n    /**\n     * The CodeDescription namespace provides functions to deal with descriptions for diagnostic codes.\n     *\n     * @since 3.16.0\n     */\n    var CodeDescription;\n    (function (CodeDescription) {\n        function is(value) {\n            var candidate = value;\n            return Is.objectLiteral(candidate) && Is.string(candidate.href);\n        }\n        CodeDescription.is = is;\n    })(CodeDescription || (exports.CodeDescription = CodeDescription = {}));\n    /**\n     * The Diagnostic namespace provides helper functions to work with\n     * {@link Diagnostic} literals.\n     */\n    var Diagnostic;\n    (function (Diagnostic) {\n        /**\n         * Creates a new Diagnostic literal.\n         */\n        function create(range, message, severity, code, source, relatedInformation) {\n            var result = { range: range, message: message };\n            if (Is.defined(severity)) {\n                result.severity = severity;\n            }\n            if (Is.defined(code)) {\n                result.code = code;\n            }\n            if (Is.defined(source)) {\n                result.source = source;\n            }\n            if (Is.defined(relatedInformation)) {\n                result.relatedInformation = relatedInformation;\n            }\n            return result;\n        }\n        Diagnostic.create = create;\n        /**\n         * Checks whether the given literal conforms to the {@link Diagnostic} interface.\n         */\n        function is(value) {\n            var _a;\n            var candidate = value;\n            return Is.defined(candidate)\n                && Range.is(candidate.range)\n                && Is.string(candidate.message)\n                && (Is.number(candidate.severity) || Is.undefined(candidate.severity))\n                && (Is.integer(candidate.code) || Is.string(candidate.code) || Is.undefined(candidate.code))\n                && (Is.undefined(candidate.codeDescription) || (Is.string((_a = candidate.codeDescription) === null || _a === void 0 ? void 0 : _a.href)))\n                && (Is.string(candidate.source) || Is.undefined(candidate.source))\n                && (Is.undefined(candidate.relatedInformation) || Is.typedArray(candidate.relatedInformation, DiagnosticRelatedInformation.is));\n        }\n        Diagnostic.is = is;\n    })(Diagnostic || (exports.Diagnostic = Diagnostic = {}));\n    /**\n     * The Command namespace provides helper functions to work with\n     * {@link Command} literals.\n     */\n    var Command;\n    (function (Command) {\n        /**\n         * Creates a new Command literal.\n         */\n        function create(title, command) {\n            var args = [];\n            for (var _i = 2; _i < arguments.length; _i++) {\n                args[_i - 2] = arguments[_i];\n            }\n            var result = { title: title, command: command };\n            if (Is.defined(args) && args.length > 0) {\n                result.arguments = args;\n            }\n            return result;\n        }\n        Command.create = create;\n        /**\n         * Checks whether the given literal conforms to the {@link Command} interface.\n         */\n        function is(value) {\n            var candidate = value;\n            return Is.defined(candidate) && Is.string(candidate.title) && Is.string(candidate.command);\n        }\n        Command.is = is;\n    })(Command || (exports.Command = Command = {}));\n    /**\n     * The TextEdit namespace provides helper function to create replace,\n     * insert and delete edits more easily.\n     */\n    var TextEdit;\n    (function (TextEdit) {\n        /**\n         * Creates a replace text edit.\n         * @param range The range of text to be replaced.\n         * @param newText The new text.\n         */\n        function replace(range, newText) {\n            return { range: range, newText: newText };\n        }\n        TextEdit.replace = replace;\n        /**\n         * Creates an insert text edit.\n         * @param position The position to insert the text at.\n         * @param newText The text to be inserted.\n         */\n        function insert(position, newText) {\n            return { range: { start: position, end: position }, newText: newText };\n        }\n        TextEdit.insert = insert;\n        /**\n         * Creates a delete text edit.\n         * @param range The range of text to be deleted.\n         */\n        function del(range) {\n            return { range: range, newText: '' };\n        }\n        TextEdit.del = del;\n        function is(value) {\n            var candidate = value;\n            return Is.objectLiteral(candidate)\n                && Is.string(candidate.newText)\n                && Range.is(candidate.range);\n        }\n        TextEdit.is = is;\n    })(TextEdit || (exports.TextEdit = TextEdit = {}));\n    var ChangeAnnotation;\n    (function (ChangeAnnotation) {\n        function create(label, needsConfirmation, description) {\n            var result = { label: label };\n            if (needsConfirmation !== undefined) {\n                result.needsConfirmation = needsConfirmation;\n            }\n            if (description !== undefined) {\n                result.description = description;\n            }\n            return result;\n        }\n        ChangeAnnotation.create = create;\n        function is(value) {\n            var candidate = value;\n            return Is.objectLiteral(candidate) && Is.string(candidate.label) &&\n                (Is.boolean(candidate.needsConfirmation) || candidate.needsConfirmation === undefined) &&\n                (Is.string(candidate.description) || candidate.description === undefined);\n        }\n        ChangeAnnotation.is = is;\n    })(ChangeAnnotation || (exports.ChangeAnnotation = ChangeAnnotation = {}));\n    var ChangeAnnotationIdentifier;\n    (function (ChangeAnnotationIdentifier) {\n        function is(value) {\n            var candidate = value;\n            return Is.string(candidate);\n        }\n        ChangeAnnotationIdentifier.is = is;\n    })(ChangeAnnotationIdentifier || (exports.ChangeAnnotationIdentifier = ChangeAnnotationIdentifier = {}));\n    var AnnotatedTextEdit;\n    (function (AnnotatedTextEdit) {\n        /**\n         * Creates an annotated replace text edit.\n         *\n         * @param range The range of text to be replaced.\n         * @param newText The new text.\n         * @param annotation The annotation.\n         */\n        function replace(range, newText, annotation) {\n            return { range: range, newText: newText, annotationId: annotation };\n        }\n        AnnotatedTextEdit.replace = replace;\n        /**\n         * Creates an annotated insert text edit.\n         *\n         * @param position The position to insert the text at.\n         * @param newText The text to be inserted.\n         * @param annotation The annotation.\n         */\n        function insert(position, newText, annotation) {\n            return { range: { start: position, end: position }, newText: newText, annotationId: annotation };\n        }\n        AnnotatedTextEdit.insert = insert;\n        /**\n         * Creates an annotated delete text edit.\n         *\n         * @param range The range of text to be deleted.\n         * @param annotation The annotation.\n         */\n        function del(range, annotation) {\n            return { range: range, newText: '', annotationId: annotation };\n        }\n        AnnotatedTextEdit.del = del;\n        function is(value) {\n            var candidate = value;\n            return TextEdit.is(candidate) && (ChangeAnnotation.is(candidate.annotationId) || ChangeAnnotationIdentifier.is(candidate.annotationId));\n        }\n        AnnotatedTextEdit.is = is;\n    })(AnnotatedTextEdit || (exports.AnnotatedTextEdit = AnnotatedTextEdit = {}));\n    /**\n     * The TextDocumentEdit namespace provides helper function to create\n     * an edit that manipulates a text document.\n     */\n    var TextDocumentEdit;\n    (function (TextDocumentEdit) {\n        /**\n         * Creates a new `TextDocumentEdit`\n         */\n        function create(textDocument, edits) {\n            return { textDocument: textDocument, edits: edits };\n        }\n        TextDocumentEdit.create = create;\n        function is(value) {\n            var candidate = value;\n            return Is.defined(candidate)\n                && OptionalVersionedTextDocumentIdentifier.is(candidate.textDocument)\n                && Array.isArray(candidate.edits);\n        }\n        TextDocumentEdit.is = is;\n    })(TextDocumentEdit || (exports.TextDocumentEdit = TextDocumentEdit = {}));\n    var CreateFile;\n    (function (CreateFile) {\n        function create(uri, options, annotation) {\n            var result = {\n                kind: 'create',\n                uri: uri\n            };\n            if (options !== undefined && (options.overwrite !== undefined || options.ignoreIfExists !== undefined)) {\n                result.options = options;\n            }\n            if (annotation !== undefined) {\n                result.annotationId = annotation;\n            }\n            return result;\n        }\n        CreateFile.create = create;\n        function is(value) {\n            var candidate = value;\n            return candidate && candidate.kind === 'create' && Is.string(candidate.uri) && (candidate.options === undefined ||\n                ((candidate.options.overwrite === undefined || Is.boolean(candidate.options.overwrite)) && (candidate.options.ignoreIfExists === undefined || Is.boolean(candidate.options.ignoreIfExists)))) && (candidate.annotationId === undefined || ChangeAnnotationIdentifier.is(candidate.annotationId));\n        }\n        CreateFile.is = is;\n    })(CreateFile || (exports.CreateFile = CreateFile = {}));\n    var RenameFile;\n    (function (RenameFile) {\n        function create(oldUri, newUri, options, annotation) {\n            var result = {\n                kind: 'rename',\n                oldUri: oldUri,\n                newUri: newUri\n            };\n            if (options !== undefined && (options.overwrite !== undefined || options.ignoreIfExists !== undefined)) {\n                result.options = options;\n            }\n            if (annotation !== undefined) {\n                result.annotationId = annotation;\n            }\n            return result;\n        }\n        RenameFile.create = create;\n        function is(value) {\n            var candidate = value;\n            return candidate && candidate.kind === 'rename' && Is.string(candidate.oldUri) && Is.string(candidate.newUri) && (candidate.options === undefined ||\n                ((candidate.options.overwrite === undefined || Is.boolean(candidate.options.overwrite)) && (candidate.options.ignoreIfExists === undefined || Is.boolean(candidate.options.ignoreIfExists)))) && (candidate.annotationId === undefined || ChangeAnnotationIdentifier.is(candidate.annotationId));\n        }\n        RenameFile.is = is;\n    })(RenameFile || (exports.RenameFile = RenameFile = {}));\n    var DeleteFile;\n    (function (DeleteFile) {\n        function create(uri, options, annotation) {\n            var result = {\n                kind: 'delete',\n                uri: uri\n            };\n            if (options !== undefined && (options.recursive !== undefined || options.ignoreIfNotExists !== undefined)) {\n                result.options = options;\n            }\n            if (annotation !== undefined) {\n                result.annotationId = annotation;\n            }\n            return result;\n        }\n        DeleteFile.create = create;\n        function is(value) {\n            var candidate = value;\n            return candidate && candidate.kind === 'delete' && Is.string(candidate.uri) && (candidate.options === undefined ||\n                ((candidate.options.recursive === undefined || Is.boolean(candidate.options.recursive)) && (candidate.options.ignoreIfNotExists === undefined || Is.boolean(candidate.options.ignoreIfNotExists)))) && (candidate.annotationId === undefined || ChangeAnnotationIdentifier.is(candidate.annotationId));\n        }\n        DeleteFile.is = is;\n    })(DeleteFile || (exports.DeleteFile = DeleteFile = {}));\n    var WorkspaceEdit;\n    (function (WorkspaceEdit) {\n        function is(value) {\n            var candidate = value;\n            return candidate &&\n                (candidate.changes !== undefined || candidate.documentChanges !== undefined) &&\n                (candidate.documentChanges === undefined || candidate.documentChanges.every(function (change) {\n                    if (Is.string(change.kind)) {\n                        return CreateFile.is(change) || RenameFile.is(change) || DeleteFile.is(change);\n                    }\n                    else {\n                        return TextDocumentEdit.is(change);\n                    }\n                }));\n        }\n        WorkspaceEdit.is = is;\n    })(WorkspaceEdit || (exports.WorkspaceEdit = WorkspaceEdit = {}));\n    var TextEditChangeImpl = /** @class */ (function () {\n        function TextEditChangeImpl(edits, changeAnnotations) {\n            this.edits = edits;\n            this.changeAnnotations = changeAnnotations;\n        }\n        TextEditChangeImpl.prototype.insert = function (position, newText, annotation) {\n            var edit;\n            var id;\n            if (annotation === undefined) {\n                edit = TextEdit.insert(position, newText);\n            }\n            else if (ChangeAnnotationIdentifier.is(annotation)) {\n                id = annotation;\n                edit = AnnotatedTextEdit.insert(position, newText, annotation);\n            }\n            else {\n                this.assertChangeAnnotations(this.changeAnnotations);\n                id = this.changeAnnotations.manage(annotation);\n                edit = AnnotatedTextEdit.insert(position, newText, id);\n            }\n            this.edits.push(edit);\n            if (id !== undefined) {\n                return id;\n            }\n        };\n        TextEditChangeImpl.prototype.replace = function (range, newText, annotation) {\n            var edit;\n            var id;\n            if (annotation === undefined) {\n                edit = TextEdit.replace(range, newText);\n            }\n            else if (ChangeAnnotationIdentifier.is(annotation)) {\n                id = annotation;\n                edit = AnnotatedTextEdit.replace(range, newText, annotation);\n            }\n            else {\n                this.assertChangeAnnotations(this.changeAnnotations);\n                id = this.changeAnnotations.manage(annotation);\n                edit = AnnotatedTextEdit.replace(range, newText, id);\n            }\n            this.edits.push(edit);\n            if (id !== undefined) {\n                return id;\n            }\n        };\n        TextEditChangeImpl.prototype.delete = function (range, annotation) {\n            var edit;\n            var id;\n            if (annotation === undefined) {\n                edit = TextEdit.del(range);\n            }\n            else if (ChangeAnnotationIdentifier.is(annotation)) {\n                id = annotation;\n                edit = AnnotatedTextEdit.del(range, annotation);\n            }\n            else {\n                this.assertChangeAnnotations(this.changeAnnotations);\n                id = this.changeAnnotations.manage(annotation);\n                edit = AnnotatedTextEdit.del(range, id);\n            }\n            this.edits.push(edit);\n            if (id !== undefined) {\n                return id;\n            }\n        };\n        TextEditChangeImpl.prototype.add = function (edit) {\n            this.edits.push(edit);\n        };\n        TextEditChangeImpl.prototype.all = function () {\n            return this.edits;\n        };\n        TextEditChangeImpl.prototype.clear = function () {\n            this.edits.splice(0, this.edits.length);\n        };\n        TextEditChangeImpl.prototype.assertChangeAnnotations = function (value) {\n            if (value === undefined) {\n                throw new Error(\"Text edit change is not configured to manage change annotations.\");\n            }\n        };\n        return TextEditChangeImpl;\n    }());\n    /**\n     * A helper class\n     */\n    var ChangeAnnotations = /** @class */ (function () {\n        function ChangeAnnotations(annotations) {\n            this._annotations = annotations === undefined ? Object.create(null) : annotations;\n            this._counter = 0;\n            this._size = 0;\n        }\n        ChangeAnnotations.prototype.all = function () {\n            return this._annotations;\n        };\n        Object.defineProperty(ChangeAnnotations.prototype, \"size\", {\n            get: function () {\n                return this._size;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        ChangeAnnotations.prototype.manage = function (idOrAnnotation, annotation) {\n            var id;\n            if (ChangeAnnotationIdentifier.is(idOrAnnotation)) {\n                id = idOrAnnotation;\n            }\n            else {\n                id = this.nextId();\n                annotation = idOrAnnotation;\n            }\n            if (this._annotations[id] !== undefined) {\n                throw new Error(\"Id \".concat(id, \" is already in use.\"));\n            }\n            if (annotation === undefined) {\n                throw new Error(\"No annotation provided for id \".concat(id));\n            }\n            this._annotations[id] = annotation;\n            this._size++;\n            return id;\n        };\n        ChangeAnnotations.prototype.nextId = function () {\n            this._counter++;\n            return this._counter.toString();\n        };\n        return ChangeAnnotations;\n    }());\n    /**\n     * A workspace change helps constructing changes to a workspace.\n     */\n    var WorkspaceChange = /** @class */ (function () {\n        function WorkspaceChange(workspaceEdit) {\n            var _this = this;\n            this._textEditChanges = Object.create(null);\n            if (workspaceEdit !== undefined) {\n                this._workspaceEdit = workspaceEdit;\n                if (workspaceEdit.documentChanges) {\n                    this._changeAnnotations = new ChangeAnnotations(workspaceEdit.changeAnnotations);\n                    workspaceEdit.changeAnnotations = this._changeAnnotations.all();\n                    workspaceEdit.documentChanges.forEach(function (change) {\n                        if (TextDocumentEdit.is(change)) {\n                            var textEditChange = new TextEditChangeImpl(change.edits, _this._changeAnnotations);\n                            _this._textEditChanges[change.textDocument.uri] = textEditChange;\n                        }\n                    });\n                }\n                else if (workspaceEdit.changes) {\n                    Object.keys(workspaceEdit.changes).forEach(function (key) {\n                        var textEditChange = new TextEditChangeImpl(workspaceEdit.changes[key]);\n                        _this._textEditChanges[key] = textEditChange;\n                    });\n                }\n            }\n            else {\n                this._workspaceEdit = {};\n            }\n        }\n        Object.defineProperty(WorkspaceChange.prototype, \"edit\", {\n            /**\n             * Returns the underlying {@link WorkspaceEdit} literal\n             * use to be returned from a workspace edit operation like rename.\n             */\n            get: function () {\n                this.initDocumentChanges();\n                if (this._changeAnnotations !== undefined) {\n                    if (this._changeAnnotations.size === 0) {\n                        this._workspaceEdit.changeAnnotations = undefined;\n                    }\n                    else {\n                        this._workspaceEdit.changeAnnotations = this._changeAnnotations.all();\n                    }\n                }\n                return this._workspaceEdit;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        WorkspaceChange.prototype.getTextEditChange = function (key) {\n            if (OptionalVersionedTextDocumentIdentifier.is(key)) {\n                this.initDocumentChanges();\n                if (this._workspaceEdit.documentChanges === undefined) {\n                    throw new Error('Workspace edit is not configured for document changes.');\n                }\n                var textDocument = { uri: key.uri, version: key.version };\n                var result = this._textEditChanges[textDocument.uri];\n                if (!result) {\n                    var edits = [];\n                    var textDocumentEdit = {\n                        textDocument: textDocument,\n                        edits: edits\n                    };\n                    this._workspaceEdit.documentChanges.push(textDocumentEdit);\n                    result = new TextEditChangeImpl(edits, this._changeAnnotations);\n                    this._textEditChanges[textDocument.uri] = result;\n                }\n                return result;\n            }\n            else {\n                this.initChanges();\n                if (this._workspaceEdit.changes === undefined) {\n                    throw new Error('Workspace edit is not configured for normal text edit changes.');\n                }\n                var result = this._textEditChanges[key];\n                if (!result) {\n                    var edits = [];\n                    this._workspaceEdit.changes[key] = edits;\n                    result = new TextEditChangeImpl(edits);\n                    this._textEditChanges[key] = result;\n                }\n                return result;\n            }\n        };\n        WorkspaceChange.prototype.initDocumentChanges = function () {\n            if (this._workspaceEdit.documentChanges === undefined && this._workspaceEdit.changes === undefined) {\n                this._changeAnnotations = new ChangeAnnotations();\n                this._workspaceEdit.documentChanges = [];\n                this._workspaceEdit.changeAnnotations = this._changeAnnotations.all();\n            }\n        };\n        WorkspaceChange.prototype.initChanges = function () {\n            if (this._workspaceEdit.documentChanges === undefined && this._workspaceEdit.changes === undefined) {\n                this._workspaceEdit.changes = Object.create(null);\n            }\n        };\n        WorkspaceChange.prototype.createFile = function (uri, optionsOrAnnotation, options) {\n            this.initDocumentChanges();\n            if (this._workspaceEdit.documentChanges === undefined) {\n                throw new Error('Workspace edit is not configured for document changes.');\n            }\n            var annotation;\n            if (ChangeAnnotation.is(optionsOrAnnotation) || ChangeAnnotationIdentifier.is(optionsOrAnnotation)) {\n                annotation = optionsOrAnnotation;\n            }\n            else {\n                options = optionsOrAnnotation;\n            }\n            var operation;\n            var id;\n            if (annotation === undefined) {\n                operation = CreateFile.create(uri, options);\n            }\n            else {\n                id = ChangeAnnotationIdentifier.is(annotation) ? annotation : this._changeAnnotations.manage(annotation);\n                operation = CreateFile.create(uri, options, id);\n            }\n            this._workspaceEdit.documentChanges.push(operation);\n            if (id !== undefined) {\n                return id;\n            }\n        };\n        WorkspaceChange.prototype.renameFile = function (oldUri, newUri, optionsOrAnnotation, options) {\n            this.initDocumentChanges();\n            if (this._workspaceEdit.documentChanges === undefined) {\n                throw new Error('Workspace edit is not configured for document changes.');\n            }\n            var annotation;\n            if (ChangeAnnotation.is(optionsOrAnnotation) || ChangeAnnotationIdentifier.is(optionsOrAnnotation)) {\n                annotation = optionsOrAnnotation;\n            }\n            else {\n                options = optionsOrAnnotation;\n            }\n            var operation;\n            var id;\n            if (annotation === undefined) {\n                operation = RenameFile.create(oldUri, newUri, options);\n            }\n            else {\n                id = ChangeAnnotationIdentifier.is(annotation) ? annotation : this._changeAnnotations.manage(annotation);\n                operation = RenameFile.create(oldUri, newUri, options, id);\n            }\n            this._workspaceEdit.documentChanges.push(operation);\n            if (id !== undefined) {\n                return id;\n            }\n        };\n        WorkspaceChange.prototype.deleteFile = function (uri, optionsOrAnnotation, options) {\n            this.initDocumentChanges();\n            if (this._workspaceEdit.documentChanges === undefined) {\n                throw new Error('Workspace edit is not configured for document changes.');\n            }\n            var annotation;\n            if (ChangeAnnotation.is(optionsOrAnnotation) || ChangeAnnotationIdentifier.is(optionsOrAnnotation)) {\n                annotation = optionsOrAnnotation;\n            }\n            else {\n                options = optionsOrAnnotation;\n            }\n            var operation;\n            var id;\n            if (annotation === undefined) {\n                operation = DeleteFile.create(uri, options);\n            }\n            else {\n                id = ChangeAnnotationIdentifier.is(annotation) ? annotation : this._changeAnnotations.manage(annotation);\n                operation = DeleteFile.create(uri, options, id);\n            }\n            this._workspaceEdit.documentChanges.push(operation);\n            if (id !== undefined) {\n                return id;\n            }\n        };\n        return WorkspaceChange;\n    }());\n    exports.WorkspaceChange = WorkspaceChange;\n    /**\n     * The TextDocumentIdentifier namespace provides helper functions to work with\n     * {@link TextDocumentIdentifier} literals.\n     */\n    var TextDocumentIdentifier;\n    (function (TextDocumentIdentifier) {\n        /**\n         * Creates a new TextDocumentIdentifier literal.\n         * @param uri The document's uri.\n         */\n        function create(uri) {\n            return { uri: uri };\n        }\n        TextDocumentIdentifier.create = create;\n        /**\n         * Checks whether the given literal conforms to the {@link TextDocumentIdentifier} interface.\n         */\n        function is(value) {\n            var candidate = value;\n            return Is.defined(candidate) && Is.string(candidate.uri);\n        }\n        TextDocumentIdentifier.is = is;\n    })(TextDocumentIdentifier || (exports.TextDocumentIdentifier = TextDocumentIdentifier = {}));\n    /**\n     * The VersionedTextDocumentIdentifier namespace provides helper functions to work with\n     * {@link VersionedTextDocumentIdentifier} literals.\n     */\n    var VersionedTextDocumentIdentifier;\n    (function (VersionedTextDocumentIdentifier) {\n        /**\n         * Creates a new VersionedTextDocumentIdentifier literal.\n         * @param uri The document's uri.\n         * @param version The document's version.\n         */\n        function create(uri, version) {\n            return { uri: uri, version: version };\n        }\n        VersionedTextDocumentIdentifier.create = create;\n        /**\n         * Checks whether the given literal conforms to the {@link VersionedTextDocumentIdentifier} interface.\n         */\n        function is(value) {\n            var candidate = value;\n            return Is.defined(candidate) && Is.string(candidate.uri) && Is.integer(candidate.version);\n        }\n        VersionedTextDocumentIdentifier.is = is;\n    })(VersionedTextDocumentIdentifier || (exports.VersionedTextDocumentIdentifier = VersionedTextDocumentIdentifier = {}));\n    /**\n     * The OptionalVersionedTextDocumentIdentifier namespace provides helper functions to work with\n     * {@link OptionalVersionedTextDocumentIdentifier} literals.\n     */\n    var OptionalVersionedTextDocumentIdentifier;\n    (function (OptionalVersionedTextDocumentIdentifier) {\n        /**\n         * Creates a new OptionalVersionedTextDocumentIdentifier literal.\n         * @param uri The document's uri.\n         * @param version The document's version.\n         */\n        function create(uri, version) {\n            return { uri: uri, version: version };\n        }\n        OptionalVersionedTextDocumentIdentifier.create = create;\n        /**\n         * Checks whether the given literal conforms to the {@link OptionalVersionedTextDocumentIdentifier} interface.\n         */\n        function is(value) {\n            var candidate = value;\n            return Is.defined(candidate) && Is.string(candidate.uri) && (candidate.version === null || Is.integer(candidate.version));\n        }\n        OptionalVersionedTextDocumentIdentifier.is = is;\n    })(OptionalVersionedTextDocumentIdentifier || (exports.OptionalVersionedTextDocumentIdentifier = OptionalVersionedTextDocumentIdentifier = {}));\n    /**\n     * The TextDocumentItem namespace provides helper functions to work with\n     * {@link TextDocumentItem} literals.\n     */\n    var TextDocumentItem;\n    (function (TextDocumentItem) {\n        /**\n         * Creates a new TextDocumentItem literal.\n         * @param uri The document's uri.\n         * @param languageId The document's language identifier.\n         * @param version The document's version number.\n         * @param text The document's text.\n         */\n        function create(uri, languageId, version, text) {\n            return { uri: uri, languageId: languageId, version: version, text: text };\n        }\n        TextDocumentItem.create = create;\n        /**\n         * Checks whether the given literal conforms to the {@link TextDocumentItem} interface.\n         */\n        function is(value) {\n            var candidate = value;\n            return Is.defined(candidate) && Is.string(candidate.uri) && Is.string(candidate.languageId) && Is.integer(candidate.version) && Is.string(candidate.text);\n        }\n        TextDocumentItem.is = is;\n    })(TextDocumentItem || (exports.TextDocumentItem = TextDocumentItem = {}));\n    /**\n     * Describes the content type that a client supports in various\n     * result literals like `Hover`, `ParameterInfo` or `CompletionItem`.\n     *\n     * Please note that `MarkupKinds` must not start with a `$`. This kinds\n     * are reserved for internal usage.\n     */\n    var MarkupKind;\n    (function (MarkupKind) {\n        /**\n         * Plain text is supported as a content format\n         */\n        MarkupKind.PlainText = 'plaintext';\n        /**\n         * Markdown is supported as a content format\n         */\n        MarkupKind.Markdown = 'markdown';\n        /**\n         * Checks whether the given value is a value of the {@link MarkupKind} type.\n         */\n        function is(value) {\n            var candidate = value;\n            return candidate === MarkupKind.PlainText || candidate === MarkupKind.Markdown;\n        }\n        MarkupKind.is = is;\n    })(MarkupKind || (exports.MarkupKind = MarkupKind = {}));\n    var MarkupContent;\n    (function (MarkupContent) {\n        /**\n         * Checks whether the given value conforms to the {@link MarkupContent} interface.\n         */\n        function is(value) {\n            var candidate = value;\n            return Is.objectLiteral(value) && MarkupKind.is(candidate.kind) && Is.string(candidate.value);\n        }\n        MarkupContent.is = is;\n    })(MarkupContent || (exports.MarkupContent = MarkupContent = {}));\n    /**\n     * The kind of a completion entry.\n     */\n    var CompletionItemKind;\n    (function (CompletionItemKind) {\n        CompletionItemKind.Text = 1;\n        CompletionItemKind.Method = 2;\n        CompletionItemKind.Function = 3;\n        CompletionItemKind.Constructor = 4;\n        CompletionItemKind.Field = 5;\n        CompletionItemKind.Variable = 6;\n        CompletionItemKind.Class = 7;\n        CompletionItemKind.Interface = 8;\n        CompletionItemKind.Module = 9;\n        CompletionItemKind.Property = 10;\n        CompletionItemKind.Unit = 11;\n        CompletionItemKind.Value = 12;\n        CompletionItemKind.Enum = 13;\n        CompletionItemKind.Keyword = 14;\n        CompletionItemKind.Snippet = 15;\n        CompletionItemKind.Color = 16;\n        CompletionItemKind.File = 17;\n        CompletionItemKind.Reference = 18;\n        CompletionItemKind.Folder = 19;\n        CompletionItemKind.EnumMember = 20;\n        CompletionItemKind.Constant = 21;\n        CompletionItemKind.Struct = 22;\n        CompletionItemKind.Event = 23;\n        CompletionItemKind.Operator = 24;\n        CompletionItemKind.TypeParameter = 25;\n    })(CompletionItemKind || (exports.CompletionItemKind = CompletionItemKind = {}));\n    /**\n     * Defines whether the insert text in a completion item should be interpreted as\n     * plain text or a snippet.\n     */\n    var InsertTextFormat;\n    (function (InsertTextFormat) {\n        /**\n         * The primary text to be inserted is treated as a plain string.\n         */\n        InsertTextFormat.PlainText = 1;\n        /**\n         * The primary text to be inserted is treated as a snippet.\n         *\n         * A snippet can define tab stops and placeholders with `$1`, `$2`\n         * and `${3:foo}`. `$0` defines the final tab stop, it defaults to\n         * the end of the snippet. Placeholders with equal identifiers are linked,\n         * that is typing in one will update others too.\n         *\n         * See also: https://microsoft.github.io/language-server-protocol/specifications/specification-current/#snippet_syntax\n         */\n        InsertTextFormat.Snippet = 2;\n    })(InsertTextFormat || (exports.InsertTextFormat = InsertTextFormat = {}));\n    /**\n     * Completion item tags are extra annotations that tweak the rendering of a completion\n     * item.\n     *\n     * @since 3.15.0\n     */\n    var CompletionItemTag;\n    (function (CompletionItemTag) {\n        /**\n         * Render a completion as obsolete, usually using a strike-out.\n         */\n        CompletionItemTag.Deprecated = 1;\n    })(CompletionItemTag || (exports.CompletionItemTag = CompletionItemTag = {}));\n    /**\n     * The InsertReplaceEdit namespace provides functions to deal with insert / replace edits.\n     *\n     * @since 3.16.0\n     */\n    var InsertReplaceEdit;\n    (function (InsertReplaceEdit) {\n        /**\n         * Creates a new insert / replace edit\n         */\n        function create(newText, insert, replace) {\n            return { newText: newText, insert: insert, replace: replace };\n        }\n        InsertReplaceEdit.create = create;\n        /**\n         * Checks whether the given literal conforms to the {@link InsertReplaceEdit} interface.\n         */\n        function is(value) {\n            var candidate = value;\n            return candidate && Is.string(candidate.newText) && Range.is(candidate.insert) && Range.is(candidate.replace);\n        }\n        InsertReplaceEdit.is = is;\n    })(InsertReplaceEdit || (exports.InsertReplaceEdit = InsertReplaceEdit = {}));\n    /**\n     * How whitespace and indentation is handled during completion\n     * item insertion.\n     *\n     * @since 3.16.0\n     */\n    var InsertTextMode;\n    (function (InsertTextMode) {\n        /**\n         * The insertion or replace strings is taken as it is. If the\n         * value is multi line the lines below the cursor will be\n         * inserted using the indentation defined in the string value.\n         * The client will not apply any kind of adjustments to the\n         * string.\n         */\n        InsertTextMode.asIs = 1;\n        /**\n         * The editor adjusts leading whitespace of new lines so that\n         * they match the indentation up to the cursor of the line for\n         * which the item is accepted.\n         *\n         * Consider a line like this: <2tabs><cursor><3tabs>foo. Accepting a\n         * multi line completion item is indented using 2 tabs and all\n         * following lines inserted will be indented using 2 tabs as well.\n         */\n        InsertTextMode.adjustIndentation = 2;\n    })(InsertTextMode || (exports.InsertTextMode = InsertTextMode = {}));\n    var CompletionItemLabelDetails;\n    (function (CompletionItemLabelDetails) {\n        function is(value) {\n            var candidate = value;\n            return candidate && (Is.string(candidate.detail) || candidate.detail === undefined) &&\n                (Is.string(candidate.description) || candidate.description === undefined);\n        }\n        CompletionItemLabelDetails.is = is;\n    })(CompletionItemLabelDetails || (exports.CompletionItemLabelDetails = CompletionItemLabelDetails = {}));\n    /**\n     * The CompletionItem namespace provides functions to deal with\n     * completion items.\n     */\n    var CompletionItem;\n    (function (CompletionItem) {\n        /**\n         * Create a completion item and seed it with a label.\n         * @param label The completion item's label\n         */\n        function create(label) {\n            return { label: label };\n        }\n        CompletionItem.create = create;\n    })(CompletionItem || (exports.CompletionItem = CompletionItem = {}));\n    /**\n     * The CompletionList namespace provides functions to deal with\n     * completion lists.\n     */\n    var CompletionList;\n    (function (CompletionList) {\n        /**\n         * Creates a new completion list.\n         *\n         * @param items The completion items.\n         * @param isIncomplete The list is not complete.\n         */\n        function create(items, isIncomplete) {\n            return { items: items ? items : [], isIncomplete: !!isIncomplete };\n        }\n        CompletionList.create = create;\n    })(CompletionList || (exports.CompletionList = CompletionList = {}));\n    var MarkedString;\n    (function (MarkedString) {\n        /**\n         * Creates a marked string from plain text.\n         *\n         * @param plainText The plain text.\n         */\n        function fromPlainText(plainText) {\n            return plainText.replace(/[\\\\`*_{}[\\]()#+\\-.!]/g, '\\\\$&'); // escape markdown syntax tokens: http://daringfireball.net/projects/markdown/syntax#backslash\n        }\n        MarkedString.fromPlainText = fromPlainText;\n        /**\n         * Checks whether the given value conforms to the {@link MarkedString} type.\n         */\n        function is(value) {\n            var candidate = value;\n            return Is.string(candidate) || (Is.objectLiteral(candidate) && Is.string(candidate.language) && Is.string(candidate.value));\n        }\n        MarkedString.is = is;\n    })(MarkedString || (exports.MarkedString = MarkedString = {}));\n    var Hover;\n    (function (Hover) {\n        /**\n         * Checks whether the given value conforms to the {@link Hover} interface.\n         */\n        function is(value) {\n            var candidate = value;\n            return !!candidate && Is.objectLiteral(candidate) && (MarkupContent.is(candidate.contents) ||\n                MarkedString.is(candidate.contents) ||\n                Is.typedArray(candidate.contents, MarkedString.is)) && (value.range === undefined || Range.is(value.range));\n        }\n        Hover.is = is;\n    })(Hover || (exports.Hover = Hover = {}));\n    /**\n     * The ParameterInformation namespace provides helper functions to work with\n     * {@link ParameterInformation} literals.\n     */\n    var ParameterInformation;\n    (function (ParameterInformation) {\n        /**\n         * Creates a new parameter information literal.\n         *\n         * @param label A label string.\n         * @param documentation A doc string.\n         */\n        function create(label, documentation) {\n            return documentation ? { label: label, documentation: documentation } : { label: label };\n        }\n        ParameterInformation.create = create;\n    })(ParameterInformation || (exports.ParameterInformation = ParameterInformation = {}));\n    /**\n     * The SignatureInformation namespace provides helper functions to work with\n     * {@link SignatureInformation} literals.\n     */\n    var SignatureInformation;\n    (function (SignatureInformation) {\n        function create(label, documentation) {\n            var parameters = [];\n            for (var _i = 2; _i < arguments.length; _i++) {\n                parameters[_i - 2] = arguments[_i];\n            }\n            var result = { label: label };\n            if (Is.defined(documentation)) {\n                result.documentation = documentation;\n            }\n            if (Is.defined(parameters)) {\n                result.parameters = parameters;\n            }\n            else {\n                result.parameters = [];\n            }\n            return result;\n        }\n        SignatureInformation.create = create;\n    })(SignatureInformation || (exports.SignatureInformation = SignatureInformation = {}));\n    /**\n     * A document highlight kind.\n     */\n    var DocumentHighlightKind;\n    (function (DocumentHighlightKind) {\n        /**\n         * A textual occurrence.\n         */\n        DocumentHighlightKind.Text = 1;\n        /**\n         * Read-access of a symbol, like reading a variable.\n         */\n        DocumentHighlightKind.Read = 2;\n        /**\n         * Write-access of a symbol, like writing to a variable.\n         */\n        DocumentHighlightKind.Write = 3;\n    })(DocumentHighlightKind || (exports.DocumentHighlightKind = DocumentHighlightKind = {}));\n    /**\n     * DocumentHighlight namespace to provide helper functions to work with\n     * {@link DocumentHighlight} literals.\n     */\n    var DocumentHighlight;\n    (function (DocumentHighlight) {\n        /**\n         * Create a DocumentHighlight object.\n         * @param range The range the highlight applies to.\n         * @param kind The highlight kind\n         */\n        function create(range, kind) {\n            var result = { range: range };\n            if (Is.number(kind)) {\n                result.kind = kind;\n            }\n            return result;\n        }\n        DocumentHighlight.create = create;\n    })(DocumentHighlight || (exports.DocumentHighlight = DocumentHighlight = {}));\n    /**\n     * A symbol kind.\n     */\n    var SymbolKind;\n    (function (SymbolKind) {\n        SymbolKind.File = 1;\n        SymbolKind.Module = 2;\n        SymbolKind.Namespace = 3;\n        SymbolKind.Package = 4;\n        SymbolKind.Class = 5;\n        SymbolKind.Method = 6;\n        SymbolKind.Property = 7;\n        SymbolKind.Field = 8;\n        SymbolKind.Constructor = 9;\n        SymbolKind.Enum = 10;\n        SymbolKind.Interface = 11;\n        SymbolKind.Function = 12;\n        SymbolKind.Variable = 13;\n        SymbolKind.Constant = 14;\n        SymbolKind.String = 15;\n        SymbolKind.Number = 16;\n        SymbolKind.Boolean = 17;\n        SymbolKind.Array = 18;\n        SymbolKind.Object = 19;\n        SymbolKind.Key = 20;\n        SymbolKind.Null = 21;\n        SymbolKind.EnumMember = 22;\n        SymbolKind.Struct = 23;\n        SymbolKind.Event = 24;\n        SymbolKind.Operator = 25;\n        SymbolKind.TypeParameter = 26;\n    })(SymbolKind || (exports.SymbolKind = SymbolKind = {}));\n    /**\n     * Symbol tags are extra annotations that tweak the rendering of a symbol.\n     *\n     * @since 3.16\n     */\n    var SymbolTag;\n    (function (SymbolTag) {\n        /**\n         * Render a symbol as obsolete, usually using a strike-out.\n         */\n        SymbolTag.Deprecated = 1;\n    })(SymbolTag || (exports.SymbolTag = SymbolTag = {}));\n    var SymbolInformation;\n    (function (SymbolInformation) {\n        /**\n         * Creates a new symbol information literal.\n         *\n         * @param name The name of the symbol.\n         * @param kind The kind of the symbol.\n         * @param range The range of the location of the symbol.\n         * @param uri The resource of the location of symbol.\n         * @param containerName The name of the symbol containing the symbol.\n         */\n        function create(name, kind, range, uri, containerName) {\n            var result = {\n                name: name,\n                kind: kind,\n                location: { uri: uri, range: range }\n            };\n            if (containerName) {\n                result.containerName = containerName;\n            }\n            return result;\n        }\n        SymbolInformation.create = create;\n    })(SymbolInformation || (exports.SymbolInformation = SymbolInformation = {}));\n    var WorkspaceSymbol;\n    (function (WorkspaceSymbol) {\n        /**\n         * Create a new workspace symbol.\n         *\n         * @param name The name of the symbol.\n         * @param kind The kind of the symbol.\n         * @param uri The resource of the location of the symbol.\n         * @param range An options range of the location.\n         * @returns A WorkspaceSymbol.\n         */\n        function create(name, kind, uri, range) {\n            return range !== undefined\n                ? { name: name, kind: kind, location: { uri: uri, range: range } }\n                : { name: name, kind: kind, location: { uri: uri } };\n        }\n        WorkspaceSymbol.create = create;\n    })(WorkspaceSymbol || (exports.WorkspaceSymbol = WorkspaceSymbol = {}));\n    var DocumentSymbol;\n    (function (DocumentSymbol) {\n        /**\n         * Creates a new symbol information literal.\n         *\n         * @param name The name of the symbol.\n         * @param detail The detail of the symbol.\n         * @param kind The kind of the symbol.\n         * @param range The range of the symbol.\n         * @param selectionRange The selectionRange of the symbol.\n         * @param children Children of the symbol.\n         */\n        function create(name, detail, kind, range, selectionRange, children) {\n            var result = {\n                name: name,\n                detail: detail,\n                kind: kind,\n                range: range,\n                selectionRange: selectionRange\n            };\n            if (children !== undefined) {\n                result.children = children;\n            }\n            return result;\n        }\n        DocumentSymbol.create = create;\n        /**\n         * Checks whether the given literal conforms to the {@link DocumentSymbol} interface.\n         */\n        function is(value) {\n            var candidate = value;\n            return candidate &&\n                Is.string(candidate.name) && Is.number(candidate.kind) &&\n                Range.is(candidate.range) && Range.is(candidate.selectionRange) &&\n                (candidate.detail === undefined || Is.string(candidate.detail)) &&\n                (candidate.deprecated === undefined || Is.boolean(candidate.deprecated)) &&\n                (candidate.children === undefined || Array.isArray(candidate.children)) &&\n                (candidate.tags === undefined || Array.isArray(candidate.tags));\n        }\n        DocumentSymbol.is = is;\n    })(DocumentSymbol || (exports.DocumentSymbol = DocumentSymbol = {}));\n    /**\n     * A set of predefined code action kinds\n     */\n    var CodeActionKind;\n    (function (CodeActionKind) {\n        /**\n         * Empty kind.\n         */\n        CodeActionKind.Empty = '';\n        /**\n         * Base kind for quickfix actions: 'quickfix'\n         */\n        CodeActionKind.QuickFix = 'quickfix';\n        /**\n         * Base kind for refactoring actions: 'refactor'\n         */\n        CodeActionKind.Refactor = 'refactor';\n        /**\n         * Base kind for refactoring extraction actions: 'refactor.extract'\n         *\n         * Example extract actions:\n         *\n         * - Extract method\n         * - Extract function\n         * - Extract variable\n         * - Extract interface from class\n         * - ...\n         */\n        CodeActionKind.RefactorExtract = 'refactor.extract';\n        /**\n         * Base kind for refactoring inline actions: 'refactor.inline'\n         *\n         * Example inline actions:\n         *\n         * - Inline function\n         * - Inline variable\n         * - Inline constant\n         * - ...\n         */\n        CodeActionKind.RefactorInline = 'refactor.inline';\n        /**\n         * Base kind for refactoring rewrite actions: 'refactor.rewrite'\n         *\n         * Example rewrite actions:\n         *\n         * - Convert JavaScript function to class\n         * - Add or remove parameter\n         * - Encapsulate field\n         * - Make method static\n         * - Move method to base class\n         * - ...\n         */\n        CodeActionKind.RefactorRewrite = 'refactor.rewrite';\n        /**\n         * Base kind for source actions: `source`\n         *\n         * Source code actions apply to the entire file.\n         */\n        CodeActionKind.Source = 'source';\n        /**\n         * Base kind for an organize imports source action: `source.organizeImports`\n         */\n        CodeActionKind.SourceOrganizeImports = 'source.organizeImports';\n        /**\n         * Base kind for auto-fix source actions: `source.fixAll`.\n         *\n         * Fix all actions automatically fix errors that have a clear fix that do not require user input.\n         * They should not suppress errors or perform unsafe fixes such as generating new types or classes.\n         *\n         * @since 3.15.0\n         */\n        CodeActionKind.SourceFixAll = 'source.fixAll';\n    })(CodeActionKind || (exports.CodeActionKind = CodeActionKind = {}));\n    /**\n     * The reason why code actions were requested.\n     *\n     * @since 3.17.0\n     */\n    var CodeActionTriggerKind;\n    (function (CodeActionTriggerKind) {\n        /**\n         * Code actions were explicitly requested by the user or by an extension.\n         */\n        CodeActionTriggerKind.Invoked = 1;\n        /**\n         * Code actions were requested automatically.\n         *\n         * This typically happens when current selection in a file changes, but can\n         * also be triggered when file content changes.\n         */\n        CodeActionTriggerKind.Automatic = 2;\n    })(CodeActionTriggerKind || (exports.CodeActionTriggerKind = CodeActionTriggerKind = {}));\n    /**\n     * The CodeActionContext namespace provides helper functions to work with\n     * {@link CodeActionContext} literals.\n     */\n    var CodeActionContext;\n    (function (CodeActionContext) {\n        /**\n         * Creates a new CodeActionContext literal.\n         */\n        function create(diagnostics, only, triggerKind) {\n            var result = { diagnostics: diagnostics };\n            if (only !== undefined && only !== null) {\n                result.only = only;\n            }\n            if (triggerKind !== undefined && triggerKind !== null) {\n                result.triggerKind = triggerKind;\n            }\n            return result;\n        }\n        CodeActionContext.create = create;\n        /**\n         * Checks whether the given literal conforms to the {@link CodeActionContext} interface.\n         */\n        function is(value) {\n            var candidate = value;\n            return Is.defined(candidate) && Is.typedArray(candidate.diagnostics, Diagnostic.is)\n                && (candidate.only === undefined || Is.typedArray(candidate.only, Is.string))\n                && (candidate.triggerKind === undefined || candidate.triggerKind === CodeActionTriggerKind.Invoked || candidate.triggerKind === CodeActionTriggerKind.Automatic);\n        }\n        CodeActionContext.is = is;\n    })(CodeActionContext || (exports.CodeActionContext = CodeActionContext = {}));\n    var CodeAction;\n    (function (CodeAction) {\n        function create(title, kindOrCommandOrEdit, kind) {\n            var result = { title: title };\n            var checkKind = true;\n            if (typeof kindOrCommandOrEdit === 'string') {\n                checkKind = false;\n                result.kind = kindOrCommandOrEdit;\n            }\n            else if (Command.is(kindOrCommandOrEdit)) {\n                result.command = kindOrCommandOrEdit;\n            }\n            else {\n                result.edit = kindOrCommandOrEdit;\n            }\n            if (checkKind && kind !== undefined) {\n                result.kind = kind;\n            }\n            return result;\n        }\n        CodeAction.create = create;\n        function is(value) {\n            var candidate = value;\n            return candidate && Is.string(candidate.title) &&\n                (candidate.diagnostics === undefined || Is.typedArray(candidate.diagnostics, Diagnostic.is)) &&\n                (candidate.kind === undefined || Is.string(candidate.kind)) &&\n                (candidate.edit !== undefined || candidate.command !== undefined) &&\n                (candidate.command === undefined || Command.is(candidate.command)) &&\n                (candidate.isPreferred === undefined || Is.boolean(candidate.isPreferred)) &&\n                (candidate.edit === undefined || WorkspaceEdit.is(candidate.edit));\n        }\n        CodeAction.is = is;\n    })(CodeAction || (exports.CodeAction = CodeAction = {}));\n    /**\n     * The CodeLens namespace provides helper functions to work with\n     * {@link CodeLens} literals.\n     */\n    var CodeLens;\n    (function (CodeLens) {\n        /**\n         * Creates a new CodeLens literal.\n         */\n        function create(range, data) {\n            var result = { range: range };\n            if (Is.defined(data)) {\n                result.data = data;\n            }\n            return result;\n        }\n        CodeLens.create = create;\n        /**\n         * Checks whether the given literal conforms to the {@link CodeLens} interface.\n         */\n        function is(value) {\n            var candidate = value;\n            return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.command) || Command.is(candidate.command));\n        }\n        CodeLens.is = is;\n    })(CodeLens || (exports.CodeLens = CodeLens = {}));\n    /**\n     * The FormattingOptions namespace provides helper functions to work with\n     * {@link FormattingOptions} literals.\n     */\n    var FormattingOptions;\n    (function (FormattingOptions) {\n        /**\n         * Creates a new FormattingOptions literal.\n         */\n        function create(tabSize, insertSpaces) {\n            return { tabSize: tabSize, insertSpaces: insertSpaces };\n        }\n        FormattingOptions.create = create;\n        /**\n         * Checks whether the given literal conforms to the {@link FormattingOptions} interface.\n         */\n        function is(value) {\n            var candidate = value;\n            return Is.defined(candidate) && Is.uinteger(candidate.tabSize) && Is.boolean(candidate.insertSpaces);\n        }\n        FormattingOptions.is = is;\n    })(FormattingOptions || (exports.FormattingOptions = FormattingOptions = {}));\n    /**\n     * The DocumentLink namespace provides helper functions to work with\n     * {@link DocumentLink} literals.\n     */\n    var DocumentLink;\n    (function (DocumentLink) {\n        /**\n         * Creates a new DocumentLink literal.\n         */\n        function create(range, target, data) {\n            return { range: range, target: target, data: data };\n        }\n        DocumentLink.create = create;\n        /**\n         * Checks whether the given literal conforms to the {@link DocumentLink} interface.\n         */\n        function is(value) {\n            var candidate = value;\n            return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.target) || Is.string(candidate.target));\n        }\n        DocumentLink.is = is;\n    })(DocumentLink || (exports.DocumentLink = DocumentLink = {}));\n    /**\n     * The SelectionRange namespace provides helper function to work with\n     * SelectionRange literals.\n     */\n    var SelectionRange;\n    (function (SelectionRange) {\n        /**\n         * Creates a new SelectionRange\n         * @param range the range.\n         * @param parent an optional parent.\n         */\n        function create(range, parent) {\n            return { range: range, parent: parent };\n        }\n        SelectionRange.create = create;\n        function is(value) {\n            var candidate = value;\n            return Is.objectLiteral(candidate) && Range.is(candidate.range) && (candidate.parent === undefined || SelectionRange.is(candidate.parent));\n        }\n        SelectionRange.is = is;\n    })(SelectionRange || (exports.SelectionRange = SelectionRange = {}));\n    /**\n     * A set of predefined token types. This set is not fixed\n     * an clients can specify additional token types via the\n     * corresponding client capabilities.\n     *\n     * @since 3.16.0\n     */\n    var SemanticTokenTypes;\n    (function (SemanticTokenTypes) {\n        SemanticTokenTypes[\"namespace\"] = \"namespace\";\n        /**\n         * Represents a generic type. Acts as a fallback for types which can't be mapped to\n         * a specific type like class or enum.\n         */\n        SemanticTokenTypes[\"type\"] = \"type\";\n        SemanticTokenTypes[\"class\"] = \"class\";\n        SemanticTokenTypes[\"enum\"] = \"enum\";\n        SemanticTokenTypes[\"interface\"] = \"interface\";\n        SemanticTokenTypes[\"struct\"] = \"struct\";\n        SemanticTokenTypes[\"typeParameter\"] = \"typeParameter\";\n        SemanticTokenTypes[\"parameter\"] = \"parameter\";\n        SemanticTokenTypes[\"variable\"] = \"variable\";\n        SemanticTokenTypes[\"property\"] = \"property\";\n        SemanticTokenTypes[\"enumMember\"] = \"enumMember\";\n        SemanticTokenTypes[\"event\"] = \"event\";\n        SemanticTokenTypes[\"function\"] = \"function\";\n        SemanticTokenTypes[\"method\"] = \"method\";\n        SemanticTokenTypes[\"macro\"] = \"macro\";\n        SemanticTokenTypes[\"keyword\"] = \"keyword\";\n        SemanticTokenTypes[\"modifier\"] = \"modifier\";\n        SemanticTokenTypes[\"comment\"] = \"comment\";\n        SemanticTokenTypes[\"string\"] = \"string\";\n        SemanticTokenTypes[\"number\"] = \"number\";\n        SemanticTokenTypes[\"regexp\"] = \"regexp\";\n        SemanticTokenTypes[\"operator\"] = \"operator\";\n        /**\n         * @since 3.17.0\n         */\n        SemanticTokenTypes[\"decorator\"] = \"decorator\";\n    })(SemanticTokenTypes || (exports.SemanticTokenTypes = SemanticTokenTypes = {}));\n    /**\n     * A set of predefined token modifiers. This set is not fixed\n     * an clients can specify additional token types via the\n     * corresponding client capabilities.\n     *\n     * @since 3.16.0\n     */\n    var SemanticTokenModifiers;\n    (function (SemanticTokenModifiers) {\n        SemanticTokenModifiers[\"declaration\"] = \"declaration\";\n        SemanticTokenModifiers[\"definition\"] = \"definition\";\n        SemanticTokenModifiers[\"readonly\"] = \"readonly\";\n        SemanticTokenModifiers[\"static\"] = \"static\";\n        SemanticTokenModifiers[\"deprecated\"] = \"deprecated\";\n        SemanticTokenModifiers[\"abstract\"] = \"abstract\";\n        SemanticTokenModifiers[\"async\"] = \"async\";\n        SemanticTokenModifiers[\"modification\"] = \"modification\";\n        SemanticTokenModifiers[\"documentation\"] = \"documentation\";\n        SemanticTokenModifiers[\"defaultLibrary\"] = \"defaultLibrary\";\n    })(SemanticTokenModifiers || (exports.SemanticTokenModifiers = SemanticTokenModifiers = {}));\n    /**\n     * @since 3.16.0\n     */\n    var SemanticTokens;\n    (function (SemanticTokens) {\n        function is(value) {\n            var candidate = value;\n            return Is.objectLiteral(candidate) && (candidate.resultId === undefined || typeof candidate.resultId === 'string') &&\n                Array.isArray(candidate.data) && (candidate.data.length === 0 || typeof candidate.data[0] === 'number');\n        }\n        SemanticTokens.is = is;\n    })(SemanticTokens || (exports.SemanticTokens = SemanticTokens = {}));\n    /**\n     * The InlineValueText namespace provides functions to deal with InlineValueTexts.\n     *\n     * @since 3.17.0\n     */\n    var InlineValueText;\n    (function (InlineValueText) {\n        /**\n         * Creates a new InlineValueText literal.\n         */\n        function create(range, text) {\n            return { range: range, text: text };\n        }\n        InlineValueText.create = create;\n        function is(value) {\n            var candidate = value;\n            return candidate !== undefined && candidate !== null && Range.is(candidate.range) && Is.string(candidate.text);\n        }\n        InlineValueText.is = is;\n    })(InlineValueText || (exports.InlineValueText = InlineValueText = {}));\n    /**\n     * The InlineValueVariableLookup namespace provides functions to deal with InlineValueVariableLookups.\n     *\n     * @since 3.17.0\n     */\n    var InlineValueVariableLookup;\n    (function (InlineValueVariableLookup) {\n        /**\n         * Creates a new InlineValueText literal.\n         */\n        function create(range, variableName, caseSensitiveLookup) {\n            return { range: range, variableName: variableName, caseSensitiveLookup: caseSensitiveLookup };\n        }\n        InlineValueVariableLookup.create = create;\n        function is(value) {\n            var candidate = value;\n            return candidate !== undefined && candidate !== null && Range.is(candidate.range) && Is.boolean(candidate.caseSensitiveLookup)\n                && (Is.string(candidate.variableName) || candidate.variableName === undefined);\n        }\n        InlineValueVariableLookup.is = is;\n    })(InlineValueVariableLookup || (exports.InlineValueVariableLookup = InlineValueVariableLookup = {}));\n    /**\n     * The InlineValueEvaluatableExpression namespace provides functions to deal with InlineValueEvaluatableExpression.\n     *\n     * @since 3.17.0\n     */\n    var InlineValueEvaluatableExpression;\n    (function (InlineValueEvaluatableExpression) {\n        /**\n         * Creates a new InlineValueEvaluatableExpression literal.\n         */\n        function create(range, expression) {\n            return { range: range, expression: expression };\n        }\n        InlineValueEvaluatableExpression.create = create;\n        function is(value) {\n            var candidate = value;\n            return candidate !== undefined && candidate !== null && Range.is(candidate.range)\n                && (Is.string(candidate.expression) || candidate.expression === undefined);\n        }\n        InlineValueEvaluatableExpression.is = is;\n    })(InlineValueEvaluatableExpression || (exports.InlineValueEvaluatableExpression = InlineValueEvaluatableExpression = {}));\n    /**\n     * The InlineValueContext namespace provides helper functions to work with\n     * {@link InlineValueContext} literals.\n     *\n     * @since 3.17.0\n     */\n    var InlineValueContext;\n    (function (InlineValueContext) {\n        /**\n         * Creates a new InlineValueContext literal.\n         */\n        function create(frameId, stoppedLocation) {\n            return { frameId: frameId, stoppedLocation: stoppedLocation };\n        }\n        InlineValueContext.create = create;\n        /**\n         * Checks whether the given literal conforms to the {@link InlineValueContext} interface.\n         */\n        function is(value) {\n            var candidate = value;\n            return Is.defined(candidate) && Range.is(value.stoppedLocation);\n        }\n        InlineValueContext.is = is;\n    })(InlineValueContext || (exports.InlineValueContext = InlineValueContext = {}));\n    /**\n     * Inlay hint kinds.\n     *\n     * @since 3.17.0\n     */\n    var InlayHintKind;\n    (function (InlayHintKind) {\n        /**\n         * An inlay hint that for a type annotation.\n         */\n        InlayHintKind.Type = 1;\n        /**\n         * An inlay hint that is for a parameter.\n         */\n        InlayHintKind.Parameter = 2;\n        function is(value) {\n            return value === 1 || value === 2;\n        }\n        InlayHintKind.is = is;\n    })(InlayHintKind || (exports.InlayHintKind = InlayHintKind = {}));\n    var InlayHintLabelPart;\n    (function (InlayHintLabelPart) {\n        function create(value) {\n            return { value: value };\n        }\n        InlayHintLabelPart.create = create;\n        function is(value) {\n            var candidate = value;\n            return Is.objectLiteral(candidate)\n                && (candidate.tooltip === undefined || Is.string(candidate.tooltip) || MarkupContent.is(candidate.tooltip))\n                && (candidate.location === undefined || Location.is(candidate.location))\n                && (candidate.command === undefined || Command.is(candidate.command));\n        }\n        InlayHintLabelPart.is = is;\n    })(InlayHintLabelPart || (exports.InlayHintLabelPart = InlayHintLabelPart = {}));\n    var InlayHint;\n    (function (InlayHint) {\n        function create(position, label, kind) {\n            var result = { position: position, label: label };\n            if (kind !== undefined) {\n                result.kind = kind;\n            }\n            return result;\n        }\n        InlayHint.create = create;\n        function is(value) {\n            var candidate = value;\n            return Is.objectLiteral(candidate) && Position.is(candidate.position)\n                && (Is.string(candidate.label) || Is.typedArray(candidate.label, InlayHintLabelPart.is))\n                && (candidate.kind === undefined || InlayHintKind.is(candidate.kind))\n                && (candidate.textEdits === undefined) || Is.typedArray(candidate.textEdits, TextEdit.is)\n                && (candidate.tooltip === undefined || Is.string(candidate.tooltip) || MarkupContent.is(candidate.tooltip))\n                && (candidate.paddingLeft === undefined || Is.boolean(candidate.paddingLeft))\n                && (candidate.paddingRight === undefined || Is.boolean(candidate.paddingRight));\n        }\n        InlayHint.is = is;\n    })(InlayHint || (exports.InlayHint = InlayHint = {}));\n    var StringValue;\n    (function (StringValue) {\n        function createSnippet(value) {\n            return { kind: 'snippet', value: value };\n        }\n        StringValue.createSnippet = createSnippet;\n    })(StringValue || (exports.StringValue = StringValue = {}));\n    var InlineCompletionItem;\n    (function (InlineCompletionItem) {\n        function create(insertText, filterText, range, command) {\n            return { insertText: insertText, filterText: filterText, range: range, command: command };\n        }\n        InlineCompletionItem.create = create;\n    })(InlineCompletionItem || (exports.InlineCompletionItem = InlineCompletionItem = {}));\n    var InlineCompletionList;\n    (function (InlineCompletionList) {\n        function create(items) {\n            return { items: items };\n        }\n        InlineCompletionList.create = create;\n    })(InlineCompletionList || (exports.InlineCompletionList = InlineCompletionList = {}));\n    /**\n     * Describes how an {@link InlineCompletionItemProvider inline completion provider} was triggered.\n     *\n     * @since 3.18.0\n     * @proposed\n     */\n    var InlineCompletionTriggerKind;\n    (function (InlineCompletionTriggerKind) {\n        /**\n         * Completion was triggered explicitly by a user gesture.\n         */\n        InlineCompletionTriggerKind.Invoked = 0;\n        /**\n         * Completion was triggered automatically while editing.\n         */\n        InlineCompletionTriggerKind.Automatic = 1;\n    })(InlineCompletionTriggerKind || (exports.InlineCompletionTriggerKind = InlineCompletionTriggerKind = {}));\n    var SelectedCompletionInfo;\n    (function (SelectedCompletionInfo) {\n        function create(range, text) {\n            return { range: range, text: text };\n        }\n        SelectedCompletionInfo.create = create;\n    })(SelectedCompletionInfo || (exports.SelectedCompletionInfo = SelectedCompletionInfo = {}));\n    var InlineCompletionContext;\n    (function (InlineCompletionContext) {\n        function create(triggerKind, selectedCompletionInfo) {\n            return { triggerKind: triggerKind, selectedCompletionInfo: selectedCompletionInfo };\n        }\n        InlineCompletionContext.create = create;\n    })(InlineCompletionContext || (exports.InlineCompletionContext = InlineCompletionContext = {}));\n    var WorkspaceFolder;\n    (function (WorkspaceFolder) {\n        function is(value) {\n            var candidate = value;\n            return Is.objectLiteral(candidate) && URI.is(candidate.uri) && Is.string(candidate.name);\n        }\n        WorkspaceFolder.is = is;\n    })(WorkspaceFolder || (exports.WorkspaceFolder = WorkspaceFolder = {}));\n    exports.EOL = ['\\n', '\\r\\n', '\\r'];\n    /**\n     * @deprecated Use the text document from the new vscode-languageserver-textdocument package.\n     */\n    var TextDocument;\n    (function (TextDocument) {\n        /**\n         * Creates a new ITextDocument literal from the given uri and content.\n         * @param uri The document's uri.\n         * @param languageId The document's language Id.\n         * @param version The document's version.\n         * @param content The document's content.\n         */\n        function create(uri, languageId, version, content) {\n            return new FullTextDocument(uri, languageId, version, content);\n        }\n        TextDocument.create = create;\n        /**\n         * Checks whether the given literal conforms to the {@link ITextDocument} interface.\n         */\n        function is(value) {\n            var candidate = value;\n            return Is.defined(candidate) && Is.string(candidate.uri) && (Is.undefined(candidate.languageId) || Is.string(candidate.languageId)) && Is.uinteger(candidate.lineCount)\n                && Is.func(candidate.getText) && Is.func(candidate.positionAt) && Is.func(candidate.offsetAt) ? true : false;\n        }\n        TextDocument.is = is;\n        function applyEdits(document, edits) {\n            var text = document.getText();\n            var sortedEdits = mergeSort(edits, function (a, b) {\n                var diff = a.range.start.line - b.range.start.line;\n                if (diff === 0) {\n                    return a.range.start.character - b.range.start.character;\n                }\n                return diff;\n            });\n            var lastModifiedOffset = text.length;\n            for (var i = sortedEdits.length - 1; i >= 0; i--) {\n                var e = sortedEdits[i];\n                var startOffset = document.offsetAt(e.range.start);\n                var endOffset = document.offsetAt(e.range.end);\n                if (endOffset <= lastModifiedOffset) {\n                    text = text.substring(0, startOffset) + e.newText + text.substring(endOffset, text.length);\n                }\n                else {\n                    throw new Error('Overlapping edit');\n                }\n                lastModifiedOffset = startOffset;\n            }\n            return text;\n        }\n        TextDocument.applyEdits = applyEdits;\n        function mergeSort(data, compare) {\n            if (data.length <= 1) {\n                // sorted\n                return data;\n            }\n            var p = (data.length / 2) | 0;\n            var left = data.slice(0, p);\n            var right = data.slice(p);\n            mergeSort(left, compare);\n            mergeSort(right, compare);\n            var leftIdx = 0;\n            var rightIdx = 0;\n            var i = 0;\n            while (leftIdx < left.length && rightIdx < right.length) {\n                var ret = compare(left[leftIdx], right[rightIdx]);\n                if (ret <= 0) {\n                    // smaller_equal -> take left to preserve order\n                    data[i++] = left[leftIdx++];\n                }\n                else {\n                    // greater -> take right\n                    data[i++] = right[rightIdx++];\n                }\n            }\n            while (leftIdx < left.length) {\n                data[i++] = left[leftIdx++];\n            }\n            while (rightIdx < right.length) {\n                data[i++] = right[rightIdx++];\n            }\n            return data;\n        }\n    })(TextDocument || (exports.TextDocument = TextDocument = {}));\n    /**\n     * @deprecated Use the text document from the new vscode-languageserver-textdocument package.\n     */\n    var FullTextDocument = /** @class */ (function () {\n        function FullTextDocument(uri, languageId, version, content) {\n            this._uri = uri;\n            this._languageId = languageId;\n            this._version = version;\n            this._content = content;\n            this._lineOffsets = undefined;\n        }\n        Object.defineProperty(FullTextDocument.prototype, \"uri\", {\n            get: function () {\n                return this._uri;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(FullTextDocument.prototype, \"languageId\", {\n            get: function () {\n                return this._languageId;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(FullTextDocument.prototype, \"version\", {\n            get: function () {\n                return this._version;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        FullTextDocument.prototype.getText = function (range) {\n            if (range) {\n                var start = this.offsetAt(range.start);\n                var end = this.offsetAt(range.end);\n                return this._content.substring(start, end);\n            }\n            return this._content;\n        };\n        FullTextDocument.prototype.update = function (event, version) {\n            this._content = event.text;\n            this._version = version;\n            this._lineOffsets = undefined;\n        };\n        FullTextDocument.prototype.getLineOffsets = function () {\n            if (this._lineOffsets === undefined) {\n                var lineOffsets = [];\n                var text = this._content;\n                var isLineStart = true;\n                for (var i = 0; i < text.length; i++) {\n                    if (isLineStart) {\n                        lineOffsets.push(i);\n                        isLineStart = false;\n                    }\n                    var ch = text.charAt(i);\n                    isLineStart = (ch === '\\r' || ch === '\\n');\n                    if (ch === '\\r' && i + 1 < text.length && text.charAt(i + 1) === '\\n') {\n                        i++;\n                    }\n                }\n                if (isLineStart && text.length > 0) {\n                    lineOffsets.push(text.length);\n                }\n                this._lineOffsets = lineOffsets;\n            }\n            return this._lineOffsets;\n        };\n        FullTextDocument.prototype.positionAt = function (offset) {\n            offset = Math.max(Math.min(offset, this._content.length), 0);\n            var lineOffsets = this.getLineOffsets();\n            var low = 0, high = lineOffsets.length;\n            if (high === 0) {\n                return Position.create(0, offset);\n            }\n            while (low < high) {\n                var mid = Math.floor((low + high) / 2);\n                if (lineOffsets[mid] > offset) {\n                    high = mid;\n                }\n                else {\n                    low = mid + 1;\n                }\n            }\n            // low is the least x for which the line offset is larger than the current offset\n            // or array.length if no line offset is larger than the current offset\n            var line = low - 1;\n            return Position.create(line, offset - lineOffsets[line]);\n        };\n        FullTextDocument.prototype.offsetAt = function (position) {\n            var lineOffsets = this.getLineOffsets();\n            if (position.line >= lineOffsets.length) {\n                return this._content.length;\n            }\n            else if (position.line < 0) {\n                return 0;\n            }\n            var lineOffset = lineOffsets[position.line];\n            var nextLineOffset = (position.line + 1 < lineOffsets.length) ? lineOffsets[position.line + 1] : this._content.length;\n            return Math.max(Math.min(lineOffset + position.character, nextLineOffset), lineOffset);\n        };\n        Object.defineProperty(FullTextDocument.prototype, \"lineCount\", {\n            get: function () {\n                return this.getLineOffsets().length;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        return FullTextDocument;\n    }());\n    var Is;\n    (function (Is) {\n        var toString = Object.prototype.toString;\n        function defined(value) {\n            return typeof value !== 'undefined';\n        }\n        Is.defined = defined;\n        function undefined(value) {\n            return typeof value === 'undefined';\n        }\n        Is.undefined = undefined;\n        function boolean(value) {\n            return value === true || value === false;\n        }\n        Is.boolean = boolean;\n        function string(value) {\n            return toString.call(value) === '[object String]';\n        }\n        Is.string = string;\n        function number(value) {\n            return toString.call(value) === '[object Number]';\n        }\n        Is.number = number;\n        function numberRange(value, min, max) {\n            return toString.call(value) === '[object Number]' && min <= value && value <= max;\n        }\n        Is.numberRange = numberRange;\n        function integer(value) {\n            return toString.call(value) === '[object Number]' && -2147483648 <= value && value <= 2147483647;\n        }\n        Is.integer = integer;\n        function uinteger(value) {\n            return toString.call(value) === '[object Number]' && 0 <= value && value <= 2147483647;\n        }\n        Is.uinteger = uinteger;\n        function func(value) {\n            return toString.call(value) === '[object Function]';\n        }\n        Is.func = func;\n        function objectLiteral(value) {\n            // Strictly speaking class instances pass this check as well. Since the LSP\n            // doesn't use classes we ignore this for now. If we do we need to add something\n            // like this: `Object.getPrototypeOf(Object.getPrototypeOf(x)) === null`\n            return value !== null && typeof value === 'object';\n        }\n        Is.objectLiteral = objectLiteral;\n        function typedArray(value, check) {\n            return Array.isArray(value) && value.every(check);\n        }\n        Is.typedArray = typedArray;\n    })(Is || (Is = {}));\n});\n", "\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ProtocolNotificationType = exports.ProtocolNotificationType0 = exports.ProtocolRequestType = exports.ProtocolRequestType0 = exports.RegistrationType = exports.MessageDirection = void 0;\nconst vscode_jsonrpc_1 = require(\"vscode-jsonrpc\");\nvar MessageDirection;\n(function (MessageDirection) {\n    MessageDirection[\"clientToServer\"] = \"clientToServer\";\n    MessageDirection[\"serverToClient\"] = \"serverToClient\";\n    MessageDirection[\"both\"] = \"both\";\n})(MessageDirection || (exports.MessageDirection = MessageDirection = {}));\nclass RegistrationType {\n    constructor(method) {\n        this.method = method;\n    }\n}\nexports.RegistrationType = RegistrationType;\nclass ProtocolRequestType0 extends vscode_jsonrpc_1.RequestType0 {\n    constructor(method) {\n        super(method);\n    }\n}\nexports.ProtocolRequestType0 = ProtocolRequestType0;\nclass ProtocolRequestType extends vscode_jsonrpc_1.RequestType {\n    constructor(method) {\n        super(method, vscode_jsonrpc_1.ParameterStructures.byName);\n    }\n}\nexports.ProtocolRequestType = ProtocolRequestType;\nclass ProtocolNotificationType0 extends vscode_jsonrpc_1.NotificationType0 {\n    constructor(method) {\n        super(method);\n    }\n}\nexports.ProtocolNotificationType0 = ProtocolNotificationType0;\nclass ProtocolNotificationType extends vscode_jsonrpc_1.NotificationType {\n    constructor(method) {\n        super(method, vscode_jsonrpc_1.ParameterStructures.byName);\n    }\n}\nexports.ProtocolNotificationType = ProtocolNotificationType;\n", "/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\n'use strict';\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.objectLiteral = exports.typedArray = exports.stringArray = exports.array = exports.func = exports.error = exports.number = exports.string = exports.boolean = void 0;\nfunction boolean(value) {\n    return value === true || value === false;\n}\nexports.boolean = boolean;\nfunction string(value) {\n    return typeof value === 'string' || value instanceof String;\n}\nexports.string = string;\nfunction number(value) {\n    return typeof value === 'number' || value instanceof Number;\n}\nexports.number = number;\nfunction error(value) {\n    return value instanceof Error;\n}\nexports.error = error;\nfunction func(value) {\n    return typeof value === 'function';\n}\nexports.func = func;\nfunction array(value) {\n    return Array.isArray(value);\n}\nexports.array = array;\nfunction stringArray(value) {\n    return array(value) && value.every(elem => string(elem));\n}\nexports.stringArray = stringArray;\nfunction typedArray(value, check) {\n    return Array.isArray(value) && value.every(check);\n}\nexports.typedArray = typedArray;\nfunction objectLiteral(value) {\n    // Strictly speaking class instances pass this check as well. Since the LSP\n    // doesn't use classes we ignore this for now. If we do we need to add something\n    // like this: `Object.getPrototypeOf(Object.getPrototypeOf(x)) === null`\n    return value !== null && typeof value === 'object';\n}\nexports.objectLiteral = objectLiteral;\n", "\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ImplementationRequest = void 0;\nconst messages_1 = require(\"./messages\");\n// @ts-ignore: to avoid inlining LocationLink as dynamic import\nlet __noDynamicImport;\n/**\n * A request to resolve the implementation locations of a symbol at a given text\n * document position. The request's parameter is of type {@link TextDocumentPositionParams}\n * the response is of type {@link Definition} or a Thenable that resolves to such.\n */\nvar ImplementationRequest;\n(function (ImplementationRequest) {\n    ImplementationRequest.method = 'textDocument/implementation';\n    ImplementationRequest.messageDirection = messages_1.MessageDirection.clientToServer;\n    ImplementationRequest.type = new messages_1.ProtocolRequestType(ImplementationRequest.method);\n})(ImplementationRequest || (exports.ImplementationRequest = ImplementationRequest = {}));\n", "\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TypeDefinitionRequest = void 0;\nconst messages_1 = require(\"./messages\");\n// @ts-ignore: to avoid inlining LocatioLink as dynamic import\nlet __noDynamicImport;\n/**\n * A request to resolve the type definition locations of a symbol at a given text\n * document position. The request's parameter is of type {@link TextDocumentPositionParams}\n * the response is of type {@link Definition} or a Thenable that resolves to such.\n */\nvar TypeDefinitionRequest;\n(function (TypeDefinitionRequest) {\n    TypeDefinitionRequest.method = 'textDocument/typeDefinition';\n    TypeDefinitionRequest.messageDirection = messages_1.MessageDirection.clientToServer;\n    TypeDefinitionRequest.type = new messages_1.ProtocolRequestType(TypeDefinitionRequest.method);\n})(TypeDefinitionRequest || (exports.TypeDefinitionRequest = TypeDefinitionRequest = {}));\n", "\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DidChangeWorkspaceFoldersNotification = exports.WorkspaceFoldersRequest = void 0;\nconst messages_1 = require(\"./messages\");\n/**\n * The `workspace/workspaceFolders` is sent from the server to the client to fetch the open workspace folders.\n */\nvar WorkspaceFoldersRequest;\n(function (WorkspaceFoldersRequest) {\n    WorkspaceFoldersRequest.method = 'workspace/workspaceFolders';\n    WorkspaceFoldersRequest.messageDirection = messages_1.MessageDirection.serverToClient;\n    WorkspaceFoldersRequest.type = new messages_1.ProtocolRequestType0(WorkspaceFoldersRequest.method);\n})(WorkspaceFoldersRequest || (exports.WorkspaceFoldersRequest = WorkspaceFoldersRequest = {}));\n/**\n * The `workspace/didChangeWorkspaceFolders` notification is sent from the client to the server when the workspace\n * folder configuration changes.\n */\nvar DidChangeWorkspaceFoldersNotification;\n(function (DidChangeWorkspaceFoldersNotification) {\n    DidChangeWorkspaceFoldersNotification.method = 'workspace/didChangeWorkspaceFolders';\n    DidChangeWorkspaceFoldersNotification.messageDirection = messages_1.MessageDirection.clientToServer;\n    DidChangeWorkspaceFoldersNotification.type = new messages_1.ProtocolNotificationType(DidChangeWorkspaceFoldersNotification.method);\n})(DidChangeWorkspaceFoldersNotification || (exports.DidChangeWorkspaceFoldersNotification = DidChangeWorkspaceFoldersNotification = {}));\n", "\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConfigurationRequest = void 0;\nconst messages_1 = require(\"./messages\");\n//---- Get Configuration request ----\n/**\n * The 'workspace/configuration' request is sent from the server to the client to fetch a certain\n * configuration setting.\n *\n * This pull model replaces the old push model were the client signaled configuration change via an\n * event. If the server still needs to react to configuration changes (since the server caches the\n * result of `workspace/configuration` requests) the server should register for an empty configuration\n * change event and empty the cache if such an event is received.\n */\nvar ConfigurationRequest;\n(function (ConfigurationRequest) {\n    ConfigurationRequest.method = 'workspace/configuration';\n    ConfigurationRequest.messageDirection = messages_1.MessageDirection.serverToClient;\n    ConfigurationRequest.type = new messages_1.ProtocolRequestType(ConfigurationRequest.method);\n})(ConfigurationRequest || (exports.ConfigurationRequest = ConfigurationRequest = {}));\n", "\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ColorPresentationRequest = exports.DocumentColorRequest = void 0;\nconst messages_1 = require(\"./messages\");\n/**\n * A request to list all color symbols found in a given text document. The request's\n * parameter is of type {@link DocumentColorParams} the\n * response is of type {@link ColorInformation ColorInformation[]} or a Thenable\n * that resolves to such.\n */\nvar DocumentColorRequest;\n(function (DocumentColorRequest) {\n    DocumentColorRequest.method = 'textDocument/documentColor';\n    DocumentColorRequest.messageDirection = messages_1.MessageDirection.clientToServer;\n    DocumentColorRequest.type = new messages_1.ProtocolRequestType(DocumentColorRequest.method);\n})(DocumentColorRequest || (exports.DocumentColorRequest = DocumentColorRequest = {}));\n/**\n * A request to list all presentation for a color. The request's\n * parameter is of type {@link ColorPresentationParams} the\n * response is of type {@link ColorInformation ColorInformation[]} or a Thenable\n * that resolves to such.\n */\nvar ColorPresentationRequest;\n(function (ColorPresentationRequest) {\n    ColorPresentationRequest.method = 'textDocument/colorPresentation';\n    ColorPresentationRequest.messageDirection = messages_1.MessageDirection.clientToServer;\n    ColorPresentationRequest.type = new messages_1.ProtocolRequestType(ColorPresentationRequest.method);\n})(ColorPresentationRequest || (exports.ColorPresentationRequest = ColorPresentationRequest = {}));\n", "\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.FoldingRangeRefreshRequest = exports.FoldingRangeRequest = void 0;\nconst messages_1 = require(\"./messages\");\n/**\n * A request to provide folding ranges in a document. The request's\n * parameter is of type {@link FoldingRangeParams}, the\n * response is of type {@link FoldingRangeList} or a Thenable\n * that resolves to such.\n */\nvar FoldingRangeRequest;\n(function (FoldingRangeRequest) {\n    FoldingRangeRequest.method = 'textDocument/foldingRange';\n    FoldingRangeRequest.messageDirection = messages_1.MessageDirection.clientToServer;\n    FoldingRangeRequest.type = new messages_1.ProtocolRequestType(FoldingRangeRequest.method);\n})(FoldingRangeRequest || (exports.FoldingRangeRequest = FoldingRangeRequest = {}));\n/**\n * @since 3.18.0\n * @proposed\n */\nvar FoldingRangeRefreshRequest;\n(function (FoldingRangeRefreshRequest) {\n    FoldingRangeRefreshRequest.method = `workspace/foldingRange/refresh`;\n    FoldingRangeRefreshRequest.messageDirection = messages_1.MessageDirection.serverToClient;\n    FoldingRangeRefreshRequest.type = new messages_1.ProtocolRequestType0(FoldingRangeRefreshRequest.method);\n})(FoldingRangeRefreshRequest || (exports.FoldingRangeRefreshRequest = FoldingRangeRefreshRequest = {}));\n", "\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DeclarationRequest = void 0;\nconst messages_1 = require(\"./messages\");\n// @ts-ignore: to avoid inlining LocationLink as dynamic import\nlet __noDynamicImport;\n/**\n * A request to resolve the type definition locations of a symbol at a given text\n * document position. The request's parameter is of type {@link TextDocumentPositionParams}\n * the response is of type {@link Declaration} or a typed array of {@link DeclarationLink}\n * or a Thenable that resolves to such.\n */\nvar DeclarationRequest;\n(function (DeclarationRequest) {\n    DeclarationRequest.method = 'textDocument/declaration';\n    DeclarationRequest.messageDirection = messages_1.MessageDirection.clientToServer;\n    DeclarationRequest.type = new messages_1.ProtocolRequestType(DeclarationRequest.method);\n})(DeclarationRequest || (exports.DeclarationRequest = DeclarationRequest = {}));\n", "\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SelectionRangeRequest = void 0;\nconst messages_1 = require(\"./messages\");\n/**\n * A request to provide selection ranges in a document. The request's\n * parameter is of type {@link SelectionRangeParams}, the\n * response is of type {@link SelectionRange SelectionRange[]} or a Thenable\n * that resolves to such.\n */\nvar SelectionRangeRequest;\n(function (SelectionRangeRequest) {\n    SelectionRangeRequest.method = 'textDocument/selectionRange';\n    SelectionRangeRequest.messageDirection = messages_1.MessageDirection.clientToServer;\n    SelectionRangeRequest.type = new messages_1.ProtocolRequestType(SelectionRangeRequest.method);\n})(SelectionRangeRequest || (exports.SelectionRangeRequest = SelectionRangeRequest = {}));\n", "\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WorkDoneProgressCancelNotification = exports.WorkDoneProgressCreateRequest = exports.WorkDoneProgress = void 0;\nconst vscode_jsonrpc_1 = require(\"vscode-jsonrpc\");\nconst messages_1 = require(\"./messages\");\nvar WorkDoneProgress;\n(function (WorkDoneProgress) {\n    WorkDoneProgress.type = new vscode_jsonrpc_1.ProgressType();\n    function is(value) {\n        return value === WorkDoneProgress.type;\n    }\n    WorkDoneProgress.is = is;\n})(WorkDoneProgress || (exports.WorkDoneProgress = WorkDoneProgress = {}));\n/**\n * The `window/workDoneProgress/create` request is sent from the server to the client to initiate progress\n * reporting from the server.\n */\nvar WorkDoneProgressCreateRequest;\n(function (WorkDoneProgressCreateRequest) {\n    WorkDoneProgressCreateRequest.method = 'window/workDoneProgress/create';\n    WorkDoneProgressCreateRequest.messageDirection = messages_1.MessageDirection.serverToClient;\n    WorkDoneProgressCreateRequest.type = new messages_1.ProtocolRequestType(WorkDoneProgressCreateRequest.method);\n})(WorkDoneProgressCreateRequest || (exports.WorkDoneProgressCreateRequest = WorkDoneProgressCreateRequest = {}));\n/**\n * The `window/workDoneProgress/cancel` notification is sent from  the client to the server to cancel a progress\n * initiated on the server side.\n */\nvar WorkDoneProgressCancelNotification;\n(function (WorkDoneProgressCancelNotification) {\n    WorkDoneProgressCancelNotification.method = 'window/workDoneProgress/cancel';\n    WorkDoneProgressCancelNotification.messageDirection = messages_1.MessageDirection.clientToServer;\n    WorkDoneProgressCancelNotification.type = new messages_1.ProtocolNotificationType(WorkDoneProgressCancelNotification.method);\n})(WorkDoneProgressCancelNotification || (exports.WorkDoneProgressCancelNotification = WorkDoneProgressCancelNotification = {}));\n", "\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) TypeFox, Microsoft and others. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CallHierarchyOutgoingCallsRequest = exports.CallHierarchyIncomingCallsRequest = exports.CallHierarchyPrepareRequest = void 0;\nconst messages_1 = require(\"./messages\");\n/**\n * A request to result a `CallHierarchyItem` in a document at a given position.\n * Can be used as an input to an incoming or outgoing call hierarchy.\n *\n * @since 3.16.0\n */\nvar CallHierarchyPrepareRequest;\n(function (CallHierarchyPrepareRequest) {\n    CallHierarchyPrepareRequest.method = 'textDocument/prepareCallHierarchy';\n    CallHierarchyPrepareRequest.messageDirection = messages_1.MessageDirection.clientToServer;\n    CallHierarchyPrepareRequest.type = new messages_1.ProtocolRequestType(CallHierarchyPrepareRequest.method);\n})(CallHierarchyPrepareRequest || (exports.CallHierarchyPrepareRequest = CallHierarchyPrepareRequest = {}));\n/**\n * A request to resolve the incoming calls for a given `CallHierarchyItem`.\n *\n * @since 3.16.0\n */\nvar CallHierarchyIncomingCallsRequest;\n(function (CallHierarchyIncomingCallsRequest) {\n    CallHierarchyIncomingCallsRequest.method = 'callHierarchy/incomingCalls';\n    CallHierarchyIncomingCallsRequest.messageDirection = messages_1.MessageDirection.clientToServer;\n    CallHierarchyIncomingCallsRequest.type = new messages_1.ProtocolRequestType(CallHierarchyIncomingCallsRequest.method);\n})(CallHierarchyIncomingCallsRequest || (exports.CallHierarchyIncomingCallsRequest = CallHierarchyIncomingCallsRequest = {}));\n/**\n * A request to resolve the outgoing calls for a given `CallHierarchyItem`.\n *\n * @since 3.16.0\n */\nvar CallHierarchyOutgoingCallsRequest;\n(function (CallHierarchyOutgoingCallsRequest) {\n    CallHierarchyOutgoingCallsRequest.method = 'callHierarchy/outgoingCalls';\n    CallHierarchyOutgoingCallsRequest.messageDirection = messages_1.MessageDirection.clientToServer;\n    CallHierarchyOutgoingCallsRequest.type = new messages_1.ProtocolRequestType(CallHierarchyOutgoingCallsRequest.method);\n})(CallHierarchyOutgoingCallsRequest || (exports.CallHierarchyOutgoingCallsRequest = CallHierarchyOutgoingCallsRequest = {}));\n", "\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SemanticTokensRefreshRequest = exports.SemanticTokensRangeRequest = exports.SemanticTokensDeltaRequest = exports.SemanticTokensRequest = exports.SemanticTokensRegistrationType = exports.TokenFormat = void 0;\nconst messages_1 = require(\"./messages\");\n//------- 'textDocument/semanticTokens' -----\nvar TokenFormat;\n(function (TokenFormat) {\n    TokenFormat.Relative = 'relative';\n})(TokenFormat || (exports.TokenFormat = TokenFormat = {}));\nvar SemanticTokensRegistrationType;\n(function (SemanticTokensRegistrationType) {\n    SemanticTokensRegistrationType.method = 'textDocument/semanticTokens';\n    SemanticTokensRegistrationType.type = new messages_1.RegistrationType(SemanticTokensRegistrationType.method);\n})(SemanticTokensRegistrationType || (exports.SemanticTokensRegistrationType = SemanticTokensRegistrationType = {}));\n/**\n * @since 3.16.0\n */\nvar SemanticTokensRequest;\n(function (SemanticTokensRequest) {\n    SemanticTokensRequest.method = 'textDocument/semanticTokens/full';\n    SemanticTokensRequest.messageDirection = messages_1.MessageDirection.clientToServer;\n    SemanticTokensRequest.type = new messages_1.ProtocolRequestType(SemanticTokensRequest.method);\n    SemanticTokensRequest.registrationMethod = SemanticTokensRegistrationType.method;\n})(SemanticTokensRequest || (exports.SemanticTokensRequest = SemanticTokensRequest = {}));\n/**\n * @since 3.16.0\n */\nvar SemanticTokensDeltaRequest;\n(function (SemanticTokensDeltaRequest) {\n    SemanticTokensDeltaRequest.method = 'textDocument/semanticTokens/full/delta';\n    SemanticTokensDeltaRequest.messageDirection = messages_1.MessageDirection.clientToServer;\n    SemanticTokensDeltaRequest.type = new messages_1.ProtocolRequestType(SemanticTokensDeltaRequest.method);\n    SemanticTokensDeltaRequest.registrationMethod = SemanticTokensRegistrationType.method;\n})(SemanticTokensDeltaRequest || (exports.SemanticTokensDeltaRequest = SemanticTokensDeltaRequest = {}));\n/**\n * @since 3.16.0\n */\nvar SemanticTokensRangeRequest;\n(function (SemanticTokensRangeRequest) {\n    SemanticTokensRangeRequest.method = 'textDocument/semanticTokens/range';\n    SemanticTokensRangeRequest.messageDirection = messages_1.MessageDirection.clientToServer;\n    SemanticTokensRangeRequest.type = new messages_1.ProtocolRequestType(SemanticTokensRangeRequest.method);\n    SemanticTokensRangeRequest.registrationMethod = SemanticTokensRegistrationType.method;\n})(SemanticTokensRangeRequest || (exports.SemanticTokensRangeRequest = SemanticTokensRangeRequest = {}));\n/**\n * @since 3.16.0\n */\nvar SemanticTokensRefreshRequest;\n(function (SemanticTokensRefreshRequest) {\n    SemanticTokensRefreshRequest.method = `workspace/semanticTokens/refresh`;\n    SemanticTokensRefreshRequest.messageDirection = messages_1.MessageDirection.serverToClient;\n    SemanticTokensRefreshRequest.type = new messages_1.ProtocolRequestType0(SemanticTokensRefreshRequest.method);\n})(SemanticTokensRefreshRequest || (exports.SemanticTokensRefreshRequest = SemanticTokensRefreshRequest = {}));\n", "\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ShowDocumentRequest = void 0;\nconst messages_1 = require(\"./messages\");\n/**\n * A request to show a document. This request might open an\n * external program depending on the value of the URI to open.\n * For example a request to open `https://code.visualstudio.com/`\n * will very likely open the URI in a WEB browser.\n *\n * @since 3.16.0\n*/\nvar ShowDocumentRequest;\n(function (ShowDocumentRequest) {\n    ShowDocumentRequest.method = 'window/showDocument';\n    ShowDocumentRequest.messageDirection = messages_1.MessageDirection.serverToClient;\n    ShowDocumentRequest.type = new messages_1.ProtocolRequestType(ShowDocumentRequest.method);\n})(ShowDocumentRequest || (exports.ShowDocumentRequest = ShowDocumentRequest = {}));\n", "\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LinkedEditingRangeRequest = void 0;\nconst messages_1 = require(\"./messages\");\n/**\n * A request to provide ranges that can be edited together.\n *\n * @since 3.16.0\n */\nvar LinkedEditingRangeRequest;\n(function (LinkedEditingRangeRequest) {\n    LinkedEditingRangeRequest.method = 'textDocument/linkedEditingRange';\n    LinkedEditingRangeRequest.messageDirection = messages_1.MessageDirection.clientToServer;\n    LinkedEditingRangeRequest.type = new messages_1.ProtocolRequestType(LinkedEditingRangeRequest.method);\n})(LinkedEditingRangeRequest || (exports.LinkedEditingRangeRequest = LinkedEditingRangeRequest = {}));\n", "\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WillDeleteFilesRequest = exports.DidDeleteFilesNotification = exports.DidRenameFilesNotification = exports.WillRenameFilesRequest = exports.DidCreateFilesNotification = exports.WillCreateFilesRequest = exports.FileOperationPatternKind = void 0;\nconst messages_1 = require(\"./messages\");\n/**\n * A pattern kind describing if a glob pattern matches a file a folder or\n * both.\n *\n * @since 3.16.0\n */\nvar FileOperationPatternKind;\n(function (FileOperationPatternKind) {\n    /**\n     * The pattern matches a file only.\n     */\n    FileOperationPatternKind.file = 'file';\n    /**\n     * The pattern matches a folder only.\n     */\n    FileOperationPatternKind.folder = 'folder';\n})(FileOperationPatternKind || (exports.FileOperationPatternKind = FileOperationPatternKind = {}));\n/**\n * The will create files request is sent from the client to the server before files are actually\n * created as long as the creation is triggered from within the client.\n *\n * The request can return a `WorkspaceEdit` which will be applied to workspace before the\n * files are created. Hence the `WorkspaceEdit` can not manipulate the content of the file\n * to be created.\n *\n * @since 3.16.0\n */\nvar WillCreateFilesRequest;\n(function (WillCreateFilesRequest) {\n    WillCreateFilesRequest.method = 'workspace/willCreateFiles';\n    WillCreateFilesRequest.messageDirection = messages_1.MessageDirection.clientToServer;\n    WillCreateFilesRequest.type = new messages_1.ProtocolRequestType(WillCreateFilesRequest.method);\n})(WillCreateFilesRequest || (exports.WillCreateFilesRequest = WillCreateFilesRequest = {}));\n/**\n * The did create files notification is sent from the client to the server when\n * files were created from within the client.\n *\n * @since 3.16.0\n */\nvar DidCreateFilesNotification;\n(function (DidCreateFilesNotification) {\n    DidCreateFilesNotification.method = 'workspace/didCreateFiles';\n    DidCreateFilesNotification.messageDirection = messages_1.MessageDirection.clientToServer;\n    DidCreateFilesNotification.type = new messages_1.ProtocolNotificationType(DidCreateFilesNotification.method);\n})(DidCreateFilesNotification || (exports.DidCreateFilesNotification = DidCreateFilesNotification = {}));\n/**\n * The will rename files request is sent from the client to the server before files are actually\n * renamed as long as the rename is triggered from within the client.\n *\n * @since 3.16.0\n */\nvar WillRenameFilesRequest;\n(function (WillRenameFilesRequest) {\n    WillRenameFilesRequest.method = 'workspace/willRenameFiles';\n    WillRenameFilesRequest.messageDirection = messages_1.MessageDirection.clientToServer;\n    WillRenameFilesRequest.type = new messages_1.ProtocolRequestType(WillRenameFilesRequest.method);\n})(WillRenameFilesRequest || (exports.WillRenameFilesRequest = WillRenameFilesRequest = {}));\n/**\n * The did rename files notification is sent from the client to the server when\n * files were renamed from within the client.\n *\n * @since 3.16.0\n */\nvar DidRenameFilesNotification;\n(function (DidRenameFilesNotification) {\n    DidRenameFilesNotification.method = 'workspace/didRenameFiles';\n    DidRenameFilesNotification.messageDirection = messages_1.MessageDirection.clientToServer;\n    DidRenameFilesNotification.type = new messages_1.ProtocolNotificationType(DidRenameFilesNotification.method);\n})(DidRenameFilesNotification || (exports.DidRenameFilesNotification = DidRenameFilesNotification = {}));\n/**\n * The will delete files request is sent from the client to the server before files are actually\n * deleted as long as the deletion is triggered from within the client.\n *\n * @since 3.16.0\n */\nvar DidDeleteFilesNotification;\n(function (DidDeleteFilesNotification) {\n    DidDeleteFilesNotification.method = 'workspace/didDeleteFiles';\n    DidDeleteFilesNotification.messageDirection = messages_1.MessageDirection.clientToServer;\n    DidDeleteFilesNotification.type = new messages_1.ProtocolNotificationType(DidDeleteFilesNotification.method);\n})(DidDeleteFilesNotification || (exports.DidDeleteFilesNotification = DidDeleteFilesNotification = {}));\n/**\n * The did delete files notification is sent from the client to the server when\n * files were deleted from within the client.\n *\n * @since 3.16.0\n */\nvar WillDeleteFilesRequest;\n(function (WillDeleteFilesRequest) {\n    WillDeleteFilesRequest.method = 'workspace/willDeleteFiles';\n    WillDeleteFilesRequest.messageDirection = messages_1.MessageDirection.clientToServer;\n    WillDeleteFilesRequest.type = new messages_1.ProtocolRequestType(WillDeleteFilesRequest.method);\n})(WillDeleteFilesRequest || (exports.WillDeleteFilesRequest = WillDeleteFilesRequest = {}));\n", "\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MonikerRequest = exports.MonikerKind = exports.UniquenessLevel = void 0;\nconst messages_1 = require(\"./messages\");\n/**\n * Moniker uniqueness level to define scope of the moniker.\n *\n * @since 3.16.0\n */\nvar UniquenessLevel;\n(function (UniquenessLevel) {\n    /**\n     * The moniker is only unique inside a document\n     */\n    UniquenessLevel.document = 'document';\n    /**\n     * The moniker is unique inside a project for which a dump got created\n     */\n    UniquenessLevel.project = 'project';\n    /**\n     * The moniker is unique inside the group to which a project belongs\n     */\n    UniquenessLevel.group = 'group';\n    /**\n     * The moniker is unique inside the moniker scheme.\n     */\n    UniquenessLevel.scheme = 'scheme';\n    /**\n     * The moniker is globally unique\n     */\n    UniquenessLevel.global = 'global';\n})(UniquenessLevel || (exports.UniquenessLevel = UniquenessLevel = {}));\n/**\n * The moniker kind.\n *\n * @since 3.16.0\n */\nvar MonikerKind;\n(function (MonikerKind) {\n    /**\n     * The moniker represent a symbol that is imported into a project\n     */\n    MonikerKind.$import = 'import';\n    /**\n     * The moniker represents a symbol that is exported from a project\n     */\n    MonikerKind.$export = 'export';\n    /**\n     * The moniker represents a symbol that is local to a project (e.g. a local\n     * variable of a function, a class not visible outside the project, ...)\n     */\n    MonikerKind.local = 'local';\n})(MonikerKind || (exports.MonikerKind = MonikerKind = {}));\n/**\n * A request to get the moniker of a symbol at a given text document position.\n * The request parameter is of type {@link TextDocumentPositionParams}.\n * The response is of type {@link Moniker Moniker[]} or `null`.\n */\nvar MonikerRequest;\n(function (MonikerRequest) {\n    MonikerRequest.method = 'textDocument/moniker';\n    MonikerRequest.messageDirection = messages_1.MessageDirection.clientToServer;\n    MonikerRequest.type = new messages_1.ProtocolRequestType(MonikerRequest.method);\n})(MonikerRequest || (exports.MonikerRequest = MonikerRequest = {}));\n", "\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) TypeFox, Microsoft and others. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TypeHierarchySubtypesRequest = exports.TypeHierarchySupertypesRequest = exports.TypeHierarchyPrepareRequest = void 0;\nconst messages_1 = require(\"./messages\");\n/**\n * A request to result a `TypeHierarchyItem` in a document at a given position.\n * Can be used as an input to a subtypes or supertypes type hierarchy.\n *\n * @since 3.17.0\n */\nvar TypeHierarchyPrepareRequest;\n(function (TypeHierarchyPrepareRequest) {\n    TypeHierarchyPrepareRequest.method = 'textDocument/prepareTypeHierarchy';\n    TypeHierarchyPrepareRequest.messageDirection = messages_1.MessageDirection.clientToServer;\n    TypeHierarchyPrepareRequest.type = new messages_1.ProtocolRequestType(TypeHierarchyPrepareRequest.method);\n})(TypeHierarchyPrepareRequest || (exports.TypeHierarchyPrepareRequest = TypeHierarchyPrepareRequest = {}));\n/**\n * A request to resolve the supertypes for a given `TypeHierarchyItem`.\n *\n * @since 3.17.0\n */\nvar TypeHierarchySupertypesRequest;\n(function (TypeHierarchySupertypesRequest) {\n    TypeHierarchySupertypesRequest.method = 'typeHierarchy/supertypes';\n    TypeHierarchySupertypesRequest.messageDirection = messages_1.MessageDirection.clientToServer;\n    TypeHierarchySupertypesRequest.type = new messages_1.ProtocolRequestType(TypeHierarchySupertypesRequest.method);\n})(TypeHierarchySupertypesRequest || (exports.TypeHierarchySupertypesRequest = TypeHierarchySupertypesRequest = {}));\n/**\n * A request to resolve the subtypes for a given `TypeHierarchyItem`.\n *\n * @since 3.17.0\n */\nvar TypeHierarchySubtypesRequest;\n(function (TypeHierarchySubtypesRequest) {\n    TypeHierarchySubtypesRequest.method = 'typeHierarchy/subtypes';\n    TypeHierarchySubtypesRequest.messageDirection = messages_1.MessageDirection.clientToServer;\n    TypeHierarchySubtypesRequest.type = new messages_1.ProtocolRequestType(TypeHierarchySubtypesRequest.method);\n})(TypeHierarchySubtypesRequest || (exports.TypeHierarchySubtypesRequest = TypeHierarchySubtypesRequest = {}));\n", "\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InlineValueRefreshRequest = exports.InlineValueRequest = void 0;\nconst messages_1 = require(\"./messages\");\n/**\n * A request to provide inline values in a document. The request's parameter is of\n * type {@link InlineValueParams}, the response is of type\n * {@link InlineValue InlineValue[]} or a Thenable that resolves to such.\n *\n * @since 3.17.0\n */\nvar InlineValueRequest;\n(function (InlineValueRequest) {\n    InlineValueRequest.method = 'textDocument/inlineValue';\n    InlineValueRequest.messageDirection = messages_1.MessageDirection.clientToServer;\n    InlineValueRequest.type = new messages_1.ProtocolRequestType(InlineValueRequest.method);\n})(InlineValueRequest || (exports.InlineValueRequest = InlineValueRequest = {}));\n/**\n * @since 3.17.0\n */\nvar InlineValueRefreshRequest;\n(function (InlineValueRefreshRequest) {\n    InlineValueRefreshRequest.method = `workspace/inlineValue/refresh`;\n    InlineValueRefreshRequest.messageDirection = messages_1.MessageDirection.serverToClient;\n    InlineValueRefreshRequest.type = new messages_1.ProtocolRequestType0(InlineValueRefreshRequest.method);\n})(InlineValueRefreshRequest || (exports.InlineValueRefreshRequest = InlineValueRefreshRequest = {}));\n", "\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InlayHintRefreshRequest = exports.InlayHintResolveRequest = exports.InlayHintRequest = void 0;\nconst messages_1 = require(\"./messages\");\n/**\n * A request to provide inlay hints in a document. The request's parameter is of\n * type {@link InlayHintsParams}, the response is of type\n * {@link InlayHint InlayHint[]} or a Thenable that resolves to such.\n *\n * @since 3.17.0\n */\nvar InlayHintRequest;\n(function (InlayHintRequest) {\n    InlayHintRequest.method = 'textDocument/inlayHint';\n    InlayHintRequest.messageDirection = messages_1.MessageDirection.clientToServer;\n    InlayHintRequest.type = new messages_1.ProtocolRequestType(InlayHintRequest.method);\n})(InlayHintRequest || (exports.InlayHintRequest = InlayHintRequest = {}));\n/**\n * A request to resolve additional properties for an inlay hint.\n * The request's parameter is of type {@link InlayHint}, the response is\n * of type {@link InlayHint} or a Thenable that resolves to such.\n *\n * @since 3.17.0\n */\nvar InlayHintResolveRequest;\n(function (InlayHintResolveRequest) {\n    InlayHintResolveRequest.method = 'inlayHint/resolve';\n    InlayHintResolveRequest.messageDirection = messages_1.MessageDirection.clientToServer;\n    InlayHintResolveRequest.type = new messages_1.ProtocolRequestType(InlayHintResolveRequest.method);\n})(InlayHintResolveRequest || (exports.InlayHintResolveRequest = InlayHintResolveRequest = {}));\n/**\n * @since 3.17.0\n */\nvar InlayHintRefreshRequest;\n(function (InlayHintRefreshRequest) {\n    InlayHintRefreshRequest.method = `workspace/inlayHint/refresh`;\n    InlayHintRefreshRequest.messageDirection = messages_1.MessageDirection.serverToClient;\n    InlayHintRefreshRequest.type = new messages_1.ProtocolRequestType0(InlayHintRefreshRequest.method);\n})(InlayHintRefreshRequest || (exports.InlayHintRefreshRequest = InlayHintRefreshRequest = {}));\n", "\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DiagnosticRefreshRequest = exports.WorkspaceDiagnosticRequest = exports.DocumentDiagnosticRequest = exports.DocumentDiagnosticReportKind = exports.DiagnosticServerCancellationData = void 0;\nconst vscode_jsonrpc_1 = require(\"vscode-jsonrpc\");\nconst Is = require(\"./utils/is\");\nconst messages_1 = require(\"./messages\");\n/**\n * @since 3.17.0\n */\nvar DiagnosticServerCancellationData;\n(function (DiagnosticServerCancellationData) {\n    function is(value) {\n        const candidate = value;\n        return candidate && Is.boolean(candidate.retriggerRequest);\n    }\n    DiagnosticServerCancellationData.is = is;\n})(DiagnosticServerCancellationData || (exports.DiagnosticServerCancellationData = DiagnosticServerCancellationData = {}));\n/**\n * The document diagnostic report kinds.\n *\n * @since 3.17.0\n */\nvar DocumentDiagnosticReportKind;\n(function (DocumentDiagnosticReportKind) {\n    /**\n     * A diagnostic report with a full\n     * set of problems.\n     */\n    DocumentDiagnosticReportKind.Full = 'full';\n    /**\n     * A report indicating that the last\n     * returned report is still accurate.\n     */\n    DocumentDiagnosticReportKind.Unchanged = 'unchanged';\n})(DocumentDiagnosticReportKind || (exports.DocumentDiagnosticReportKind = DocumentDiagnosticReportKind = {}));\n/**\n * The document diagnostic request definition.\n *\n * @since 3.17.0\n */\nvar DocumentDiagnosticRequest;\n(function (DocumentDiagnosticRequest) {\n    DocumentDiagnosticRequest.method = 'textDocument/diagnostic';\n    DocumentDiagnosticRequest.messageDirection = messages_1.MessageDirection.clientToServer;\n    DocumentDiagnosticRequest.type = new messages_1.ProtocolRequestType(DocumentDiagnosticRequest.method);\n    DocumentDiagnosticRequest.partialResult = new vscode_jsonrpc_1.ProgressType();\n})(DocumentDiagnosticRequest || (exports.DocumentDiagnosticRequest = DocumentDiagnosticRequest = {}));\n/**\n * The workspace diagnostic request definition.\n *\n * @since 3.17.0\n */\nvar WorkspaceDiagnosticRequest;\n(function (WorkspaceDiagnosticRequest) {\n    WorkspaceDiagnosticRequest.method = 'workspace/diagnostic';\n    WorkspaceDiagnosticRequest.messageDirection = messages_1.MessageDirection.clientToServer;\n    WorkspaceDiagnosticRequest.type = new messages_1.ProtocolRequestType(WorkspaceDiagnosticRequest.method);\n    WorkspaceDiagnosticRequest.partialResult = new vscode_jsonrpc_1.ProgressType();\n})(WorkspaceDiagnosticRequest || (exports.WorkspaceDiagnosticRequest = WorkspaceDiagnosticRequest = {}));\n/**\n * The diagnostic refresh request definition.\n *\n * @since 3.17.0\n */\nvar DiagnosticRefreshRequest;\n(function (DiagnosticRefreshRequest) {\n    DiagnosticRefreshRequest.method = `workspace/diagnostic/refresh`;\n    DiagnosticRefreshRequest.messageDirection = messages_1.MessageDirection.serverToClient;\n    DiagnosticRefreshRequest.type = new messages_1.ProtocolRequestType0(DiagnosticRefreshRequest.method);\n})(DiagnosticRefreshRequest || (exports.DiagnosticRefreshRequest = DiagnosticRefreshRequest = {}));\n", "\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DidCloseNotebookDocumentNotification = exports.DidSaveNotebookDocumentNotification = exports.DidChangeNotebookDocumentNotification = exports.NotebookCellArrayChange = exports.DidOpenNotebookDocumentNotification = exports.NotebookDocumentSyncRegistrationType = exports.NotebookDocument = exports.NotebookCell = exports.ExecutionSummary = exports.NotebookCellKind = void 0;\nconst vscode_languageserver_types_1 = require(\"vscode-languageserver-types\");\nconst Is = require(\"./utils/is\");\nconst messages_1 = require(\"./messages\");\n/**\n * A notebook cell kind.\n *\n * @since 3.17.0\n */\nvar NotebookCellKind;\n(function (NotebookCellKind) {\n    /**\n     * A markup-cell is formatted source that is used for display.\n     */\n    NotebookCellKind.Markup = 1;\n    /**\n     * A code-cell is source code.\n     */\n    NotebookCellKind.Code = 2;\n    function is(value) {\n        return value === 1 || value === 2;\n    }\n    NotebookCellKind.is = is;\n})(NotebookCellKind || (exports.NotebookCellKind = NotebookCellKind = {}));\nvar ExecutionSummary;\n(function (ExecutionSummary) {\n    function create(executionOrder, success) {\n        const result = { executionOrder };\n        if (success === true || success === false) {\n            result.success = success;\n        }\n        return result;\n    }\n    ExecutionSummary.create = create;\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate) && vscode_languageserver_types_1.uinteger.is(candidate.executionOrder) && (candidate.success === undefined || Is.boolean(candidate.success));\n    }\n    ExecutionSummary.is = is;\n    function equals(one, other) {\n        if (one === other) {\n            return true;\n        }\n        if (one === null || one === undefined || other === null || other === undefined) {\n            return false;\n        }\n        return one.executionOrder === other.executionOrder && one.success === other.success;\n    }\n    ExecutionSummary.equals = equals;\n})(ExecutionSummary || (exports.ExecutionSummary = ExecutionSummary = {}));\nvar NotebookCell;\n(function (NotebookCell) {\n    function create(kind, document) {\n        return { kind, document };\n    }\n    NotebookCell.create = create;\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate) && NotebookCellKind.is(candidate.kind) && vscode_languageserver_types_1.DocumentUri.is(candidate.document) &&\n            (candidate.metadata === undefined || Is.objectLiteral(candidate.metadata));\n    }\n    NotebookCell.is = is;\n    function diff(one, two) {\n        const result = new Set();\n        if (one.document !== two.document) {\n            result.add('document');\n        }\n        if (one.kind !== two.kind) {\n            result.add('kind');\n        }\n        if (one.executionSummary !== two.executionSummary) {\n            result.add('executionSummary');\n        }\n        if ((one.metadata !== undefined || two.metadata !== undefined) && !equalsMetadata(one.metadata, two.metadata)) {\n            result.add('metadata');\n        }\n        if ((one.executionSummary !== undefined || two.executionSummary !== undefined) && !ExecutionSummary.equals(one.executionSummary, two.executionSummary)) {\n            result.add('executionSummary');\n        }\n        return result;\n    }\n    NotebookCell.diff = diff;\n    function equalsMetadata(one, other) {\n        if (one === other) {\n            return true;\n        }\n        if (one === null || one === undefined || other === null || other === undefined) {\n            return false;\n        }\n        if (typeof one !== typeof other) {\n            return false;\n        }\n        if (typeof one !== 'object') {\n            return false;\n        }\n        const oneArray = Array.isArray(one);\n        const otherArray = Array.isArray(other);\n        if (oneArray !== otherArray) {\n            return false;\n        }\n        if (oneArray && otherArray) {\n            if (one.length !== other.length) {\n                return false;\n            }\n            for (let i = 0; i < one.length; i++) {\n                if (!equalsMetadata(one[i], other[i])) {\n                    return false;\n                }\n            }\n        }\n        if (Is.objectLiteral(one) && Is.objectLiteral(other)) {\n            const oneKeys = Object.keys(one);\n            const otherKeys = Object.keys(other);\n            if (oneKeys.length !== otherKeys.length) {\n                return false;\n            }\n            oneKeys.sort();\n            otherKeys.sort();\n            if (!equalsMetadata(oneKeys, otherKeys)) {\n                return false;\n            }\n            for (let i = 0; i < oneKeys.length; i++) {\n                const prop = oneKeys[i];\n                if (!equalsMetadata(one[prop], other[prop])) {\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n})(NotebookCell || (exports.NotebookCell = NotebookCell = {}));\nvar NotebookDocument;\n(function (NotebookDocument) {\n    function create(uri, notebookType, version, cells) {\n        return { uri, notebookType, version, cells };\n    }\n    NotebookDocument.create = create;\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate) && Is.string(candidate.uri) && vscode_languageserver_types_1.integer.is(candidate.version) && Is.typedArray(candidate.cells, NotebookCell.is);\n    }\n    NotebookDocument.is = is;\n})(NotebookDocument || (exports.NotebookDocument = NotebookDocument = {}));\nvar NotebookDocumentSyncRegistrationType;\n(function (NotebookDocumentSyncRegistrationType) {\n    NotebookDocumentSyncRegistrationType.method = 'notebookDocument/sync';\n    NotebookDocumentSyncRegistrationType.messageDirection = messages_1.MessageDirection.clientToServer;\n    NotebookDocumentSyncRegistrationType.type = new messages_1.RegistrationType(NotebookDocumentSyncRegistrationType.method);\n})(NotebookDocumentSyncRegistrationType || (exports.NotebookDocumentSyncRegistrationType = NotebookDocumentSyncRegistrationType = {}));\n/**\n * A notification sent when a notebook opens.\n *\n * @since 3.17.0\n */\nvar DidOpenNotebookDocumentNotification;\n(function (DidOpenNotebookDocumentNotification) {\n    DidOpenNotebookDocumentNotification.method = 'notebookDocument/didOpen';\n    DidOpenNotebookDocumentNotification.messageDirection = messages_1.MessageDirection.clientToServer;\n    DidOpenNotebookDocumentNotification.type = new messages_1.ProtocolNotificationType(DidOpenNotebookDocumentNotification.method);\n    DidOpenNotebookDocumentNotification.registrationMethod = NotebookDocumentSyncRegistrationType.method;\n})(DidOpenNotebookDocumentNotification || (exports.DidOpenNotebookDocumentNotification = DidOpenNotebookDocumentNotification = {}));\nvar NotebookCellArrayChange;\n(function (NotebookCellArrayChange) {\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate) && vscode_languageserver_types_1.uinteger.is(candidate.start) && vscode_languageserver_types_1.uinteger.is(candidate.deleteCount) && (candidate.cells === undefined || Is.typedArray(candidate.cells, NotebookCell.is));\n    }\n    NotebookCellArrayChange.is = is;\n    function create(start, deleteCount, cells) {\n        const result = { start, deleteCount };\n        if (cells !== undefined) {\n            result.cells = cells;\n        }\n        return result;\n    }\n    NotebookCellArrayChange.create = create;\n})(NotebookCellArrayChange || (exports.NotebookCellArrayChange = NotebookCellArrayChange = {}));\nvar DidChangeNotebookDocumentNotification;\n(function (DidChangeNotebookDocumentNotification) {\n    DidChangeNotebookDocumentNotification.method = 'notebookDocument/didChange';\n    DidChangeNotebookDocumentNotification.messageDirection = messages_1.MessageDirection.clientToServer;\n    DidChangeNotebookDocumentNotification.type = new messages_1.ProtocolNotificationType(DidChangeNotebookDocumentNotification.method);\n    DidChangeNotebookDocumentNotification.registrationMethod = NotebookDocumentSyncRegistrationType.method;\n})(DidChangeNotebookDocumentNotification || (exports.DidChangeNotebookDocumentNotification = DidChangeNotebookDocumentNotification = {}));\n/**\n * A notification sent when a notebook document is saved.\n *\n * @since 3.17.0\n */\nvar DidSaveNotebookDocumentNotification;\n(function (DidSaveNotebookDocumentNotification) {\n    DidSaveNotebookDocumentNotification.method = 'notebookDocument/didSave';\n    DidSaveNotebookDocumentNotification.messageDirection = messages_1.MessageDirection.clientToServer;\n    DidSaveNotebookDocumentNotification.type = new messages_1.ProtocolNotificationType(DidSaveNotebookDocumentNotification.method);\n    DidSaveNotebookDocumentNotification.registrationMethod = NotebookDocumentSyncRegistrationType.method;\n})(DidSaveNotebookDocumentNotification || (exports.DidSaveNotebookDocumentNotification = DidSaveNotebookDocumentNotification = {}));\n/**\n * A notification sent when a notebook closes.\n *\n * @since 3.17.0\n */\nvar DidCloseNotebookDocumentNotification;\n(function (DidCloseNotebookDocumentNotification) {\n    DidCloseNotebookDocumentNotification.method = 'notebookDocument/didClose';\n    DidCloseNotebookDocumentNotification.messageDirection = messages_1.MessageDirection.clientToServer;\n    DidCloseNotebookDocumentNotification.type = new messages_1.ProtocolNotificationType(DidCloseNotebookDocumentNotification.method);\n    DidCloseNotebookDocumentNotification.registrationMethod = NotebookDocumentSyncRegistrationType.method;\n})(DidCloseNotebookDocumentNotification || (exports.DidCloseNotebookDocumentNotification = DidCloseNotebookDocumentNotification = {}));\n", "\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InlineCompletionRequest = void 0;\nconst messages_1 = require(\"./messages\");\n/**\n * A request to provide inline completions in a document. The request's parameter is of\n * type {@link InlineCompletionParams}, the response is of type\n * {@link InlineCompletion InlineCompletion[]} or a Thenable that resolves to such.\n *\n * @since 3.18.0\n * @proposed\n */\nvar InlineCompletionRequest;\n(function (InlineCompletionRequest) {\n    InlineCompletionRequest.method = 'textDocument/inlineCompletion';\n    InlineCompletionRequest.messageDirection = messages_1.MessageDirection.clientToServer;\n    InlineCompletionRequest.type = new messages_1.ProtocolRequestType(InlineCompletionRequest.method);\n})(InlineCompletionRequest || (exports.InlineCompletionRequest = InlineCompletionRequest = {}));\n", "\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WorkspaceSymbolRequest = exports.CodeActionResolveRequest = exports.CodeActionRequest = exports.DocumentSymbolRequest = exports.DocumentHighlightRequest = exports.ReferencesRequest = exports.DefinitionRequest = exports.SignatureHelpRequest = exports.SignatureHelpTriggerKind = exports.HoverRequest = exports.CompletionResolveRequest = exports.CompletionRequest = exports.CompletionTriggerKind = exports.PublishDiagnosticsNotification = exports.WatchKind = exports.RelativePattern = exports.FileChangeType = exports.DidChangeWatchedFilesNotification = exports.WillSaveTextDocumentWaitUntilRequest = exports.WillSaveTextDocumentNotification = exports.TextDocumentSaveReason = exports.DidSaveTextDocumentNotification = exports.DidCloseTextDocumentNotification = exports.DidChangeTextDocumentNotification = exports.TextDocumentContentChangeEvent = exports.DidOpenTextDocumentNotification = exports.TextDocumentSyncKind = exports.TelemetryEventNotification = exports.LogMessageNotification = exports.ShowMessageRequest = exports.ShowMessageNotification = exports.MessageType = exports.DidChangeConfigurationNotification = exports.ExitNotification = exports.ShutdownRequest = exports.InitializedNotification = exports.InitializeErrorCodes = exports.InitializeRequest = exports.WorkDoneProgressOptions = exports.TextDocumentRegistrationOptions = exports.StaticRegistrationOptions = exports.PositionEncodingKind = exports.FailureHandlingKind = exports.ResourceOperationKind = exports.UnregistrationRequest = exports.RegistrationRequest = exports.DocumentSelector = exports.NotebookCellTextDocumentFilter = exports.NotebookDocumentFilter = exports.TextDocumentFilter = void 0;\nexports.MonikerRequest = exports.MonikerKind = exports.UniquenessLevel = exports.WillDeleteFilesRequest = exports.DidDeleteFilesNotification = exports.WillRenameFilesRequest = exports.DidRenameFilesNotification = exports.WillCreateFilesRequest = exports.DidCreateFilesNotification = exports.FileOperationPatternKind = exports.LinkedEditingRangeRequest = exports.ShowDocumentRequest = exports.SemanticTokensRegistrationType = exports.SemanticTokensRefreshRequest = exports.SemanticTokensRangeRequest = exports.SemanticTokensDeltaRequest = exports.SemanticTokensRequest = exports.TokenFormat = exports.CallHierarchyPrepareRequest = exports.CallHierarchyOutgoingCallsRequest = exports.CallHierarchyIncomingCallsRequest = exports.WorkDoneProgressCancelNotification = exports.WorkDoneProgressCreateRequest = exports.WorkDoneProgress = exports.SelectionRangeRequest = exports.DeclarationRequest = exports.FoldingRangeRefreshRequest = exports.FoldingRangeRequest = exports.ColorPresentationRequest = exports.DocumentColorRequest = exports.ConfigurationRequest = exports.DidChangeWorkspaceFoldersNotification = exports.WorkspaceFoldersRequest = exports.TypeDefinitionRequest = exports.ImplementationRequest = exports.ApplyWorkspaceEditRequest = exports.ExecuteCommandRequest = exports.PrepareRenameRequest = exports.RenameRequest = exports.PrepareSupportDefaultBehavior = exports.DocumentOnTypeFormattingRequest = exports.DocumentRangesFormattingRequest = exports.DocumentRangeFormattingRequest = exports.DocumentFormattingRequest = exports.DocumentLinkResolveRequest = exports.DocumentLinkRequest = exports.CodeLensRefreshRequest = exports.CodeLensResolveRequest = exports.CodeLensRequest = exports.WorkspaceSymbolResolveRequest = void 0;\nexports.InlineCompletionRequest = exports.DidCloseNotebookDocumentNotification = exports.DidSaveNotebookDocumentNotification = exports.DidChangeNotebookDocumentNotification = exports.NotebookCellArrayChange = exports.DidOpenNotebookDocumentNotification = exports.NotebookDocumentSyncRegistrationType = exports.NotebookDocument = exports.NotebookCell = exports.ExecutionSummary = exports.NotebookCellKind = exports.DiagnosticRefreshRequest = exports.WorkspaceDiagnosticRequest = exports.DocumentDiagnosticRequest = exports.DocumentDiagnosticReportKind = exports.DiagnosticServerCancellationData = exports.InlayHintRefreshRequest = exports.InlayHintResolveRequest = exports.InlayHintRequest = exports.InlineValueRefreshRequest = exports.InlineValueRequest = exports.TypeHierarchySupertypesRequest = exports.TypeHierarchySubtypesRequest = exports.TypeHierarchyPrepareRequest = void 0;\nconst messages_1 = require(\"./messages\");\nconst vscode_languageserver_types_1 = require(\"vscode-languageserver-types\");\nconst Is = require(\"./utils/is\");\nconst protocol_implementation_1 = require(\"./protocol.implementation\");\nObject.defineProperty(exports, \"ImplementationRequest\", { enumerable: true, get: function () { return protocol_implementation_1.ImplementationRequest; } });\nconst protocol_typeDefinition_1 = require(\"./protocol.typeDefinition\");\nObject.defineProperty(exports, \"TypeDefinitionRequest\", { enumerable: true, get: function () { return protocol_typeDefinition_1.TypeDefinitionRequest; } });\nconst protocol_workspaceFolder_1 = require(\"./protocol.workspaceFolder\");\nObject.defineProperty(exports, \"WorkspaceFoldersRequest\", { enumerable: true, get: function () { return protocol_workspaceFolder_1.WorkspaceFoldersRequest; } });\nObject.defineProperty(exports, \"DidChangeWorkspaceFoldersNotification\", { enumerable: true, get: function () { return protocol_workspaceFolder_1.DidChangeWorkspaceFoldersNotification; } });\nconst protocol_configuration_1 = require(\"./protocol.configuration\");\nObject.defineProperty(exports, \"ConfigurationRequest\", { enumerable: true, get: function () { return protocol_configuration_1.ConfigurationRequest; } });\nconst protocol_colorProvider_1 = require(\"./protocol.colorProvider\");\nObject.defineProperty(exports, \"DocumentColorRequest\", { enumerable: true, get: function () { return protocol_colorProvider_1.DocumentColorRequest; } });\nObject.defineProperty(exports, \"ColorPresentationRequest\", { enumerable: true, get: function () { return protocol_colorProvider_1.ColorPresentationRequest; } });\nconst protocol_foldingRange_1 = require(\"./protocol.foldingRange\");\nObject.defineProperty(exports, \"FoldingRangeRequest\", { enumerable: true, get: function () { return protocol_foldingRange_1.FoldingRangeRequest; } });\nObject.defineProperty(exports, \"FoldingRangeRefreshRequest\", { enumerable: true, get: function () { return protocol_foldingRange_1.FoldingRangeRefreshRequest; } });\nconst protocol_declaration_1 = require(\"./protocol.declaration\");\nObject.defineProperty(exports, \"DeclarationRequest\", { enumerable: true, get: function () { return protocol_declaration_1.DeclarationRequest; } });\nconst protocol_selectionRange_1 = require(\"./protocol.selectionRange\");\nObject.defineProperty(exports, \"SelectionRangeRequest\", { enumerable: true, get: function () { return protocol_selectionRange_1.SelectionRangeRequest; } });\nconst protocol_progress_1 = require(\"./protocol.progress\");\nObject.defineProperty(exports, \"WorkDoneProgress\", { enumerable: true, get: function () { return protocol_progress_1.WorkDoneProgress; } });\nObject.defineProperty(exports, \"WorkDoneProgressCreateRequest\", { enumerable: true, get: function () { return protocol_progress_1.WorkDoneProgressCreateRequest; } });\nObject.defineProperty(exports, \"WorkDoneProgressCancelNotification\", { enumerable: true, get: function () { return protocol_progress_1.WorkDoneProgressCancelNotification; } });\nconst protocol_callHierarchy_1 = require(\"./protocol.callHierarchy\");\nObject.defineProperty(exports, \"CallHierarchyIncomingCallsRequest\", { enumerable: true, get: function () { return protocol_callHierarchy_1.CallHierarchyIncomingCallsRequest; } });\nObject.defineProperty(exports, \"CallHierarchyOutgoingCallsRequest\", { enumerable: true, get: function () { return protocol_callHierarchy_1.CallHierarchyOutgoingCallsRequest; } });\nObject.defineProperty(exports, \"CallHierarchyPrepareRequest\", { enumerable: true, get: function () { return protocol_callHierarchy_1.CallHierarchyPrepareRequest; } });\nconst protocol_semanticTokens_1 = require(\"./protocol.semanticTokens\");\nObject.defineProperty(exports, \"TokenFormat\", { enumerable: true, get: function () { return protocol_semanticTokens_1.TokenFormat; } });\nObject.defineProperty(exports, \"SemanticTokensRequest\", { enumerable: true, get: function () { return protocol_semanticTokens_1.SemanticTokensRequest; } });\nObject.defineProperty(exports, \"SemanticTokensDeltaRequest\", { enumerable: true, get: function () { return protocol_semanticTokens_1.SemanticTokensDeltaRequest; } });\nObject.defineProperty(exports, \"SemanticTokensRangeRequest\", { enumerable: true, get: function () { return protocol_semanticTokens_1.SemanticTokensRangeRequest; } });\nObject.defineProperty(exports, \"SemanticTokensRefreshRequest\", { enumerable: true, get: function () { return protocol_semanticTokens_1.SemanticTokensRefreshRequest; } });\nObject.defineProperty(exports, \"SemanticTokensRegistrationType\", { enumerable: true, get: function () { return protocol_semanticTokens_1.SemanticTokensRegistrationType; } });\nconst protocol_showDocument_1 = require(\"./protocol.showDocument\");\nObject.defineProperty(exports, \"ShowDocumentRequest\", { enumerable: true, get: function () { return protocol_showDocument_1.ShowDocumentRequest; } });\nconst protocol_linkedEditingRange_1 = require(\"./protocol.linkedEditingRange\");\nObject.defineProperty(exports, \"LinkedEditingRangeRequest\", { enumerable: true, get: function () { return protocol_linkedEditingRange_1.LinkedEditingRangeRequest; } });\nconst protocol_fileOperations_1 = require(\"./protocol.fileOperations\");\nObject.defineProperty(exports, \"FileOperationPatternKind\", { enumerable: true, get: function () { return protocol_fileOperations_1.FileOperationPatternKind; } });\nObject.defineProperty(exports, \"DidCreateFilesNotification\", { enumerable: true, get: function () { return protocol_fileOperations_1.DidCreateFilesNotification; } });\nObject.defineProperty(exports, \"WillCreateFilesRequest\", { enumerable: true, get: function () { return protocol_fileOperations_1.WillCreateFilesRequest; } });\nObject.defineProperty(exports, \"DidRenameFilesNotification\", { enumerable: true, get: function () { return protocol_fileOperations_1.DidRenameFilesNotification; } });\nObject.defineProperty(exports, \"WillRenameFilesRequest\", { enumerable: true, get: function () { return protocol_fileOperations_1.WillRenameFilesRequest; } });\nObject.defineProperty(exports, \"DidDeleteFilesNotification\", { enumerable: true, get: function () { return protocol_fileOperations_1.DidDeleteFilesNotification; } });\nObject.defineProperty(exports, \"WillDeleteFilesRequest\", { enumerable: true, get: function () { return protocol_fileOperations_1.WillDeleteFilesRequest; } });\nconst protocol_moniker_1 = require(\"./protocol.moniker\");\nObject.defineProperty(exports, \"UniquenessLevel\", { enumerable: true, get: function () { return protocol_moniker_1.UniquenessLevel; } });\nObject.defineProperty(exports, \"MonikerKind\", { enumerable: true, get: function () { return protocol_moniker_1.MonikerKind; } });\nObject.defineProperty(exports, \"MonikerRequest\", { enumerable: true, get: function () { return protocol_moniker_1.MonikerRequest; } });\nconst protocol_typeHierarchy_1 = require(\"./protocol.typeHierarchy\");\nObject.defineProperty(exports, \"TypeHierarchyPrepareRequest\", { enumerable: true, get: function () { return protocol_typeHierarchy_1.TypeHierarchyPrepareRequest; } });\nObject.defineProperty(exports, \"TypeHierarchySubtypesRequest\", { enumerable: true, get: function () { return protocol_typeHierarchy_1.TypeHierarchySubtypesRequest; } });\nObject.defineProperty(exports, \"TypeHierarchySupertypesRequest\", { enumerable: true, get: function () { return protocol_typeHierarchy_1.TypeHierarchySupertypesRequest; } });\nconst protocol_inlineValue_1 = require(\"./protocol.inlineValue\");\nObject.defineProperty(exports, \"InlineValueRequest\", { enumerable: true, get: function () { return protocol_inlineValue_1.InlineValueRequest; } });\nObject.defineProperty(exports, \"InlineValueRefreshRequest\", { enumerable: true, get: function () { return protocol_inlineValue_1.InlineValueRefreshRequest; } });\nconst protocol_inlayHint_1 = require(\"./protocol.inlayHint\");\nObject.defineProperty(exports, \"InlayHintRequest\", { enumerable: true, get: function () { return protocol_inlayHint_1.InlayHintRequest; } });\nObject.defineProperty(exports, \"InlayHintResolveRequest\", { enumerable: true, get: function () { return protocol_inlayHint_1.InlayHintResolveRequest; } });\nObject.defineProperty(exports, \"InlayHintRefreshRequest\", { enumerable: true, get: function () { return protocol_inlayHint_1.InlayHintRefreshRequest; } });\nconst protocol_diagnostic_1 = require(\"./protocol.diagnostic\");\nObject.defineProperty(exports, \"DiagnosticServerCancellationData\", { enumerable: true, get: function () { return protocol_diagnostic_1.DiagnosticServerCancellationData; } });\nObject.defineProperty(exports, \"DocumentDiagnosticReportKind\", { enumerable: true, get: function () { return protocol_diagnostic_1.DocumentDiagnosticReportKind; } });\nObject.defineProperty(exports, \"DocumentDiagnosticRequest\", { enumerable: true, get: function () { return protocol_diagnostic_1.DocumentDiagnosticRequest; } });\nObject.defineProperty(exports, \"WorkspaceDiagnosticRequest\", { enumerable: true, get: function () { return protocol_diagnostic_1.WorkspaceDiagnosticRequest; } });\nObject.defineProperty(exports, \"DiagnosticRefreshRequest\", { enumerable: true, get: function () { return protocol_diagnostic_1.DiagnosticRefreshRequest; } });\nconst protocol_notebook_1 = require(\"./protocol.notebook\");\nObject.defineProperty(exports, \"NotebookCellKind\", { enumerable: true, get: function () { return protocol_notebook_1.NotebookCellKind; } });\nObject.defineProperty(exports, \"ExecutionSummary\", { enumerable: true, get: function () { return protocol_notebook_1.ExecutionSummary; } });\nObject.defineProperty(exports, \"NotebookCell\", { enumerable: true, get: function () { return protocol_notebook_1.NotebookCell; } });\nObject.defineProperty(exports, \"NotebookDocument\", { enumerable: true, get: function () { return protocol_notebook_1.NotebookDocument; } });\nObject.defineProperty(exports, \"NotebookDocumentSyncRegistrationType\", { enumerable: true, get: function () { return protocol_notebook_1.NotebookDocumentSyncRegistrationType; } });\nObject.defineProperty(exports, \"DidOpenNotebookDocumentNotification\", { enumerable: true, get: function () { return protocol_notebook_1.DidOpenNotebookDocumentNotification; } });\nObject.defineProperty(exports, \"NotebookCellArrayChange\", { enumerable: true, get: function () { return protocol_notebook_1.NotebookCellArrayChange; } });\nObject.defineProperty(exports, \"DidChangeNotebookDocumentNotification\", { enumerable: true, get: function () { return protocol_notebook_1.DidChangeNotebookDocumentNotification; } });\nObject.defineProperty(exports, \"DidSaveNotebookDocumentNotification\", { enumerable: true, get: function () { return protocol_notebook_1.DidSaveNotebookDocumentNotification; } });\nObject.defineProperty(exports, \"DidCloseNotebookDocumentNotification\", { enumerable: true, get: function () { return protocol_notebook_1.DidCloseNotebookDocumentNotification; } });\nconst protocol_inlineCompletion_1 = require(\"./protocol.inlineCompletion\");\nObject.defineProperty(exports, \"InlineCompletionRequest\", { enumerable: true, get: function () { return protocol_inlineCompletion_1.InlineCompletionRequest; } });\n// @ts-ignore: to avoid inlining LocationLink as dynamic import\nlet __noDynamicImport;\n/**\n * The TextDocumentFilter namespace provides helper functions to work with\n * {@link TextDocumentFilter} literals.\n *\n * @since 3.17.0\n */\nvar TextDocumentFilter;\n(function (TextDocumentFilter) {\n    function is(value) {\n        const candidate = value;\n        return Is.string(candidate) || (Is.string(candidate.language) || Is.string(candidate.scheme) || Is.string(candidate.pattern));\n    }\n    TextDocumentFilter.is = is;\n})(TextDocumentFilter || (exports.TextDocumentFilter = TextDocumentFilter = {}));\n/**\n * The NotebookDocumentFilter namespace provides helper functions to work with\n * {@link NotebookDocumentFilter} literals.\n *\n * @since 3.17.0\n */\nvar NotebookDocumentFilter;\n(function (NotebookDocumentFilter) {\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate) && (Is.string(candidate.notebookType) || Is.string(candidate.scheme) || Is.string(candidate.pattern));\n    }\n    NotebookDocumentFilter.is = is;\n})(NotebookDocumentFilter || (exports.NotebookDocumentFilter = NotebookDocumentFilter = {}));\n/**\n * The NotebookCellTextDocumentFilter namespace provides helper functions to work with\n * {@link NotebookCellTextDocumentFilter} literals.\n *\n * @since 3.17.0\n */\nvar NotebookCellTextDocumentFilter;\n(function (NotebookCellTextDocumentFilter) {\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate)\n            && (Is.string(candidate.notebook) || NotebookDocumentFilter.is(candidate.notebook))\n            && (candidate.language === undefined || Is.string(candidate.language));\n    }\n    NotebookCellTextDocumentFilter.is = is;\n})(NotebookCellTextDocumentFilter || (exports.NotebookCellTextDocumentFilter = NotebookCellTextDocumentFilter = {}));\n/**\n * The DocumentSelector namespace provides helper functions to work with\n * {@link DocumentSelector}s.\n */\nvar DocumentSelector;\n(function (DocumentSelector) {\n    function is(value) {\n        if (!Array.isArray(value)) {\n            return false;\n        }\n        for (let elem of value) {\n            if (!Is.string(elem) && !TextDocumentFilter.is(elem) && !NotebookCellTextDocumentFilter.is(elem)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    DocumentSelector.is = is;\n})(DocumentSelector || (exports.DocumentSelector = DocumentSelector = {}));\n/**\n * The `client/registerCapability` request is sent from the server to the client to register a new capability\n * handler on the client side.\n */\nvar RegistrationRequest;\n(function (RegistrationRequest) {\n    RegistrationRequest.method = 'client/registerCapability';\n    RegistrationRequest.messageDirection = messages_1.MessageDirection.serverToClient;\n    RegistrationRequest.type = new messages_1.ProtocolRequestType(RegistrationRequest.method);\n})(RegistrationRequest || (exports.RegistrationRequest = RegistrationRequest = {}));\n/**\n * The `client/unregisterCapability` request is sent from the server to the client to unregister a previously registered capability\n * handler on the client side.\n */\nvar UnregistrationRequest;\n(function (UnregistrationRequest) {\n    UnregistrationRequest.method = 'client/unregisterCapability';\n    UnregistrationRequest.messageDirection = messages_1.MessageDirection.serverToClient;\n    UnregistrationRequest.type = new messages_1.ProtocolRequestType(UnregistrationRequest.method);\n})(UnregistrationRequest || (exports.UnregistrationRequest = UnregistrationRequest = {}));\nvar ResourceOperationKind;\n(function (ResourceOperationKind) {\n    /**\n     * Supports creating new files and folders.\n     */\n    ResourceOperationKind.Create = 'create';\n    /**\n     * Supports renaming existing files and folders.\n     */\n    ResourceOperationKind.Rename = 'rename';\n    /**\n     * Supports deleting existing files and folders.\n     */\n    ResourceOperationKind.Delete = 'delete';\n})(ResourceOperationKind || (exports.ResourceOperationKind = ResourceOperationKind = {}));\nvar FailureHandlingKind;\n(function (FailureHandlingKind) {\n    /**\n     * Applying the workspace change is simply aborted if one of the changes provided\n     * fails. All operations executed before the failing operation stay executed.\n     */\n    FailureHandlingKind.Abort = 'abort';\n    /**\n     * All operations are executed transactional. That means they either all\n     * succeed or no changes at all are applied to the workspace.\n     */\n    FailureHandlingKind.Transactional = 'transactional';\n    /**\n     * If the workspace edit contains only textual file changes they are executed transactional.\n     * If resource changes (create, rename or delete file) are part of the change the failure\n     * handling strategy is abort.\n     */\n    FailureHandlingKind.TextOnlyTransactional = 'textOnlyTransactional';\n    /**\n     * The client tries to undo the operations already executed. But there is no\n     * guarantee that this is succeeding.\n     */\n    FailureHandlingKind.Undo = 'undo';\n})(FailureHandlingKind || (exports.FailureHandlingKind = FailureHandlingKind = {}));\n/**\n * A set of predefined position encoding kinds.\n *\n * @since 3.17.0\n */\nvar PositionEncodingKind;\n(function (PositionEncodingKind) {\n    /**\n     * Character offsets count UTF-8 code units (e.g. bytes).\n     */\n    PositionEncodingKind.UTF8 = 'utf-8';\n    /**\n     * Character offsets count UTF-16 code units.\n     *\n     * This is the default and must always be supported\n     * by servers\n     */\n    PositionEncodingKind.UTF16 = 'utf-16';\n    /**\n     * Character offsets count UTF-32 code units.\n     *\n     * Implementation note: these are the same as Unicode codepoints,\n     * so this `PositionEncodingKind` may also be used for an\n     * encoding-agnostic representation of character offsets.\n     */\n    PositionEncodingKind.UTF32 = 'utf-32';\n})(PositionEncodingKind || (exports.PositionEncodingKind = PositionEncodingKind = {}));\n/**\n * The StaticRegistrationOptions namespace provides helper functions to work with\n * {@link StaticRegistrationOptions} literals.\n */\nvar StaticRegistrationOptions;\n(function (StaticRegistrationOptions) {\n    function hasId(value) {\n        const candidate = value;\n        return candidate && Is.string(candidate.id) && candidate.id.length > 0;\n    }\n    StaticRegistrationOptions.hasId = hasId;\n})(StaticRegistrationOptions || (exports.StaticRegistrationOptions = StaticRegistrationOptions = {}));\n/**\n * The TextDocumentRegistrationOptions namespace provides helper functions to work with\n * {@link TextDocumentRegistrationOptions} literals.\n */\nvar TextDocumentRegistrationOptions;\n(function (TextDocumentRegistrationOptions) {\n    function is(value) {\n        const candidate = value;\n        return candidate && (candidate.documentSelector === null || DocumentSelector.is(candidate.documentSelector));\n    }\n    TextDocumentRegistrationOptions.is = is;\n})(TextDocumentRegistrationOptions || (exports.TextDocumentRegistrationOptions = TextDocumentRegistrationOptions = {}));\n/**\n * The WorkDoneProgressOptions namespace provides helper functions to work with\n * {@link WorkDoneProgressOptions} literals.\n */\nvar WorkDoneProgressOptions;\n(function (WorkDoneProgressOptions) {\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate) && (candidate.workDoneProgress === undefined || Is.boolean(candidate.workDoneProgress));\n    }\n    WorkDoneProgressOptions.is = is;\n    function hasWorkDoneProgress(value) {\n        const candidate = value;\n        return candidate && Is.boolean(candidate.workDoneProgress);\n    }\n    WorkDoneProgressOptions.hasWorkDoneProgress = hasWorkDoneProgress;\n})(WorkDoneProgressOptions || (exports.WorkDoneProgressOptions = WorkDoneProgressOptions = {}));\n/**\n * The initialize request is sent from the client to the server.\n * It is sent once as the request after starting up the server.\n * The requests parameter is of type {@link InitializeParams}\n * the response if of type {@link InitializeResult} of a Thenable that\n * resolves to such.\n */\nvar InitializeRequest;\n(function (InitializeRequest) {\n    InitializeRequest.method = 'initialize';\n    InitializeRequest.messageDirection = messages_1.MessageDirection.clientToServer;\n    InitializeRequest.type = new messages_1.ProtocolRequestType(InitializeRequest.method);\n})(InitializeRequest || (exports.InitializeRequest = InitializeRequest = {}));\n/**\n * Known error codes for an `InitializeErrorCodes`;\n */\nvar InitializeErrorCodes;\n(function (InitializeErrorCodes) {\n    /**\n     * If the protocol version provided by the client can't be handled by the server.\n     *\n     * @deprecated This initialize error got replaced by client capabilities. There is\n     * no version handshake in version 3.0x\n     */\n    InitializeErrorCodes.unknownProtocolVersion = 1;\n})(InitializeErrorCodes || (exports.InitializeErrorCodes = InitializeErrorCodes = {}));\n/**\n * The initialized notification is sent from the client to the\n * server after the client is fully initialized and the server\n * is allowed to send requests from the server to the client.\n */\nvar InitializedNotification;\n(function (InitializedNotification) {\n    InitializedNotification.method = 'initialized';\n    InitializedNotification.messageDirection = messages_1.MessageDirection.clientToServer;\n    InitializedNotification.type = new messages_1.ProtocolNotificationType(InitializedNotification.method);\n})(InitializedNotification || (exports.InitializedNotification = InitializedNotification = {}));\n//---- Shutdown Method ----\n/**\n * A shutdown request is sent from the client to the server.\n * It is sent once when the client decides to shutdown the\n * server. The only notification that is sent after a shutdown request\n * is the exit event.\n */\nvar ShutdownRequest;\n(function (ShutdownRequest) {\n    ShutdownRequest.method = 'shutdown';\n    ShutdownRequest.messageDirection = messages_1.MessageDirection.clientToServer;\n    ShutdownRequest.type = new messages_1.ProtocolRequestType0(ShutdownRequest.method);\n})(ShutdownRequest || (exports.ShutdownRequest = ShutdownRequest = {}));\n//---- Exit Notification ----\n/**\n * The exit event is sent from the client to the server to\n * ask the server to exit its process.\n */\nvar ExitNotification;\n(function (ExitNotification) {\n    ExitNotification.method = 'exit';\n    ExitNotification.messageDirection = messages_1.MessageDirection.clientToServer;\n    ExitNotification.type = new messages_1.ProtocolNotificationType0(ExitNotification.method);\n})(ExitNotification || (exports.ExitNotification = ExitNotification = {}));\n/**\n * The configuration change notification is sent from the client to the server\n * when the client's configuration has changed. The notification contains\n * the changed configuration as defined by the language client.\n */\nvar DidChangeConfigurationNotification;\n(function (DidChangeConfigurationNotification) {\n    DidChangeConfigurationNotification.method = 'workspace/didChangeConfiguration';\n    DidChangeConfigurationNotification.messageDirection = messages_1.MessageDirection.clientToServer;\n    DidChangeConfigurationNotification.type = new messages_1.ProtocolNotificationType(DidChangeConfigurationNotification.method);\n})(DidChangeConfigurationNotification || (exports.DidChangeConfigurationNotification = DidChangeConfigurationNotification = {}));\n//---- Message show and log notifications ----\n/**\n * The message type\n */\nvar MessageType;\n(function (MessageType) {\n    /**\n     * An error message.\n     */\n    MessageType.Error = 1;\n    /**\n     * A warning message.\n     */\n    MessageType.Warning = 2;\n    /**\n     * An information message.\n     */\n    MessageType.Info = 3;\n    /**\n     * A log message.\n     */\n    MessageType.Log = 4;\n    /**\n     * A debug message.\n     *\n     * @since 3.18.0\n     */\n    MessageType.Debug = 5;\n})(MessageType || (exports.MessageType = MessageType = {}));\n/**\n * The show message notification is sent from a server to a client to ask\n * the client to display a particular message in the user interface.\n */\nvar ShowMessageNotification;\n(function (ShowMessageNotification) {\n    ShowMessageNotification.method = 'window/showMessage';\n    ShowMessageNotification.messageDirection = messages_1.MessageDirection.serverToClient;\n    ShowMessageNotification.type = new messages_1.ProtocolNotificationType(ShowMessageNotification.method);\n})(ShowMessageNotification || (exports.ShowMessageNotification = ShowMessageNotification = {}));\n/**\n * The show message request is sent from the server to the client to show a message\n * and a set of options actions to the user.\n */\nvar ShowMessageRequest;\n(function (ShowMessageRequest) {\n    ShowMessageRequest.method = 'window/showMessageRequest';\n    ShowMessageRequest.messageDirection = messages_1.MessageDirection.serverToClient;\n    ShowMessageRequest.type = new messages_1.ProtocolRequestType(ShowMessageRequest.method);\n})(ShowMessageRequest || (exports.ShowMessageRequest = ShowMessageRequest = {}));\n/**\n * The log message notification is sent from the server to the client to ask\n * the client to log a particular message.\n */\nvar LogMessageNotification;\n(function (LogMessageNotification) {\n    LogMessageNotification.method = 'window/logMessage';\n    LogMessageNotification.messageDirection = messages_1.MessageDirection.serverToClient;\n    LogMessageNotification.type = new messages_1.ProtocolNotificationType(LogMessageNotification.method);\n})(LogMessageNotification || (exports.LogMessageNotification = LogMessageNotification = {}));\n//---- Telemetry notification\n/**\n * The telemetry event notification is sent from the server to the client to ask\n * the client to log telemetry data.\n */\nvar TelemetryEventNotification;\n(function (TelemetryEventNotification) {\n    TelemetryEventNotification.method = 'telemetry/event';\n    TelemetryEventNotification.messageDirection = messages_1.MessageDirection.serverToClient;\n    TelemetryEventNotification.type = new messages_1.ProtocolNotificationType(TelemetryEventNotification.method);\n})(TelemetryEventNotification || (exports.TelemetryEventNotification = TelemetryEventNotification = {}));\n/**\n * Defines how the host (editor) should sync\n * document changes to the language server.\n */\nvar TextDocumentSyncKind;\n(function (TextDocumentSyncKind) {\n    /**\n     * Documents should not be synced at all.\n     */\n    TextDocumentSyncKind.None = 0;\n    /**\n     * Documents are synced by always sending the full content\n     * of the document.\n     */\n    TextDocumentSyncKind.Full = 1;\n    /**\n     * Documents are synced by sending the full content on open.\n     * After that only incremental updates to the document are\n     * send.\n     */\n    TextDocumentSyncKind.Incremental = 2;\n})(TextDocumentSyncKind || (exports.TextDocumentSyncKind = TextDocumentSyncKind = {}));\n/**\n * The document open notification is sent from the client to the server to signal\n * newly opened text documents. The document's truth is now managed by the client\n * and the server must not try to read the document's truth using the document's\n * uri. Open in this sense means it is managed by the client. It doesn't necessarily\n * mean that its content is presented in an editor. An open notification must not\n * be sent more than once without a corresponding close notification send before.\n * This means open and close notification must be balanced and the max open count\n * is one.\n */\nvar DidOpenTextDocumentNotification;\n(function (DidOpenTextDocumentNotification) {\n    DidOpenTextDocumentNotification.method = 'textDocument/didOpen';\n    DidOpenTextDocumentNotification.messageDirection = messages_1.MessageDirection.clientToServer;\n    DidOpenTextDocumentNotification.type = new messages_1.ProtocolNotificationType(DidOpenTextDocumentNotification.method);\n})(DidOpenTextDocumentNotification || (exports.DidOpenTextDocumentNotification = DidOpenTextDocumentNotification = {}));\nvar TextDocumentContentChangeEvent;\n(function (TextDocumentContentChangeEvent) {\n    /**\n     * Checks whether the information describes a delta event.\n     */\n    function isIncremental(event) {\n        let candidate = event;\n        return candidate !== undefined && candidate !== null &&\n            typeof candidate.text === 'string' && candidate.range !== undefined &&\n            (candidate.rangeLength === undefined || typeof candidate.rangeLength === 'number');\n    }\n    TextDocumentContentChangeEvent.isIncremental = isIncremental;\n    /**\n     * Checks whether the information describes a full replacement event.\n     */\n    function isFull(event) {\n        let candidate = event;\n        return candidate !== undefined && candidate !== null &&\n            typeof candidate.text === 'string' && candidate.range === undefined && candidate.rangeLength === undefined;\n    }\n    TextDocumentContentChangeEvent.isFull = isFull;\n})(TextDocumentContentChangeEvent || (exports.TextDocumentContentChangeEvent = TextDocumentContentChangeEvent = {}));\n/**\n * The document change notification is sent from the client to the server to signal\n * changes to a text document.\n */\nvar DidChangeTextDocumentNotification;\n(function (DidChangeTextDocumentNotification) {\n    DidChangeTextDocumentNotification.method = 'textDocument/didChange';\n    DidChangeTextDocumentNotification.messageDirection = messages_1.MessageDirection.clientToServer;\n    DidChangeTextDocumentNotification.type = new messages_1.ProtocolNotificationType(DidChangeTextDocumentNotification.method);\n})(DidChangeTextDocumentNotification || (exports.DidChangeTextDocumentNotification = DidChangeTextDocumentNotification = {}));\n/**\n * The document close notification is sent from the client to the server when\n * the document got closed in the client. The document's truth now exists where\n * the document's uri points to (e.g. if the document's uri is a file uri the\n * truth now exists on disk). As with the open notification the close notification\n * is about managing the document's content. Receiving a close notification\n * doesn't mean that the document was open in an editor before. A close\n * notification requires a previous open notification to be sent.\n */\nvar DidCloseTextDocumentNotification;\n(function (DidCloseTextDocumentNotification) {\n    DidCloseTextDocumentNotification.method = 'textDocument/didClose';\n    DidCloseTextDocumentNotification.messageDirection = messages_1.MessageDirection.clientToServer;\n    DidCloseTextDocumentNotification.type = new messages_1.ProtocolNotificationType(DidCloseTextDocumentNotification.method);\n})(DidCloseTextDocumentNotification || (exports.DidCloseTextDocumentNotification = DidCloseTextDocumentNotification = {}));\n/**\n * The document save notification is sent from the client to the server when\n * the document got saved in the client.\n */\nvar DidSaveTextDocumentNotification;\n(function (DidSaveTextDocumentNotification) {\n    DidSaveTextDocumentNotification.method = 'textDocument/didSave';\n    DidSaveTextDocumentNotification.messageDirection = messages_1.MessageDirection.clientToServer;\n    DidSaveTextDocumentNotification.type = new messages_1.ProtocolNotificationType(DidSaveTextDocumentNotification.method);\n})(DidSaveTextDocumentNotification || (exports.DidSaveTextDocumentNotification = DidSaveTextDocumentNotification = {}));\n/**\n * Represents reasons why a text document is saved.\n */\nvar TextDocumentSaveReason;\n(function (TextDocumentSaveReason) {\n    /**\n     * Manually triggered, e.g. by the user pressing save, by starting debugging,\n     * or by an API call.\n     */\n    TextDocumentSaveReason.Manual = 1;\n    /**\n     * Automatic after a delay.\n     */\n    TextDocumentSaveReason.AfterDelay = 2;\n    /**\n     * When the editor lost focus.\n     */\n    TextDocumentSaveReason.FocusOut = 3;\n})(TextDocumentSaveReason || (exports.TextDocumentSaveReason = TextDocumentSaveReason = {}));\n/**\n * A document will save notification is sent from the client to the server before\n * the document is actually saved.\n */\nvar WillSaveTextDocumentNotification;\n(function (WillSaveTextDocumentNotification) {\n    WillSaveTextDocumentNotification.method = 'textDocument/willSave';\n    WillSaveTextDocumentNotification.messageDirection = messages_1.MessageDirection.clientToServer;\n    WillSaveTextDocumentNotification.type = new messages_1.ProtocolNotificationType(WillSaveTextDocumentNotification.method);\n})(WillSaveTextDocumentNotification || (exports.WillSaveTextDocumentNotification = WillSaveTextDocumentNotification = {}));\n/**\n * A document will save request is sent from the client to the server before\n * the document is actually saved. The request can return an array of TextEdits\n * which will be applied to the text document before it is saved. Please note that\n * clients might drop results if computing the text edits took too long or if a\n * server constantly fails on this request. This is done to keep the save fast and\n * reliable.\n */\nvar WillSaveTextDocumentWaitUntilRequest;\n(function (WillSaveTextDocumentWaitUntilRequest) {\n    WillSaveTextDocumentWaitUntilRequest.method = 'textDocument/willSaveWaitUntil';\n    WillSaveTextDocumentWaitUntilRequest.messageDirection = messages_1.MessageDirection.clientToServer;\n    WillSaveTextDocumentWaitUntilRequest.type = new messages_1.ProtocolRequestType(WillSaveTextDocumentWaitUntilRequest.method);\n})(WillSaveTextDocumentWaitUntilRequest || (exports.WillSaveTextDocumentWaitUntilRequest = WillSaveTextDocumentWaitUntilRequest = {}));\n/**\n * The watched files notification is sent from the client to the server when\n * the client detects changes to file watched by the language client.\n */\nvar DidChangeWatchedFilesNotification;\n(function (DidChangeWatchedFilesNotification) {\n    DidChangeWatchedFilesNotification.method = 'workspace/didChangeWatchedFiles';\n    DidChangeWatchedFilesNotification.messageDirection = messages_1.MessageDirection.clientToServer;\n    DidChangeWatchedFilesNotification.type = new messages_1.ProtocolNotificationType(DidChangeWatchedFilesNotification.method);\n})(DidChangeWatchedFilesNotification || (exports.DidChangeWatchedFilesNotification = DidChangeWatchedFilesNotification = {}));\n/**\n * The file event type\n */\nvar FileChangeType;\n(function (FileChangeType) {\n    /**\n     * The file got created.\n     */\n    FileChangeType.Created = 1;\n    /**\n     * The file got changed.\n     */\n    FileChangeType.Changed = 2;\n    /**\n     * The file got deleted.\n     */\n    FileChangeType.Deleted = 3;\n})(FileChangeType || (exports.FileChangeType = FileChangeType = {}));\nvar RelativePattern;\n(function (RelativePattern) {\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate) && (vscode_languageserver_types_1.URI.is(candidate.baseUri) || vscode_languageserver_types_1.WorkspaceFolder.is(candidate.baseUri)) && Is.string(candidate.pattern);\n    }\n    RelativePattern.is = is;\n})(RelativePattern || (exports.RelativePattern = RelativePattern = {}));\nvar WatchKind;\n(function (WatchKind) {\n    /**\n     * Interested in create events.\n     */\n    WatchKind.Create = 1;\n    /**\n     * Interested in change events\n     */\n    WatchKind.Change = 2;\n    /**\n     * Interested in delete events\n     */\n    WatchKind.Delete = 4;\n})(WatchKind || (exports.WatchKind = WatchKind = {}));\n/**\n * Diagnostics notification are sent from the server to the client to signal\n * results of validation runs.\n */\nvar PublishDiagnosticsNotification;\n(function (PublishDiagnosticsNotification) {\n    PublishDiagnosticsNotification.method = 'textDocument/publishDiagnostics';\n    PublishDiagnosticsNotification.messageDirection = messages_1.MessageDirection.serverToClient;\n    PublishDiagnosticsNotification.type = new messages_1.ProtocolNotificationType(PublishDiagnosticsNotification.method);\n})(PublishDiagnosticsNotification || (exports.PublishDiagnosticsNotification = PublishDiagnosticsNotification = {}));\n/**\n * How a completion was triggered\n */\nvar CompletionTriggerKind;\n(function (CompletionTriggerKind) {\n    /**\n     * Completion was triggered by typing an identifier (24x7 code\n     * complete), manual invocation (e.g Ctrl+Space) or via API.\n     */\n    CompletionTriggerKind.Invoked = 1;\n    /**\n     * Completion was triggered by a trigger character specified by\n     * the `triggerCharacters` properties of the `CompletionRegistrationOptions`.\n     */\n    CompletionTriggerKind.TriggerCharacter = 2;\n    /**\n     * Completion was re-triggered as current completion list is incomplete\n     */\n    CompletionTriggerKind.TriggerForIncompleteCompletions = 3;\n})(CompletionTriggerKind || (exports.CompletionTriggerKind = CompletionTriggerKind = {}));\n/**\n * Request to request completion at a given text document position. The request's\n * parameter is of type {@link TextDocumentPosition} the response\n * is of type {@link CompletionItem CompletionItem[]} or {@link CompletionList}\n * or a Thenable that resolves to such.\n *\n * The request can delay the computation of the {@link CompletionItem.detail `detail`}\n * and {@link CompletionItem.documentation `documentation`} properties to the `completionItem/resolve`\n * request. However, properties that are needed for the initial sorting and filtering, like `sortText`,\n * `filterText`, `insertText`, and `textEdit`, must not be changed during resolve.\n */\nvar CompletionRequest;\n(function (CompletionRequest) {\n    CompletionRequest.method = 'textDocument/completion';\n    CompletionRequest.messageDirection = messages_1.MessageDirection.clientToServer;\n    CompletionRequest.type = new messages_1.ProtocolRequestType(CompletionRequest.method);\n})(CompletionRequest || (exports.CompletionRequest = CompletionRequest = {}));\n/**\n * Request to resolve additional information for a given completion item.The request's\n * parameter is of type {@link CompletionItem} the response\n * is of type {@link CompletionItem} or a Thenable that resolves to such.\n */\nvar CompletionResolveRequest;\n(function (CompletionResolveRequest) {\n    CompletionResolveRequest.method = 'completionItem/resolve';\n    CompletionResolveRequest.messageDirection = messages_1.MessageDirection.clientToServer;\n    CompletionResolveRequest.type = new messages_1.ProtocolRequestType(CompletionResolveRequest.method);\n})(CompletionResolveRequest || (exports.CompletionResolveRequest = CompletionResolveRequest = {}));\n/**\n * Request to request hover information at a given text document position. The request's\n * parameter is of type {@link TextDocumentPosition} the response is of\n * type {@link Hover} or a Thenable that resolves to such.\n */\nvar HoverRequest;\n(function (HoverRequest) {\n    HoverRequest.method = 'textDocument/hover';\n    HoverRequest.messageDirection = messages_1.MessageDirection.clientToServer;\n    HoverRequest.type = new messages_1.ProtocolRequestType(HoverRequest.method);\n})(HoverRequest || (exports.HoverRequest = HoverRequest = {}));\n/**\n * How a signature help was triggered.\n *\n * @since 3.15.0\n */\nvar SignatureHelpTriggerKind;\n(function (SignatureHelpTriggerKind) {\n    /**\n     * Signature help was invoked manually by the user or by a command.\n     */\n    SignatureHelpTriggerKind.Invoked = 1;\n    /**\n     * Signature help was triggered by a trigger character.\n     */\n    SignatureHelpTriggerKind.TriggerCharacter = 2;\n    /**\n     * Signature help was triggered by the cursor moving or by the document content changing.\n     */\n    SignatureHelpTriggerKind.ContentChange = 3;\n})(SignatureHelpTriggerKind || (exports.SignatureHelpTriggerKind = SignatureHelpTriggerKind = {}));\nvar SignatureHelpRequest;\n(function (SignatureHelpRequest) {\n    SignatureHelpRequest.method = 'textDocument/signatureHelp';\n    SignatureHelpRequest.messageDirection = messages_1.MessageDirection.clientToServer;\n    SignatureHelpRequest.type = new messages_1.ProtocolRequestType(SignatureHelpRequest.method);\n})(SignatureHelpRequest || (exports.SignatureHelpRequest = SignatureHelpRequest = {}));\n/**\n * A request to resolve the definition location of a symbol at a given text\n * document position. The request's parameter is of type {@link TextDocumentPosition}\n * the response is of either type {@link Definition} or a typed array of\n * {@link DefinitionLink} or a Thenable that resolves to such.\n */\nvar DefinitionRequest;\n(function (DefinitionRequest) {\n    DefinitionRequest.method = 'textDocument/definition';\n    DefinitionRequest.messageDirection = messages_1.MessageDirection.clientToServer;\n    DefinitionRequest.type = new messages_1.ProtocolRequestType(DefinitionRequest.method);\n})(DefinitionRequest || (exports.DefinitionRequest = DefinitionRequest = {}));\n/**\n * A request to resolve project-wide references for the symbol denoted\n * by the given text document position. The request's parameter is of\n * type {@link ReferenceParams} the response is of type\n * {@link Location Location[]} or a Thenable that resolves to such.\n */\nvar ReferencesRequest;\n(function (ReferencesRequest) {\n    ReferencesRequest.method = 'textDocument/references';\n    ReferencesRequest.messageDirection = messages_1.MessageDirection.clientToServer;\n    ReferencesRequest.type = new messages_1.ProtocolRequestType(ReferencesRequest.method);\n})(ReferencesRequest || (exports.ReferencesRequest = ReferencesRequest = {}));\n/**\n * Request to resolve a {@link DocumentHighlight} for a given\n * text document position. The request's parameter is of type {@link TextDocumentPosition}\n * the request response is an array of type {@link DocumentHighlight}\n * or a Thenable that resolves to such.\n */\nvar DocumentHighlightRequest;\n(function (DocumentHighlightRequest) {\n    DocumentHighlightRequest.method = 'textDocument/documentHighlight';\n    DocumentHighlightRequest.messageDirection = messages_1.MessageDirection.clientToServer;\n    DocumentHighlightRequest.type = new messages_1.ProtocolRequestType(DocumentHighlightRequest.method);\n})(DocumentHighlightRequest || (exports.DocumentHighlightRequest = DocumentHighlightRequest = {}));\n/**\n * A request to list all symbols found in a given text document. The request's\n * parameter is of type {@link TextDocumentIdentifier} the\n * response is of type {@link SymbolInformation SymbolInformation[]} or a Thenable\n * that resolves to such.\n */\nvar DocumentSymbolRequest;\n(function (DocumentSymbolRequest) {\n    DocumentSymbolRequest.method = 'textDocument/documentSymbol';\n    DocumentSymbolRequest.messageDirection = messages_1.MessageDirection.clientToServer;\n    DocumentSymbolRequest.type = new messages_1.ProtocolRequestType(DocumentSymbolRequest.method);\n})(DocumentSymbolRequest || (exports.DocumentSymbolRequest = DocumentSymbolRequest = {}));\n/**\n * A request to provide commands for the given text document and range.\n */\nvar CodeActionRequest;\n(function (CodeActionRequest) {\n    CodeActionRequest.method = 'textDocument/codeAction';\n    CodeActionRequest.messageDirection = messages_1.MessageDirection.clientToServer;\n    CodeActionRequest.type = new messages_1.ProtocolRequestType(CodeActionRequest.method);\n})(CodeActionRequest || (exports.CodeActionRequest = CodeActionRequest = {}));\n/**\n * Request to resolve additional information for a given code action.The request's\n * parameter is of type {@link CodeAction} the response\n * is of type {@link CodeAction} or a Thenable that resolves to such.\n */\nvar CodeActionResolveRequest;\n(function (CodeActionResolveRequest) {\n    CodeActionResolveRequest.method = 'codeAction/resolve';\n    CodeActionResolveRequest.messageDirection = messages_1.MessageDirection.clientToServer;\n    CodeActionResolveRequest.type = new messages_1.ProtocolRequestType(CodeActionResolveRequest.method);\n})(CodeActionResolveRequest || (exports.CodeActionResolveRequest = CodeActionResolveRequest = {}));\n/**\n * A request to list project-wide symbols matching the query string given\n * by the {@link WorkspaceSymbolParams}. The response is\n * of type {@link SymbolInformation SymbolInformation[]} or a Thenable that\n * resolves to such.\n *\n * @since 3.17.0 - support for WorkspaceSymbol in the returned data. Clients\n *  need to advertise support for WorkspaceSymbols via the client capability\n *  `workspace.symbol.resolveSupport`.\n *\n */\nvar WorkspaceSymbolRequest;\n(function (WorkspaceSymbolRequest) {\n    WorkspaceSymbolRequest.method = 'workspace/symbol';\n    WorkspaceSymbolRequest.messageDirection = messages_1.MessageDirection.clientToServer;\n    WorkspaceSymbolRequest.type = new messages_1.ProtocolRequestType(WorkspaceSymbolRequest.method);\n})(WorkspaceSymbolRequest || (exports.WorkspaceSymbolRequest = WorkspaceSymbolRequest = {}));\n/**\n * A request to resolve the range inside the workspace\n * symbol's location.\n *\n * @since 3.17.0\n */\nvar WorkspaceSymbolResolveRequest;\n(function (WorkspaceSymbolResolveRequest) {\n    WorkspaceSymbolResolveRequest.method = 'workspaceSymbol/resolve';\n    WorkspaceSymbolResolveRequest.messageDirection = messages_1.MessageDirection.clientToServer;\n    WorkspaceSymbolResolveRequest.type = new messages_1.ProtocolRequestType(WorkspaceSymbolResolveRequest.method);\n})(WorkspaceSymbolResolveRequest || (exports.WorkspaceSymbolResolveRequest = WorkspaceSymbolResolveRequest = {}));\n/**\n * A request to provide code lens for the given text document.\n */\nvar CodeLensRequest;\n(function (CodeLensRequest) {\n    CodeLensRequest.method = 'textDocument/codeLens';\n    CodeLensRequest.messageDirection = messages_1.MessageDirection.clientToServer;\n    CodeLensRequest.type = new messages_1.ProtocolRequestType(CodeLensRequest.method);\n})(CodeLensRequest || (exports.CodeLensRequest = CodeLensRequest = {}));\n/**\n * A request to resolve a command for a given code lens.\n */\nvar CodeLensResolveRequest;\n(function (CodeLensResolveRequest) {\n    CodeLensResolveRequest.method = 'codeLens/resolve';\n    CodeLensResolveRequest.messageDirection = messages_1.MessageDirection.clientToServer;\n    CodeLensResolveRequest.type = new messages_1.ProtocolRequestType(CodeLensResolveRequest.method);\n})(CodeLensResolveRequest || (exports.CodeLensResolveRequest = CodeLensResolveRequest = {}));\n/**\n * A request to refresh all code actions\n *\n * @since 3.16.0\n */\nvar CodeLensRefreshRequest;\n(function (CodeLensRefreshRequest) {\n    CodeLensRefreshRequest.method = `workspace/codeLens/refresh`;\n    CodeLensRefreshRequest.messageDirection = messages_1.MessageDirection.serverToClient;\n    CodeLensRefreshRequest.type = new messages_1.ProtocolRequestType0(CodeLensRefreshRequest.method);\n})(CodeLensRefreshRequest || (exports.CodeLensRefreshRequest = CodeLensRefreshRequest = {}));\n/**\n * A request to provide document links\n */\nvar DocumentLinkRequest;\n(function (DocumentLinkRequest) {\n    DocumentLinkRequest.method = 'textDocument/documentLink';\n    DocumentLinkRequest.messageDirection = messages_1.MessageDirection.clientToServer;\n    DocumentLinkRequest.type = new messages_1.ProtocolRequestType(DocumentLinkRequest.method);\n})(DocumentLinkRequest || (exports.DocumentLinkRequest = DocumentLinkRequest = {}));\n/**\n * Request to resolve additional information for a given document link. The request's\n * parameter is of type {@link DocumentLink} the response\n * is of type {@link DocumentLink} or a Thenable that resolves to such.\n */\nvar DocumentLinkResolveRequest;\n(function (DocumentLinkResolveRequest) {\n    DocumentLinkResolveRequest.method = 'documentLink/resolve';\n    DocumentLinkResolveRequest.messageDirection = messages_1.MessageDirection.clientToServer;\n    DocumentLinkResolveRequest.type = new messages_1.ProtocolRequestType(DocumentLinkResolveRequest.method);\n})(DocumentLinkResolveRequest || (exports.DocumentLinkResolveRequest = DocumentLinkResolveRequest = {}));\n/**\n * A request to format a whole document.\n */\nvar DocumentFormattingRequest;\n(function (DocumentFormattingRequest) {\n    DocumentFormattingRequest.method = 'textDocument/formatting';\n    DocumentFormattingRequest.messageDirection = messages_1.MessageDirection.clientToServer;\n    DocumentFormattingRequest.type = new messages_1.ProtocolRequestType(DocumentFormattingRequest.method);\n})(DocumentFormattingRequest || (exports.DocumentFormattingRequest = DocumentFormattingRequest = {}));\n/**\n * A request to format a range in a document.\n */\nvar DocumentRangeFormattingRequest;\n(function (DocumentRangeFormattingRequest) {\n    DocumentRangeFormattingRequest.method = 'textDocument/rangeFormatting';\n    DocumentRangeFormattingRequest.messageDirection = messages_1.MessageDirection.clientToServer;\n    DocumentRangeFormattingRequest.type = new messages_1.ProtocolRequestType(DocumentRangeFormattingRequest.method);\n})(DocumentRangeFormattingRequest || (exports.DocumentRangeFormattingRequest = DocumentRangeFormattingRequest = {}));\n/**\n * A request to format ranges in a document.\n *\n * @since 3.18.0\n * @proposed\n */\nvar DocumentRangesFormattingRequest;\n(function (DocumentRangesFormattingRequest) {\n    DocumentRangesFormattingRequest.method = 'textDocument/rangesFormatting';\n    DocumentRangesFormattingRequest.messageDirection = messages_1.MessageDirection.clientToServer;\n    DocumentRangesFormattingRequest.type = new messages_1.ProtocolRequestType(DocumentRangesFormattingRequest.method);\n})(DocumentRangesFormattingRequest || (exports.DocumentRangesFormattingRequest = DocumentRangesFormattingRequest = {}));\n/**\n * A request to format a document on type.\n */\nvar DocumentOnTypeFormattingRequest;\n(function (DocumentOnTypeFormattingRequest) {\n    DocumentOnTypeFormattingRequest.method = 'textDocument/onTypeFormatting';\n    DocumentOnTypeFormattingRequest.messageDirection = messages_1.MessageDirection.clientToServer;\n    DocumentOnTypeFormattingRequest.type = new messages_1.ProtocolRequestType(DocumentOnTypeFormattingRequest.method);\n})(DocumentOnTypeFormattingRequest || (exports.DocumentOnTypeFormattingRequest = DocumentOnTypeFormattingRequest = {}));\n//---- Rename ----------------------------------------------\nvar PrepareSupportDefaultBehavior;\n(function (PrepareSupportDefaultBehavior) {\n    /**\n     * The client's default behavior is to select the identifier\n     * according the to language's syntax rule.\n     */\n    PrepareSupportDefaultBehavior.Identifier = 1;\n})(PrepareSupportDefaultBehavior || (exports.PrepareSupportDefaultBehavior = PrepareSupportDefaultBehavior = {}));\n/**\n * A request to rename a symbol.\n */\nvar RenameRequest;\n(function (RenameRequest) {\n    RenameRequest.method = 'textDocument/rename';\n    RenameRequest.messageDirection = messages_1.MessageDirection.clientToServer;\n    RenameRequest.type = new messages_1.ProtocolRequestType(RenameRequest.method);\n})(RenameRequest || (exports.RenameRequest = RenameRequest = {}));\n/**\n * A request to test and perform the setup necessary for a rename.\n *\n * @since 3.16 - support for default behavior\n */\nvar PrepareRenameRequest;\n(function (PrepareRenameRequest) {\n    PrepareRenameRequest.method = 'textDocument/prepareRename';\n    PrepareRenameRequest.messageDirection = messages_1.MessageDirection.clientToServer;\n    PrepareRenameRequest.type = new messages_1.ProtocolRequestType(PrepareRenameRequest.method);\n})(PrepareRenameRequest || (exports.PrepareRenameRequest = PrepareRenameRequest = {}));\n/**\n * A request send from the client to the server to execute a command. The request might return\n * a workspace edit which the client will apply to the workspace.\n */\nvar ExecuteCommandRequest;\n(function (ExecuteCommandRequest) {\n    ExecuteCommandRequest.method = 'workspace/executeCommand';\n    ExecuteCommandRequest.messageDirection = messages_1.MessageDirection.clientToServer;\n    ExecuteCommandRequest.type = new messages_1.ProtocolRequestType(ExecuteCommandRequest.method);\n})(ExecuteCommandRequest || (exports.ExecuteCommandRequest = ExecuteCommandRequest = {}));\n/**\n * A request sent from the server to the client to modified certain resources.\n */\nvar ApplyWorkspaceEditRequest;\n(function (ApplyWorkspaceEditRequest) {\n    ApplyWorkspaceEditRequest.method = 'workspace/applyEdit';\n    ApplyWorkspaceEditRequest.messageDirection = messages_1.MessageDirection.serverToClient;\n    ApplyWorkspaceEditRequest.type = new messages_1.ProtocolRequestType('workspace/applyEdit');\n})(ApplyWorkspaceEditRequest || (exports.ApplyWorkspaceEditRequest = ApplyWorkspaceEditRequest = {}));\n", "\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createProtocolConnection = void 0;\nconst vscode_jsonrpc_1 = require(\"vscode-jsonrpc\");\nfunction createProtocolConnection(input, output, logger, options) {\n    if (vscode_jsonrpc_1.ConnectionStrategy.is(options)) {\n        options = { connectionStrategy: options };\n    }\n    return (0, vscode_jsonrpc_1.createMessageConnection)(input, output, logger, options);\n}\nexports.createProtocolConnection = createProtocolConnection;\n", "\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LSPErrorCodes = exports.createProtocolConnection = void 0;\n__exportStar(require(\"vscode-jsonrpc\"), exports);\n__exportStar(require(\"vscode-languageserver-types\"), exports);\n__exportStar(require(\"./messages\"), exports);\n__exportStar(require(\"./protocol\"), exports);\nvar connection_1 = require(\"./connection\");\nObject.defineProperty(exports, \"createProtocolConnection\", { enumerable: true, get: function () { return connection_1.createProtocolConnection; } });\nvar LSPErrorCodes;\n(function (LSPErrorCodes) {\n    /**\n    * This is the start range of LSP reserved error codes.\n    * It doesn't denote a real error code.\n    *\n    * @since 3.16.0\n    */\n    LSPErrorCodes.lspReservedErrorRangeStart = -32899;\n    /**\n     * A request failed but it was syntactically correct, e.g the\n     * method name was known and the parameters were valid. The error\n     * message should contain human readable information about why\n     * the request failed.\n     *\n     * @since 3.17.0\n     */\n    LSPErrorCodes.RequestFailed = -32803;\n    /**\n     * The server cancelled the request. This error code should\n     * only be used for requests that explicitly support being\n     * server cancellable.\n     *\n     * @since 3.17.0\n     */\n    LSPErrorCodes.ServerCancelled = -32802;\n    /**\n     * The server detected that the content of a document got\n     * modified outside normal conditions. A server should\n     * NOT send this error code if it detects a content change\n     * in it unprocessed messages. The result even computed\n     * on an older state might still be useful for the client.\n     *\n     * If a client decides that a result is not of any use anymore\n     * the client should cancel the request.\n     */\n    LSPErrorCodes.ContentModified = -32801;\n    /**\n     * The client has canceled a request and a server as detected\n     * the cancel.\n     */\n    LSPErrorCodes.RequestCancelled = -32800;\n    /**\n    * This is the end range of LSP reserved error codes.\n    * It doesn't denote a real error code.\n    *\n    * @since 3.16.0\n    */\n    LSPErrorCodes.lspReservedErrorRangeEnd = -32800;\n})(LSPErrorCodes || (exports.LSPErrorCodes = LSPErrorCodes = {}));\n", "\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createProtocolConnection = void 0;\nconst node_1 = require(\"vscode-jsonrpc/node\");\n__exportStar(require(\"vscode-jsonrpc/node\"), exports);\n__exportStar(require(\"../common/api\"), exports);\nfunction createProtocolConnection(input, output, logger, options) {\n    return (0, node_1.createMessageConnection)(input, output, logger, options);\n}\nexports.createProtocolConnection = createProtocolConnection;\n", "\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.forEach = exports.mapAsync = exports.map = exports.clearTestMode = exports.setTestMode = exports.Semaphore = exports.Delayer = void 0;\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\nclass Delayer {\n    constructor(defaultDelay) {\n        this.defaultDelay = defaultDelay;\n        this.timeout = undefined;\n        this.completionPromise = undefined;\n        this.onSuccess = undefined;\n        this.task = undefined;\n    }\n    trigger(task, delay = this.defaultDelay) {\n        this.task = task;\n        if (delay >= 0) {\n            this.cancelTimeout();\n        }\n        if (!this.completionPromise) {\n            this.completionPromise = new Promise((resolve) => {\n                this.onSuccess = resolve;\n            }).then(() => {\n                this.completionPromise = undefined;\n                this.onSuccess = undefined;\n                var result = this.task();\n                this.task = undefined;\n                return result;\n            });\n        }\n        if (delay >= 0 || this.timeout === void 0) {\n            this.timeout = (0, vscode_languageserver_protocol_1.RAL)().timer.setTimeout(() => {\n                this.timeout = undefined;\n                this.onSuccess(undefined);\n            }, delay >= 0 ? delay : this.defaultDelay);\n        }\n        return this.completionPromise;\n    }\n    forceDelivery() {\n        if (!this.completionPromise) {\n            return undefined;\n        }\n        this.cancelTimeout();\n        let result = this.task();\n        this.completionPromise = undefined;\n        this.onSuccess = undefined;\n        this.task = undefined;\n        return result;\n    }\n    isTriggered() {\n        return this.timeout !== undefined;\n    }\n    cancel() {\n        this.cancelTimeout();\n        this.completionPromise = undefined;\n    }\n    cancelTimeout() {\n        if (this.timeout !== undefined) {\n            this.timeout.dispose();\n            this.timeout = undefined;\n        }\n    }\n}\nexports.Delayer = Delayer;\nclass Semaphore {\n    constructor(capacity = 1) {\n        if (capacity <= 0) {\n            throw new Error('Capacity must be greater than 0');\n        }\n        this._capacity = capacity;\n        this._active = 0;\n        this._waiting = [];\n    }\n    lock(thunk) {\n        return new Promise((resolve, reject) => {\n            this._waiting.push({ thunk, resolve, reject });\n            this.runNext();\n        });\n    }\n    get active() {\n        return this._active;\n    }\n    runNext() {\n        if (this._waiting.length === 0 || this._active === this._capacity) {\n            return;\n        }\n        (0, vscode_languageserver_protocol_1.RAL)().timer.setImmediate(() => this.doRunNext());\n    }\n    doRunNext() {\n        if (this._waiting.length === 0 || this._active === this._capacity) {\n            return;\n        }\n        const next = this._waiting.shift();\n        this._active++;\n        if (this._active > this._capacity) {\n            throw new Error(`To many thunks active`);\n        }\n        try {\n            const result = next.thunk();\n            if (result instanceof Promise) {\n                result.then((value) => {\n                    this._active--;\n                    next.resolve(value);\n                    this.runNext();\n                }, (err) => {\n                    this._active--;\n                    next.reject(err);\n                    this.runNext();\n                });\n            }\n            else {\n                this._active--;\n                next.resolve(result);\n                this.runNext();\n            }\n        }\n        catch (err) {\n            this._active--;\n            next.reject(err);\n            this.runNext();\n        }\n    }\n}\nexports.Semaphore = Semaphore;\nlet $test = false;\nfunction setTestMode() {\n    $test = true;\n}\nexports.setTestMode = setTestMode;\nfunction clearTestMode() {\n    $test = false;\n}\nexports.clearTestMode = clearTestMode;\nconst defaultYieldTimeout = 15 /*ms*/;\nclass Timer {\n    constructor(yieldAfter = defaultYieldTimeout) {\n        this.yieldAfter = $test === true ? Math.max(yieldAfter, 2) : Math.max(yieldAfter, defaultYieldTimeout);\n        this.startTime = Date.now();\n        this.counter = 0;\n        this.total = 0;\n        // start with a counter interval of 1.\n        this.counterInterval = 1;\n    }\n    start() {\n        this.counter = 0;\n        this.total = 0;\n        this.counterInterval = 1;\n        this.startTime = Date.now();\n    }\n    shouldYield() {\n        if (++this.counter >= this.counterInterval) {\n            const timeTaken = Date.now() - this.startTime;\n            const timeLeft = Math.max(0, this.yieldAfter - timeTaken);\n            this.total += this.counter;\n            this.counter = 0;\n            if (timeTaken >= this.yieldAfter || timeLeft <= 1) {\n                // Yield also if time left <= 1 since we compute the counter\n                // for max < 2 ms.\n                // Start with interval 1 again. We could do some calculation\n                // with using 80% of the last counter however other things (GC)\n                // affect the timing heavily since we have small timings (1 - 15ms).\n                this.counterInterval = 1;\n                this.total = 0;\n                return true;\n            }\n            else {\n                // Only increase the counter until we have spent <= 2 ms. Increasing\n                // the counter further is very fragile since timing is influenced\n                // by other things and can increase the counter too much. This will result\n                // that we yield in average after [14 - 16]ms.\n                switch (timeTaken) {\n                    case 0:\n                    case 1:\n                        this.counterInterval = this.total * 2;\n                        break;\n                }\n            }\n        }\n        return false;\n    }\n}\nasync function map(items, func, token, options) {\n    if (items.length === 0) {\n        return [];\n    }\n    const result = new Array(items.length);\n    const timer = new Timer(options?.yieldAfter);\n    function convertBatch(start) {\n        timer.start();\n        for (let i = start; i < items.length; i++) {\n            result[i] = func(items[i]);\n            if (timer.shouldYield()) {\n                options?.yieldCallback && options.yieldCallback();\n                return i + 1;\n            }\n        }\n        return -1;\n    }\n    // Convert the first batch sync on the same frame.\n    let index = convertBatch(0);\n    while (index !== -1) {\n        if (token !== undefined && token.isCancellationRequested) {\n            break;\n        }\n        index = await new Promise((resolve) => {\n            (0, vscode_languageserver_protocol_1.RAL)().timer.setImmediate(() => {\n                resolve(convertBatch(index));\n            });\n        });\n    }\n    return result;\n}\nexports.map = map;\nasync function mapAsync(items, func, token, options) {\n    if (items.length === 0) {\n        return [];\n    }\n    const result = new Array(items.length);\n    const timer = new Timer(options?.yieldAfter);\n    async function convertBatch(start) {\n        timer.start();\n        for (let i = start; i < items.length; i++) {\n            result[i] = await func(items[i], token);\n            if (timer.shouldYield()) {\n                options?.yieldCallback && options.yieldCallback();\n                return i + 1;\n            }\n        }\n        return -1;\n    }\n    let index = await convertBatch(0);\n    while (index !== -1) {\n        if (token !== undefined && token.isCancellationRequested) {\n            break;\n        }\n        index = await new Promise((resolve) => {\n            (0, vscode_languageserver_protocol_1.RAL)().timer.setImmediate(() => {\n                resolve(convertBatch(index));\n            });\n        });\n    }\n    return result;\n}\nexports.mapAsync = mapAsync;\nasync function forEach(items, func, token, options) {\n    if (items.length === 0) {\n        return;\n    }\n    const timer = new Timer(options?.yieldAfter);\n    function runBatch(start) {\n        timer.start();\n        for (let i = start; i < items.length; i++) {\n            func(items[i]);\n            if (timer.shouldYield()) {\n                options?.yieldCallback && options.yieldCallback();\n                return i + 1;\n            }\n        }\n        return -1;\n    }\n    // Convert the first batch sync on the same frame.\n    let index = runBatch(0);\n    while (index !== -1) {\n        if (token !== undefined && token.isCancellationRequested) {\n            break;\n        }\n        index = await new Promise((resolve) => {\n            (0, vscode_languageserver_protocol_1.RAL)().timer.setImmediate(() => {\n                resolve(runBatch(index));\n            });\n        });\n    }\n}\nexports.forEach = forEach;\n", "\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst code = require(\"vscode\");\nclass ProtocolCompletionItem extends code.CompletionItem {\n    constructor(label) {\n        super(label);\n    }\n}\nexports.default = ProtocolCompletionItem;\n", "\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst code = require(\"vscode\");\nclass ProtocolCodeLens extends code.CodeLens {\n    constructor(range) {\n        super(range);\n    }\n}\nexports.default = ProtocolCodeLens;\n", "\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst code = require(\"vscode\");\nclass ProtocolDocumentLink extends code.DocumentLink {\n    constructor(range, target) {\n        super(range, target);\n    }\n}\nexports.default = ProtocolDocumentLink;\n", "\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst vscode = require(\"vscode\");\nclass ProtocolCodeAction extends vscode.CodeAction {\n    constructor(title, data) {\n        super(title);\n        this.data = data;\n    }\n}\nexports.default = ProtocolCodeAction;\n", "\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ProtocolDiagnostic = exports.DiagnosticCode = void 0;\nconst vscode = require(\"vscode\");\nconst Is = require(\"./utils/is\");\nvar DiagnosticCode;\n(function (DiagnosticCode) {\n    function is(value) {\n        const candidate = value;\n        return candidate !== undefined && candidate !== null && (Is.number(candidate.value) || Is.string(candidate.value)) && Is.string(candidate.target);\n    }\n    DiagnosticCode.is = is;\n})(DiagnosticCode || (exports.DiagnosticCode = DiagnosticCode = {}));\nclass ProtocolDiagnostic extends vscode.Diagnostic {\n    constructor(range, message, severity, data) {\n        super(range, message, severity);\n        this.data = data;\n        this.hasDiagnosticCode = false;\n    }\n}\nexports.ProtocolDiagnostic = ProtocolDiagnostic;\n", "\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst code = require(\"vscode\");\nclass ProtocolCallHierarchyItem extends code.CallHierarchyItem {\n    constructor(kind, name, detail, uri, range, selectionRange, data) {\n        super(kind, name, detail, uri, range, selectionRange);\n        if (data !== undefined) {\n            this.data = data;\n        }\n    }\n}\nexports.default = ProtocolCallHierarchyItem;\n", "\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst code = require(\"vscode\");\nclass ProtocolTypeHierarchyItem extends code.TypeHierarchyItem {\n    constructor(kind, name, detail, uri, range, selectionRange, data) {\n        super(kind, name, detail, uri, range, selectionRange);\n        if (data !== undefined) {\n            this.data = data;\n        }\n    }\n}\nexports.default = ProtocolTypeHierarchyItem;\n", "\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst code = require(\"vscode\");\nclass WorkspaceSymbol extends code.SymbolInformation {\n    constructor(name, kind, containerName, locationOrUri, data) {\n        const hasRange = !(locationOrUri instanceof code.Uri);\n        super(name, kind, containerName, hasRange ? locationOrUri : new code.Location(locationOrUri, new code.Range(0, 0, 0, 0)));\n        this.hasRange = hasRange;\n        if (data !== undefined) {\n            this.data = data;\n        }\n    }\n}\nexports.default = WorkspaceSymbol;\n", "\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst code = require(\"vscode\");\nclass ProtocolInlayHint extends code.InlayHint {\n    constructor(position, label, kind) {\n        super(position, label, kind);\n    }\n}\nexports.default = ProtocolInlayHint;\n", "\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createConverter = void 0;\nconst code = require(\"vscode\");\nconst proto = require(\"vscode-languageserver-protocol\");\nconst Is = require(\"./utils/is\");\nconst async = require(\"./utils/async\");\nconst protocolCompletionItem_1 = require(\"./protocolCompletionItem\");\nconst protocolCodeLens_1 = require(\"./protocolCodeLens\");\nconst protocolDocumentLink_1 = require(\"./protocolDocumentLink\");\nconst protocolCodeAction_1 = require(\"./protocolCodeAction\");\nconst protocolDiagnostic_1 = require(\"./protocolDiagnostic\");\nconst protocolCallHierarchyItem_1 = require(\"./protocolCallHierarchyItem\");\nconst protocolTypeHierarchyItem_1 = require(\"./protocolTypeHierarchyItem\");\nconst protocolWorkspaceSymbol_1 = require(\"./protocolWorkspaceSymbol\");\nconst protocolInlayHint_1 = require(\"./protocolInlayHint\");\nvar InsertReplaceRange;\n(function (InsertReplaceRange) {\n    function is(value) {\n        const candidate = value;\n        return candidate && !!candidate.inserting && !!candidate.replacing;\n    }\n    InsertReplaceRange.is = is;\n})(InsertReplaceRange || (InsertReplaceRange = {}));\nfunction createConverter(uriConverter) {\n    const nullConverter = (value) => value.toString();\n    const _uriConverter = uriConverter || nullConverter;\n    function asUri(value) {\n        return _uriConverter(value);\n    }\n    function asTextDocumentIdentifier(textDocument) {\n        return {\n            uri: _uriConverter(textDocument.uri)\n        };\n    }\n    function asTextDocumentItem(textDocument) {\n        return {\n            uri: _uriConverter(textDocument.uri),\n            languageId: textDocument.languageId,\n            version: textDocument.version,\n            text: textDocument.getText()\n        };\n    }\n    function asVersionedTextDocumentIdentifier(textDocument) {\n        return {\n            uri: _uriConverter(textDocument.uri),\n            version: textDocument.version\n        };\n    }\n    function asOpenTextDocumentParams(textDocument) {\n        return {\n            textDocument: asTextDocumentItem(textDocument)\n        };\n    }\n    function isTextDocumentChangeEvent(value) {\n        const candidate = value;\n        return !!candidate.document && !!candidate.contentChanges;\n    }\n    function isTextDocument(value) {\n        const candidate = value;\n        return !!candidate.uri && !!candidate.version;\n    }\n    function asChangeTextDocumentParams(arg0, arg1, arg2) {\n        if (isTextDocument(arg0)) {\n            const result = {\n                textDocument: {\n                    uri: _uriConverter(arg0.uri),\n                    version: arg0.version\n                },\n                contentChanges: [{ text: arg0.getText() }]\n            };\n            return result;\n        }\n        else if (isTextDocumentChangeEvent(arg0)) {\n            const uri = arg1;\n            const version = arg2;\n            const result = {\n                textDocument: {\n                    uri: _uriConverter(uri),\n                    version: version\n                },\n                contentChanges: arg0.contentChanges.map((change) => {\n                    const range = change.range;\n                    return {\n                        range: {\n                            start: { line: range.start.line, character: range.start.character },\n                            end: { line: range.end.line, character: range.end.character }\n                        },\n                        rangeLength: change.rangeLength,\n                        text: change.text\n                    };\n                })\n            };\n            return result;\n        }\n        else {\n            throw Error('Unsupported text document change parameter');\n        }\n    }\n    function asCloseTextDocumentParams(textDocument) {\n        return {\n            textDocument: asTextDocumentIdentifier(textDocument)\n        };\n    }\n    function asSaveTextDocumentParams(textDocument, includeContent = false) {\n        let result = {\n            textDocument: asTextDocumentIdentifier(textDocument)\n        };\n        if (includeContent) {\n            result.text = textDocument.getText();\n        }\n        return result;\n    }\n    function asTextDocumentSaveReason(reason) {\n        switch (reason) {\n            case code.TextDocumentSaveReason.Manual:\n                return proto.TextDocumentSaveReason.Manual;\n            case code.TextDocumentSaveReason.AfterDelay:\n                return proto.TextDocumentSaveReason.AfterDelay;\n            case code.TextDocumentSaveReason.FocusOut:\n                return proto.TextDocumentSaveReason.FocusOut;\n        }\n        return proto.TextDocumentSaveReason.Manual;\n    }\n    function asWillSaveTextDocumentParams(event) {\n        return {\n            textDocument: asTextDocumentIdentifier(event.document),\n            reason: asTextDocumentSaveReason(event.reason)\n        };\n    }\n    function asDidCreateFilesParams(event) {\n        return {\n            files: event.files.map((fileUri) => ({\n                uri: _uriConverter(fileUri),\n            })),\n        };\n    }\n    function asDidRenameFilesParams(event) {\n        return {\n            files: event.files.map((file) => ({\n                oldUri: _uriConverter(file.oldUri),\n                newUri: _uriConverter(file.newUri),\n            })),\n        };\n    }\n    function asDidDeleteFilesParams(event) {\n        return {\n            files: event.files.map((fileUri) => ({\n                uri: _uriConverter(fileUri),\n            })),\n        };\n    }\n    function asWillCreateFilesParams(event) {\n        return {\n            files: event.files.map((fileUri) => ({\n                uri: _uriConverter(fileUri),\n            })),\n        };\n    }\n    function asWillRenameFilesParams(event) {\n        return {\n            files: event.files.map((file) => ({\n                oldUri: _uriConverter(file.oldUri),\n                newUri: _uriConverter(file.newUri),\n            })),\n        };\n    }\n    function asWillDeleteFilesParams(event) {\n        return {\n            files: event.files.map((fileUri) => ({\n                uri: _uriConverter(fileUri),\n            })),\n        };\n    }\n    function asTextDocumentPositionParams(textDocument, position) {\n        return {\n            textDocument: asTextDocumentIdentifier(textDocument),\n            position: asWorkerPosition(position)\n        };\n    }\n    function asCompletionTriggerKind(triggerKind) {\n        switch (triggerKind) {\n            case code.CompletionTriggerKind.TriggerCharacter:\n                return proto.CompletionTriggerKind.TriggerCharacter;\n            case code.CompletionTriggerKind.TriggerForIncompleteCompletions:\n                return proto.CompletionTriggerKind.TriggerForIncompleteCompletions;\n            default:\n                return proto.CompletionTriggerKind.Invoked;\n        }\n    }\n    function asCompletionParams(textDocument, position, context) {\n        return {\n            textDocument: asTextDocumentIdentifier(textDocument),\n            position: asWorkerPosition(position),\n            context: {\n                triggerKind: asCompletionTriggerKind(context.triggerKind),\n                triggerCharacter: context.triggerCharacter\n            }\n        };\n    }\n    function asSignatureHelpTriggerKind(triggerKind) {\n        switch (triggerKind) {\n            case code.SignatureHelpTriggerKind.Invoke:\n                return proto.SignatureHelpTriggerKind.Invoked;\n            case code.SignatureHelpTriggerKind.TriggerCharacter:\n                return proto.SignatureHelpTriggerKind.TriggerCharacter;\n            case code.SignatureHelpTriggerKind.ContentChange:\n                return proto.SignatureHelpTriggerKind.ContentChange;\n        }\n    }\n    function asParameterInformation(value) {\n        // We leave the documentation out on purpose since it usually adds no\n        // value for the server.\n        return {\n            label: value.label\n        };\n    }\n    function asParameterInformations(values) {\n        return values.map(asParameterInformation);\n    }\n    function asSignatureInformation(value) {\n        // We leave the documentation out on purpose since it usually adds no\n        // value for the server.\n        return {\n            label: value.label,\n            parameters: asParameterInformations(value.parameters)\n        };\n    }\n    function asSignatureInformations(values) {\n        return values.map(asSignatureInformation);\n    }\n    function asSignatureHelp(value) {\n        if (value === undefined) {\n            return value;\n        }\n        return {\n            signatures: asSignatureInformations(value.signatures),\n            activeSignature: value.activeSignature,\n            activeParameter: value.activeParameter\n        };\n    }\n    function asSignatureHelpParams(textDocument, position, context) {\n        return {\n            textDocument: asTextDocumentIdentifier(textDocument),\n            position: asWorkerPosition(position),\n            context: {\n                isRetrigger: context.isRetrigger,\n                triggerCharacter: context.triggerCharacter,\n                triggerKind: asSignatureHelpTriggerKind(context.triggerKind),\n                activeSignatureHelp: asSignatureHelp(context.activeSignatureHelp)\n            }\n        };\n    }\n    function asWorkerPosition(position) {\n        return { line: position.line, character: position.character };\n    }\n    function asPosition(value) {\n        if (value === undefined || value === null) {\n            return value;\n        }\n        return { line: value.line > proto.uinteger.MAX_VALUE ? proto.uinteger.MAX_VALUE : value.line, character: value.character > proto.uinteger.MAX_VALUE ? proto.uinteger.MAX_VALUE : value.character };\n    }\n    function asPositions(values, token) {\n        return async.map(values, asPosition, token);\n    }\n    function asPositionsSync(values) {\n        return values.map(asPosition);\n    }\n    function asRange(value) {\n        if (value === undefined || value === null) {\n            return value;\n        }\n        return { start: asPosition(value.start), end: asPosition(value.end) };\n    }\n    function asRanges(values) {\n        return values.map(asRange);\n    }\n    function asLocation(value) {\n        if (value === undefined || value === null) {\n            return value;\n        }\n        return proto.Location.create(asUri(value.uri), asRange(value.range));\n    }\n    function asDiagnosticSeverity(value) {\n        switch (value) {\n            case code.DiagnosticSeverity.Error:\n                return proto.DiagnosticSeverity.Error;\n            case code.DiagnosticSeverity.Warning:\n                return proto.DiagnosticSeverity.Warning;\n            case code.DiagnosticSeverity.Information:\n                return proto.DiagnosticSeverity.Information;\n            case code.DiagnosticSeverity.Hint:\n                return proto.DiagnosticSeverity.Hint;\n        }\n    }\n    function asDiagnosticTags(tags) {\n        if (!tags) {\n            return undefined;\n        }\n        let result = [];\n        for (let tag of tags) {\n            let converted = asDiagnosticTag(tag);\n            if (converted !== undefined) {\n                result.push(converted);\n            }\n        }\n        return result.length > 0 ? result : undefined;\n    }\n    function asDiagnosticTag(tag) {\n        switch (tag) {\n            case code.DiagnosticTag.Unnecessary:\n                return proto.DiagnosticTag.Unnecessary;\n            case code.DiagnosticTag.Deprecated:\n                return proto.DiagnosticTag.Deprecated;\n            default:\n                return undefined;\n        }\n    }\n    function asRelatedInformation(item) {\n        return {\n            message: item.message,\n            location: asLocation(item.location)\n        };\n    }\n    function asRelatedInformations(items) {\n        return items.map(asRelatedInformation);\n    }\n    function asDiagnosticCode(value) {\n        if (value === undefined || value === null) {\n            return undefined;\n        }\n        if (Is.number(value) || Is.string(value)) {\n            return value;\n        }\n        return { value: value.value, target: asUri(value.target) };\n    }\n    function asDiagnostic(item) {\n        const result = proto.Diagnostic.create(asRange(item.range), item.message);\n        const protocolDiagnostic = item instanceof protocolDiagnostic_1.ProtocolDiagnostic ? item : undefined;\n        if (protocolDiagnostic !== undefined && protocolDiagnostic.data !== undefined) {\n            result.data = protocolDiagnostic.data;\n        }\n        const code = asDiagnosticCode(item.code);\n        if (protocolDiagnostic_1.DiagnosticCode.is(code)) {\n            if (protocolDiagnostic !== undefined && protocolDiagnostic.hasDiagnosticCode) {\n                result.code = code;\n            }\n            else {\n                result.code = code.value;\n                result.codeDescription = { href: code.target };\n            }\n        }\n        else {\n            result.code = code;\n        }\n        if (Is.number(item.severity)) {\n            result.severity = asDiagnosticSeverity(item.severity);\n        }\n        if (Array.isArray(item.tags)) {\n            result.tags = asDiagnosticTags(item.tags);\n        }\n        if (item.relatedInformation) {\n            result.relatedInformation = asRelatedInformations(item.relatedInformation);\n        }\n        if (item.source) {\n            result.source = item.source;\n        }\n        return result;\n    }\n    function asDiagnostics(items, token) {\n        if (items === undefined || items === null) {\n            return items;\n        }\n        return async.map(items, asDiagnostic, token);\n    }\n    function asDiagnosticsSync(items) {\n        if (items === undefined || items === null) {\n            return items;\n        }\n        return items.map(asDiagnostic);\n    }\n    function asDocumentation(format, documentation) {\n        switch (format) {\n            case '$string':\n                return documentation;\n            case proto.MarkupKind.PlainText:\n                return { kind: format, value: documentation };\n            case proto.MarkupKind.Markdown:\n                return { kind: format, value: documentation.value };\n            default:\n                return `Unsupported Markup content received. Kind is: ${format}`;\n        }\n    }\n    function asCompletionItemTag(tag) {\n        switch (tag) {\n            case code.CompletionItemTag.Deprecated:\n                return proto.CompletionItemTag.Deprecated;\n        }\n        return undefined;\n    }\n    function asCompletionItemTags(tags) {\n        if (tags === undefined) {\n            return tags;\n        }\n        const result = [];\n        for (let tag of tags) {\n            const converted = asCompletionItemTag(tag);\n            if (converted !== undefined) {\n                result.push(converted);\n            }\n        }\n        return result;\n    }\n    function asCompletionItemKind(value, original) {\n        if (original !== undefined) {\n            return original;\n        }\n        return value + 1;\n    }\n    function asCompletionItem(item, labelDetailsSupport = false) {\n        let label;\n        let labelDetails;\n        if (Is.string(item.label)) {\n            label = item.label;\n        }\n        else {\n            label = item.label.label;\n            if (labelDetailsSupport && (item.label.detail !== undefined || item.label.description !== undefined)) {\n                labelDetails = { detail: item.label.detail, description: item.label.description };\n            }\n        }\n        let result = { label: label };\n        if (labelDetails !== undefined) {\n            result.labelDetails = labelDetails;\n        }\n        let protocolItem = item instanceof protocolCompletionItem_1.default ? item : undefined;\n        if (item.detail) {\n            result.detail = item.detail;\n        }\n        // We only send items back we created. So this can't be something else than\n        // a string right now.\n        if (item.documentation) {\n            if (!protocolItem || protocolItem.documentationFormat === '$string') {\n                result.documentation = item.documentation;\n            }\n            else {\n                result.documentation = asDocumentation(protocolItem.documentationFormat, item.documentation);\n            }\n        }\n        if (item.filterText) {\n            result.filterText = item.filterText;\n        }\n        fillPrimaryInsertText(result, item);\n        if (Is.number(item.kind)) {\n            result.kind = asCompletionItemKind(item.kind, protocolItem && protocolItem.originalItemKind);\n        }\n        if (item.sortText) {\n            result.sortText = item.sortText;\n        }\n        if (item.additionalTextEdits) {\n            result.additionalTextEdits = asTextEdits(item.additionalTextEdits);\n        }\n        if (item.commitCharacters) {\n            result.commitCharacters = item.commitCharacters.slice();\n        }\n        if (item.command) {\n            result.command = asCommand(item.command);\n        }\n        if (item.preselect === true || item.preselect === false) {\n            result.preselect = item.preselect;\n        }\n        const tags = asCompletionItemTags(item.tags);\n        if (protocolItem) {\n            if (protocolItem.data !== undefined) {\n                result.data = protocolItem.data;\n            }\n            if (protocolItem.deprecated === true || protocolItem.deprecated === false) {\n                if (protocolItem.deprecated === true && tags !== undefined && tags.length > 0) {\n                    const index = tags.indexOf(code.CompletionItemTag.Deprecated);\n                    if (index !== -1) {\n                        tags.splice(index, 1);\n                    }\n                }\n                result.deprecated = protocolItem.deprecated;\n            }\n            if (protocolItem.insertTextMode !== undefined) {\n                result.insertTextMode = protocolItem.insertTextMode;\n            }\n        }\n        if (tags !== undefined && tags.length > 0) {\n            result.tags = tags;\n        }\n        if (result.insertTextMode === undefined && item.keepWhitespace === true) {\n            result.insertTextMode = proto.InsertTextMode.adjustIndentation;\n        }\n        return result;\n    }\n    function fillPrimaryInsertText(target, source) {\n        let format = proto.InsertTextFormat.PlainText;\n        let text = undefined;\n        let range = undefined;\n        if (source.textEdit) {\n            text = source.textEdit.newText;\n            range = source.textEdit.range;\n        }\n        else if (source.insertText instanceof code.SnippetString) {\n            format = proto.InsertTextFormat.Snippet;\n            text = source.insertText.value;\n        }\n        else {\n            text = source.insertText;\n        }\n        if (source.range) {\n            range = source.range;\n        }\n        target.insertTextFormat = format;\n        if (source.fromEdit && text !== undefined && range !== undefined) {\n            target.textEdit = asCompletionTextEdit(text, range);\n        }\n        else {\n            target.insertText = text;\n        }\n    }\n    function asCompletionTextEdit(newText, range) {\n        if (InsertReplaceRange.is(range)) {\n            return proto.InsertReplaceEdit.create(newText, asRange(range.inserting), asRange(range.replacing));\n        }\n        else {\n            return { newText, range: asRange(range) };\n        }\n    }\n    function asTextEdit(edit) {\n        return { range: asRange(edit.range), newText: edit.newText };\n    }\n    function asTextEdits(edits) {\n        if (edits === undefined || edits === null) {\n            return edits;\n        }\n        return edits.map(asTextEdit);\n    }\n    function asSymbolKind(item) {\n        if (item <= code.SymbolKind.TypeParameter) {\n            // Symbol kind is one based in the protocol and zero based in code.\n            return (item + 1);\n        }\n        return proto.SymbolKind.Property;\n    }\n    function asSymbolTag(item) {\n        return item;\n    }\n    function asSymbolTags(items) {\n        return items.map(asSymbolTag);\n    }\n    function asReferenceParams(textDocument, position, options) {\n        return {\n            textDocument: asTextDocumentIdentifier(textDocument),\n            position: asWorkerPosition(position),\n            context: { includeDeclaration: options.includeDeclaration }\n        };\n    }\n    async function asCodeAction(item, token) {\n        let result = proto.CodeAction.create(item.title);\n        if (item instanceof protocolCodeAction_1.default && item.data !== undefined) {\n            result.data = item.data;\n        }\n        if (item.kind !== undefined) {\n            result.kind = asCodeActionKind(item.kind);\n        }\n        if (item.diagnostics !== undefined) {\n            result.diagnostics = await asDiagnostics(item.diagnostics, token);\n        }\n        if (item.edit !== undefined) {\n            throw new Error(`VS Code code actions can only be converted to a protocol code action without an edit.`);\n        }\n        if (item.command !== undefined) {\n            result.command = asCommand(item.command);\n        }\n        if (item.isPreferred !== undefined) {\n            result.isPreferred = item.isPreferred;\n        }\n        if (item.disabled !== undefined) {\n            result.disabled = { reason: item.disabled.reason };\n        }\n        return result;\n    }\n    function asCodeActionSync(item) {\n        let result = proto.CodeAction.create(item.title);\n        if (item instanceof protocolCodeAction_1.default && item.data !== undefined) {\n            result.data = item.data;\n        }\n        if (item.kind !== undefined) {\n            result.kind = asCodeActionKind(item.kind);\n        }\n        if (item.diagnostics !== undefined) {\n            result.diagnostics = asDiagnosticsSync(item.diagnostics);\n        }\n        if (item.edit !== undefined) {\n            throw new Error(`VS Code code actions can only be converted to a protocol code action without an edit.`);\n        }\n        if (item.command !== undefined) {\n            result.command = asCommand(item.command);\n        }\n        if (item.isPreferred !== undefined) {\n            result.isPreferred = item.isPreferred;\n        }\n        if (item.disabled !== undefined) {\n            result.disabled = { reason: item.disabled.reason };\n        }\n        return result;\n    }\n    async function asCodeActionContext(context, token) {\n        if (context === undefined || context === null) {\n            return context;\n        }\n        let only;\n        if (context.only && Is.string(context.only.value)) {\n            only = [context.only.value];\n        }\n        return proto.CodeActionContext.create(await asDiagnostics(context.diagnostics, token), only, asCodeActionTriggerKind(context.triggerKind));\n    }\n    function asCodeActionContextSync(context) {\n        if (context === undefined || context === null) {\n            return context;\n        }\n        let only;\n        if (context.only && Is.string(context.only.value)) {\n            only = [context.only.value];\n        }\n        return proto.CodeActionContext.create(asDiagnosticsSync(context.diagnostics), only, asCodeActionTriggerKind(context.triggerKind));\n    }\n    function asCodeActionTriggerKind(kind) {\n        switch (kind) {\n            case code.CodeActionTriggerKind.Invoke:\n                return proto.CodeActionTriggerKind.Invoked;\n            case code.CodeActionTriggerKind.Automatic:\n                return proto.CodeActionTriggerKind.Automatic;\n            default:\n                return undefined;\n        }\n    }\n    function asCodeActionKind(item) {\n        if (item === undefined || item === null) {\n            return undefined;\n        }\n        return item.value;\n    }\n    function asInlineValueContext(context) {\n        if (context === undefined || context === null) {\n            return context;\n        }\n        return proto.InlineValueContext.create(context.frameId, asRange(context.stoppedLocation));\n    }\n    function asInlineCompletionParams(document, position, context) {\n        return { context: proto.InlineCompletionContext.create(context.triggerKind, context.selectedCompletionInfo),\n            textDocument: asTextDocumentIdentifier(document), position: asPosition(position) };\n    }\n    function asCommand(item) {\n        let result = proto.Command.create(item.title, item.command);\n        if (item.arguments) {\n            result.arguments = item.arguments;\n        }\n        return result;\n    }\n    function asCodeLens(item) {\n        let result = proto.CodeLens.create(asRange(item.range));\n        if (item.command) {\n            result.command = asCommand(item.command);\n        }\n        if (item instanceof protocolCodeLens_1.default) {\n            if (item.data) {\n                result.data = item.data;\n            }\n        }\n        return result;\n    }\n    function asFormattingOptions(options, fileOptions) {\n        const result = { tabSize: options.tabSize, insertSpaces: options.insertSpaces };\n        if (fileOptions.trimTrailingWhitespace) {\n            result.trimTrailingWhitespace = true;\n        }\n        if (fileOptions.trimFinalNewlines) {\n            result.trimFinalNewlines = true;\n        }\n        if (fileOptions.insertFinalNewline) {\n            result.insertFinalNewline = true;\n        }\n        return result;\n    }\n    function asDocumentSymbolParams(textDocument) {\n        return {\n            textDocument: asTextDocumentIdentifier(textDocument)\n        };\n    }\n    function asCodeLensParams(textDocument) {\n        return {\n            textDocument: asTextDocumentIdentifier(textDocument)\n        };\n    }\n    function asDocumentLink(item) {\n        let result = proto.DocumentLink.create(asRange(item.range));\n        if (item.target) {\n            result.target = asUri(item.target);\n        }\n        if (item.tooltip !== undefined) {\n            result.tooltip = item.tooltip;\n        }\n        let protocolItem = item instanceof protocolDocumentLink_1.default ? item : undefined;\n        if (protocolItem && protocolItem.data) {\n            result.data = protocolItem.data;\n        }\n        return result;\n    }\n    function asDocumentLinkParams(textDocument) {\n        return {\n            textDocument: asTextDocumentIdentifier(textDocument)\n        };\n    }\n    function asCallHierarchyItem(value) {\n        const result = {\n            name: value.name,\n            kind: asSymbolKind(value.kind),\n            uri: asUri(value.uri),\n            range: asRange(value.range),\n            selectionRange: asRange(value.selectionRange)\n        };\n        if (value.detail !== undefined && value.detail.length > 0) {\n            result.detail = value.detail;\n        }\n        if (value.tags !== undefined) {\n            result.tags = asSymbolTags(value.tags);\n        }\n        if (value instanceof protocolCallHierarchyItem_1.default && value.data !== undefined) {\n            result.data = value.data;\n        }\n        return result;\n    }\n    function asTypeHierarchyItem(value) {\n        const result = {\n            name: value.name,\n            kind: asSymbolKind(value.kind),\n            uri: asUri(value.uri),\n            range: asRange(value.range),\n            selectionRange: asRange(value.selectionRange),\n        };\n        if (value.detail !== undefined && value.detail.length > 0) {\n            result.detail = value.detail;\n        }\n        if (value.tags !== undefined) {\n            result.tags = asSymbolTags(value.tags);\n        }\n        if (value instanceof protocolTypeHierarchyItem_1.default && value.data !== undefined) {\n            result.data = value.data;\n        }\n        return result;\n    }\n    function asWorkspaceSymbol(item) {\n        const result = item instanceof protocolWorkspaceSymbol_1.default\n            ? { name: item.name, kind: asSymbolKind(item.kind), location: item.hasRange ? asLocation(item.location) : { uri: _uriConverter(item.location.uri) }, data: item.data }\n            : { name: item.name, kind: asSymbolKind(item.kind), location: asLocation(item.location) };\n        if (item.tags !== undefined) {\n            result.tags = asSymbolTags(item.tags);\n        }\n        if (item.containerName !== '') {\n            result.containerName = item.containerName;\n        }\n        return result;\n    }\n    function asInlayHint(item) {\n        const label = typeof item.label === 'string'\n            ? item.label\n            : item.label.map(asInlayHintLabelPart);\n        const result = proto.InlayHint.create(asPosition(item.position), label);\n        if (item.kind !== undefined) {\n            result.kind = item.kind;\n        }\n        if (item.textEdits !== undefined) {\n            result.textEdits = asTextEdits(item.textEdits);\n        }\n        if (item.tooltip !== undefined) {\n            result.tooltip = asTooltip(item.tooltip);\n        }\n        if (item.paddingLeft !== undefined) {\n            result.paddingLeft = item.paddingLeft;\n        }\n        if (item.paddingRight !== undefined) {\n            result.paddingRight = item.paddingRight;\n        }\n        if (item instanceof protocolInlayHint_1.default && item.data !== undefined) {\n            result.data = item.data;\n        }\n        return result;\n    }\n    function asInlayHintLabelPart(item) {\n        const result = proto.InlayHintLabelPart.create(item.value);\n        if (item.location !== undefined) {\n            result.location = asLocation(item.location);\n        }\n        if (item.command !== undefined) {\n            result.command = asCommand(item.command);\n        }\n        if (item.tooltip !== undefined) {\n            result.tooltip = asTooltip(item.tooltip);\n        }\n        return result;\n    }\n    function asTooltip(value) {\n        if (typeof value === 'string') {\n            return value;\n        }\n        const result = {\n            kind: proto.MarkupKind.Markdown,\n            value: value.value\n        };\n        return result;\n    }\n    return {\n        asUri,\n        asTextDocumentIdentifier,\n        asTextDocumentItem,\n        asVersionedTextDocumentIdentifier,\n        asOpenTextDocumentParams,\n        asChangeTextDocumentParams,\n        asCloseTextDocumentParams,\n        asSaveTextDocumentParams,\n        asWillSaveTextDocumentParams,\n        asDidCreateFilesParams,\n        asDidRenameFilesParams,\n        asDidDeleteFilesParams,\n        asWillCreateFilesParams,\n        asWillRenameFilesParams,\n        asWillDeleteFilesParams,\n        asTextDocumentPositionParams,\n        asCompletionParams,\n        asSignatureHelpParams,\n        asWorkerPosition,\n        asRange,\n        asRanges,\n        asPosition,\n        asPositions,\n        asPositionsSync,\n        asLocation,\n        asDiagnosticSeverity,\n        asDiagnosticTag,\n        asDiagnostic,\n        asDiagnostics,\n        asDiagnosticsSync,\n        asCompletionItem,\n        asTextEdit,\n        asSymbolKind,\n        asSymbolTag,\n        asSymbolTags,\n        asReferenceParams,\n        asCodeAction,\n        asCodeActionSync,\n        asCodeActionContext,\n        asCodeActionContextSync,\n        asInlineValueContext,\n        asCommand,\n        asCodeLens,\n        asFormattingOptions,\n        asDocumentSymbolParams,\n        asCodeLensParams,\n        asDocumentLink,\n        asDocumentLinkParams,\n        asCallHierarchyItem,\n        asTypeHierarchyItem,\n        asInlayHint,\n        asWorkspaceSymbol,\n        asInlineCompletionParams\n    };\n}\nexports.createConverter = createConverter;\n", "\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createConverter = void 0;\nconst code = require(\"vscode\");\nconst ls = require(\"vscode-languageserver-protocol\");\nconst Is = require(\"./utils/is\");\nconst async = require(\"./utils/async\");\nconst protocolCompletionItem_1 = require(\"./protocolCompletionItem\");\nconst protocolCodeLens_1 = require(\"./protocolCodeLens\");\nconst protocolDocumentLink_1 = require(\"./protocolDocumentLink\");\nconst protocolCodeAction_1 = require(\"./protocolCodeAction\");\nconst protocolDiagnostic_1 = require(\"./protocolDiagnostic\");\nconst protocolCallHierarchyItem_1 = require(\"./protocolCallHierarchyItem\");\nconst protocolTypeHierarchyItem_1 = require(\"./protocolTypeHierarchyItem\");\nconst protocolWorkspaceSymbol_1 = require(\"./protocolWorkspaceSymbol\");\nconst protocolInlayHint_1 = require(\"./protocolInlayHint\");\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\nvar CodeBlock;\n(function (CodeBlock) {\n    function is(value) {\n        let candidate = value;\n        return candidate && Is.string(candidate.language) && Is.string(candidate.value);\n    }\n    CodeBlock.is = is;\n})(CodeBlock || (CodeBlock = {}));\nfunction createConverter(uriConverter, trustMarkdown, supportHtml) {\n    const nullConverter = (value) => code.Uri.parse(value);\n    const _uriConverter = uriConverter || nullConverter;\n    function asUri(value) {\n        return _uriConverter(value);\n    }\n    function asDocumentSelector(selector) {\n        const result = [];\n        for (const filter of selector) {\n            if (typeof filter === 'string') {\n                result.push(filter);\n            }\n            else if (vscode_languageserver_protocol_1.NotebookCellTextDocumentFilter.is(filter)) {\n                // We first need to check for the notebook cell filter since a TextDocumentFilter would\n                // match both (e.g. the notebook is optional).\n                if (typeof filter.notebook === 'string') {\n                    result.push({ notebookType: filter.notebook, language: filter.language });\n                }\n                else {\n                    const notebookType = filter.notebook.notebookType ?? '*';\n                    result.push({ notebookType: notebookType, scheme: filter.notebook.scheme, pattern: filter.notebook.pattern, language: filter.language });\n                }\n            }\n            else if (vscode_languageserver_protocol_1.TextDocumentFilter.is(filter)) {\n                result.push({ language: filter.language, scheme: filter.scheme, pattern: filter.pattern });\n            }\n        }\n        return result;\n    }\n    async function asDiagnostics(diagnostics, token) {\n        return async.map(diagnostics, asDiagnostic, token);\n    }\n    function asDiagnosticsSync(diagnostics) {\n        const result = new Array(diagnostics.length);\n        for (let i = 0; i < diagnostics.length; i++) {\n            result[i] = asDiagnostic(diagnostics[i]);\n        }\n        return result;\n    }\n    function asDiagnostic(diagnostic) {\n        let result = new protocolDiagnostic_1.ProtocolDiagnostic(asRange(diagnostic.range), diagnostic.message, asDiagnosticSeverity(diagnostic.severity), diagnostic.data);\n        if (diagnostic.code !== undefined) {\n            if (typeof diagnostic.code === 'string' || typeof diagnostic.code === 'number') {\n                if (ls.CodeDescription.is(diagnostic.codeDescription)) {\n                    result.code = {\n                        value: diagnostic.code,\n                        target: asUri(diagnostic.codeDescription.href)\n                    };\n                }\n                else {\n                    result.code = diagnostic.code;\n                }\n            }\n            else if (protocolDiagnostic_1.DiagnosticCode.is(diagnostic.code)) {\n                // This is for backwards compatibility of a proposed API.\n                // We should remove this at some point.\n                result.hasDiagnosticCode = true;\n                const diagnosticCode = diagnostic.code;\n                result.code = {\n                    value: diagnosticCode.value,\n                    target: asUri(diagnosticCode.target)\n                };\n            }\n        }\n        if (diagnostic.source) {\n            result.source = diagnostic.source;\n        }\n        if (diagnostic.relatedInformation) {\n            result.relatedInformation = asRelatedInformation(diagnostic.relatedInformation);\n        }\n        if (Array.isArray(diagnostic.tags)) {\n            result.tags = asDiagnosticTags(diagnostic.tags);\n        }\n        return result;\n    }\n    function asRelatedInformation(relatedInformation) {\n        const result = new Array(relatedInformation.length);\n        for (let i = 0; i < relatedInformation.length; i++) {\n            const info = relatedInformation[i];\n            result[i] = new code.DiagnosticRelatedInformation(asLocation(info.location), info.message);\n        }\n        return result;\n    }\n    function asDiagnosticTags(tags) {\n        if (!tags) {\n            return undefined;\n        }\n        let result = [];\n        for (let tag of tags) {\n            let converted = asDiagnosticTag(tag);\n            if (converted !== undefined) {\n                result.push(converted);\n            }\n        }\n        return result.length > 0 ? result : undefined;\n    }\n    function asDiagnosticTag(tag) {\n        switch (tag) {\n            case ls.DiagnosticTag.Unnecessary:\n                return code.DiagnosticTag.Unnecessary;\n            case ls.DiagnosticTag.Deprecated:\n                return code.DiagnosticTag.Deprecated;\n            default:\n                return undefined;\n        }\n    }\n    function asPosition(value) {\n        return value ? new code.Position(value.line, value.character) : undefined;\n    }\n    function asRange(value) {\n        return value ? new code.Range(value.start.line, value.start.character, value.end.line, value.end.character) : undefined;\n    }\n    async function asRanges(items, token) {\n        return async.map(items, (range) => {\n            return new code.Range(range.start.line, range.start.character, range.end.line, range.end.character);\n        }, token);\n    }\n    function asDiagnosticSeverity(value) {\n        if (value === undefined || value === null) {\n            return code.DiagnosticSeverity.Error;\n        }\n        switch (value) {\n            case ls.DiagnosticSeverity.Error:\n                return code.DiagnosticSeverity.Error;\n            case ls.DiagnosticSeverity.Warning:\n                return code.DiagnosticSeverity.Warning;\n            case ls.DiagnosticSeverity.Information:\n                return code.DiagnosticSeverity.Information;\n            case ls.DiagnosticSeverity.Hint:\n                return code.DiagnosticSeverity.Hint;\n        }\n        return code.DiagnosticSeverity.Error;\n    }\n    function asHoverContent(value) {\n        if (Is.string(value)) {\n            return asMarkdownString(value);\n        }\n        else if (CodeBlock.is(value)) {\n            let result = asMarkdownString();\n            return result.appendCodeblock(value.value, value.language);\n        }\n        else if (Array.isArray(value)) {\n            let result = [];\n            for (let element of value) {\n                let item = asMarkdownString();\n                if (CodeBlock.is(element)) {\n                    item.appendCodeblock(element.value, element.language);\n                }\n                else {\n                    item.appendMarkdown(element);\n                }\n                result.push(item);\n            }\n            return result;\n        }\n        else {\n            return asMarkdownString(value);\n        }\n    }\n    function asDocumentation(value) {\n        if (Is.string(value)) {\n            return value;\n        }\n        else {\n            switch (value.kind) {\n                case ls.MarkupKind.Markdown:\n                    return asMarkdownString(value.value);\n                case ls.MarkupKind.PlainText:\n                    return value.value;\n                default:\n                    return `Unsupported Markup content received. Kind is: ${value.kind}`;\n            }\n        }\n    }\n    function asMarkdownString(value) {\n        let result;\n        if (value === undefined || typeof value === 'string') {\n            result = new code.MarkdownString(value);\n        }\n        else {\n            switch (value.kind) {\n                case ls.MarkupKind.Markdown:\n                    result = new code.MarkdownString(value.value);\n                    break;\n                case ls.MarkupKind.PlainText:\n                    result = new code.MarkdownString();\n                    result.appendText(value.value);\n                    break;\n                default:\n                    result = new code.MarkdownString();\n                    result.appendText(`Unsupported Markup content received. Kind is: ${value.kind}`);\n                    break;\n            }\n        }\n        result.isTrusted = trustMarkdown;\n        result.supportHtml = supportHtml;\n        return result;\n    }\n    function asHover(hover) {\n        if (!hover) {\n            return undefined;\n        }\n        return new code.Hover(asHoverContent(hover.contents), asRange(hover.range));\n    }\n    async function asCompletionResult(value, allCommitCharacters, token) {\n        if (!value) {\n            return undefined;\n        }\n        if (Array.isArray(value)) {\n            return async.map(value, (item) => asCompletionItem(item, allCommitCharacters), token);\n        }\n        const list = value;\n        const { defaultRange, commitCharacters } = getCompletionItemDefaults(list, allCommitCharacters);\n        const converted = await async.map(list.items, (item) => {\n            return asCompletionItem(item, commitCharacters, defaultRange, list.itemDefaults?.insertTextMode, list.itemDefaults?.insertTextFormat, list.itemDefaults?.data);\n        }, token);\n        return new code.CompletionList(converted, list.isIncomplete);\n    }\n    function getCompletionItemDefaults(list, allCommitCharacters) {\n        const rangeDefaults = list.itemDefaults?.editRange;\n        const commitCharacters = list.itemDefaults?.commitCharacters ?? allCommitCharacters;\n        return ls.Range.is(rangeDefaults)\n            ? { defaultRange: asRange(rangeDefaults), commitCharacters }\n            : rangeDefaults !== undefined\n                ? { defaultRange: { inserting: asRange(rangeDefaults.insert), replacing: asRange(rangeDefaults.replace) }, commitCharacters }\n                : { defaultRange: undefined, commitCharacters };\n    }\n    function asCompletionItemKind(value) {\n        // Protocol item kind is 1 based, codes item kind is zero based.\n        if (ls.CompletionItemKind.Text <= value && value <= ls.CompletionItemKind.TypeParameter) {\n            return [value - 1, undefined];\n        }\n        return [code.CompletionItemKind.Text, value];\n    }\n    function asCompletionItemTag(tag) {\n        switch (tag) {\n            case ls.CompletionItemTag.Deprecated:\n                return code.CompletionItemTag.Deprecated;\n        }\n        return undefined;\n    }\n    function asCompletionItemTags(tags) {\n        if (tags === undefined || tags === null) {\n            return [];\n        }\n        const result = [];\n        for (const tag of tags) {\n            const converted = asCompletionItemTag(tag);\n            if (converted !== undefined) {\n                result.push(converted);\n            }\n        }\n        return result;\n    }\n    function asCompletionItem(item, defaultCommitCharacters, defaultRange, defaultInsertTextMode, defaultInsertTextFormat, defaultData) {\n        const tags = asCompletionItemTags(item.tags);\n        const label = asCompletionItemLabel(item);\n        const result = new protocolCompletionItem_1.default(label);\n        if (item.detail) {\n            result.detail = item.detail;\n        }\n        if (item.documentation) {\n            result.documentation = asDocumentation(item.documentation);\n            result.documentationFormat = Is.string(item.documentation) ? '$string' : item.documentation.kind;\n        }\n        if (item.filterText) {\n            result.filterText = item.filterText;\n        }\n        const insertText = asCompletionInsertText(item, defaultRange, defaultInsertTextFormat);\n        if (insertText) {\n            result.insertText = insertText.text;\n            result.range = insertText.range;\n            result.fromEdit = insertText.fromEdit;\n        }\n        if (Is.number(item.kind)) {\n            let [itemKind, original] = asCompletionItemKind(item.kind);\n            result.kind = itemKind;\n            if (original) {\n                result.originalItemKind = original;\n            }\n        }\n        if (item.sortText) {\n            result.sortText = item.sortText;\n        }\n        if (item.additionalTextEdits) {\n            result.additionalTextEdits = asTextEditsSync(item.additionalTextEdits);\n        }\n        const commitCharacters = item.commitCharacters !== undefined\n            ? Is.stringArray(item.commitCharacters) ? item.commitCharacters : undefined\n            : defaultCommitCharacters;\n        if (commitCharacters) {\n            result.commitCharacters = commitCharacters.slice();\n        }\n        if (item.command) {\n            result.command = asCommand(item.command);\n        }\n        if (item.deprecated === true || item.deprecated === false) {\n            result.deprecated = item.deprecated;\n            if (item.deprecated === true) {\n                tags.push(code.CompletionItemTag.Deprecated);\n            }\n        }\n        if (item.preselect === true || item.preselect === false) {\n            result.preselect = item.preselect;\n        }\n        const data = item.data ?? defaultData;\n        if (data !== undefined) {\n            result.data = data;\n        }\n        if (tags.length > 0) {\n            result.tags = tags;\n        }\n        const insertTextMode = item.insertTextMode ?? defaultInsertTextMode;\n        if (insertTextMode !== undefined) {\n            result.insertTextMode = insertTextMode;\n            if (insertTextMode === ls.InsertTextMode.asIs) {\n                result.keepWhitespace = true;\n            }\n        }\n        return result;\n    }\n    function asCompletionItemLabel(item) {\n        if (ls.CompletionItemLabelDetails.is(item.labelDetails)) {\n            return {\n                label: item.label,\n                detail: item.labelDetails.detail,\n                description: item.labelDetails.description\n            };\n        }\n        else {\n            return item.label;\n        }\n    }\n    function asCompletionInsertText(item, defaultRange, defaultInsertTextFormat) {\n        const insertTextFormat = item.insertTextFormat ?? defaultInsertTextFormat;\n        if (item.textEdit !== undefined || defaultRange !== undefined) {\n            const [range, newText] = item.textEdit !== undefined\n                ? getCompletionRangeAndText(item.textEdit)\n                : [defaultRange, item.textEditText ?? item.label];\n            if (insertTextFormat === ls.InsertTextFormat.Snippet) {\n                return { text: new code.SnippetString(newText), range: range, fromEdit: true };\n            }\n            else {\n                return { text: newText, range: range, fromEdit: true };\n            }\n        }\n        else if (item.insertText) {\n            if (insertTextFormat === ls.InsertTextFormat.Snippet) {\n                return { text: new code.SnippetString(item.insertText), fromEdit: false };\n            }\n            else {\n                return { text: item.insertText, fromEdit: false };\n            }\n        }\n        else {\n            return undefined;\n        }\n    }\n    function getCompletionRangeAndText(value) {\n        if (ls.InsertReplaceEdit.is(value)) {\n            return [{ inserting: asRange(value.insert), replacing: asRange(value.replace) }, value.newText];\n        }\n        else {\n            return [asRange(value.range), value.newText];\n        }\n    }\n    function asTextEdit(edit) {\n        if (!edit) {\n            return undefined;\n        }\n        return new code.TextEdit(asRange(edit.range), edit.newText);\n    }\n    async function asTextEdits(items, token) {\n        if (!items) {\n            return undefined;\n        }\n        return async.map(items, asTextEdit, token);\n    }\n    function asTextEditsSync(items) {\n        if (!items) {\n            return undefined;\n        }\n        const result = new Array(items.length);\n        for (let i = 0; i < items.length; i++) {\n            result[i] = asTextEdit(items[i]);\n        }\n        return result;\n    }\n    async function asSignatureHelp(item, token) {\n        if (!item) {\n            return undefined;\n        }\n        let result = new code.SignatureHelp();\n        if (Is.number(item.activeSignature)) {\n            result.activeSignature = item.activeSignature;\n        }\n        else {\n            // activeSignature was optional in the past\n            result.activeSignature = 0;\n        }\n        if (Is.number(item.activeParameter)) {\n            result.activeParameter = item.activeParameter;\n        }\n        else {\n            // activeParameter was optional in the past\n            result.activeParameter = 0;\n        }\n        if (item.signatures) {\n            result.signatures = await asSignatureInformations(item.signatures, token);\n        }\n        return result;\n    }\n    async function asSignatureInformations(items, token) {\n        return async.mapAsync(items, asSignatureInformation, token);\n    }\n    async function asSignatureInformation(item, token) {\n        let result = new code.SignatureInformation(item.label);\n        if (item.documentation !== undefined) {\n            result.documentation = asDocumentation(item.documentation);\n        }\n        if (item.parameters !== undefined) {\n            result.parameters = await asParameterInformations(item.parameters, token);\n        }\n        if (item.activeParameter !== undefined) {\n            result.activeParameter = item.activeParameter;\n        }\n        {\n            return result;\n        }\n    }\n    function asParameterInformations(items, token) {\n        return async.map(items, asParameterInformation, token);\n    }\n    function asParameterInformation(item) {\n        let result = new code.ParameterInformation(item.label);\n        if (item.documentation) {\n            result.documentation = asDocumentation(item.documentation);\n        }\n        return result;\n    }\n    function asLocation(item) {\n        return item ? new code.Location(_uriConverter(item.uri), asRange(item.range)) : undefined;\n    }\n    async function asDeclarationResult(item, token) {\n        if (!item) {\n            return undefined;\n        }\n        return asLocationResult(item, token);\n    }\n    async function asDefinitionResult(item, token) {\n        if (!item) {\n            return undefined;\n        }\n        return asLocationResult(item, token);\n    }\n    function asLocationLink(item) {\n        if (!item) {\n            return undefined;\n        }\n        let result = {\n            targetUri: _uriConverter(item.targetUri),\n            targetRange: asRange(item.targetRange),\n            originSelectionRange: asRange(item.originSelectionRange),\n            targetSelectionRange: asRange(item.targetSelectionRange)\n        };\n        if (!result.targetSelectionRange) {\n            throw new Error(`targetSelectionRange must not be undefined or null`);\n        }\n        return result;\n    }\n    async function asLocationResult(item, token) {\n        if (!item) {\n            return undefined;\n        }\n        if (Is.array(item)) {\n            if (item.length === 0) {\n                return [];\n            }\n            else if (ls.LocationLink.is(item[0])) {\n                const links = item;\n                return async.map(links, asLocationLink, token);\n            }\n            else {\n                const locations = item;\n                return async.map(locations, asLocation, token);\n            }\n        }\n        else if (ls.LocationLink.is(item)) {\n            return [asLocationLink(item)];\n        }\n        else {\n            return asLocation(item);\n        }\n    }\n    async function asReferences(values, token) {\n        if (!values) {\n            return undefined;\n        }\n        return async.map(values, asLocation, token);\n    }\n    async function asDocumentHighlights(values, token) {\n        if (!values) {\n            return undefined;\n        }\n        return async.map(values, asDocumentHighlight, token);\n    }\n    function asDocumentHighlight(item) {\n        let result = new code.DocumentHighlight(asRange(item.range));\n        if (Is.number(item.kind)) {\n            result.kind = asDocumentHighlightKind(item.kind);\n        }\n        return result;\n    }\n    function asDocumentHighlightKind(item) {\n        switch (item) {\n            case ls.DocumentHighlightKind.Text:\n                return code.DocumentHighlightKind.Text;\n            case ls.DocumentHighlightKind.Read:\n                return code.DocumentHighlightKind.Read;\n            case ls.DocumentHighlightKind.Write:\n                return code.DocumentHighlightKind.Write;\n        }\n        return code.DocumentHighlightKind.Text;\n    }\n    async function asSymbolInformations(values, token) {\n        if (!values) {\n            return undefined;\n        }\n        return async.map(values, asSymbolInformation, token);\n    }\n    function asSymbolKind(item) {\n        if (item <= ls.SymbolKind.TypeParameter) {\n            // Symbol kind is one based in the protocol and zero based in code.\n            return item - 1;\n        }\n        return code.SymbolKind.Property;\n    }\n    function asSymbolTag(value) {\n        switch (value) {\n            case ls.SymbolTag.Deprecated:\n                return code.SymbolTag.Deprecated;\n            default:\n                return undefined;\n        }\n    }\n    function asSymbolTags(items) {\n        if (items === undefined || items === null) {\n            return undefined;\n        }\n        const result = [];\n        for (const item of items) {\n            const converted = asSymbolTag(item);\n            if (converted !== undefined) {\n                result.push(converted);\n            }\n        }\n        return result.length === 0 ? undefined : result;\n    }\n    function asSymbolInformation(item) {\n        const data = item.data;\n        const location = item.location;\n        const result = location.range === undefined || data !== undefined\n            ? new protocolWorkspaceSymbol_1.default(item.name, asSymbolKind(item.kind), item.containerName ?? '', location.range === undefined ? _uriConverter(location.uri) : new code.Location(_uriConverter(item.location.uri), asRange(location.range)), data)\n            : new code.SymbolInformation(item.name, asSymbolKind(item.kind), item.containerName ?? '', new code.Location(_uriConverter(item.location.uri), asRange(location.range)));\n        fillTags(result, item);\n        return result;\n    }\n    async function asDocumentSymbols(values, token) {\n        if (values === undefined || values === null) {\n            return undefined;\n        }\n        return async.map(values, asDocumentSymbol, token);\n    }\n    function asDocumentSymbol(value) {\n        let result = new code.DocumentSymbol(value.name, value.detail || '', asSymbolKind(value.kind), asRange(value.range), asRange(value.selectionRange));\n        fillTags(result, value);\n        if (value.children !== undefined && value.children.length > 0) {\n            let children = [];\n            for (let child of value.children) {\n                children.push(asDocumentSymbol(child));\n            }\n            result.children = children;\n        }\n        return result;\n    }\n    function fillTags(result, value) {\n        result.tags = asSymbolTags(value.tags);\n        if (value.deprecated) {\n            if (!result.tags) {\n                result.tags = [code.SymbolTag.Deprecated];\n            }\n            else {\n                if (!result.tags.includes(code.SymbolTag.Deprecated)) {\n                    result.tags = result.tags.concat(code.SymbolTag.Deprecated);\n                }\n            }\n        }\n    }\n    function asCommand(item) {\n        let result = { title: item.title, command: item.command };\n        if (item.arguments) {\n            result.arguments = item.arguments;\n        }\n        return result;\n    }\n    async function asCommands(items, token) {\n        if (!items) {\n            return undefined;\n        }\n        return async.map(items, asCommand, token);\n    }\n    const kindMapping = new Map();\n    kindMapping.set(ls.CodeActionKind.Empty, code.CodeActionKind.Empty);\n    kindMapping.set(ls.CodeActionKind.QuickFix, code.CodeActionKind.QuickFix);\n    kindMapping.set(ls.CodeActionKind.Refactor, code.CodeActionKind.Refactor);\n    kindMapping.set(ls.CodeActionKind.RefactorExtract, code.CodeActionKind.RefactorExtract);\n    kindMapping.set(ls.CodeActionKind.RefactorInline, code.CodeActionKind.RefactorInline);\n    kindMapping.set(ls.CodeActionKind.RefactorRewrite, code.CodeActionKind.RefactorRewrite);\n    kindMapping.set(ls.CodeActionKind.Source, code.CodeActionKind.Source);\n    kindMapping.set(ls.CodeActionKind.SourceOrganizeImports, code.CodeActionKind.SourceOrganizeImports);\n    function asCodeActionKind(item) {\n        if (item === undefined || item === null) {\n            return undefined;\n        }\n        let result = kindMapping.get(item);\n        if (result) {\n            return result;\n        }\n        let parts = item.split('.');\n        result = code.CodeActionKind.Empty;\n        for (let part of parts) {\n            result = result.append(part);\n        }\n        return result;\n    }\n    function asCodeActionKinds(items) {\n        if (items === undefined || items === null) {\n            return undefined;\n        }\n        return items.map(kind => asCodeActionKind(kind));\n    }\n    async function asCodeAction(item, token) {\n        if (item === undefined || item === null) {\n            return undefined;\n        }\n        let result = new protocolCodeAction_1.default(item.title, item.data);\n        if (item.kind !== undefined) {\n            result.kind = asCodeActionKind(item.kind);\n        }\n        if (item.diagnostics !== undefined) {\n            result.diagnostics = asDiagnosticsSync(item.diagnostics);\n        }\n        if (item.edit !== undefined) {\n            result.edit = await asWorkspaceEdit(item.edit, token);\n        }\n        if (item.command !== undefined) {\n            result.command = asCommand(item.command);\n        }\n        if (item.isPreferred !== undefined) {\n            result.isPreferred = item.isPreferred;\n        }\n        if (item.disabled !== undefined) {\n            result.disabled = { reason: item.disabled.reason };\n        }\n        return result;\n    }\n    function asCodeActionResult(items, token) {\n        return async.mapAsync(items, async (item) => {\n            if (ls.Command.is(item)) {\n                return asCommand(item);\n            }\n            else {\n                return asCodeAction(item, token);\n            }\n        }, token);\n    }\n    function asCodeLens(item) {\n        if (!item) {\n            return undefined;\n        }\n        let result = new protocolCodeLens_1.default(asRange(item.range));\n        if (item.command) {\n            result.command = asCommand(item.command);\n        }\n        if (item.data !== undefined && item.data !== null) {\n            result.data = item.data;\n        }\n        return result;\n    }\n    async function asCodeLenses(items, token) {\n        if (!items) {\n            return undefined;\n        }\n        return async.map(items, asCodeLens, token);\n    }\n    async function asWorkspaceEdit(item, token) {\n        if (!item) {\n            return undefined;\n        }\n        const sharedMetadata = new Map();\n        if (item.changeAnnotations !== undefined) {\n            const changeAnnotations = item.changeAnnotations;\n            await async.forEach(Object.keys(changeAnnotations), (key) => {\n                const metaData = asWorkspaceEditEntryMetadata(changeAnnotations[key]);\n                sharedMetadata.set(key, metaData);\n            }, token);\n        }\n        const asMetadata = (annotation) => {\n            if (annotation === undefined) {\n                return undefined;\n            }\n            else {\n                return sharedMetadata.get(annotation);\n            }\n        };\n        const result = new code.WorkspaceEdit();\n        if (item.documentChanges) {\n            const documentChanges = item.documentChanges;\n            await async.forEach(documentChanges, (change) => {\n                if (ls.CreateFile.is(change)) {\n                    result.createFile(_uriConverter(change.uri), change.options, asMetadata(change.annotationId));\n                }\n                else if (ls.RenameFile.is(change)) {\n                    result.renameFile(_uriConverter(change.oldUri), _uriConverter(change.newUri), change.options, asMetadata(change.annotationId));\n                }\n                else if (ls.DeleteFile.is(change)) {\n                    result.deleteFile(_uriConverter(change.uri), change.options, asMetadata(change.annotationId));\n                }\n                else if (ls.TextDocumentEdit.is(change)) {\n                    const uri = _uriConverter(change.textDocument.uri);\n                    for (const edit of change.edits) {\n                        if (ls.AnnotatedTextEdit.is(edit)) {\n                            result.replace(uri, asRange(edit.range), edit.newText, asMetadata(edit.annotationId));\n                        }\n                        else {\n                            result.replace(uri, asRange(edit.range), edit.newText);\n                        }\n                    }\n                }\n                else {\n                    throw new Error(`Unknown workspace edit change received:\\n${JSON.stringify(change, undefined, 4)}`);\n                }\n            }, token);\n        }\n        else if (item.changes) {\n            const changes = item.changes;\n            await async.forEach(Object.keys(changes), (key) => {\n                result.set(_uriConverter(key), asTextEditsSync(changes[key]));\n            }, token);\n        }\n        return result;\n    }\n    function asWorkspaceEditEntryMetadata(annotation) {\n        if (annotation === undefined) {\n            return undefined;\n        }\n        return { label: annotation.label, needsConfirmation: !!annotation.needsConfirmation, description: annotation.description };\n    }\n    function asDocumentLink(item) {\n        let range = asRange(item.range);\n        let target = item.target ? asUri(item.target) : undefined;\n        // target must be optional in DocumentLink\n        let link = new protocolDocumentLink_1.default(range, target);\n        if (item.tooltip !== undefined) {\n            link.tooltip = item.tooltip;\n        }\n        if (item.data !== undefined && item.data !== null) {\n            link.data = item.data;\n        }\n        return link;\n    }\n    async function asDocumentLinks(items, token) {\n        if (!items) {\n            return undefined;\n        }\n        return async.map(items, asDocumentLink, token);\n    }\n    function asColor(color) {\n        return new code.Color(color.red, color.green, color.blue, color.alpha);\n    }\n    function asColorInformation(ci) {\n        return new code.ColorInformation(asRange(ci.range), asColor(ci.color));\n    }\n    async function asColorInformations(colorInformation, token) {\n        if (!colorInformation) {\n            return undefined;\n        }\n        return async.map(colorInformation, asColorInformation, token);\n    }\n    function asColorPresentation(cp) {\n        let presentation = new code.ColorPresentation(cp.label);\n        presentation.additionalTextEdits = asTextEditsSync(cp.additionalTextEdits);\n        if (cp.textEdit) {\n            presentation.textEdit = asTextEdit(cp.textEdit);\n        }\n        return presentation;\n    }\n    async function asColorPresentations(colorPresentations, token) {\n        if (!colorPresentations) {\n            return undefined;\n        }\n        return async.map(colorPresentations, asColorPresentation, token);\n    }\n    function asFoldingRangeKind(kind) {\n        if (kind) {\n            switch (kind) {\n                case ls.FoldingRangeKind.Comment:\n                    return code.FoldingRangeKind.Comment;\n                case ls.FoldingRangeKind.Imports:\n                    return code.FoldingRangeKind.Imports;\n                case ls.FoldingRangeKind.Region:\n                    return code.FoldingRangeKind.Region;\n            }\n        }\n        return undefined;\n    }\n    function asFoldingRange(r) {\n        return new code.FoldingRange(r.startLine, r.endLine, asFoldingRangeKind(r.kind));\n    }\n    async function asFoldingRanges(foldingRanges, token) {\n        if (!foldingRanges) {\n            return undefined;\n        }\n        return async.map(foldingRanges, asFoldingRange, token);\n    }\n    function asSelectionRange(selectionRange) {\n        return new code.SelectionRange(asRange(selectionRange.range), selectionRange.parent ? asSelectionRange(selectionRange.parent) : undefined);\n    }\n    async function asSelectionRanges(selectionRanges, token) {\n        if (!Array.isArray(selectionRanges)) {\n            return [];\n        }\n        return async.map(selectionRanges, asSelectionRange, token);\n    }\n    function asInlineValue(inlineValue) {\n        if (ls.InlineValueText.is(inlineValue)) {\n            return new code.InlineValueText(asRange(inlineValue.range), inlineValue.text);\n        }\n        else if (ls.InlineValueVariableLookup.is(inlineValue)) {\n            return new code.InlineValueVariableLookup(asRange(inlineValue.range), inlineValue.variableName, inlineValue.caseSensitiveLookup);\n        }\n        else {\n            return new code.InlineValueEvaluatableExpression(asRange(inlineValue.range), inlineValue.expression);\n        }\n    }\n    async function asInlineValues(inlineValues, token) {\n        if (!Array.isArray(inlineValues)) {\n            return [];\n        }\n        return async.map(inlineValues, asInlineValue, token);\n    }\n    async function asInlayHint(value, token) {\n        const label = typeof value.label === 'string'\n            ? value.label\n            : await async.map(value.label, asInlayHintLabelPart, token);\n        const result = new protocolInlayHint_1.default(asPosition(value.position), label);\n        if (value.kind !== undefined) {\n            result.kind = value.kind;\n        }\n        if (value.textEdits !== undefined) {\n            result.textEdits = await asTextEdits(value.textEdits, token);\n        }\n        if (value.tooltip !== undefined) {\n            result.tooltip = asTooltip(value.tooltip);\n        }\n        if (value.paddingLeft !== undefined) {\n            result.paddingLeft = value.paddingLeft;\n        }\n        if (value.paddingRight !== undefined) {\n            result.paddingRight = value.paddingRight;\n        }\n        if (value.data !== undefined) {\n            result.data = value.data;\n        }\n        return result;\n    }\n    function asInlayHintLabelPart(part) {\n        const result = new code.InlayHintLabelPart(part.value);\n        if (part.location !== undefined) {\n            result.location = asLocation(part.location);\n        }\n        if (part.tooltip !== undefined) {\n            result.tooltip = asTooltip(part.tooltip);\n        }\n        if (part.command !== undefined) {\n            result.command = asCommand(part.command);\n        }\n        return result;\n    }\n    function asTooltip(value) {\n        if (typeof value === 'string') {\n            return value;\n        }\n        return asMarkdownString(value);\n    }\n    async function asInlayHints(values, token) {\n        if (!Array.isArray(values)) {\n            return undefined;\n        }\n        return async.mapAsync(values, asInlayHint, token);\n    }\n    function asCallHierarchyItem(item) {\n        if (item === null) {\n            return undefined;\n        }\n        const result = new protocolCallHierarchyItem_1.default(asSymbolKind(item.kind), item.name, item.detail || '', asUri(item.uri), asRange(item.range), asRange(item.selectionRange), item.data);\n        if (item.tags !== undefined) {\n            result.tags = asSymbolTags(item.tags);\n        }\n        return result;\n    }\n    async function asCallHierarchyItems(items, token) {\n        if (items === null) {\n            return undefined;\n        }\n        return async.map(items, asCallHierarchyItem, token);\n    }\n    async function asCallHierarchyIncomingCall(item, token) {\n        return new code.CallHierarchyIncomingCall(asCallHierarchyItem(item.from), await asRanges(item.fromRanges, token));\n    }\n    async function asCallHierarchyIncomingCalls(items, token) {\n        if (items === null) {\n            return undefined;\n        }\n        return async.mapAsync(items, asCallHierarchyIncomingCall, token);\n    }\n    async function asCallHierarchyOutgoingCall(item, token) {\n        return new code.CallHierarchyOutgoingCall(asCallHierarchyItem(item.to), await asRanges(item.fromRanges, token));\n    }\n    async function asCallHierarchyOutgoingCalls(items, token) {\n        if (items === null) {\n            return undefined;\n        }\n        return async.mapAsync(items, asCallHierarchyOutgoingCall, token);\n    }\n    async function asSemanticTokens(value, _token) {\n        if (value === undefined || value === null) {\n            return undefined;\n        }\n        return new code.SemanticTokens(new Uint32Array(value.data), value.resultId);\n    }\n    function asSemanticTokensEdit(value) {\n        return new code.SemanticTokensEdit(value.start, value.deleteCount, value.data !== undefined ? new Uint32Array(value.data) : undefined);\n    }\n    async function asSemanticTokensEdits(value, _token) {\n        if (value === undefined || value === null) {\n            return undefined;\n        }\n        return new code.SemanticTokensEdits(value.edits.map(asSemanticTokensEdit), value.resultId);\n    }\n    function asSemanticTokensLegend(value) {\n        return value;\n    }\n    async function asLinkedEditingRanges(value, token) {\n        if (value === null || value === undefined) {\n            return undefined;\n        }\n        return new code.LinkedEditingRanges(await asRanges(value.ranges, token), asRegularExpression(value.wordPattern));\n    }\n    function asRegularExpression(value) {\n        if (value === null || value === undefined) {\n            return undefined;\n        }\n        return new RegExp(value);\n    }\n    function asTypeHierarchyItem(item) {\n        if (item === null) {\n            return undefined;\n        }\n        let result = new protocolTypeHierarchyItem_1.default(asSymbolKind(item.kind), item.name, item.detail || '', asUri(item.uri), asRange(item.range), asRange(item.selectionRange), item.data);\n        if (item.tags !== undefined) {\n            result.tags = asSymbolTags(item.tags);\n        }\n        return result;\n    }\n    async function asTypeHierarchyItems(items, token) {\n        if (items === null) {\n            return undefined;\n        }\n        return async.map(items, asTypeHierarchyItem, token);\n    }\n    function asGlobPattern(pattern) {\n        if (Is.string(pattern)) {\n            return pattern;\n        }\n        if (ls.RelativePattern.is(pattern)) {\n            if (ls.URI.is(pattern.baseUri)) {\n                return new code.RelativePattern(asUri(pattern.baseUri), pattern.pattern);\n            }\n            else if (ls.WorkspaceFolder.is(pattern.baseUri)) {\n                const workspaceFolder = code.workspace.getWorkspaceFolder(asUri(pattern.baseUri.uri));\n                return workspaceFolder !== undefined ? new code.RelativePattern(workspaceFolder, pattern.pattern) : undefined;\n            }\n        }\n        return undefined;\n    }\n    async function asInlineCompletionResult(value, token) {\n        if (!value) {\n            return undefined;\n        }\n        if (Array.isArray(value)) {\n            return async.map(value, (item) => asInlineCompletionItem(item), token);\n        }\n        const list = value;\n        const converted = await async.map(list.items, (item) => {\n            return asInlineCompletionItem(item);\n        }, token);\n        return new code.InlineCompletionList(converted);\n    }\n    function asInlineCompletionItem(item) {\n        let insertText;\n        if (typeof item.insertText === 'string') {\n            insertText = item.insertText;\n        }\n        else {\n            insertText = new code.SnippetString(item.insertText.value);\n        }\n        let command = undefined;\n        if (item.command) {\n            command = asCommand(item.command);\n        }\n        const inlineCompletionItem = new code.InlineCompletionItem(insertText, asRange(item.range), command);\n        if (item.filterText) {\n            inlineCompletionItem.filterText = item.filterText;\n        }\n        return inlineCompletionItem;\n    }\n    return {\n        asUri,\n        asDocumentSelector,\n        asDiagnostics,\n        asDiagnostic,\n        asRange,\n        asRanges,\n        asPosition,\n        asDiagnosticSeverity,\n        asDiagnosticTag,\n        asHover,\n        asCompletionResult,\n        asCompletionItem,\n        asTextEdit,\n        asTextEdits,\n        asSignatureHelp,\n        asSignatureInformations,\n        asSignatureInformation,\n        asParameterInformations,\n        asParameterInformation,\n        asDeclarationResult,\n        asDefinitionResult,\n        asLocation,\n        asReferences,\n        asDocumentHighlights,\n        asDocumentHighlight,\n        asDocumentHighlightKind,\n        asSymbolKind,\n        asSymbolTag,\n        asSymbolTags,\n        asSymbolInformations,\n        asSymbolInformation,\n        asDocumentSymbols,\n        asDocumentSymbol,\n        asCommand,\n        asCommands,\n        asCodeAction,\n        asCodeActionKind,\n        asCodeActionKinds,\n        asCodeActionResult,\n        asCodeLens,\n        asCodeLenses,\n        asWorkspaceEdit,\n        asDocumentLink,\n        asDocumentLinks,\n        asFoldingRangeKind,\n        asFoldingRange,\n        asFoldingRanges,\n        asColor,\n        asColorInformation,\n        asColorInformations,\n        asColorPresentation,\n        asColorPresentations,\n        asSelectionRange,\n        asSelectionRanges,\n        asInlineValue,\n        asInlineValues,\n        asInlayHint,\n        asInlayHints,\n        asSemanticTokensLegend,\n        asSemanticTokens,\n        asSemanticTokensEdit,\n        asSemanticTokensEdits,\n        asCallHierarchyItem,\n        asCallHierarchyItems,\n        asCallHierarchyIncomingCall,\n        asCallHierarchyIncomingCalls,\n        asCallHierarchyOutgoingCall,\n        asCallHierarchyOutgoingCalls,\n        asLinkedEditingRanges: asLinkedEditingRanges,\n        asTypeHierarchyItem,\n        asTypeHierarchyItems,\n        asGlobPattern,\n        asInlineCompletionResult,\n        asInlineCompletionItem\n    };\n}\nexports.createConverter = createConverter;\n", "\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.generateUuid = exports.parse = exports.isUUID = exports.v4 = exports.empty = void 0;\nclass ValueUUID {\n    constructor(_value) {\n        this._value = _value;\n        // empty\n    }\n    asHex() {\n        return this._value;\n    }\n    equals(other) {\n        return this.asHex() === other.asHex();\n    }\n}\nclass V4UUID extends ValueUUID {\n    static _oneOf(array) {\n        return array[Math.floor(array.length * Math.random())];\n    }\n    static _randomHex() {\n        return V4UUID._oneOf(V4UUID._chars);\n    }\n    constructor() {\n        super([\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            '-',\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            '-',\n            '4',\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            '-',\n            V4UUID._oneOf(V4UUID._timeHighBits),\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            '-',\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n        ].join(''));\n    }\n}\nV4UUID._chars = ['0', '1', '2', '3', '4', '5', '6', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f'];\nV4UUID._timeHighBits = ['8', '9', 'a', 'b'];\n/**\n * An empty UUID that contains only zeros.\n */\nexports.empty = new ValueUUID('00000000-0000-0000-0000-000000000000');\nfunction v4() {\n    return new V4UUID();\n}\nexports.v4 = v4;\nconst _UUIDPattern = /^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/i;\nfunction isUUID(value) {\n    return _UUIDPattern.test(value);\n}\nexports.isUUID = isUUID;\n/**\n * Parses a UUID that is of the format xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx.\n * @param value A uuid string.\n */\nfunction parse(value) {\n    if (!isUUID(value)) {\n        throw new Error('invalid uuid');\n    }\n    return new ValueUUID(value);\n}\nexports.parse = parse;\nfunction generateUuid() {\n    return v4().asHex();\n}\nexports.generateUuid = generateUuid;\n", "\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ProgressPart = void 0;\nconst vscode_1 = require(\"vscode\");\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\nconst Is = require(\"./utils/is\");\nclass ProgressPart {\n    constructor(_client, _token, done) {\n        this._client = _client;\n        this._token = _token;\n        this._reported = 0;\n        this._infinite = false;\n        this._lspProgressDisposable = this._client.onProgress(vscode_languageserver_protocol_1.WorkDoneProgress.type, this._token, (value) => {\n            switch (value.kind) {\n                case 'begin':\n                    this.begin(value);\n                    break;\n                case 'report':\n                    this.report(value);\n                    break;\n                case 'end':\n                    this.done();\n                    done && done(this);\n                    break;\n            }\n        });\n    }\n    begin(params) {\n        this._infinite = params.percentage === undefined;\n        // the progress as already been marked as done / canceled. Ignore begin call\n        if (this._lspProgressDisposable === undefined) {\n            return;\n        }\n        // Since we don't use commands this will be a silent window progress with a hidden notification.\n        void vscode_1.window.withProgress({ location: vscode_1.ProgressLocation.Window, cancellable: params.cancellable, title: params.title }, async (progress, cancellationToken) => {\n            // the progress as already been marked as done / canceled. Ignore begin call\n            if (this._lspProgressDisposable === undefined) {\n                return;\n            }\n            this._progress = progress;\n            this._cancellationToken = cancellationToken;\n            this._tokenDisposable = this._cancellationToken.onCancellationRequested(() => {\n                this._client.sendNotification(vscode_languageserver_protocol_1.WorkDoneProgressCancelNotification.type, { token: this._token });\n            });\n            this.report(params);\n            return new Promise((resolve, reject) => {\n                this._resolve = resolve;\n                this._reject = reject;\n            });\n        });\n    }\n    report(params) {\n        if (this._infinite && Is.string(params.message)) {\n            this._progress !== undefined && this._progress.report({ message: params.message });\n        }\n        else if (Is.number(params.percentage)) {\n            const percentage = Math.max(0, Math.min(params.percentage, 100));\n            const delta = Math.max(0, percentage - this._reported);\n            this._reported += delta;\n            this._progress !== undefined && this._progress.report({ message: params.message, increment: delta });\n        }\n    }\n    cancel() {\n        this.cleanup();\n        if (this._reject !== undefined) {\n            this._reject();\n            this._resolve = undefined;\n            this._reject = undefined;\n        }\n    }\n    done() {\n        this.cleanup();\n        if (this._resolve !== undefined) {\n            this._resolve();\n            this._resolve = undefined;\n            this._reject = undefined;\n        }\n    }\n    cleanup() {\n        if (this._lspProgressDisposable !== undefined) {\n            this._lspProgressDisposable.dispose();\n            this._lspProgressDisposable = undefined;\n        }\n        if (this._tokenDisposable !== undefined) {\n            this._tokenDisposable.dispose();\n            this._tokenDisposable = undefined;\n        }\n        this._progress = undefined;\n        this._cancellationToken = undefined;\n    }\n}\nexports.ProgressPart = ProgressPart;\n", "\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WorkspaceFeature = exports.TextDocumentLanguageFeature = exports.TextDocumentEventFeature = exports.DynamicDocumentFeature = exports.DynamicFeature = exports.StaticFeature = exports.ensure = exports.LSPCancellationError = void 0;\nconst vscode_1 = require(\"vscode\");\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\nconst Is = require(\"./utils/is\");\nconst UUID = require(\"./utils/uuid\");\nclass LSPCancellationError extends vscode_1.CancellationError {\n    constructor(data) {\n        super();\n        this.data = data;\n    }\n}\nexports.LSPCancellationError = LSPCancellationError;\nfunction ensure(target, key) {\n    if (target[key] === undefined) {\n        target[key] = {};\n    }\n    return target[key];\n}\nexports.ensure = ensure;\nvar StaticFeature;\n(function (StaticFeature) {\n    function is(value) {\n        const candidate = value;\n        return candidate !== undefined && candidate !== null &&\n            Is.func(candidate.fillClientCapabilities) && Is.func(candidate.initialize) && Is.func(candidate.getState) && Is.func(candidate.clear) &&\n            (candidate.fillInitializeParams === undefined || Is.func(candidate.fillInitializeParams));\n    }\n    StaticFeature.is = is;\n})(StaticFeature || (exports.StaticFeature = StaticFeature = {}));\nvar DynamicFeature;\n(function (DynamicFeature) {\n    function is(value) {\n        const candidate = value;\n        return candidate !== undefined && candidate !== null &&\n            Is.func(candidate.fillClientCapabilities) && Is.func(candidate.initialize) && Is.func(candidate.getState) && Is.func(candidate.clear) &&\n            (candidate.fillInitializeParams === undefined || Is.func(candidate.fillInitializeParams)) && Is.func(candidate.register) &&\n            Is.func(candidate.unregister) && candidate.registrationType !== undefined;\n    }\n    DynamicFeature.is = is;\n})(DynamicFeature || (exports.DynamicFeature = DynamicFeature = {}));\n/**\n * An abstract dynamic feature implementation that operates on documents (e.g. text\n * documents or notebooks).\n */\nclass DynamicDocumentFeature {\n    constructor(client) {\n        this._client = client;\n    }\n    /**\n     * Returns the state the feature is in.\n     */\n    getState() {\n        const selectors = this.getDocumentSelectors();\n        let count = 0;\n        for (const selector of selectors) {\n            count++;\n            for (const document of vscode_1.workspace.textDocuments) {\n                if (vscode_1.languages.match(selector, document) > 0) {\n                    return { kind: 'document', id: this.registrationType.method, registrations: true, matches: true };\n                }\n            }\n        }\n        const registrations = count > 0;\n        return { kind: 'document', id: this.registrationType.method, registrations, matches: false };\n    }\n}\nexports.DynamicDocumentFeature = DynamicDocumentFeature;\n/**\n * An abstract base class to implement features that react to events\n * emitted from text documents.\n */\nclass TextDocumentEventFeature extends DynamicDocumentFeature {\n    static textDocumentFilter(selectors, textDocument) {\n        for (const selector of selectors) {\n            if (vscode_1.languages.match(selector, textDocument) > 0) {\n                return true;\n            }\n        }\n        return false;\n    }\n    constructor(client, event, type, middleware, createParams, textDocument, selectorFilter) {\n        super(client);\n        this._event = event;\n        this._type = type;\n        this._middleware = middleware;\n        this._createParams = createParams;\n        this._textDocument = textDocument;\n        this._selectorFilter = selectorFilter;\n        this._selectors = new Map();\n        this._onNotificationSent = new vscode_1.EventEmitter();\n    }\n    getStateInfo() {\n        return [this._selectors.values(), false];\n    }\n    getDocumentSelectors() {\n        return this._selectors.values();\n    }\n    register(data) {\n        if (!data.registerOptions.documentSelector) {\n            return;\n        }\n        if (!this._listener) {\n            this._listener = this._event((data) => {\n                this.callback(data).catch((error) => {\n                    this._client.error(`Sending document notification ${this._type.method} failed.`, error);\n                });\n            });\n        }\n        this._selectors.set(data.id, this._client.protocol2CodeConverter.asDocumentSelector(data.registerOptions.documentSelector));\n    }\n    async callback(data) {\n        const doSend = async (data) => {\n            const params = this._createParams(data);\n            await this._client.sendNotification(this._type, params);\n            this.notificationSent(this.getTextDocument(data), this._type, params);\n        };\n        if (this.matches(data)) {\n            const middleware = this._middleware();\n            return middleware ? middleware(data, (data) => doSend(data)) : doSend(data);\n        }\n    }\n    matches(data) {\n        if (this._client.hasDedicatedTextSynchronizationFeature(this._textDocument(data))) {\n            return false;\n        }\n        return !this._selectorFilter || this._selectorFilter(this._selectors.values(), data);\n    }\n    get onNotificationSent() {\n        return this._onNotificationSent.event;\n    }\n    notificationSent(textDocument, type, params) {\n        this._onNotificationSent.fire({ textDocument, type, params });\n    }\n    unregister(id) {\n        this._selectors.delete(id);\n        if (this._selectors.size === 0 && this._listener) {\n            this._listener.dispose();\n            this._listener = undefined;\n        }\n    }\n    clear() {\n        this._selectors.clear();\n        this._onNotificationSent.dispose();\n        if (this._listener) {\n            this._listener.dispose();\n            this._listener = undefined;\n        }\n    }\n    getProvider(document) {\n        for (const selector of this._selectors.values()) {\n            if (vscode_1.languages.match(selector, document) > 0) {\n                return {\n                    send: (data) => {\n                        return this.callback(data);\n                    }\n                };\n            }\n        }\n        return undefined;\n    }\n}\nexports.TextDocumentEventFeature = TextDocumentEventFeature;\n/**\n * A abstract feature implementation that registers language providers\n * for text documents using a given document selector.\n */\nclass TextDocumentLanguageFeature extends DynamicDocumentFeature {\n    constructor(client, registrationType) {\n        super(client);\n        this._registrationType = registrationType;\n        this._registrations = new Map();\n    }\n    *getDocumentSelectors() {\n        for (const registration of this._registrations.values()) {\n            const selector = registration.data.registerOptions.documentSelector;\n            if (selector === null) {\n                continue;\n            }\n            yield this._client.protocol2CodeConverter.asDocumentSelector(selector);\n        }\n    }\n    get registrationType() {\n        return this._registrationType;\n    }\n    register(data) {\n        if (!data.registerOptions.documentSelector) {\n            return;\n        }\n        let registration = this.registerLanguageProvider(data.registerOptions, data.id);\n        this._registrations.set(data.id, { disposable: registration[0], data, provider: registration[1] });\n    }\n    unregister(id) {\n        let registration = this._registrations.get(id);\n        if (registration !== undefined) {\n            registration.disposable.dispose();\n        }\n    }\n    clear() {\n        this._registrations.forEach((value) => {\n            value.disposable.dispose();\n        });\n        this._registrations.clear();\n    }\n    getRegistration(documentSelector, capability) {\n        if (!capability) {\n            return [undefined, undefined];\n        }\n        else if (vscode_languageserver_protocol_1.TextDocumentRegistrationOptions.is(capability)) {\n            const id = vscode_languageserver_protocol_1.StaticRegistrationOptions.hasId(capability) ? capability.id : UUID.generateUuid();\n            const selector = capability.documentSelector ?? documentSelector;\n            if (selector) {\n                return [id, Object.assign({}, capability, { documentSelector: selector })];\n            }\n        }\n        else if (Is.boolean(capability) && capability === true || vscode_languageserver_protocol_1.WorkDoneProgressOptions.is(capability)) {\n            if (!documentSelector) {\n                return [undefined, undefined];\n            }\n            const options = (Is.boolean(capability) && capability === true ? { documentSelector } : Object.assign({}, capability, { documentSelector }));\n            return [UUID.generateUuid(), options];\n        }\n        return [undefined, undefined];\n    }\n    getRegistrationOptions(documentSelector, capability) {\n        if (!documentSelector || !capability) {\n            return undefined;\n        }\n        return (Is.boolean(capability) && capability === true ? { documentSelector } : Object.assign({}, capability, { documentSelector }));\n    }\n    getProvider(textDocument) {\n        for (const registration of this._registrations.values()) {\n            let selector = registration.data.registerOptions.documentSelector;\n            if (selector !== null && vscode_1.languages.match(this._client.protocol2CodeConverter.asDocumentSelector(selector), textDocument) > 0) {\n                return registration.provider;\n            }\n        }\n        return undefined;\n    }\n    getAllProviders() {\n        const result = [];\n        for (const item of this._registrations.values()) {\n            result.push(item.provider);\n        }\n        return result;\n    }\n}\nexports.TextDocumentLanguageFeature = TextDocumentLanguageFeature;\nclass WorkspaceFeature {\n    constructor(client, registrationType) {\n        this._client = client;\n        this._registrationType = registrationType;\n        this._registrations = new Map();\n    }\n    getState() {\n        const registrations = this._registrations.size > 0;\n        return { kind: 'workspace', id: this._registrationType.method, registrations };\n    }\n    get registrationType() {\n        return this._registrationType;\n    }\n    register(data) {\n        const registration = this.registerLanguageProvider(data.registerOptions);\n        this._registrations.set(data.id, { disposable: registration[0], provider: registration[1] });\n    }\n    unregister(id) {\n        let registration = this._registrations.get(id);\n        if (registration !== undefined) {\n            registration.disposable.dispose();\n        }\n    }\n    clear() {\n        this._registrations.forEach((registration) => {\n            registration.disposable.dispose();\n        });\n        this._registrations.clear();\n    }\n    getProviders() {\n        const result = [];\n        for (const registration of this._registrations.values()) {\n            result.push(registration.provider);\n        }\n        return result;\n    }\n}\nexports.WorkspaceFeature = WorkspaceFeature;\n", "const isWindows = typeof process === 'object' &&\n  process &&\n  process.platform === 'win32'\nmodule.exports = isWindows ? { sep: '\\\\' } : { sep: '/' }\n", "'use strict';\nmodule.exports = balanced;\nfunction balanced(a, b, str) {\n  if (a instanceof RegExp) a = maybeMatch(a, str);\n  if (b instanceof RegExp) b = maybeMatch(b, str);\n\n  var r = range(a, b, str);\n\n  return r && {\n    start: r[0],\n    end: r[1],\n    pre: str.slice(0, r[0]),\n    body: str.slice(r[0] + a.length, r[1]),\n    post: str.slice(r[1] + b.length)\n  };\n}\n\nfunction maybeMatch(reg, str) {\n  var m = str.match(reg);\n  return m ? m[0] : null;\n}\n\nbalanced.range = range;\nfunction range(a, b, str) {\n  var begs, beg, left, right, result;\n  var ai = str.indexOf(a);\n  var bi = str.indexOf(b, ai + 1);\n  var i = ai;\n\n  if (ai >= 0 && bi > 0) {\n    if(a===b) {\n      return [ai, bi];\n    }\n    begs = [];\n    left = str.length;\n\n    while (i >= 0 && !result) {\n      if (i == ai) {\n        begs.push(i);\n        ai = str.indexOf(a, i + 1);\n      } else if (begs.length == 1) {\n        result = [ begs.pop(), bi ];\n      } else {\n        beg = begs.pop();\n        if (beg < left) {\n          left = beg;\n          right = bi;\n        }\n\n        bi = str.indexOf(b, i + 1);\n      }\n\n      i = ai < bi && ai >= 0 ? ai : bi;\n    }\n\n    if (begs.length) {\n      result = [ left, right ];\n    }\n  }\n\n  return result;\n}\n", "var balanced = require('balanced-match');\n\nmodule.exports = expandTop;\n\nvar escSlash = '\\0SLASH'+Math.random()+'\\0';\nvar escOpen = '\\0OPEN'+Math.random()+'\\0';\nvar escClose = '\\0CLOSE'+Math.random()+'\\0';\nvar escComma = '\\0COMMA'+Math.random()+'\\0';\nvar escPeriod = '\\0PERIOD'+Math.random()+'\\0';\n\nfunction numeric(str) {\n  return parseInt(str, 10) == str\n    ? parseInt(str, 10)\n    : str.charCodeAt(0);\n}\n\nfunction escapeBraces(str) {\n  return str.split('\\\\\\\\').join(escSlash)\n            .split('\\\\{').join(escOpen)\n            .split('\\\\}').join(escClose)\n            .split('\\\\,').join(escComma)\n            .split('\\\\.').join(escPeriod);\n}\n\nfunction unescapeBraces(str) {\n  return str.split(escSlash).join('\\\\')\n            .split(escOpen).join('{')\n            .split(escClose).join('}')\n            .split(escComma).join(',')\n            .split(escPeriod).join('.');\n}\n\n\n// Basically just str.split(\",\"), but handling cases\n// where we have nested braced sections, which should be\n// treated as individual members, like {a,{b,c},d}\nfunction parseCommaParts(str) {\n  if (!str)\n    return [''];\n\n  var parts = [];\n  var m = balanced('{', '}', str);\n\n  if (!m)\n    return str.split(',');\n\n  var pre = m.pre;\n  var body = m.body;\n  var post = m.post;\n  var p = pre.split(',');\n\n  p[p.length-1] += '{' + body + '}';\n  var postParts = parseCommaParts(post);\n  if (post.length) {\n    p[p.length-1] += postParts.shift();\n    p.push.apply(p, postParts);\n  }\n\n  parts.push.apply(parts, p);\n\n  return parts;\n}\n\nfunction expandTop(str) {\n  if (!str)\n    return [];\n\n  // I don't know why Bash 4.3 does this, but it does.\n  // Anything starting with {} will have the first two bytes preserved\n  // but *only* at the top level, so {},a}b will not expand to anything,\n  // but a{},b}c will be expanded to [a}c,abc].\n  // One could argue that this is a bug in Bash, but since the goal of\n  // this module is to match Bash's rules, we escape a leading {}\n  if (str.substr(0, 2) === '{}') {\n    str = '\\\\{\\\\}' + str.substr(2);\n  }\n\n  return expand(escapeBraces(str), true).map(unescapeBraces);\n}\n\nfunction embrace(str) {\n  return '{' + str + '}';\n}\nfunction isPadded(el) {\n  return /^-?0\\d/.test(el);\n}\n\nfunction lte(i, y) {\n  return i <= y;\n}\nfunction gte(i, y) {\n  return i >= y;\n}\n\nfunction expand(str, isTop) {\n  var expansions = [];\n\n  var m = balanced('{', '}', str);\n  if (!m) return [str];\n\n  // no need to expand pre, since it is guaranteed to be free of brace-sets\n  var pre = m.pre;\n  var post = m.post.length\n    ? expand(m.post, false)\n    : [''];\n\n  if (/\\$$/.test(m.pre)) {    \n    for (var k = 0; k < post.length; k++) {\n      var expansion = pre+ '{' + m.body + '}' + post[k];\n      expansions.push(expansion);\n    }\n  } else {\n    var isNumericSequence = /^-?\\d+\\.\\.-?\\d+(?:\\.\\.-?\\d+)?$/.test(m.body);\n    var isAlphaSequence = /^[a-zA-Z]\\.\\.[a-zA-Z](?:\\.\\.-?\\d+)?$/.test(m.body);\n    var isSequence = isNumericSequence || isAlphaSequence;\n    var isOptions = m.body.indexOf(',') >= 0;\n    if (!isSequence && !isOptions) {\n      // {a},b}\n      if (m.post.match(/,.*\\}/)) {\n        str = m.pre + '{' + m.body + escClose + m.post;\n        return expand(str);\n      }\n      return [str];\n    }\n\n    var n;\n    if (isSequence) {\n      n = m.body.split(/\\.\\./);\n    } else {\n      n = parseCommaParts(m.body);\n      if (n.length === 1) {\n        // x{{a,b}}y ==> x{a}y x{b}y\n        n = expand(n[0], false).map(embrace);\n        if (n.length === 1) {\n          return post.map(function(p) {\n            return m.pre + n[0] + p;\n          });\n        }\n      }\n    }\n\n    // at this point, n is the parts, and we know it's not a comma set\n    // with a single entry.\n    var N;\n\n    if (isSequence) {\n      var x = numeric(n[0]);\n      var y = numeric(n[1]);\n      var width = Math.max(n[0].length, n[1].length)\n      var incr = n.length == 3\n        ? Math.abs(numeric(n[2]))\n        : 1;\n      var test = lte;\n      var reverse = y < x;\n      if (reverse) {\n        incr *= -1;\n        test = gte;\n      }\n      var pad = n.some(isPadded);\n\n      N = [];\n\n      for (var i = x; test(i, y); i += incr) {\n        var c;\n        if (isAlphaSequence) {\n          c = String.fromCharCode(i);\n          if (c === '\\\\')\n            c = '';\n        } else {\n          c = String(i);\n          if (pad) {\n            var need = width - c.length;\n            if (need > 0) {\n              var z = new Array(need + 1).join('0');\n              if (i < 0)\n                c = '-' + z + c.slice(1);\n              else\n                c = z + c;\n            }\n          }\n        }\n        N.push(c);\n      }\n    } else {\n      N = [];\n\n      for (var j = 0; j < n.length; j++) {\n        N.push.apply(N, expand(n[j], false));\n      }\n    }\n\n    for (var j = 0; j < N.length; j++) {\n      for (var k = 0; k < post.length; k++) {\n        var expansion = pre + N[j] + post[k];\n        if (!isTop || isSequence || expansion)\n          expansions.push(expansion);\n      }\n    }\n  }\n\n  return expansions;\n}\n\n", "const minimatch = module.exports = (p, pattern, options = {}) => {\n  assertValidPattern(pattern)\n\n  // shortcut: comments match nothing.\n  if (!options.nocomment && pattern.charAt(0) === '#') {\n    return false\n  }\n\n  return new Minimatch(pattern, options).match(p)\n}\n\nmodule.exports = minimatch\n\nconst path = require('./lib/path.js')\nminimatch.sep = path.sep\n\nconst GLOBSTAR = Symbol('globstar **')\nminimatch.GLOBSTAR = GLOBSTAR\nconst expand = require('brace-expansion')\n\nconst plTypes = {\n  '!': { open: '(?:(?!(?:', close: '))[^/]*?)'},\n  '?': { open: '(?:', close: ')?' },\n  '+': { open: '(?:', close: ')+' },\n  '*': { open: '(?:', close: ')*' },\n  '@': { open: '(?:', close: ')' }\n}\n\n// any single thing other than /\n// don't need to escape / when using new RegExp()\nconst qmark = '[^/]'\n\n// * => any number of characters\nconst star = qmark + '*?'\n\n// ** when dots are allowed.  Anything goes, except .. and .\n// not (^ or / followed by one or two dots followed by $ or /),\n// followed by anything, any number of times.\nconst twoStarDot = '(?:(?!(?:\\\\\\/|^)(?:\\\\.{1,2})($|\\\\\\/)).)*?'\n\n// not a ^ or / followed by a dot,\n// followed by anything, any number of times.\nconst twoStarNoDot = '(?:(?!(?:\\\\\\/|^)\\\\.).)*?'\n\n// \"abc\" -> { a:true, b:true, c:true }\nconst charSet = s => s.split('').reduce((set, c) => {\n  set[c] = true\n  return set\n}, {})\n\n// characters that need to be escaped in RegExp.\nconst reSpecials = charSet('().*{}+?[]^$\\\\!')\n\n// characters that indicate we have to add the pattern start\nconst addPatternStartSet = charSet('[.(')\n\n// normalizes slashes.\nconst slashSplit = /\\/+/\n\nminimatch.filter = (pattern, options = {}) =>\n  (p, i, list) => minimatch(p, pattern, options)\n\nconst ext = (a, b = {}) => {\n  const t = {}\n  Object.keys(a).forEach(k => t[k] = a[k])\n  Object.keys(b).forEach(k => t[k] = b[k])\n  return t\n}\n\nminimatch.defaults = def => {\n  if (!def || typeof def !== 'object' || !Object.keys(def).length) {\n    return minimatch\n  }\n\n  const orig = minimatch\n\n  const m = (p, pattern, options) => orig(p, pattern, ext(def, options))\n  m.Minimatch = class Minimatch extends orig.Minimatch {\n    constructor (pattern, options) {\n      super(pattern, ext(def, options))\n    }\n  }\n  m.Minimatch.defaults = options => orig.defaults(ext(def, options)).Minimatch\n  m.filter = (pattern, options) => orig.filter(pattern, ext(def, options))\n  m.defaults = options => orig.defaults(ext(def, options))\n  m.makeRe = (pattern, options) => orig.makeRe(pattern, ext(def, options))\n  m.braceExpand = (pattern, options) => orig.braceExpand(pattern, ext(def, options))\n  m.match = (list, pattern, options) => orig.match(list, pattern, ext(def, options))\n\n  return m\n}\n\n\n\n\n\n// Brace expansion:\n// a{b,c}d -> abd acd\n// a{b,}c -> abc ac\n// a{0..3}d -> a0d a1d a2d a3d\n// a{b,c{d,e}f}g -> abg acdfg acefg\n// a{b,c}d{e,f}g -> abdeg acdeg abdeg abdfg\n//\n// Invalid sets are not expanded.\n// a{2..}b -> a{2..}b\n// a{b}c -> a{b}c\nminimatch.braceExpand = (pattern, options) => braceExpand(pattern, options)\n\nconst braceExpand = (pattern, options = {}) => {\n  assertValidPattern(pattern)\n\n  // Thanks to Yeting Li <https://github.com/yetingli> for\n  // improving this regexp to avoid a ReDOS vulnerability.\n  if (options.nobrace || !/\\{(?:(?!\\{).)*\\}/.test(pattern)) {\n    // shortcut. no need to expand.\n    return [pattern]\n  }\n\n  return expand(pattern)\n}\n\nconst MAX_PATTERN_LENGTH = 1024 * 64\nconst assertValidPattern = pattern => {\n  if (typeof pattern !== 'string') {\n    throw new TypeError('invalid pattern')\n  }\n\n  if (pattern.length > MAX_PATTERN_LENGTH) {\n    throw new TypeError('pattern is too long')\n  }\n}\n\n// parse a component of the expanded set.\n// At this point, no pattern may contain \"/\" in it\n// so we're going to return a 2d array, where each entry is the full\n// pattern, split on '/', and then turned into a regular expression.\n// A regexp is made at the end which joins each array with an\n// escaped /, and another full one which joins each regexp with |.\n//\n// Following the lead of Bash 4.1, note that \"**\" only has special meaning\n// when it is the *only* thing in a path portion.  Otherwise, any series\n// of * is equivalent to a single *.  Globstar behavior is enabled by\n// default, and can be disabled by setting options.noglobstar.\nconst SUBPARSE = Symbol('subparse')\n\nminimatch.makeRe = (pattern, options) =>\n  new Minimatch(pattern, options || {}).makeRe()\n\nminimatch.match = (list, pattern, options = {}) => {\n  const mm = new Minimatch(pattern, options)\n  list = list.filter(f => mm.match(f))\n  if (mm.options.nonull && !list.length) {\n    list.push(pattern)\n  }\n  return list\n}\n\n// replace stuff like \\* with *\nconst globUnescape = s => s.replace(/\\\\(.)/g, '$1')\nconst charUnescape = s => s.replace(/\\\\([^-\\]])/g, '$1')\nconst regExpEscape = s => s.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&')\nconst braExpEscape = s => s.replace(/[[\\]\\\\]/g, '\\\\$&')\n\nclass Minimatch {\n  constructor (pattern, options) {\n    assertValidPattern(pattern)\n\n    if (!options) options = {}\n\n    this.options = options\n    this.set = []\n    this.pattern = pattern\n    this.windowsPathsNoEscape = !!options.windowsPathsNoEscape ||\n      options.allowWindowsEscape === false\n    if (this.windowsPathsNoEscape) {\n      this.pattern = this.pattern.replace(/\\\\/g, '/')\n    }\n    this.regexp = null\n    this.negate = false\n    this.comment = false\n    this.empty = false\n    this.partial = !!options.partial\n\n    // make the set of regexps etc.\n    this.make()\n  }\n\n  debug () {}\n\n  make () {\n    const pattern = this.pattern\n    const options = this.options\n\n    // empty patterns and comments match nothing.\n    if (!options.nocomment && pattern.charAt(0) === '#') {\n      this.comment = true\n      return\n    }\n    if (!pattern) {\n      this.empty = true\n      return\n    }\n\n    // step 1: figure out negation, etc.\n    this.parseNegate()\n\n    // step 2: expand braces\n    let set = this.globSet = this.braceExpand()\n\n    if (options.debug) this.debug = (...args) => console.error(...args)\n\n    this.debug(this.pattern, set)\n\n    // step 3: now we have a set, so turn each one into a series of path-portion\n    // matching patterns.\n    // These will be regexps, except in the case of \"**\", which is\n    // set to the GLOBSTAR object for globstar behavior,\n    // and will not contain any / characters\n    set = this.globParts = set.map(s => s.split(slashSplit))\n\n    this.debug(this.pattern, set)\n\n    // glob --> regexps\n    set = set.map((s, si, set) => s.map(this.parse, this))\n\n    this.debug(this.pattern, set)\n\n    // filter out everything that didn't compile properly.\n    set = set.filter(s => s.indexOf(false) === -1)\n\n    this.debug(this.pattern, set)\n\n    this.set = set\n  }\n\n  parseNegate () {\n    if (this.options.nonegate) return\n\n    const pattern = this.pattern\n    let negate = false\n    let negateOffset = 0\n\n    for (let i = 0; i < pattern.length && pattern.charAt(i) === '!'; i++) {\n      negate = !negate\n      negateOffset++\n    }\n\n    if (negateOffset) this.pattern = pattern.slice(negateOffset)\n    this.negate = negate\n  }\n\n  // set partial to true to test if, for example,\n  // \"/a/b\" matches the start of \"/*/b/*/d\"\n  // Partial means, if you run out of file before you run\n  // out of pattern, then that's fine, as long as all\n  // the parts match.\n  matchOne (file, pattern, partial) {\n    var options = this.options\n\n    this.debug('matchOne',\n      { 'this': this, file: file, pattern: pattern })\n\n    this.debug('matchOne', file.length, pattern.length)\n\n    for (var fi = 0,\n        pi = 0,\n        fl = file.length,\n        pl = pattern.length\n        ; (fi < fl) && (pi < pl)\n        ; fi++, pi++) {\n      this.debug('matchOne loop')\n      var p = pattern[pi]\n      var f = file[fi]\n\n      this.debug(pattern, p, f)\n\n      // should be impossible.\n      // some invalid regexp stuff in the set.\n      /* istanbul ignore if */\n      if (p === false) return false\n\n      if (p === GLOBSTAR) {\n        this.debug('GLOBSTAR', [pattern, p, f])\n\n        // \"**\"\n        // a/**/b/**/c would match the following:\n        // a/b/x/y/z/c\n        // a/x/y/z/b/c\n        // a/b/x/b/x/c\n        // a/b/c\n        // To do this, take the rest of the pattern after\n        // the **, and see if it would match the file remainder.\n        // If so, return success.\n        // If not, the ** \"swallows\" a segment, and try again.\n        // This is recursively awful.\n        //\n        // a/**/b/**/c matching a/b/x/y/z/c\n        // - a matches a\n        // - doublestar\n        //   - matchOne(b/x/y/z/c, b/**/c)\n        //     - b matches b\n        //     - doublestar\n        //       - matchOne(x/y/z/c, c) -> no\n        //       - matchOne(y/z/c, c) -> no\n        //       - matchOne(z/c, c) -> no\n        //       - matchOne(c, c) yes, hit\n        var fr = fi\n        var pr = pi + 1\n        if (pr === pl) {\n          this.debug('** at the end')\n          // a ** at the end will just swallow the rest.\n          // We have found a match.\n          // however, it will not swallow /.x, unless\n          // options.dot is set.\n          // . and .. are *never* matched by **, for explosively\n          // exponential reasons.\n          for (; fi < fl; fi++) {\n            if (file[fi] === '.' || file[fi] === '..' ||\n              (!options.dot && file[fi].charAt(0) === '.')) return false\n          }\n          return true\n        }\n\n        // ok, let's see if we can swallow whatever we can.\n        while (fr < fl) {\n          var swallowee = file[fr]\n\n          this.debug('\\nglobstar while', file, fr, pattern, pr, swallowee)\n\n          // XXX remove this slice.  Just pass the start index.\n          if (this.matchOne(file.slice(fr), pattern.slice(pr), partial)) {\n            this.debug('globstar found match!', fr, fl, swallowee)\n            // found a match.\n            return true\n          } else {\n            // can't swallow \".\" or \"..\" ever.\n            // can only swallow \".foo\" when explicitly asked.\n            if (swallowee === '.' || swallowee === '..' ||\n              (!options.dot && swallowee.charAt(0) === '.')) {\n              this.debug('dot detected!', file, fr, pattern, pr)\n              break\n            }\n\n            // ** swallows a segment, and continue.\n            this.debug('globstar swallow a segment, and continue')\n            fr++\n          }\n        }\n\n        // no match was found.\n        // However, in partial mode, we can't say this is necessarily over.\n        // If there's more *pattern* left, then\n        /* istanbul ignore if */\n        if (partial) {\n          // ran out of file\n          this.debug('\\n>>> no match, partial?', file, fr, pattern, pr)\n          if (fr === fl) return true\n        }\n        return false\n      }\n\n      // something other than **\n      // non-magic patterns just have to match exactly\n      // patterns with magic have been turned into regexps.\n      var hit\n      if (typeof p === 'string') {\n        hit = f === p\n        this.debug('string match', p, f, hit)\n      } else {\n        hit = f.match(p)\n        this.debug('pattern match', p, f, hit)\n      }\n\n      if (!hit) return false\n    }\n\n    // Note: ending in / means that we'll get a final \"\"\n    // at the end of the pattern.  This can only match a\n    // corresponding \"\" at the end of the file.\n    // If the file ends in /, then it can only match a\n    // a pattern that ends in /, unless the pattern just\n    // doesn't have any more for it. But, a/b/ should *not*\n    // match \"a/b/*\", even though \"\" matches against the\n    // [^/]*? pattern, except in partial mode, where it might\n    // simply not be reached yet.\n    // However, a/b/ should still satisfy a/*\n\n    // now either we fell off the end of the pattern, or we're done.\n    if (fi === fl && pi === pl) {\n      // ran out of pattern and filename at the same time.\n      // an exact hit!\n      return true\n    } else if (fi === fl) {\n      // ran out of file, but still had pattern left.\n      // this is ok if we're doing the match as part of\n      // a glob fs traversal.\n      return partial\n    } else /* istanbul ignore else */ if (pi === pl) {\n      // ran out of pattern, still have file left.\n      // this is only acceptable if we're on the very last\n      // empty segment of a file with a trailing slash.\n      // a/* should match a/b/\n      return (fi === fl - 1) && (file[fi] === '')\n    }\n\n    // should be unreachable.\n    /* istanbul ignore next */\n    throw new Error('wtf?')\n  }\n\n  braceExpand () {\n    return braceExpand(this.pattern, this.options)\n  }\n\n  parse (pattern, isSub) {\n    assertValidPattern(pattern)\n\n    const options = this.options\n\n    // shortcuts\n    if (pattern === '**') {\n      if (!options.noglobstar)\n        return GLOBSTAR\n      else\n        pattern = '*'\n    }\n    if (pattern === '') return ''\n\n    let re = ''\n    let hasMagic = false\n    let escaping = false\n    // ? => one single character\n    const patternListStack = []\n    const negativeLists = []\n    let stateChar\n    let inClass = false\n    let reClassStart = -1\n    let classStart = -1\n    let cs\n    let pl\n    let sp\n    // . and .. never match anything that doesn't start with .,\n    // even when options.dot is set.  However, if the pattern\n    // starts with ., then traversal patterns can match.\n    let dotTravAllowed = pattern.charAt(0) === '.'\n    let dotFileAllowed = options.dot || dotTravAllowed\n    const patternStart = () =>\n      dotTravAllowed\n        ? ''\n        : dotFileAllowed\n        ? '(?!(?:^|\\\\/)\\\\.{1,2}(?:$|\\\\/))'\n        : '(?!\\\\.)'\n    const subPatternStart = (p) =>\n      p.charAt(0) === '.'\n        ? ''\n        : options.dot\n        ? '(?!(?:^|\\\\/)\\\\.{1,2}(?:$|\\\\/))'\n        : '(?!\\\\.)'\n\n\n    const clearStateChar = () => {\n      if (stateChar) {\n        // we had some state-tracking character\n        // that wasn't consumed by this pass.\n        switch (stateChar) {\n          case '*':\n            re += star\n            hasMagic = true\n          break\n          case '?':\n            re += qmark\n            hasMagic = true\n          break\n          default:\n            re += '\\\\' + stateChar\n          break\n        }\n        this.debug('clearStateChar %j %j', stateChar, re)\n        stateChar = false\n      }\n    }\n\n    for (let i = 0, c; (i < pattern.length) && (c = pattern.charAt(i)); i++) {\n      this.debug('%s\\t%s %s %j', pattern, i, re, c)\n\n      // skip over any that are escaped.\n      if (escaping) {\n        /* istanbul ignore next - completely not allowed, even escaped. */\n        if (c === '/') {\n          return false\n        }\n\n        if (reSpecials[c]) {\n          re += '\\\\'\n        }\n        re += c\n        escaping = false\n        continue\n      }\n\n      switch (c) {\n        /* istanbul ignore next */\n        case '/': {\n          // Should already be path-split by now.\n          return false\n        }\n\n        case '\\\\':\n          if (inClass && pattern.charAt(i + 1) === '-') {\n            re += c\n            continue\n          }\n\n          clearStateChar()\n          escaping = true\n        continue\n\n        // the various stateChar values\n        // for the \"extglob\" stuff.\n        case '?':\n        case '*':\n        case '+':\n        case '@':\n        case '!':\n          this.debug('%s\\t%s %s %j <-- stateChar', pattern, i, re, c)\n\n          // all of those are literals inside a class, except that\n          // the glob [!a] means [^a] in regexp\n          if (inClass) {\n            this.debug('  in class')\n            if (c === '!' && i === classStart + 1) c = '^'\n            re += c\n            continue\n          }\n\n          // if we already have a stateChar, then it means\n          // that there was something like ** or +? in there.\n          // Handle the stateChar, then proceed with this one.\n          this.debug('call clearStateChar %j', stateChar)\n          clearStateChar()\n          stateChar = c\n          // if extglob is disabled, then +(asdf|foo) isn't a thing.\n          // just clear the statechar *now*, rather than even diving into\n          // the patternList stuff.\n          if (options.noext) clearStateChar()\n        continue\n\n        case '(': {\n          if (inClass) {\n            re += '('\n            continue\n          }\n\n          if (!stateChar) {\n            re += '\\\\('\n            continue\n          }\n\n          const plEntry = {\n            type: stateChar,\n            start: i - 1,\n            reStart: re.length,\n            open: plTypes[stateChar].open,\n            close: plTypes[stateChar].close,\n          }\n          this.debug(this.pattern, '\\t', plEntry)\n          patternListStack.push(plEntry)\n          // negation is (?:(?!(?:js)(?:<rest>))[^/]*)\n          re += plEntry.open\n          // next entry starts with a dot maybe?\n          if (plEntry.start === 0 && plEntry.type !== '!') {\n            dotTravAllowed = true\n            re += subPatternStart(pattern.slice(i + 1))\n          }\n          this.debug('plType %j %j', stateChar, re)\n          stateChar = false\n          continue\n        }\n\n        case ')': {\n          const plEntry = patternListStack[patternListStack.length - 1]\n          if (inClass || !plEntry) {\n            re += '\\\\)'\n            continue\n          }\n          patternListStack.pop()\n\n          // closing an extglob\n          clearStateChar()\n          hasMagic = true\n          pl = plEntry\n          // negation is (?:(?!js)[^/]*)\n          // The others are (?:<pattern>)<type>\n          re += pl.close\n          if (pl.type === '!') {\n            negativeLists.push(Object.assign(pl, { reEnd: re.length }))\n          }\n          continue\n        }\n\n        case '|': {\n          const plEntry = patternListStack[patternListStack.length - 1]\n          if (inClass || !plEntry) {\n            re += '\\\\|'\n            continue\n          }\n\n          clearStateChar()\n          re += '|'\n          // next subpattern can start with a dot?\n          if (plEntry.start === 0 && plEntry.type !== '!') {\n            dotTravAllowed = true\n            re += subPatternStart(pattern.slice(i + 1))\n          }\n          continue\n        }\n\n        // these are mostly the same in regexp and glob\n        case '[':\n          // swallow any state-tracking char before the [\n          clearStateChar()\n\n          if (inClass) {\n            re += '\\\\' + c\n            continue\n          }\n\n          inClass = true\n          classStart = i\n          reClassStart = re.length\n          re += c\n        continue\n\n        case ']':\n          //  a right bracket shall lose its special\n          //  meaning and represent itself in\n          //  a bracket expression if it occurs\n          //  first in the list.  -- POSIX.2 2.8.3.2\n          if (i === classStart + 1 || !inClass) {\n            re += '\\\\' + c\n            continue\n          }\n\n          // split where the last [ was, make sure we don't have\n          // an invalid re. if so, re-walk the contents of the\n          // would-be class to re-translate any characters that\n          // were passed through as-is\n          // TODO: It would probably be faster to determine this\n          // without a try/catch and a new RegExp, but it's tricky\n          // to do safely.  For now, this is safe and works.\n          cs = pattern.substring(classStart + 1, i)\n          try {\n            RegExp('[' + braExpEscape(charUnescape(cs)) + ']')\n            // looks good, finish up the class.\n            re += c\n          } catch (er) {\n            // out of order ranges in JS are errors, but in glob syntax,\n            // they're just a range that matches nothing.\n            re = re.substring(0, reClassStart) + '(?:$.)' // match nothing ever\n          }\n          hasMagic = true\n          inClass = false\n        continue\n\n        default:\n          // swallow any state char that wasn't consumed\n          clearStateChar()\n\n          if (reSpecials[c] && !(c === '^' && inClass)) {\n            re += '\\\\'\n          }\n\n          re += c\n          break\n\n      } // switch\n    } // for\n\n    // handle the case where we left a class open.\n    // \"[abc\" is valid, equivalent to \"\\[abc\"\n    if (inClass) {\n      // split where the last [ was, and escape it\n      // this is a huge pita.  We now have to re-walk\n      // the contents of the would-be class to re-translate\n      // any characters that were passed through as-is\n      cs = pattern.slice(classStart + 1)\n      sp = this.parse(cs, SUBPARSE)\n      re = re.substring(0, reClassStart) + '\\\\[' + sp[0]\n      hasMagic = hasMagic || sp[1]\n    }\n\n    // handle the case where we had a +( thing at the *end*\n    // of the pattern.\n    // each pattern list stack adds 3 chars, and we need to go through\n    // and escape any | chars that were passed through as-is for the regexp.\n    // Go through and escape them, taking care not to double-escape any\n    // | chars that were already escaped.\n    for (pl = patternListStack.pop(); pl; pl = patternListStack.pop()) {\n      let tail\n      tail = re.slice(pl.reStart + pl.open.length)\n      this.debug('setting tail', re, pl)\n      // maybe some even number of \\, then maybe 1 \\, followed by a |\n      tail = tail.replace(/((?:\\\\{2}){0,64})(\\\\?)\\|/g, (_, $1, $2) => {\n        /* istanbul ignore else - should already be done */\n        if (!$2) {\n          // the | isn't already escaped, so escape it.\n          $2 = '\\\\'\n        }\n\n        // need to escape all those slashes *again*, without escaping the\n        // one that we need for escaping the | character.  As it works out,\n        // escaping an even number of slashes can be done by simply repeating\n        // it exactly after itself.  That's why this trick works.\n        //\n        // I am sorry that you have to see this.\n        return $1 + $1 + $2 + '|'\n      })\n\n      this.debug('tail=%j\\n   %s', tail, tail, pl, re)\n      const t = pl.type === '*' ? star\n        : pl.type === '?' ? qmark\n        : '\\\\' + pl.type\n\n      hasMagic = true\n      re = re.slice(0, pl.reStart) + t + '\\\\(' + tail\n    }\n\n    // handle trailing things that only matter at the very end.\n    clearStateChar()\n    if (escaping) {\n      // trailing \\\\\n      re += '\\\\\\\\'\n    }\n\n    // only need to apply the nodot start if the re starts with\n    // something that could conceivably capture a dot\n    const addPatternStart = addPatternStartSet[re.charAt(0)]\n\n    // Hack to work around lack of negative lookbehind in JS\n    // A pattern like: *.!(x).!(y|z) needs to ensure that a name\n    // like 'a.xyz.yz' doesn't match.  So, the first negative\n    // lookahead, has to look ALL the way ahead, to the end of\n    // the pattern.\n    for (let n = negativeLists.length - 1; n > -1; n--) {\n      const nl = negativeLists[n]\n\n      const nlBefore = re.slice(0, nl.reStart)\n      const nlFirst = re.slice(nl.reStart, nl.reEnd - 8)\n      let nlAfter = re.slice(nl.reEnd)\n      const nlLast = re.slice(nl.reEnd - 8, nl.reEnd) + nlAfter\n\n      // Handle nested stuff like *(*.js|!(*.json)), where open parens\n      // mean that we should *not* include the ) in the bit that is considered\n      // \"after\" the negated section.\n      const closeParensBefore = nlBefore.split(')').length\n      const openParensBefore = nlBefore.split('(').length - closeParensBefore\n      let cleanAfter = nlAfter\n      for (let i = 0; i < openParensBefore; i++) {\n        cleanAfter = cleanAfter.replace(/\\)[+*?]?/, '')\n      }\n      nlAfter = cleanAfter\n\n      const dollar = nlAfter === '' && isSub !== SUBPARSE ? '(?:$|\\\\/)' : ''\n\n      re = nlBefore + nlFirst + nlAfter + dollar + nlLast\n    }\n\n    // if the re is not \"\" at this point, then we need to make sure\n    // it doesn't match against an empty path part.\n    // Otherwise a/* will match a/, which it should not.\n    if (re !== '' && hasMagic) {\n      re = '(?=.)' + re\n    }\n\n    if (addPatternStart) {\n      re = patternStart() + re\n    }\n\n    // parsing just a piece of a larger pattern.\n    if (isSub === SUBPARSE) {\n      return [re, hasMagic]\n    }\n\n    // if it's nocase, and the lcase/uppercase don't match, it's magic\n    if (options.nocase && !hasMagic) {\n      hasMagic = pattern.toUpperCase() !== pattern.toLowerCase()\n    }\n\n    // skip the regexp for non-magical patterns\n    // unescape anything in it, though, so that it'll be\n    // an exact match against a file etc.\n    if (!hasMagic) {\n      return globUnescape(pattern)\n    }\n\n    const flags = options.nocase ? 'i' : ''\n    try {\n      return Object.assign(new RegExp('^' + re + '$', flags), {\n        _glob: pattern,\n        _src: re,\n      })\n    } catch (er) /* istanbul ignore next - should be impossible */ {\n      // If it was an invalid regular expression, then it can't match\n      // anything.  This trick looks for a character after the end of\n      // the string, which is of course impossible, except in multi-line\n      // mode, but it's not a /m regex.\n      return new RegExp('$.')\n    }\n  }\n\n  makeRe () {\n    if (this.regexp || this.regexp === false) return this.regexp\n\n    // at this point, this.set is a 2d array of partial\n    // pattern strings, or \"**\".\n    //\n    // It's better to use .match().  This function shouldn't\n    // be used, really, but it's pretty convenient sometimes,\n    // when you just want to work with a regex.\n    const set = this.set\n\n    if (!set.length) {\n      this.regexp = false\n      return this.regexp\n    }\n    const options = this.options\n\n    const twoStar = options.noglobstar ? star\n      : options.dot ? twoStarDot\n      : twoStarNoDot\n    const flags = options.nocase ? 'i' : ''\n\n    // coalesce globstars and regexpify non-globstar patterns\n    // if it's the only item, then we just do one twoStar\n    // if it's the first, and there are more, prepend (\\/|twoStar\\/)? to next\n    // if it's the last, append (\\/twoStar|) to previous\n    // if it's in the middle, append (\\/|\\/twoStar\\/) to previous\n    // then filter out GLOBSTAR symbols\n    let re = set.map(pattern => {\n      pattern = pattern.map(p =>\n        typeof p === 'string' ? regExpEscape(p)\n        : p === GLOBSTAR ? GLOBSTAR\n        : p._src\n      ).reduce((set, p) => {\n        if (!(set[set.length - 1] === GLOBSTAR && p === GLOBSTAR)) {\n          set.push(p)\n        }\n        return set\n      }, [])\n      pattern.forEach((p, i) => {\n        if (p !== GLOBSTAR || pattern[i-1] === GLOBSTAR) {\n          return\n        }\n        if (i === 0) {\n          if (pattern.length > 1) {\n            pattern[i+1] = '(?:\\\\\\/|' + twoStar + '\\\\\\/)?' + pattern[i+1]\n          } else {\n            pattern[i] = twoStar\n          }\n        } else if (i === pattern.length - 1) {\n          pattern[i-1] += '(?:\\\\\\/|' + twoStar + ')?'\n        } else {\n          pattern[i-1] += '(?:\\\\\\/|\\\\\\/' + twoStar + '\\\\\\/)' + pattern[i+1]\n          pattern[i+1] = GLOBSTAR\n        }\n      })\n      return pattern.filter(p => p !== GLOBSTAR).join('/')\n    }).join('|')\n\n    // must match entire pattern\n    // ending in a * or ** will make it less strict.\n    re = '^(?:' + re + ')$'\n\n    // can match anything, as long as it's not this.\n    if (this.negate) re = '^(?!' + re + ').*$'\n\n    try {\n      this.regexp = new RegExp(re, flags)\n    } catch (ex) /* istanbul ignore next - should be impossible */ {\n      this.regexp = false\n    }\n    return this.regexp\n  }\n\n  match (f, partial = this.partial) {\n    this.debug('match', f, this.pattern)\n    // short-circuit in the case of busted things.\n    // comments, etc.\n    if (this.comment) return false\n    if (this.empty) return f === ''\n\n    if (f === '/' && partial) return true\n\n    const options = this.options\n\n    // windows: need to use /, not \\\n    if (path.sep !== '/') {\n      f = f.split(path.sep).join('/')\n    }\n\n    // treat the test path as a set of pathparts.\n    f = f.split(slashSplit)\n    this.debug(this.pattern, 'split', f)\n\n    // just ONE of the pattern sets in this.set needs to match\n    // in order for it to be valid.  If negating, then just one\n    // match means that we have failed.\n    // Either way, return on the first hit.\n\n    const set = this.set\n    this.debug(this.pattern, 'set', set)\n\n    // Find the basename of the path by looking for the last non-empty segment\n    let filename\n    for (let i = f.length - 1; i >= 0; i--) {\n      filename = f[i]\n      if (filename) break\n    }\n\n    for (let i = 0; i < set.length; i++) {\n      const pattern = set[i]\n      let file = f\n      if (options.matchBase && pattern.length === 1) {\n        file = [filename]\n      }\n      const hit = this.matchOne(file, pattern, partial)\n      if (hit) {\n        if (options.flipNegate) return true\n        return !this.negate\n      }\n    }\n\n    // didn't get any hits.  this is success if it's a negative\n    // pattern, failure otherwise.\n    if (options.flipNegate) return false\n    return this.negate\n  }\n\n  static defaults (def) {\n    return minimatch.defaults(def).Minimatch\n  }\n}\n\nminimatch.Minimatch = Minimatch\n", "\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DiagnosticFeature = exports.DiagnosticPullMode = exports.vsdiag = void 0;\nconst minimatch = require(\"minimatch\");\nconst vscode_1 = require(\"vscode\");\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\nconst uuid_1 = require(\"./utils/uuid\");\nconst features_1 = require(\"./features\");\nfunction ensure(target, key) {\n    if (target[key] === void 0) {\n        target[key] = {};\n    }\n    return target[key];\n}\nvar vsdiag;\n(function (vsdiag) {\n    let DocumentDiagnosticReportKind;\n    (function (DocumentDiagnosticReportKind) {\n        DocumentDiagnosticReportKind[\"full\"] = \"full\";\n        DocumentDiagnosticReportKind[\"unChanged\"] = \"unChanged\";\n    })(DocumentDiagnosticReportKind = vsdiag.DocumentDiagnosticReportKind || (vsdiag.DocumentDiagnosticReportKind = {}));\n})(vsdiag || (exports.vsdiag = vsdiag = {}));\nvar DiagnosticPullMode;\n(function (DiagnosticPullMode) {\n    DiagnosticPullMode[\"onType\"] = \"onType\";\n    DiagnosticPullMode[\"onSave\"] = \"onSave\";\n})(DiagnosticPullMode || (exports.DiagnosticPullMode = DiagnosticPullMode = {}));\nvar RequestStateKind;\n(function (RequestStateKind) {\n    RequestStateKind[\"active\"] = \"open\";\n    RequestStateKind[\"reschedule\"] = \"reschedule\";\n    RequestStateKind[\"outDated\"] = \"drop\";\n})(RequestStateKind || (RequestStateKind = {}));\n/**\n * Manages the open tabs. We don't directly use the tab API since for\n * diagnostics we need to de-dupe tabs that show the same resources since\n * we pull on the model not the UI.\n */\nclass Tabs {\n    constructor() {\n        this.open = new Set();\n        this._onOpen = new vscode_1.EventEmitter();\n        this._onClose = new vscode_1.EventEmitter();\n        Tabs.fillTabResources(this.open);\n        const openTabsHandler = (event) => {\n            if (event.closed.length === 0 && event.opened.length === 0) {\n                return;\n            }\n            const oldTabs = this.open;\n            const currentTabs = new Set();\n            Tabs.fillTabResources(currentTabs);\n            const closed = new Set();\n            const opened = new Set(currentTabs);\n            for (const tab of oldTabs.values()) {\n                if (currentTabs.has(tab)) {\n                    opened.delete(tab);\n                }\n                else {\n                    closed.add(tab);\n                }\n            }\n            this.open = currentTabs;\n            if (closed.size > 0) {\n                const toFire = new Set();\n                for (const item of closed) {\n                    toFire.add(vscode_1.Uri.parse(item));\n                }\n                this._onClose.fire(toFire);\n            }\n            if (opened.size > 0) {\n                const toFire = new Set();\n                for (const item of opened) {\n                    toFire.add(vscode_1.Uri.parse(item));\n                }\n                this._onOpen.fire(toFire);\n            }\n        };\n        if (vscode_1.window.tabGroups.onDidChangeTabs !== undefined) {\n            this.disposable = vscode_1.window.tabGroups.onDidChangeTabs(openTabsHandler);\n        }\n        else {\n            this.disposable = { dispose: () => { } };\n        }\n    }\n    get onClose() {\n        return this._onClose.event;\n    }\n    get onOpen() {\n        return this._onOpen.event;\n    }\n    dispose() {\n        this.disposable.dispose();\n    }\n    isActive(document) {\n        return document instanceof vscode_1.Uri\n            ? vscode_1.window.activeTextEditor?.document.uri === document\n            : vscode_1.window.activeTextEditor?.document === document;\n    }\n    isVisible(document) {\n        const uri = document instanceof vscode_1.Uri ? document : document.uri;\n        return this.open.has(uri.toString());\n    }\n    getTabResources() {\n        const result = new Set();\n        Tabs.fillTabResources(new Set(), result);\n        return result;\n    }\n    static fillTabResources(strings, uris) {\n        const seen = strings ?? new Set();\n        for (const group of vscode_1.window.tabGroups.all) {\n            for (const tab of group.tabs) {\n                const input = tab.input;\n                let uri;\n                if (input instanceof vscode_1.TabInputText) {\n                    uri = input.uri;\n                }\n                else if (input instanceof vscode_1.TabInputTextDiff) {\n                    uri = input.modified;\n                }\n                else if (input instanceof vscode_1.TabInputCustom) {\n                    uri = input.uri;\n                }\n                if (uri !== undefined && !seen.has(uri.toString())) {\n                    seen.add(uri.toString());\n                    uris !== undefined && uris.add(uri);\n                }\n            }\n        }\n    }\n}\nvar PullState;\n(function (PullState) {\n    PullState[PullState[\"document\"] = 1] = \"document\";\n    PullState[PullState[\"workspace\"] = 2] = \"workspace\";\n})(PullState || (PullState = {}));\nvar DocumentOrUri;\n(function (DocumentOrUri) {\n    function asKey(document) {\n        return document instanceof vscode_1.Uri ? document.toString() : document.uri.toString();\n    }\n    DocumentOrUri.asKey = asKey;\n})(DocumentOrUri || (DocumentOrUri = {}));\nclass DocumentPullStateTracker {\n    constructor() {\n        this.documentPullStates = new Map();\n        this.workspacePullStates = new Map();\n    }\n    track(kind, document, arg1) {\n        const states = kind === PullState.document ? this.documentPullStates : this.workspacePullStates;\n        const [key, uri, version] = document instanceof vscode_1.Uri\n            ? [document.toString(), document, arg1]\n            : [document.uri.toString(), document.uri, document.version];\n        let state = states.get(key);\n        if (state === undefined) {\n            state = { document: uri, pulledVersion: version, resultId: undefined };\n            states.set(key, state);\n        }\n        return state;\n    }\n    update(kind, document, arg1, arg2) {\n        const states = kind === PullState.document ? this.documentPullStates : this.workspacePullStates;\n        const [key, uri, version, resultId] = document instanceof vscode_1.Uri\n            ? [document.toString(), document, arg1, arg2]\n            : [document.uri.toString(), document.uri, document.version, arg1];\n        let state = states.get(key);\n        if (state === undefined) {\n            state = { document: uri, pulledVersion: version, resultId };\n            states.set(key, state);\n        }\n        else {\n            state.pulledVersion = version;\n            state.resultId = resultId;\n        }\n    }\n    unTrack(kind, document) {\n        const key = DocumentOrUri.asKey(document);\n        const states = kind === PullState.document ? this.documentPullStates : this.workspacePullStates;\n        states.delete(key);\n    }\n    tracks(kind, document) {\n        const key = DocumentOrUri.asKey(document);\n        const states = kind === PullState.document ? this.documentPullStates : this.workspacePullStates;\n        return states.has(key);\n    }\n    getResultId(kind, document) {\n        const key = DocumentOrUri.asKey(document);\n        const states = kind === PullState.document ? this.documentPullStates : this.workspacePullStates;\n        return states.get(key)?.resultId;\n    }\n    getAllResultIds() {\n        const result = [];\n        for (let [uri, value] of this.workspacePullStates) {\n            if (this.documentPullStates.has(uri)) {\n                value = this.documentPullStates.get(uri);\n            }\n            if (value.resultId !== undefined) {\n                result.push({ uri, value: value.resultId });\n            }\n        }\n        return result;\n    }\n}\nclass DiagnosticRequestor {\n    constructor(client, tabs, options) {\n        this.client = client;\n        this.tabs = tabs;\n        this.options = options;\n        this.isDisposed = false;\n        this.onDidChangeDiagnosticsEmitter = new vscode_1.EventEmitter();\n        this.provider = this.createProvider();\n        this.diagnostics = vscode_1.languages.createDiagnosticCollection(options.identifier);\n        this.openRequests = new Map();\n        this.documentStates = new DocumentPullStateTracker();\n        this.workspaceErrorCounter = 0;\n    }\n    knows(kind, document) {\n        const uri = document instanceof vscode_1.Uri ? document : document.uri;\n        return this.documentStates.tracks(kind, document) || this.openRequests.has(uri.toString());\n    }\n    forget(kind, document) {\n        this.documentStates.unTrack(kind, document);\n    }\n    pull(document, cb) {\n        if (this.isDisposed) {\n            return;\n        }\n        const uri = document instanceof vscode_1.Uri ? document : document.uri;\n        this.pullAsync(document).then(() => {\n            if (cb) {\n                cb();\n            }\n        }, (error) => {\n            this.client.error(`Document pull failed for text document ${uri.toString()}`, error, false);\n        });\n    }\n    async pullAsync(document, version) {\n        if (this.isDisposed) {\n            return;\n        }\n        const isUri = document instanceof vscode_1.Uri;\n        const uri = isUri ? document : document.uri;\n        const key = uri.toString();\n        version = isUri ? version : document.version;\n        const currentRequestState = this.openRequests.get(key);\n        const documentState = isUri\n            ? this.documentStates.track(PullState.document, document, version)\n            : this.documentStates.track(PullState.document, document);\n        if (currentRequestState === undefined) {\n            const tokenSource = new vscode_1.CancellationTokenSource();\n            this.openRequests.set(key, { state: RequestStateKind.active, document: document, version: version, tokenSource });\n            let report;\n            let afterState;\n            try {\n                report = await this.provider.provideDiagnostics(document, documentState.resultId, tokenSource.token) ?? { kind: vsdiag.DocumentDiagnosticReportKind.full, items: [] };\n            }\n            catch (error) {\n                if (error instanceof features_1.LSPCancellationError && vscode_languageserver_protocol_1.DiagnosticServerCancellationData.is(error.data) && error.data.retriggerRequest === false) {\n                    afterState = { state: RequestStateKind.outDated, document };\n                }\n                if (afterState === undefined && error instanceof vscode_1.CancellationError) {\n                    afterState = { state: RequestStateKind.reschedule, document };\n                }\n                else {\n                    throw error;\n                }\n            }\n            afterState = afterState ?? this.openRequests.get(key);\n            if (afterState === undefined) {\n                // This shouldn't happen. Log it\n                this.client.error(`Lost request state in diagnostic pull model. Clearing diagnostics for ${key}`);\n                this.diagnostics.delete(uri);\n                return;\n            }\n            this.openRequests.delete(key);\n            if (!this.tabs.isVisible(document)) {\n                this.documentStates.unTrack(PullState.document, document);\n                return;\n            }\n            if (afterState.state === RequestStateKind.outDated) {\n                return;\n            }\n            // report is only undefined if the request has thrown.\n            if (report !== undefined) {\n                if (report.kind === vsdiag.DocumentDiagnosticReportKind.full) {\n                    this.diagnostics.set(uri, report.items);\n                }\n                documentState.pulledVersion = version;\n                documentState.resultId = report.resultId;\n            }\n            if (afterState.state === RequestStateKind.reschedule) {\n                this.pull(document);\n            }\n        }\n        else {\n            if (currentRequestState.state === RequestStateKind.active) {\n                // Cancel the current request and reschedule a new one when the old one returned.\n                currentRequestState.tokenSource.cancel();\n                this.openRequests.set(key, { state: RequestStateKind.reschedule, document: currentRequestState.document });\n            }\n            else if (currentRequestState.state === RequestStateKind.outDated) {\n                this.openRequests.set(key, { state: RequestStateKind.reschedule, document: currentRequestState.document });\n            }\n        }\n    }\n    forgetDocument(document) {\n        const uri = document instanceof vscode_1.Uri ? document : document.uri;\n        const key = uri.toString();\n        const request = this.openRequests.get(key);\n        if (this.options.workspaceDiagnostics) {\n            // If we run workspace diagnostic pull a last time for the diagnostics\n            // and the rely on getting them from the workspace result.\n            if (request !== undefined) {\n                this.openRequests.set(key, { state: RequestStateKind.reschedule, document: document });\n            }\n            else {\n                this.pull(document, () => {\n                    this.forget(PullState.document, document);\n                });\n            }\n        }\n        else {\n            // We have normal pull or inter file dependencies. In this case we\n            // clear the diagnostics (to have the same start as after startup).\n            // We also cancel outstanding requests.\n            if (request !== undefined) {\n                if (request.state === RequestStateKind.active) {\n                    request.tokenSource.cancel();\n                }\n                this.openRequests.set(key, { state: RequestStateKind.outDated, document: document });\n            }\n            this.diagnostics.delete(uri);\n            this.forget(PullState.document, document);\n        }\n    }\n    pullWorkspace() {\n        if (this.isDisposed) {\n            return;\n        }\n        this.pullWorkspaceAsync().then(() => {\n            this.workspaceTimeout = (0, vscode_languageserver_protocol_1.RAL)().timer.setTimeout(() => {\n                this.pullWorkspace();\n            }, 2000);\n        }, (error) => {\n            if (!(error instanceof features_1.LSPCancellationError) && !vscode_languageserver_protocol_1.DiagnosticServerCancellationData.is(error.data)) {\n                this.client.error(`Workspace diagnostic pull failed.`, error, false);\n                this.workspaceErrorCounter++;\n            }\n            if (this.workspaceErrorCounter <= 5) {\n                this.workspaceTimeout = (0, vscode_languageserver_protocol_1.RAL)().timer.setTimeout(() => {\n                    this.pullWorkspace();\n                }, 2000);\n            }\n        });\n    }\n    async pullWorkspaceAsync() {\n        if (!this.provider.provideWorkspaceDiagnostics || this.isDisposed) {\n            return;\n        }\n        if (this.workspaceCancellation !== undefined) {\n            this.workspaceCancellation.cancel();\n            this.workspaceCancellation = undefined;\n        }\n        this.workspaceCancellation = new vscode_1.CancellationTokenSource();\n        const previousResultIds = this.documentStates.getAllResultIds().map((item) => {\n            return {\n                uri: this.client.protocol2CodeConverter.asUri(item.uri),\n                value: item.value\n            };\n        });\n        await this.provider.provideWorkspaceDiagnostics(previousResultIds, this.workspaceCancellation.token, (chunk) => {\n            if (!chunk || this.isDisposed) {\n                return;\n            }\n            for (const item of chunk.items) {\n                if (item.kind === vsdiag.DocumentDiagnosticReportKind.full) {\n                    // Favour document pull result over workspace results. So skip if it is tracked\n                    // as a document result.\n                    if (!this.documentStates.tracks(PullState.document, item.uri)) {\n                        this.diagnostics.set(item.uri, item.items);\n                    }\n                }\n                this.documentStates.update(PullState.workspace, item.uri, item.version ?? undefined, item.resultId);\n            }\n        });\n    }\n    createProvider() {\n        const result = {\n            onDidChangeDiagnostics: this.onDidChangeDiagnosticsEmitter.event,\n            provideDiagnostics: (document, previousResultId, token) => {\n                const provideDiagnostics = (document, previousResultId, token) => {\n                    const params = {\n                        identifier: this.options.identifier,\n                        textDocument: { uri: this.client.code2ProtocolConverter.asUri(document instanceof vscode_1.Uri ? document : document.uri) },\n                        previousResultId: previousResultId\n                    };\n                    if (this.isDisposed === true || !this.client.isRunning()) {\n                        return { kind: vsdiag.DocumentDiagnosticReportKind.full, items: [] };\n                    }\n                    return this.client.sendRequest(vscode_languageserver_protocol_1.DocumentDiagnosticRequest.type, params, token).then(async (result) => {\n                        if (result === undefined || result === null || this.isDisposed || token.isCancellationRequested) {\n                            return { kind: vsdiag.DocumentDiagnosticReportKind.full, items: [] };\n                        }\n                        if (result.kind === vscode_languageserver_protocol_1.DocumentDiagnosticReportKind.Full) {\n                            return { kind: vsdiag.DocumentDiagnosticReportKind.full, resultId: result.resultId, items: await this.client.protocol2CodeConverter.asDiagnostics(result.items, token) };\n                        }\n                        else {\n                            return { kind: vsdiag.DocumentDiagnosticReportKind.unChanged, resultId: result.resultId };\n                        }\n                    }, (error) => {\n                        return this.client.handleFailedRequest(vscode_languageserver_protocol_1.DocumentDiagnosticRequest.type, token, error, { kind: vsdiag.DocumentDiagnosticReportKind.full, items: [] });\n                    });\n                };\n                const middleware = this.client.middleware;\n                return middleware.provideDiagnostics\n                    ? middleware.provideDiagnostics(document, previousResultId, token, provideDiagnostics)\n                    : provideDiagnostics(document, previousResultId, token);\n            }\n        };\n        if (this.options.workspaceDiagnostics) {\n            result.provideWorkspaceDiagnostics = (resultIds, token, resultReporter) => {\n                const convertReport = async (report) => {\n                    if (report.kind === vscode_languageserver_protocol_1.DocumentDiagnosticReportKind.Full) {\n                        return {\n                            kind: vsdiag.DocumentDiagnosticReportKind.full,\n                            uri: this.client.protocol2CodeConverter.asUri(report.uri),\n                            resultId: report.resultId,\n                            version: report.version,\n                            items: await this.client.protocol2CodeConverter.asDiagnostics(report.items, token)\n                        };\n                    }\n                    else {\n                        return {\n                            kind: vsdiag.DocumentDiagnosticReportKind.unChanged,\n                            uri: this.client.protocol2CodeConverter.asUri(report.uri),\n                            resultId: report.resultId,\n                            version: report.version\n                        };\n                    }\n                };\n                const convertPreviousResultIds = (resultIds) => {\n                    const converted = [];\n                    for (const item of resultIds) {\n                        converted.push({ uri: this.client.code2ProtocolConverter.asUri(item.uri), value: item.value });\n                    }\n                    return converted;\n                };\n                const provideDiagnostics = (resultIds, token) => {\n                    const partialResultToken = (0, uuid_1.generateUuid)();\n                    const disposable = this.client.onProgress(vscode_languageserver_protocol_1.WorkspaceDiagnosticRequest.partialResult, partialResultToken, async (partialResult) => {\n                        if (partialResult === undefined || partialResult === null) {\n                            resultReporter(null);\n                            return;\n                        }\n                        const converted = {\n                            items: []\n                        };\n                        for (const item of partialResult.items) {\n                            try {\n                                converted.items.push(await convertReport(item));\n                            }\n                            catch (error) {\n                                this.client.error(`Converting workspace diagnostics failed.`, error);\n                            }\n                        }\n                        resultReporter(converted);\n                    });\n                    const params = {\n                        identifier: this.options.identifier,\n                        previousResultIds: convertPreviousResultIds(resultIds),\n                        partialResultToken: partialResultToken\n                    };\n                    if (this.isDisposed === true || !this.client.isRunning()) {\n                        return { items: [] };\n                    }\n                    return this.client.sendRequest(vscode_languageserver_protocol_1.WorkspaceDiagnosticRequest.type, params, token).then(async (result) => {\n                        if (token.isCancellationRequested) {\n                            return { items: [] };\n                        }\n                        const converted = {\n                            items: []\n                        };\n                        for (const item of result.items) {\n                            converted.items.push(await convertReport(item));\n                        }\n                        disposable.dispose();\n                        resultReporter(converted);\n                        return { items: [] };\n                    }, (error) => {\n                        disposable.dispose();\n                        return this.client.handleFailedRequest(vscode_languageserver_protocol_1.DocumentDiagnosticRequest.type, token, error, { items: [] });\n                    });\n                };\n                const middleware = this.client.middleware;\n                return middleware.provideWorkspaceDiagnostics\n                    ? middleware.provideWorkspaceDiagnostics(resultIds, token, resultReporter, provideDiagnostics)\n                    : provideDiagnostics(resultIds, token, resultReporter);\n            };\n        }\n        return result;\n    }\n    dispose() {\n        this.isDisposed = true;\n        // Cancel and clear workspace pull if present.\n        this.workspaceCancellation?.cancel();\n        this.workspaceTimeout?.dispose();\n        // Cancel all request and mark open requests as outdated.\n        for (const [key, request] of this.openRequests) {\n            if (request.state === RequestStateKind.active) {\n                request.tokenSource.cancel();\n            }\n            this.openRequests.set(key, { state: RequestStateKind.outDated, document: request.document });\n        }\n        // cleanup old diagnostics\n        this.diagnostics.dispose();\n    }\n}\nclass BackgroundScheduler {\n    constructor(diagnosticRequestor) {\n        this.diagnosticRequestor = diagnosticRequestor;\n        this.documents = new vscode_languageserver_protocol_1.LinkedMap();\n        this.isDisposed = false;\n    }\n    add(document) {\n        if (this.isDisposed === true) {\n            return;\n        }\n        const key = DocumentOrUri.asKey(document);\n        if (this.documents.has(key)) {\n            return;\n        }\n        this.documents.set(key, document, vscode_languageserver_protocol_1.Touch.Last);\n        this.trigger();\n    }\n    remove(document) {\n        const key = DocumentOrUri.asKey(document);\n        this.documents.delete(key);\n        // No more documents. Stop background activity.\n        if (this.documents.size === 0) {\n            this.stop();\n        }\n        else if (key === this.endDocumentKey()) {\n            // Make sure we have a correct last document. It could have\n            this.endDocument = this.documents.last;\n        }\n    }\n    trigger() {\n        if (this.isDisposed === true) {\n            return;\n        }\n        // We have a round running. So simply make sure we run up to the\n        // last document\n        if (this.intervalHandle !== undefined) {\n            this.endDocument = this.documents.last;\n            return;\n        }\n        this.endDocument = this.documents.last;\n        this.intervalHandle = (0, vscode_languageserver_protocol_1.RAL)().timer.setInterval(() => {\n            const document = this.documents.first;\n            if (document !== undefined) {\n                const key = DocumentOrUri.asKey(document);\n                this.diagnosticRequestor.pull(document);\n                this.documents.set(key, document, vscode_languageserver_protocol_1.Touch.Last);\n                if (key === this.endDocumentKey()) {\n                    this.stop();\n                }\n            }\n        }, 200);\n    }\n    dispose() {\n        this.isDisposed = true;\n        this.stop();\n        this.documents.clear();\n    }\n    stop() {\n        this.intervalHandle?.dispose();\n        this.intervalHandle = undefined;\n        this.endDocument = undefined;\n    }\n    endDocumentKey() {\n        return this.endDocument !== undefined ? DocumentOrUri.asKey(this.endDocument) : undefined;\n    }\n}\nclass DiagnosticFeatureProviderImpl {\n    constructor(client, tabs, options) {\n        const diagnosticPullOptions = client.clientOptions.diagnosticPullOptions ?? { onChange: true, onSave: false };\n        const documentSelector = client.protocol2CodeConverter.asDocumentSelector(options.documentSelector);\n        const disposables = [];\n        const matchResource = (resource) => {\n            const selector = options.documentSelector;\n            if (diagnosticPullOptions.match !== undefined) {\n                return diagnosticPullOptions.match(selector, resource);\n            }\n            for (const filter of selector) {\n                if (!vscode_languageserver_protocol_1.TextDocumentFilter.is(filter)) {\n                    continue;\n                }\n                // The filter is a language id. We can't determine if it matches\n                // so we return false.\n                if (typeof filter === 'string') {\n                    return false;\n                }\n                if (filter.language !== undefined && filter.language !== '*') {\n                    return false;\n                }\n                if (filter.scheme !== undefined && filter.scheme !== '*' && filter.scheme !== resource.scheme) {\n                    return false;\n                }\n                if (filter.pattern !== undefined) {\n                    const matcher = new minimatch.Minimatch(filter.pattern, { noext: true });\n                    if (!matcher.makeRe()) {\n                        return false;\n                    }\n                    if (!matcher.match(resource.fsPath)) {\n                        return false;\n                    }\n                }\n            }\n            return true;\n        };\n        const matches = (document) => {\n            return document instanceof vscode_1.Uri\n                ? matchResource(document)\n                : vscode_1.languages.match(documentSelector, document) > 0 && tabs.isVisible(document);\n        };\n        const isActiveDocument = (document) => {\n            return document instanceof vscode_1.Uri\n                ? this.activeTextDocument?.uri.toString() === document.toString()\n                : this.activeTextDocument === document;\n        };\n        this.diagnosticRequestor = new DiagnosticRequestor(client, tabs, options);\n        this.backgroundScheduler = new BackgroundScheduler(this.diagnosticRequestor);\n        const addToBackgroundIfNeeded = (document) => {\n            if (!matches(document) || !options.interFileDependencies || isActiveDocument(document)) {\n                return;\n            }\n            this.backgroundScheduler.add(document);\n        };\n        this.activeTextDocument = vscode_1.window.activeTextEditor?.document;\n        vscode_1.window.onDidChangeActiveTextEditor((editor) => {\n            const oldActive = this.activeTextDocument;\n            this.activeTextDocument = editor?.document;\n            if (oldActive !== undefined) {\n                addToBackgroundIfNeeded(oldActive);\n            }\n            if (this.activeTextDocument !== undefined) {\n                this.backgroundScheduler.remove(this.activeTextDocument);\n            }\n        });\n        // For pull model diagnostics we pull for documents visible in the UI.\n        // From an eventing point of view we still rely on open document events\n        // and filter the documents that are not visible in the UI instead of\n        // listening to Tab events. Major reason is event timing since we need\n        // to ensure that the pull is send after the document open has reached\n        // the server.\n        // We always pull on open.\n        const openFeature = client.getFeature(vscode_languageserver_protocol_1.DidOpenTextDocumentNotification.method);\n        disposables.push(openFeature.onNotificationSent((event) => {\n            const textDocument = event.textDocument;\n            // We already know about this document. This can happen via a tab open.\n            if (this.diagnosticRequestor.knows(PullState.document, textDocument)) {\n                return;\n            }\n            if (matches(textDocument)) {\n                this.diagnosticRequestor.pull(textDocument, () => { addToBackgroundIfNeeded(textDocument); });\n            }\n        }));\n        disposables.push(tabs.onOpen((opened) => {\n            for (const resource of opened) {\n                // We already know about this document. This can happen via a document open.\n                if (this.diagnosticRequestor.knows(PullState.document, resource)) {\n                    continue;\n                }\n                const uriStr = resource.toString();\n                let textDocument;\n                for (const item of vscode_1.workspace.textDocuments) {\n                    if (uriStr === item.uri.toString()) {\n                        textDocument = item;\n                        break;\n                    }\n                }\n                // In VS Code the event timing is as follows:\n                // 1. tab events are fired.\n                // 2. open document events are fired and internal data structures like\n                //    workspace.textDocuments and Window.activeTextEditor are updated.\n                //\n                // This means: for newly created tab/editors we don't find the underlying\n                // document yet. So we do nothing an rely on the underlying open document event\n                // to be fired.\n                if (textDocument !== undefined && matches(textDocument)) {\n                    this.diagnosticRequestor.pull(textDocument, () => { addToBackgroundIfNeeded(textDocument); });\n                }\n            }\n        }));\n        // Pull all diagnostics for documents that are already open\n        const pulledTextDocuments = new Set();\n        for (const textDocument of vscode_1.workspace.textDocuments) {\n            if (matches(textDocument)) {\n                this.diagnosticRequestor.pull(textDocument, () => { addToBackgroundIfNeeded(textDocument); });\n                pulledTextDocuments.add(textDocument.uri.toString());\n            }\n        }\n        // Pull all tabs if not already pulled as text document\n        if (diagnosticPullOptions.onTabs === true) {\n            for (const resource of tabs.getTabResources()) {\n                if (!pulledTextDocuments.has(resource.toString()) && matches(resource)) {\n                    this.diagnosticRequestor.pull(resource, () => { addToBackgroundIfNeeded(resource); });\n                }\n            }\n        }\n        // We don't need to pull on tab open since we will receive a document open as well later on\n        // and that event allows us to use a document for a match check which will have a set\n        // language id.\n        if (diagnosticPullOptions.onChange === true) {\n            const changeFeature = client.getFeature(vscode_languageserver_protocol_1.DidChangeTextDocumentNotification.method);\n            disposables.push(changeFeature.onNotificationSent(async (event) => {\n                const textDocument = event.textDocument;\n                if ((diagnosticPullOptions.filter === undefined || !diagnosticPullOptions.filter(textDocument, DiagnosticPullMode.onType)) && this.diagnosticRequestor.knows(PullState.document, textDocument)) {\n                    this.diagnosticRequestor.pull(textDocument, () => { this.backgroundScheduler.trigger(); });\n                }\n            }));\n        }\n        if (diagnosticPullOptions.onSave === true) {\n            const saveFeature = client.getFeature(vscode_languageserver_protocol_1.DidSaveTextDocumentNotification.method);\n            disposables.push(saveFeature.onNotificationSent((event) => {\n                const textDocument = event.textDocument;\n                if ((diagnosticPullOptions.filter === undefined || !diagnosticPullOptions.filter(textDocument, DiagnosticPullMode.onSave)) && this.diagnosticRequestor.knows(PullState.document, textDocument)) {\n                    this.diagnosticRequestor.pull(event.textDocument, () => { this.backgroundScheduler.trigger(); });\n                }\n            }));\n        }\n        // When the document closes clear things up\n        const closeFeature = client.getFeature(vscode_languageserver_protocol_1.DidCloseTextDocumentNotification.method);\n        disposables.push(closeFeature.onNotificationSent((event) => {\n            this.cleanUpDocument(event.textDocument);\n        }));\n        // Same when a tabs closes.\n        tabs.onClose((closed) => {\n            for (const document of closed) {\n                this.cleanUpDocument(document);\n            }\n        });\n        // We received a did change from the server.\n        this.diagnosticRequestor.onDidChangeDiagnosticsEmitter.event(() => {\n            for (const textDocument of vscode_1.workspace.textDocuments) {\n                if (matches(textDocument)) {\n                    this.diagnosticRequestor.pull(textDocument);\n                }\n            }\n        });\n        // da348dc5-c30a-4515-9d98-31ff3be38d14 is the test UUID to test the middle ware. So don't auto trigger pulls.\n        if (options.workspaceDiagnostics === true && options.identifier !== 'da348dc5-c30a-4515-9d98-31ff3be38d14') {\n            this.diagnosticRequestor.pullWorkspace();\n        }\n        this.disposable = vscode_1.Disposable.from(...disposables, this.backgroundScheduler, this.diagnosticRequestor);\n    }\n    get onDidChangeDiagnosticsEmitter() {\n        return this.diagnosticRequestor.onDidChangeDiagnosticsEmitter;\n    }\n    get diagnostics() {\n        return this.diagnosticRequestor.provider;\n    }\n    cleanUpDocument(document) {\n        if (this.diagnosticRequestor.knows(PullState.document, document)) {\n            this.diagnosticRequestor.forgetDocument(document);\n            this.backgroundScheduler.remove(document);\n        }\n    }\n}\nclass DiagnosticFeature extends features_1.TextDocumentLanguageFeature {\n    constructor(client) {\n        super(client, vscode_languageserver_protocol_1.DocumentDiagnosticRequest.type);\n    }\n    fillClientCapabilities(capabilities) {\n        let capability = ensure(ensure(capabilities, 'textDocument'), 'diagnostic');\n        capability.dynamicRegistration = true;\n        // We first need to decide how a UI will look with related documents.\n        // An easy implementation would be to only show related diagnostics for\n        // the active editor.\n        capability.relatedDocumentSupport = false;\n        ensure(ensure(capabilities, 'workspace'), 'diagnostics').refreshSupport = true;\n    }\n    initialize(capabilities, documentSelector) {\n        const client = this._client;\n        client.onRequest(vscode_languageserver_protocol_1.DiagnosticRefreshRequest.type, async () => {\n            for (const provider of this.getAllProviders()) {\n                provider.onDidChangeDiagnosticsEmitter.fire();\n            }\n        });\n        let [id, options] = this.getRegistration(documentSelector, capabilities.diagnosticProvider);\n        if (!id || !options) {\n            return;\n        }\n        this.register({ id: id, registerOptions: options });\n    }\n    clear() {\n        if (this.tabs !== undefined) {\n            this.tabs.dispose();\n            this.tabs = undefined;\n        }\n        super.clear();\n    }\n    registerLanguageProvider(options) {\n        if (this.tabs === undefined) {\n            this.tabs = new Tabs();\n        }\n        const provider = new DiagnosticFeatureProviderImpl(this._client, this.tabs, options);\n        return [provider.disposable, provider];\n    }\n}\nexports.DiagnosticFeature = DiagnosticFeature;\n", "\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NotebookDocumentSyncFeature = void 0;\nconst vscode = require(\"vscode\");\nconst minimatch = require(\"minimatch\");\nconst proto = require(\"vscode-languageserver-protocol\");\nconst UUID = require(\"./utils/uuid\");\nconst Is = require(\"./utils/is\");\nfunction ensure(target, key) {\n    if (target[key] === void 0) {\n        target[key] = {};\n    }\n    return target[key];\n}\nvar Converter;\n(function (Converter) {\n    let c2p;\n    (function (c2p) {\n        function asVersionedNotebookDocumentIdentifier(notebookDocument, base) {\n            return {\n                version: notebookDocument.version,\n                uri: base.asUri(notebookDocument.uri)\n            };\n        }\n        c2p.asVersionedNotebookDocumentIdentifier = asVersionedNotebookDocumentIdentifier;\n        function asNotebookDocument(notebookDocument, cells, base) {\n            const result = proto.NotebookDocument.create(base.asUri(notebookDocument.uri), notebookDocument.notebookType, notebookDocument.version, asNotebookCells(cells, base));\n            if (Object.keys(notebookDocument.metadata).length > 0) {\n                result.metadata = asMetadata(notebookDocument.metadata);\n            }\n            return result;\n        }\n        c2p.asNotebookDocument = asNotebookDocument;\n        function asNotebookCells(cells, base) {\n            return cells.map(cell => asNotebookCell(cell, base));\n        }\n        c2p.asNotebookCells = asNotebookCells;\n        function asMetadata(metadata) {\n            const seen = new Set();\n            return deepCopy(seen, metadata);\n        }\n        c2p.asMetadata = asMetadata;\n        function asNotebookCell(cell, base) {\n            const result = proto.NotebookCell.create(asNotebookCellKind(cell.kind), base.asUri(cell.document.uri));\n            if (Object.keys(cell.metadata).length > 0) {\n                result.metadata = asMetadata(cell.metadata);\n            }\n            if (cell.executionSummary !== undefined && (Is.number(cell.executionSummary.executionOrder) && Is.boolean(cell.executionSummary.success))) {\n                result.executionSummary = {\n                    executionOrder: cell.executionSummary.executionOrder,\n                    success: cell.executionSummary.success\n                };\n            }\n            return result;\n        }\n        c2p.asNotebookCell = asNotebookCell;\n        function asNotebookCellKind(kind) {\n            switch (kind) {\n                case vscode.NotebookCellKind.Markup:\n                    return proto.NotebookCellKind.Markup;\n                case vscode.NotebookCellKind.Code:\n                    return proto.NotebookCellKind.Code;\n            }\n        }\n        function deepCopy(seen, value) {\n            if (seen.has(value)) {\n                throw new Error(`Can't deep copy cyclic structures.`);\n            }\n            if (Array.isArray(value)) {\n                const result = [];\n                for (const elem of value) {\n                    if (elem !== null && typeof elem === 'object' || Array.isArray(elem)) {\n                        result.push(deepCopy(seen, elem));\n                    }\n                    else {\n                        if (elem instanceof RegExp) {\n                            throw new Error(`Can't transfer regular expressions to the server`);\n                        }\n                        result.push(elem);\n                    }\n                }\n                return result;\n            }\n            else {\n                const props = Object.keys(value);\n                const result = Object.create(null);\n                for (const prop of props) {\n                    const elem = value[prop];\n                    if (elem !== null && typeof elem === 'object' || Array.isArray(elem)) {\n                        result[prop] = deepCopy(seen, elem);\n                    }\n                    else {\n                        if (elem instanceof RegExp) {\n                            throw new Error(`Can't transfer regular expressions to the server`);\n                        }\n                        result[prop] = elem;\n                    }\n                }\n                return result;\n            }\n        }\n        function asTextContentChange(event, base) {\n            const params = base.asChangeTextDocumentParams(event, event.document.uri, event.document.version);\n            return { document: params.textDocument, changes: params.contentChanges };\n        }\n        c2p.asTextContentChange = asTextContentChange;\n        function asNotebookDocumentChangeEvent(event, base) {\n            const result = Object.create(null);\n            if (event.metadata) {\n                result.metadata = Converter.c2p.asMetadata(event.metadata);\n            }\n            if (event.cells !== undefined) {\n                const cells = Object.create(null);\n                const changedCells = event.cells;\n                if (changedCells.structure) {\n                    cells.structure = {\n                        array: {\n                            start: changedCells.structure.array.start,\n                            deleteCount: changedCells.structure.array.deleteCount,\n                            cells: changedCells.structure.array.cells !== undefined ? changedCells.structure.array.cells.map(cell => Converter.c2p.asNotebookCell(cell, base)) : undefined\n                        },\n                        didOpen: changedCells.structure.didOpen !== undefined\n                            ? changedCells.structure.didOpen.map(cell => base.asOpenTextDocumentParams(cell.document).textDocument)\n                            : undefined,\n                        didClose: changedCells.structure.didClose !== undefined\n                            ? changedCells.structure.didClose.map(cell => base.asCloseTextDocumentParams(cell.document).textDocument)\n                            : undefined\n                    };\n                }\n                if (changedCells.data !== undefined) {\n                    cells.data = changedCells.data.map(cell => Converter.c2p.asNotebookCell(cell, base));\n                }\n                if (changedCells.textContent !== undefined) {\n                    cells.textContent = changedCells.textContent.map(event => Converter.c2p.asTextContentChange(event, base));\n                }\n                if (Object.keys(cells).length > 0) {\n                    result.cells = cells;\n                }\n            }\n            return result;\n        }\n        c2p.asNotebookDocumentChangeEvent = asNotebookDocumentChangeEvent;\n    })(c2p = Converter.c2p || (Converter.c2p = {}));\n})(Converter || (Converter = {}));\nvar $NotebookCell;\n(function ($NotebookCell) {\n    function computeDiff(originalCells, modifiedCells, compareMetadata) {\n        const originalLength = originalCells.length;\n        const modifiedLength = modifiedCells.length;\n        let startIndex = 0;\n        while (startIndex < modifiedLength && startIndex < originalLength && equals(originalCells[startIndex], modifiedCells[startIndex], compareMetadata)) {\n            startIndex++;\n        }\n        if (startIndex < modifiedLength && startIndex < originalLength) {\n            let originalEndIndex = originalLength - 1;\n            let modifiedEndIndex = modifiedLength - 1;\n            while (originalEndIndex >= 0 && modifiedEndIndex >= 0 && equals(originalCells[originalEndIndex], modifiedCells[modifiedEndIndex], compareMetadata)) {\n                originalEndIndex--;\n                modifiedEndIndex--;\n            }\n            const deleteCount = (originalEndIndex + 1) - startIndex;\n            const newCells = startIndex === modifiedEndIndex + 1 ? undefined : modifiedCells.slice(startIndex, modifiedEndIndex + 1);\n            return newCells !== undefined ? { start: startIndex, deleteCount, cells: newCells } : { start: startIndex, deleteCount };\n        }\n        else if (startIndex < modifiedLength) {\n            return { start: startIndex, deleteCount: 0, cells: modifiedCells.slice(startIndex) };\n        }\n        else if (startIndex < originalLength) {\n            return { start: startIndex, deleteCount: originalLength - startIndex };\n        }\n        else {\n            // The two arrays are the same.\n            return undefined;\n        }\n    }\n    $NotebookCell.computeDiff = computeDiff;\n    /**\n     * We only sync kind, document, execution and metadata to the server. So we only need to compare those.\n     */\n    function equals(one, other, compareMetaData = true) {\n        if (one.kind !== other.kind || one.document.uri.toString() !== other.document.uri.toString() || one.document.languageId !== other.document.languageId ||\n            !equalsExecution(one.executionSummary, other.executionSummary)) {\n            return false;\n        }\n        return !compareMetaData || (compareMetaData && equalsMetadata(one.metadata, other.metadata));\n    }\n    function equalsExecution(one, other) {\n        if (one === other) {\n            return true;\n        }\n        if (one === undefined || other === undefined) {\n            return false;\n        }\n        return one.executionOrder === other.executionOrder && one.success === other.success && equalsTiming(one.timing, other.timing);\n    }\n    function equalsTiming(one, other) {\n        if (one === other) {\n            return true;\n        }\n        if (one === undefined || other === undefined) {\n            return false;\n        }\n        return one.startTime === other.startTime && one.endTime === other.endTime;\n    }\n    function equalsMetadata(one, other) {\n        if (one === other) {\n            return true;\n        }\n        if (one === null || one === undefined || other === null || other === undefined) {\n            return false;\n        }\n        if (typeof one !== typeof other) {\n            return false;\n        }\n        if (typeof one !== 'object') {\n            return false;\n        }\n        const oneArray = Array.isArray(one);\n        const otherArray = Array.isArray(other);\n        if (oneArray !== otherArray) {\n            return false;\n        }\n        if (oneArray && otherArray) {\n            if (one.length !== other.length) {\n                return false;\n            }\n            for (let i = 0; i < one.length; i++) {\n                if (!equalsMetadata(one[i], other[i])) {\n                    return false;\n                }\n            }\n        }\n        if (isObjectLiteral(one) && isObjectLiteral(other)) {\n            const oneKeys = Object.keys(one);\n            const otherKeys = Object.keys(other);\n            if (oneKeys.length !== otherKeys.length) {\n                return false;\n            }\n            oneKeys.sort();\n            otherKeys.sort();\n            if (!equalsMetadata(oneKeys, otherKeys)) {\n                return false;\n            }\n            for (let i = 0; i < oneKeys.length; i++) {\n                const prop = oneKeys[i];\n                if (!equalsMetadata(one[prop], other[prop])) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n    function isObjectLiteral(value) {\n        return value !== null && typeof value === 'object';\n    }\n    $NotebookCell.isObjectLiteral = isObjectLiteral;\n})($NotebookCell || ($NotebookCell = {}));\nvar $NotebookDocumentFilter;\n(function ($NotebookDocumentFilter) {\n    function matchNotebook(filter, notebookDocument) {\n        if (typeof filter === 'string') {\n            return filter === '*' || notebookDocument.notebookType === filter;\n        }\n        if (filter.notebookType !== undefined && filter.notebookType !== '*' && notebookDocument.notebookType !== filter.notebookType) {\n            return false;\n        }\n        const uri = notebookDocument.uri;\n        if (filter.scheme !== undefined && filter.scheme !== '*' && uri.scheme !== filter.scheme) {\n            return false;\n        }\n        if (filter.pattern !== undefined) {\n            const matcher = new minimatch.Minimatch(filter.pattern, { noext: true });\n            if (!matcher.makeRe()) {\n                return false;\n            }\n            if (!matcher.match(uri.fsPath)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    $NotebookDocumentFilter.matchNotebook = matchNotebook;\n})($NotebookDocumentFilter || ($NotebookDocumentFilter = {}));\nvar $NotebookDocumentSyncOptions;\n(function ($NotebookDocumentSyncOptions) {\n    function asDocumentSelector(options) {\n        const selector = options.notebookSelector;\n        const result = [];\n        for (const element of selector) {\n            const notebookType = (typeof element.notebook === 'string' ? element.notebook : element.notebook?.notebookType) ?? '*';\n            const scheme = (typeof element.notebook === 'string') ? undefined : element.notebook?.scheme;\n            const pattern = (typeof element.notebook === 'string') ? undefined : element.notebook?.pattern;\n            if (element.cells !== undefined) {\n                for (const cell of element.cells) {\n                    result.push(asDocumentFilter(notebookType, scheme, pattern, cell.language));\n                }\n            }\n            else {\n                result.push(asDocumentFilter(notebookType, scheme, pattern, undefined));\n            }\n        }\n        return result;\n    }\n    $NotebookDocumentSyncOptions.asDocumentSelector = asDocumentSelector;\n    function asDocumentFilter(notebookType, scheme, pattern, language) {\n        return scheme === undefined && pattern === undefined\n            ? { notebook: notebookType, language }\n            : { notebook: { notebookType, scheme, pattern }, language };\n    }\n})($NotebookDocumentSyncOptions || ($NotebookDocumentSyncOptions = {}));\nvar SyncInfo;\n(function (SyncInfo) {\n    function create(cells) {\n        return {\n            cells,\n            uris: new Set(cells.map(cell => cell.document.uri.toString()))\n        };\n    }\n    SyncInfo.create = create;\n})(SyncInfo || (SyncInfo = {}));\nclass NotebookDocumentSyncFeatureProvider {\n    constructor(client, options) {\n        this.client = client;\n        this.options = options;\n        this.notebookSyncInfo = new Map();\n        this.notebookDidOpen = new Set();\n        this.disposables = [];\n        this.selector = client.protocol2CodeConverter.asDocumentSelector($NotebookDocumentSyncOptions.asDocumentSelector(options));\n        // open\n        vscode.workspace.onDidOpenNotebookDocument((notebookDocument) => {\n            this.notebookDidOpen.add(notebookDocument.uri.toString());\n            this.didOpen(notebookDocument);\n        }, undefined, this.disposables);\n        for (const notebookDocument of vscode.workspace.notebookDocuments) {\n            this.notebookDidOpen.add(notebookDocument.uri.toString());\n            this.didOpen(notebookDocument);\n        }\n        // Notebook document changed.\n        vscode.workspace.onDidChangeNotebookDocument(event => this.didChangeNotebookDocument(event), undefined, this.disposables);\n        //save\n        if (this.options.save === true) {\n            vscode.workspace.onDidSaveNotebookDocument(notebookDocument => this.didSave(notebookDocument), undefined, this.disposables);\n        }\n        // close\n        vscode.workspace.onDidCloseNotebookDocument((notebookDocument) => {\n            this.didClose(notebookDocument);\n            this.notebookDidOpen.delete(notebookDocument.uri.toString());\n        }, undefined, this.disposables);\n    }\n    getState() {\n        for (const notebook of vscode.workspace.notebookDocuments) {\n            const matchingCells = this.getMatchingCells(notebook);\n            if (matchingCells !== undefined) {\n                return { kind: 'document', id: '$internal', registrations: true, matches: true };\n            }\n        }\n        return { kind: 'document', id: '$internal', registrations: true, matches: false };\n    }\n    get mode() {\n        return 'notebook';\n    }\n    handles(textDocument) {\n        return vscode.languages.match(this.selector, textDocument) > 0;\n    }\n    didOpenNotebookCellTextDocument(notebookDocument, cell) {\n        if (vscode.languages.match(this.selector, cell.document) === 0) {\n            return;\n        }\n        if (!this.notebookDidOpen.has(notebookDocument.uri.toString())) {\n            // We have never received an open notification for the notebook document.\n            // VS Code guarantees that we first get cell document open and then\n            // notebook open. So simply wait for the notebook open.\n            return;\n        }\n        const syncInfo = this.notebookSyncInfo.get(notebookDocument.uri.toString());\n        // In VS Code we receive a notebook open before a cell document open.\n        // The document and the cell is synced.\n        const cellMatches = this.cellMatches(notebookDocument, cell);\n        if (syncInfo !== undefined) {\n            const cellIsSynced = syncInfo.uris.has(cell.document.uri.toString());\n            if ((cellMatches && cellIsSynced) || (!cellMatches && !cellIsSynced)) {\n                // The cell doesn't match and was not synced or it matches and is synced.\n                // In both cases nothing to do.\n                //\n                // Note that if the language mode of a document changes we remove the\n                // cell and add it back to update the language mode on the server side.\n                return;\n            }\n            if (cellMatches) {\n                // don't use cells from above since there might be more matching cells in the notebook\n                // Since we had a matching cell above we will have matching cells now.\n                const matchingCells = this.getMatchingCells(notebookDocument);\n                if (matchingCells !== undefined) {\n                    const event = this.asNotebookDocumentChangeEvent(notebookDocument, undefined, syncInfo, matchingCells);\n                    if (event !== undefined) {\n                        this.doSendChange(event, matchingCells).catch(() => { });\n                    }\n                }\n            }\n        }\n        else {\n            // No sync info. But we have a open event for the notebook document\n            // itself. If the cell matches then we need to send an open with\n            // exactly that cell.\n            if (cellMatches) {\n                this.doSendOpen(notebookDocument, [cell]).catch(() => { });\n            }\n        }\n    }\n    didChangeNotebookCellTextDocument(notebookDocument, event) {\n        // No match with the selector\n        if (vscode.languages.match(this.selector, event.document) === 0) {\n            return;\n        }\n        this.doSendChange({\n            notebook: notebookDocument,\n            cells: { textContent: [event] }\n        }, undefined).catch(() => { });\n    }\n    didCloseNotebookCellTextDocument(notebookDocument, cell) {\n        const syncInfo = this.notebookSyncInfo.get(notebookDocument.uri.toString());\n        if (syncInfo === undefined) {\n            // The notebook document got never synced. So it doesn't matter if a cell\n            // document closes.\n            return;\n        }\n        const cellUri = cell.document.uri;\n        const index = syncInfo.cells.findIndex((item) => item.document.uri.toString() === cellUri.toString());\n        if (index === -1) {\n            // The cell never got synced or it got deleted and we now received the document\n            // close event.\n            return;\n        }\n        if (index === 0 && syncInfo.cells.length === 1) {\n            // The last cell. Close the notebook document in the server.\n            this.doSendClose(notebookDocument, syncInfo.cells).catch(() => { });\n        }\n        else {\n            const newCells = syncInfo.cells.slice();\n            const deleted = newCells.splice(index, 1);\n            this.doSendChange({\n                notebook: notebookDocument,\n                cells: {\n                    structure: {\n                        array: { start: index, deleteCount: 1 },\n                        didClose: deleted\n                    }\n                }\n            }, newCells).catch(() => { });\n        }\n    }\n    dispose() {\n        for (const disposable of this.disposables) {\n            disposable.dispose();\n        }\n    }\n    didOpen(notebookDocument, matchingCells = this.getMatchingCells(notebookDocument), syncInfo = this.notebookSyncInfo.get(notebookDocument.uri.toString())) {\n        if (syncInfo !== undefined) {\n            if (matchingCells !== undefined) {\n                const event = this.asNotebookDocumentChangeEvent(notebookDocument, undefined, syncInfo, matchingCells);\n                if (event !== undefined) {\n                    this.doSendChange(event, matchingCells).catch(() => { });\n                }\n            }\n            else {\n                this.doSendClose(notebookDocument, []).catch(() => { });\n            }\n        }\n        else {\n            // Check if we need to sync the notebook document.\n            if (matchingCells === undefined) {\n                return;\n            }\n            this.doSendOpen(notebookDocument, matchingCells).catch(() => { });\n        }\n    }\n    didChangeNotebookDocument(event) {\n        const notebookDocument = event.notebook;\n        const syncInfo = this.notebookSyncInfo.get(notebookDocument.uri.toString());\n        if (syncInfo === undefined) {\n            // We have no changes to the cells. Since the notebook wasn't synced\n            // it will not be synced now.\n            if (event.contentChanges.length === 0) {\n                return;\n            }\n            // Check if we have new matching cells.\n            const cells = this.getMatchingCells(notebookDocument);\n            // No matching cells and the notebook never synced. So still no need\n            // to sync it.\n            if (cells === undefined) {\n                return;\n            }\n            // Open the notebook document and ignore the rest of the changes\n            // this the notebooks will be synced with the correct settings.\n            this.didOpen(notebookDocument, cells, syncInfo);\n        }\n        else {\n            // The notebook is synced. First check if we have no matching\n            // cells anymore and if so close the notebook\n            const cells = this.getMatchingCells(notebookDocument);\n            if (cells === undefined) {\n                this.didClose(notebookDocument, syncInfo);\n                return;\n            }\n            const newEvent = this.asNotebookDocumentChangeEvent(event.notebook, event, syncInfo, cells);\n            if (newEvent !== undefined) {\n                this.doSendChange(newEvent, cells).catch(() => { });\n            }\n        }\n    }\n    didSave(notebookDocument) {\n        const syncInfo = this.notebookSyncInfo.get(notebookDocument.uri.toString());\n        if (syncInfo === undefined) {\n            return;\n        }\n        this.doSendSave(notebookDocument).catch(() => { });\n    }\n    didClose(notebookDocument, syncInfo = this.notebookSyncInfo.get(notebookDocument.uri.toString())) {\n        if (syncInfo === undefined) {\n            return;\n        }\n        const syncedCells = notebookDocument.getCells().filter(cell => syncInfo.uris.has(cell.document.uri.toString()));\n        this.doSendClose(notebookDocument, syncedCells).catch(() => { });\n    }\n    async sendDidOpenNotebookDocument(notebookDocument) {\n        const cells = this.getMatchingCells(notebookDocument);\n        if (cells === undefined) {\n            return;\n        }\n        return this.doSendOpen(notebookDocument, cells);\n    }\n    async doSendOpen(notebookDocument, cells) {\n        const send = async (notebookDocument, cells) => {\n            const nb = Converter.c2p.asNotebookDocument(notebookDocument, cells, this.client.code2ProtocolConverter);\n            const cellDocuments = cells.map(cell => this.client.code2ProtocolConverter.asTextDocumentItem(cell.document));\n            try {\n                await this.client.sendNotification(proto.DidOpenNotebookDocumentNotification.type, {\n                    notebookDocument: nb,\n                    cellTextDocuments: cellDocuments\n                });\n            }\n            catch (error) {\n                this.client.error('Sending DidOpenNotebookDocumentNotification failed', error);\n                throw error;\n            }\n        };\n        const middleware = this.client.middleware?.notebooks;\n        this.notebookSyncInfo.set(notebookDocument.uri.toString(), SyncInfo.create(cells));\n        return middleware?.didOpen !== undefined ? middleware.didOpen(notebookDocument, cells, send) : send(notebookDocument, cells);\n    }\n    async sendDidChangeNotebookDocument(event) {\n        return this.doSendChange(event, undefined);\n    }\n    async doSendChange(event, cells = this.getMatchingCells(event.notebook)) {\n        const send = async (event) => {\n            try {\n                await this.client.sendNotification(proto.DidChangeNotebookDocumentNotification.type, {\n                    notebookDocument: Converter.c2p.asVersionedNotebookDocumentIdentifier(event.notebook, this.client.code2ProtocolConverter),\n                    change: Converter.c2p.asNotebookDocumentChangeEvent(event, this.client.code2ProtocolConverter)\n                });\n            }\n            catch (error) {\n                this.client.error('Sending DidChangeNotebookDocumentNotification failed', error);\n                throw error;\n            }\n        };\n        const middleware = this.client.middleware?.notebooks;\n        if (event.cells?.structure !== undefined) {\n            this.notebookSyncInfo.set(event.notebook.uri.toString(), SyncInfo.create(cells ?? []));\n        }\n        return middleware?.didChange !== undefined ? middleware?.didChange(event, send) : send(event);\n    }\n    async sendDidSaveNotebookDocument(notebookDocument) {\n        return this.doSendSave(notebookDocument);\n    }\n    async doSendSave(notebookDocument) {\n        const send = async (notebookDocument) => {\n            try {\n                await this.client.sendNotification(proto.DidSaveNotebookDocumentNotification.type, {\n                    notebookDocument: { uri: this.client.code2ProtocolConverter.asUri(notebookDocument.uri) }\n                });\n            }\n            catch (error) {\n                this.client.error('Sending DidSaveNotebookDocumentNotification failed', error);\n                throw error;\n            }\n        };\n        const middleware = this.client.middleware?.notebooks;\n        return middleware?.didSave !== undefined ? middleware.didSave(notebookDocument, send) : send(notebookDocument);\n    }\n    async sendDidCloseNotebookDocument(notebookDocument) {\n        return this.doSendClose(notebookDocument, this.getMatchingCells(notebookDocument) ?? []);\n    }\n    async doSendClose(notebookDocument, cells) {\n        const send = async (notebookDocument, cells) => {\n            try {\n                await this.client.sendNotification(proto.DidCloseNotebookDocumentNotification.type, {\n                    notebookDocument: { uri: this.client.code2ProtocolConverter.asUri(notebookDocument.uri) },\n                    cellTextDocuments: cells.map(cell => this.client.code2ProtocolConverter.asTextDocumentIdentifier(cell.document))\n                });\n            }\n            catch (error) {\n                this.client.error('Sending DidCloseNotebookDocumentNotification failed', error);\n                throw error;\n            }\n        };\n        const middleware = this.client.middleware?.notebooks;\n        this.notebookSyncInfo.delete(notebookDocument.uri.toString());\n        return middleware?.didClose !== undefined ? middleware.didClose(notebookDocument, cells, send) : send(notebookDocument, cells);\n    }\n    asNotebookDocumentChangeEvent(notebook, event, syncInfo, matchingCells) {\n        if (event !== undefined && event.notebook !== notebook) {\n            throw new Error('Notebook must be identical');\n        }\n        const result = {\n            notebook: notebook\n        };\n        if (event?.metadata !== undefined) {\n            result.metadata = Converter.c2p.asMetadata(event.metadata);\n        }\n        let matchingCellsSet;\n        if (event?.cellChanges !== undefined && event.cellChanges.length > 0) {\n            const data = [];\n            // Only consider the new matching cells.\n            matchingCellsSet = new Set(matchingCells.map(cell => cell.document.uri.toString()));\n            for (const cellChange of event.cellChanges) {\n                if (matchingCellsSet.has(cellChange.cell.document.uri.toString()) && (cellChange.executionSummary !== undefined || cellChange.metadata !== undefined)) {\n                    data.push(cellChange.cell);\n                }\n            }\n            if (data.length > 0) {\n                result.cells = result.cells ?? {};\n                result.cells.data = data;\n            }\n        }\n        if (((event?.contentChanges !== undefined && event.contentChanges.length > 0) || event === undefined) && syncInfo !== undefined && matchingCells !== undefined) {\n            // We still have matching cells. Check if the cell changes\n            // affect the notebook on the server side.\n            const oldCells = syncInfo.cells;\n            const newCells = matchingCells;\n            // meta data changes are reported using on the cell itself. So we can ignore comparing\n            // it which has a positive effect on performance.\n            const diff = $NotebookCell.computeDiff(oldCells, newCells, false);\n            let addedCells;\n            let removedCells;\n            if (diff !== undefined) {\n                addedCells = diff.cells === undefined\n                    ? new Map()\n                    : new Map(diff.cells.map(cell => [cell.document.uri.toString(), cell]));\n                removedCells = diff.deleteCount === 0\n                    ? new Map()\n                    : new Map(oldCells.slice(diff.start, diff.start + diff.deleteCount).map(cell => [cell.document.uri.toString(), cell]));\n                // Remove the onces that got deleted and inserted again.\n                for (const key of Array.from(removedCells.keys())) {\n                    if (addedCells.has(key)) {\n                        removedCells.delete(key);\n                        addedCells.delete(key);\n                    }\n                }\n                result.cells = result.cells ?? {};\n                const didOpen = [];\n                const didClose = [];\n                if (addedCells.size > 0 || removedCells.size > 0) {\n                    for (const cell of addedCells.values()) {\n                        didOpen.push(cell);\n                    }\n                    for (const cell of removedCells.values()) {\n                        didClose.push(cell);\n                    }\n                }\n                result.cells.structure = {\n                    array: diff,\n                    didOpen,\n                    didClose\n                };\n            }\n        }\n        // The notebook is a property as well.\n        return Object.keys(result).length > 1 ? result : undefined;\n    }\n    getMatchingCells(notebookDocument, cells = notebookDocument.getCells()) {\n        if (this.options.notebookSelector === undefined) {\n            return undefined;\n        }\n        for (const item of this.options.notebookSelector) {\n            if (item.notebook === undefined || $NotebookDocumentFilter.matchNotebook(item.notebook, notebookDocument)) {\n                const filtered = this.filterCells(notebookDocument, cells, item.cells);\n                return filtered.length === 0 ? undefined : filtered;\n            }\n        }\n        return undefined;\n    }\n    cellMatches(notebookDocument, cell) {\n        const cells = this.getMatchingCells(notebookDocument, [cell]);\n        return cells !== undefined && cells[0] === cell;\n    }\n    filterCells(notebookDocument, cells, cellSelector) {\n        const filtered = cellSelector !== undefined ? cells.filter((cell) => {\n            const cellLanguage = cell.document.languageId;\n            return cellSelector.some((filter => (filter.language === '*' || cellLanguage === filter.language)));\n        }) : cells;\n        return typeof this.client.clientOptions.notebookDocumentOptions?.filterCells === 'function'\n            ? this.client.clientOptions.notebookDocumentOptions.filterCells(notebookDocument, filtered)\n            : filtered;\n    }\n}\nclass NotebookDocumentSyncFeature {\n    constructor(client) {\n        this.client = client;\n        this.registrations = new Map();\n        this.registrationType = proto.NotebookDocumentSyncRegistrationType.type;\n        // We don't receive an event for cells where the document changes its language mode\n        // Since we allow servers to filter on the language mode we fire such an event ourselves.\n        vscode.workspace.onDidOpenTextDocument((textDocument) => {\n            if (textDocument.uri.scheme !== NotebookDocumentSyncFeature.CellScheme) {\n                return;\n            }\n            const [notebookDocument, notebookCell] = this.findNotebookDocumentAndCell(textDocument);\n            if (notebookDocument === undefined || notebookCell === undefined) {\n                return;\n            }\n            for (const provider of this.registrations.values()) {\n                if (provider instanceof NotebookDocumentSyncFeatureProvider) {\n                    provider.didOpenNotebookCellTextDocument(notebookDocument, notebookCell);\n                }\n            }\n        });\n        vscode.workspace.onDidChangeTextDocument((event) => {\n            if (event.contentChanges.length === 0) {\n                return;\n            }\n            const textDocument = event.document;\n            if (textDocument.uri.scheme !== NotebookDocumentSyncFeature.CellScheme) {\n                return;\n            }\n            const [notebookDocument,] = this.findNotebookDocumentAndCell(textDocument);\n            if (notebookDocument === undefined) {\n                return;\n            }\n            for (const provider of this.registrations.values()) {\n                if (provider instanceof NotebookDocumentSyncFeatureProvider) {\n                    provider.didChangeNotebookCellTextDocument(notebookDocument, event);\n                }\n            }\n        });\n        vscode.workspace.onDidCloseTextDocument((textDocument) => {\n            if (textDocument.uri.scheme !== NotebookDocumentSyncFeature.CellScheme) {\n                return;\n            }\n            // There are two cases when we receive a close for a text document\n            // 1: the cell got removed. This is handled in `onDidChangeNotebookCells`\n            // 2: the language mode of a cell changed. This keeps the URI stable so\n            //    we will still find the cell and the notebook document.\n            const [notebookDocument, notebookCell] = this.findNotebookDocumentAndCell(textDocument);\n            if (notebookDocument === undefined || notebookCell === undefined) {\n                return;\n            }\n            for (const provider of this.registrations.values()) {\n                if (provider instanceof NotebookDocumentSyncFeatureProvider) {\n                    provider.didCloseNotebookCellTextDocument(notebookDocument, notebookCell);\n                }\n            }\n        });\n    }\n    getState() {\n        if (this.registrations.size === 0) {\n            return { kind: 'document', id: this.registrationType.method, registrations: false, matches: false };\n        }\n        for (const provider of this.registrations.values()) {\n            const state = provider.getState();\n            if (state.kind === 'document' && state.registrations === true && state.matches === true) {\n                return { kind: 'document', id: this.registrationType.method, registrations: true, matches: true };\n            }\n        }\n        return { kind: 'document', id: this.registrationType.method, registrations: true, matches: false };\n    }\n    fillClientCapabilities(capabilities) {\n        const synchronization = ensure(ensure(capabilities, 'notebookDocument'), 'synchronization');\n        synchronization.dynamicRegistration = true;\n        synchronization.executionSummarySupport = true;\n    }\n    preInitialize(capabilities) {\n        const options = capabilities.notebookDocumentSync;\n        if (options === undefined) {\n            return;\n        }\n        this.dedicatedChannel = this.client.protocol2CodeConverter.asDocumentSelector($NotebookDocumentSyncOptions.asDocumentSelector(options));\n    }\n    initialize(capabilities) {\n        const options = capabilities.notebookDocumentSync;\n        if (options === undefined) {\n            return;\n        }\n        const id = options.id ?? UUID.generateUuid();\n        this.register({ id, registerOptions: options });\n    }\n    register(data) {\n        const provider = new NotebookDocumentSyncFeatureProvider(this.client, data.registerOptions);\n        this.registrations.set(data.id, provider);\n    }\n    unregister(id) {\n        const provider = this.registrations.get(id);\n        provider && provider.dispose();\n    }\n    clear() {\n        for (const provider of this.registrations.values()) {\n            provider.dispose();\n        }\n        this.registrations.clear();\n    }\n    handles(textDocument) {\n        if (textDocument.uri.scheme !== NotebookDocumentSyncFeature.CellScheme) {\n            return false;\n        }\n        if (this.dedicatedChannel !== undefined && vscode.languages.match(this.dedicatedChannel, textDocument) > 0) {\n            return true;\n        }\n        for (const provider of this.registrations.values()) {\n            if (provider.handles(textDocument)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    getProvider(notebookCell) {\n        for (const provider of this.registrations.values()) {\n            if (provider.handles(notebookCell.document)) {\n                return provider;\n            }\n        }\n        return undefined;\n    }\n    findNotebookDocumentAndCell(textDocument) {\n        const uri = textDocument.uri.toString();\n        for (const notebookDocument of vscode.workspace.notebookDocuments) {\n            for (const cell of notebookDocument.getCells()) {\n                if (cell.document.uri.toString() === uri) {\n                    return [notebookDocument, cell];\n                }\n            }\n        }\n        return [undefined, undefined];\n    }\n}\nexports.NotebookDocumentSyncFeature = NotebookDocumentSyncFeature;\nNotebookDocumentSyncFeature.CellScheme = 'vscode-notebook-cell';\n", "\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SyncConfigurationFeature = exports.toJSONObject = exports.ConfigurationFeature = void 0;\nconst vscode_1 = require(\"vscode\");\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\nconst Is = require(\"./utils/is\");\nconst UUID = require(\"./utils/uuid\");\nconst features_1 = require(\"./features\");\n/**\n * Configuration pull model. From server to client.\n */\nclass ConfigurationFeature {\n    constructor(client) {\n        this._client = client;\n    }\n    getState() {\n        return { kind: 'static' };\n    }\n    fillClientCapabilities(capabilities) {\n        capabilities.workspace = capabilities.workspace || {};\n        capabilities.workspace.configuration = true;\n    }\n    initialize() {\n        let client = this._client;\n        client.onRequest(vscode_languageserver_protocol_1.ConfigurationRequest.type, (params, token) => {\n            let configuration = (params) => {\n                let result = [];\n                for (let item of params.items) {\n                    let resource = item.scopeUri !== void 0 && item.scopeUri !== null ? this._client.protocol2CodeConverter.asUri(item.scopeUri) : undefined;\n                    result.push(this.getConfiguration(resource, item.section !== null ? item.section : undefined));\n                }\n                return result;\n            };\n            let middleware = client.middleware.workspace;\n            return middleware && middleware.configuration\n                ? middleware.configuration(params, token, configuration)\n                : configuration(params, token);\n        });\n    }\n    getConfiguration(resource, section) {\n        let result = null;\n        if (section) {\n            let index = section.lastIndexOf('.');\n            if (index === -1) {\n                result = toJSONObject(vscode_1.workspace.getConfiguration(undefined, resource).get(section));\n            }\n            else {\n                let config = vscode_1.workspace.getConfiguration(section.substr(0, index), resource);\n                if (config) {\n                    result = toJSONObject(config.get(section.substr(index + 1)));\n                }\n            }\n        }\n        else {\n            let config = vscode_1.workspace.getConfiguration(undefined, resource);\n            result = {};\n            for (let key of Object.keys(config)) {\n                if (config.has(key)) {\n                    result[key] = toJSONObject(config.get(key));\n                }\n            }\n        }\n        if (result === undefined) {\n            result = null;\n        }\n        return result;\n    }\n    clear() {\n    }\n}\nexports.ConfigurationFeature = ConfigurationFeature;\nfunction toJSONObject(obj) {\n    if (obj) {\n        if (Array.isArray(obj)) {\n            return obj.map(toJSONObject);\n        }\n        else if (typeof obj === 'object') {\n            const res = Object.create(null);\n            for (const key in obj) {\n                if (Object.prototype.hasOwnProperty.call(obj, key)) {\n                    res[key] = toJSONObject(obj[key]);\n                }\n            }\n            return res;\n        }\n    }\n    return obj;\n}\nexports.toJSONObject = toJSONObject;\nclass SyncConfigurationFeature {\n    constructor(_client) {\n        this._client = _client;\n        this.isCleared = false;\n        this._listeners = new Map();\n    }\n    getState() {\n        return { kind: 'workspace', id: this.registrationType.method, registrations: this._listeners.size > 0 };\n    }\n    get registrationType() {\n        return vscode_languageserver_protocol_1.DidChangeConfigurationNotification.type;\n    }\n    fillClientCapabilities(capabilities) {\n        (0, features_1.ensure)((0, features_1.ensure)(capabilities, 'workspace'), 'didChangeConfiguration').dynamicRegistration = true;\n    }\n    initialize() {\n        this.isCleared = false;\n        let section = this._client.clientOptions.synchronize?.configurationSection;\n        if (section !== undefined) {\n            this.register({\n                id: UUID.generateUuid(),\n                registerOptions: {\n                    section: section\n                }\n            });\n        }\n    }\n    register(data) {\n        let disposable = vscode_1.workspace.onDidChangeConfiguration((event) => {\n            this.onDidChangeConfiguration(data.registerOptions.section, event);\n        });\n        this._listeners.set(data.id, disposable);\n        if (data.registerOptions.section !== undefined) {\n            this.onDidChangeConfiguration(data.registerOptions.section, undefined);\n        }\n    }\n    unregister(id) {\n        let disposable = this._listeners.get(id);\n        if (disposable) {\n            this._listeners.delete(id);\n            disposable.dispose();\n        }\n    }\n    clear() {\n        for (const disposable of this._listeners.values()) {\n            disposable.dispose();\n        }\n        this._listeners.clear();\n        this.isCleared = true;\n    }\n    onDidChangeConfiguration(configurationSection, event) {\n        if (this.isCleared) {\n            return;\n        }\n        let sections;\n        if (Is.string(configurationSection)) {\n            sections = [configurationSection];\n        }\n        else {\n            sections = configurationSection;\n        }\n        if (sections !== undefined && event !== undefined) {\n            let affected = sections.some((section) => event.affectsConfiguration(section));\n            if (!affected) {\n                return;\n            }\n        }\n        const didChangeConfiguration = async (sections) => {\n            if (sections === undefined) {\n                return this._client.sendNotification(vscode_languageserver_protocol_1.DidChangeConfigurationNotification.type, { settings: null });\n            }\n            else {\n                return this._client.sendNotification(vscode_languageserver_protocol_1.DidChangeConfigurationNotification.type, { settings: this.extractSettingsInformation(sections) });\n            }\n        };\n        let middleware = this._client.middleware.workspace?.didChangeConfiguration;\n        (middleware ? middleware(sections, didChangeConfiguration) : didChangeConfiguration(sections)).catch((error) => {\n            this._client.error(`Sending notification ${vscode_languageserver_protocol_1.DidChangeConfigurationNotification.type.method} failed`, error);\n        });\n    }\n    extractSettingsInformation(keys) {\n        function ensurePath(config, path) {\n            let current = config;\n            for (let i = 0; i < path.length - 1; i++) {\n                let obj = current[path[i]];\n                if (!obj) {\n                    obj = Object.create(null);\n                    current[path[i]] = obj;\n                }\n                current = obj;\n            }\n            return current;\n        }\n        let resource = this._client.clientOptions.workspaceFolder\n            ? this._client.clientOptions.workspaceFolder.uri\n            : undefined;\n        let result = Object.create(null);\n        for (let i = 0; i < keys.length; i++) {\n            let key = keys[i];\n            let index = key.indexOf('.');\n            let config = null;\n            if (index >= 0) {\n                config = vscode_1.workspace.getConfiguration(key.substr(0, index), resource).get(key.substr(index + 1));\n            }\n            else {\n                config = vscode_1.workspace.getConfiguration(undefined, resource).get(key);\n            }\n            if (config) {\n                let path = keys[i].split('.');\n                ensurePath(result, path)[path[path.length - 1]] = toJSONObject(config);\n            }\n        }\n        return result;\n    }\n}\nexports.SyncConfigurationFeature = SyncConfigurationFeature;\n", "\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DidSaveTextDocumentFeature = exports.WillSaveWaitUntilFeature = exports.WillSaveFeature = exports.DidChangeTextDocumentFeature = exports.DidCloseTextDocumentFeature = exports.DidOpenTextDocumentFeature = void 0;\nconst vscode_1 = require(\"vscode\");\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\nconst features_1 = require(\"./features\");\nconst UUID = require(\"./utils/uuid\");\nclass DidOpenTextDocumentFeature extends features_1.TextDocumentEventFeature {\n    constructor(client, syncedDocuments) {\n        super(client, vscode_1.workspace.onDidOpenTextDocument, vscode_languageserver_protocol_1.DidOpenTextDocumentNotification.type, () => client.middleware.didOpen, (textDocument) => client.code2ProtocolConverter.asOpenTextDocumentParams(textDocument), (data) => data, features_1.TextDocumentEventFeature.textDocumentFilter);\n        this._syncedDocuments = syncedDocuments;\n    }\n    get openDocuments() {\n        return this._syncedDocuments.values();\n    }\n    fillClientCapabilities(capabilities) {\n        (0, features_1.ensure)((0, features_1.ensure)(capabilities, 'textDocument'), 'synchronization').dynamicRegistration = true;\n    }\n    initialize(capabilities, documentSelector) {\n        const textDocumentSyncOptions = capabilities.resolvedTextDocumentSync;\n        if (documentSelector && textDocumentSyncOptions && textDocumentSyncOptions.openClose) {\n            this.register({ id: UUID.generateUuid(), registerOptions: { documentSelector: documentSelector } });\n        }\n    }\n    get registrationType() {\n        return vscode_languageserver_protocol_1.DidOpenTextDocumentNotification.type;\n    }\n    register(data) {\n        super.register(data);\n        if (!data.registerOptions.documentSelector) {\n            return;\n        }\n        const documentSelector = this._client.protocol2CodeConverter.asDocumentSelector(data.registerOptions.documentSelector);\n        vscode_1.workspace.textDocuments.forEach((textDocument) => {\n            const uri = textDocument.uri.toString();\n            if (this._syncedDocuments.has(uri)) {\n                return;\n            }\n            if (vscode_1.languages.match(documentSelector, textDocument) > 0 && !this._client.hasDedicatedTextSynchronizationFeature(textDocument)) {\n                const middleware = this._client.middleware;\n                const didOpen = (textDocument) => {\n                    return this._client.sendNotification(this._type, this._createParams(textDocument));\n                };\n                (middleware.didOpen ? middleware.didOpen(textDocument, didOpen) : didOpen(textDocument)).catch((error) => {\n                    this._client.error(`Sending document notification ${this._type.method} failed`, error);\n                });\n                this._syncedDocuments.set(uri, textDocument);\n            }\n        });\n    }\n    getTextDocument(data) {\n        return data;\n    }\n    notificationSent(textDocument, type, params) {\n        this._syncedDocuments.set(textDocument.uri.toString(), textDocument);\n        super.notificationSent(textDocument, type, params);\n    }\n}\nexports.DidOpenTextDocumentFeature = DidOpenTextDocumentFeature;\nclass DidCloseTextDocumentFeature extends features_1.TextDocumentEventFeature {\n    constructor(client, syncedDocuments, pendingTextDocumentChanges) {\n        super(client, vscode_1.workspace.onDidCloseTextDocument, vscode_languageserver_protocol_1.DidCloseTextDocumentNotification.type, () => client.middleware.didClose, (textDocument) => client.code2ProtocolConverter.asCloseTextDocumentParams(textDocument), (data) => data, features_1.TextDocumentEventFeature.textDocumentFilter);\n        this._syncedDocuments = syncedDocuments;\n        this._pendingTextDocumentChanges = pendingTextDocumentChanges;\n    }\n    get registrationType() {\n        return vscode_languageserver_protocol_1.DidCloseTextDocumentNotification.type;\n    }\n    fillClientCapabilities(capabilities) {\n        (0, features_1.ensure)((0, features_1.ensure)(capabilities, 'textDocument'), 'synchronization').dynamicRegistration = true;\n    }\n    initialize(capabilities, documentSelector) {\n        let textDocumentSyncOptions = capabilities.resolvedTextDocumentSync;\n        if (documentSelector && textDocumentSyncOptions && textDocumentSyncOptions.openClose) {\n            this.register({ id: UUID.generateUuid(), registerOptions: { documentSelector: documentSelector } });\n        }\n    }\n    async callback(data) {\n        await super.callback(data);\n        this._pendingTextDocumentChanges.delete(data.uri.toString());\n    }\n    getTextDocument(data) {\n        return data;\n    }\n    notificationSent(textDocument, type, params) {\n        this._syncedDocuments.delete(textDocument.uri.toString());\n        super.notificationSent(textDocument, type, params);\n    }\n    unregister(id) {\n        const selector = this._selectors.get(id);\n        // The super call removed the selector from the map\n        // of selectors.\n        super.unregister(id);\n        const selectors = this._selectors.values();\n        this._syncedDocuments.forEach((textDocument) => {\n            if (vscode_1.languages.match(selector, textDocument) > 0 && !this._selectorFilter(selectors, textDocument) && !this._client.hasDedicatedTextSynchronizationFeature(textDocument)) {\n                let middleware = this._client.middleware;\n                let didClose = (textDocument) => {\n                    return this._client.sendNotification(this._type, this._createParams(textDocument));\n                };\n                this._syncedDocuments.delete(textDocument.uri.toString());\n                (middleware.didClose ? middleware.didClose(textDocument, didClose) : didClose(textDocument)).catch((error) => {\n                    this._client.error(`Sending document notification ${this._type.method} failed`, error);\n                });\n            }\n        });\n    }\n}\nexports.DidCloseTextDocumentFeature = DidCloseTextDocumentFeature;\nclass DidChangeTextDocumentFeature extends features_1.DynamicDocumentFeature {\n    constructor(client, pendingTextDocumentChanges) {\n        super(client);\n        this._changeData = new Map();\n        this._onNotificationSent = new vscode_1.EventEmitter();\n        this._onPendingChangeAdded = new vscode_1.EventEmitter();\n        this._pendingTextDocumentChanges = pendingTextDocumentChanges;\n        this._syncKind = vscode_languageserver_protocol_1.TextDocumentSyncKind.None;\n    }\n    get onNotificationSent() {\n        return this._onNotificationSent.event;\n    }\n    get onPendingChangeAdded() {\n        return this._onPendingChangeAdded.event;\n    }\n    get syncKind() {\n        return this._syncKind;\n    }\n    get registrationType() {\n        return vscode_languageserver_protocol_1.DidChangeTextDocumentNotification.type;\n    }\n    fillClientCapabilities(capabilities) {\n        (0, features_1.ensure)((0, features_1.ensure)(capabilities, 'textDocument'), 'synchronization').dynamicRegistration = true;\n    }\n    initialize(capabilities, documentSelector) {\n        let textDocumentSyncOptions = capabilities.resolvedTextDocumentSync;\n        if (documentSelector && textDocumentSyncOptions && textDocumentSyncOptions.change !== undefined && textDocumentSyncOptions.change !== vscode_languageserver_protocol_1.TextDocumentSyncKind.None) {\n            this.register({\n                id: UUID.generateUuid(),\n                registerOptions: Object.assign({}, { documentSelector: documentSelector }, { syncKind: textDocumentSyncOptions.change })\n            });\n        }\n    }\n    register(data) {\n        if (!data.registerOptions.documentSelector) {\n            return;\n        }\n        if (!this._listener) {\n            this._listener = vscode_1.workspace.onDidChangeTextDocument(this.callback, this);\n        }\n        this._changeData.set(data.id, {\n            syncKind: data.registerOptions.syncKind,\n            documentSelector: this._client.protocol2CodeConverter.asDocumentSelector(data.registerOptions.documentSelector),\n        });\n        this.updateSyncKind(data.registerOptions.syncKind);\n    }\n    *getDocumentSelectors() {\n        for (const data of this._changeData.values()) {\n            yield data.documentSelector;\n        }\n    }\n    async callback(event) {\n        // Text document changes are send for dirty changes as well. We don't\n        // have dirty / un-dirty events in the LSP so we ignore content changes\n        // with length zero.\n        if (event.contentChanges.length === 0) {\n            return;\n        }\n        // We need to capture the URI and version here since they might change on the text document\n        // until we reach did `didChange` call since the middleware support async execution.\n        const uri = event.document.uri;\n        const version = event.document.version;\n        const promises = [];\n        for (const changeData of this._changeData.values()) {\n            if (vscode_1.languages.match(changeData.documentSelector, event.document) > 0 && !this._client.hasDedicatedTextSynchronizationFeature(event.document)) {\n                const middleware = this._client.middleware;\n                if (changeData.syncKind === vscode_languageserver_protocol_1.TextDocumentSyncKind.Incremental) {\n                    const didChange = async (event) => {\n                        const params = this._client.code2ProtocolConverter.asChangeTextDocumentParams(event, uri, version);\n                        await this._client.sendNotification(vscode_languageserver_protocol_1.DidChangeTextDocumentNotification.type, params);\n                        this.notificationSent(event.document, vscode_languageserver_protocol_1.DidChangeTextDocumentNotification.type, params);\n                    };\n                    promises.push(middleware.didChange ? middleware.didChange(event, event => didChange(event)) : didChange(event));\n                }\n                else if (changeData.syncKind === vscode_languageserver_protocol_1.TextDocumentSyncKind.Full) {\n                    const didChange = async (event) => {\n                        const eventUri = event.document.uri.toString();\n                        this._pendingTextDocumentChanges.set(eventUri, event.document);\n                        this._onPendingChangeAdded.fire();\n                    };\n                    promises.push(middleware.didChange ? middleware.didChange(event, event => didChange(event)) : didChange(event));\n                }\n            }\n        }\n        return Promise.all(promises).then(undefined, (error) => {\n            this._client.error(`Sending document notification ${vscode_languageserver_protocol_1.DidChangeTextDocumentNotification.type.method} failed`, error);\n            throw error;\n        });\n    }\n    notificationSent(textDocument, type, params) {\n        this._onNotificationSent.fire({ textDocument, type, params });\n    }\n    unregister(id) {\n        this._changeData.delete(id);\n        if (this._changeData.size === 0) {\n            if (this._listener) {\n                this._listener.dispose();\n                this._listener = undefined;\n            }\n            this._syncKind = vscode_languageserver_protocol_1.TextDocumentSyncKind.None;\n        }\n        else {\n            this._syncKind = vscode_languageserver_protocol_1.TextDocumentSyncKind.None;\n            for (const changeData of this._changeData.values()) {\n                this.updateSyncKind(changeData.syncKind);\n                if (this._syncKind === vscode_languageserver_protocol_1.TextDocumentSyncKind.Full) {\n                    break;\n                }\n            }\n        }\n    }\n    clear() {\n        this._pendingTextDocumentChanges.clear();\n        this._changeData.clear();\n        this._syncKind = vscode_languageserver_protocol_1.TextDocumentSyncKind.None;\n        if (this._listener) {\n            this._listener.dispose();\n            this._listener = undefined;\n        }\n    }\n    getPendingDocumentChanges(excludes) {\n        if (this._pendingTextDocumentChanges.size === 0) {\n            return [];\n        }\n        let result;\n        if (excludes.size === 0) {\n            result = Array.from(this._pendingTextDocumentChanges.values());\n            this._pendingTextDocumentChanges.clear();\n        }\n        else {\n            result = [];\n            for (const entry of this._pendingTextDocumentChanges) {\n                if (!excludes.has(entry[0])) {\n                    result.push(entry[1]);\n                    this._pendingTextDocumentChanges.delete(entry[0]);\n                }\n            }\n        }\n        return result;\n    }\n    getProvider(document) {\n        for (const changeData of this._changeData.values()) {\n            if (vscode_1.languages.match(changeData.documentSelector, document) > 0) {\n                return {\n                    send: (event) => {\n                        return this.callback(event);\n                    }\n                };\n            }\n        }\n        return undefined;\n    }\n    updateSyncKind(syncKind) {\n        if (this._syncKind === vscode_languageserver_protocol_1.TextDocumentSyncKind.Full) {\n            return;\n        }\n        switch (syncKind) {\n            case vscode_languageserver_protocol_1.TextDocumentSyncKind.Full:\n                this._syncKind = syncKind;\n                break;\n            case vscode_languageserver_protocol_1.TextDocumentSyncKind.Incremental:\n                if (this._syncKind === vscode_languageserver_protocol_1.TextDocumentSyncKind.None) {\n                    this._syncKind = vscode_languageserver_protocol_1.TextDocumentSyncKind.Incremental;\n                }\n                break;\n        }\n    }\n}\nexports.DidChangeTextDocumentFeature = DidChangeTextDocumentFeature;\nclass WillSaveFeature extends features_1.TextDocumentEventFeature {\n    constructor(client) {\n        super(client, vscode_1.workspace.onWillSaveTextDocument, vscode_languageserver_protocol_1.WillSaveTextDocumentNotification.type, () => client.middleware.willSave, (willSaveEvent) => client.code2ProtocolConverter.asWillSaveTextDocumentParams(willSaveEvent), (event) => event.document, (selectors, willSaveEvent) => features_1.TextDocumentEventFeature.textDocumentFilter(selectors, willSaveEvent.document));\n    }\n    get registrationType() {\n        return vscode_languageserver_protocol_1.WillSaveTextDocumentNotification.type;\n    }\n    fillClientCapabilities(capabilities) {\n        let value = (0, features_1.ensure)((0, features_1.ensure)(capabilities, 'textDocument'), 'synchronization');\n        value.willSave = true;\n    }\n    initialize(capabilities, documentSelector) {\n        let textDocumentSyncOptions = capabilities.resolvedTextDocumentSync;\n        if (documentSelector && textDocumentSyncOptions && textDocumentSyncOptions.willSave) {\n            this.register({\n                id: UUID.generateUuid(),\n                registerOptions: { documentSelector: documentSelector }\n            });\n        }\n    }\n    getTextDocument(data) {\n        return data.document;\n    }\n}\nexports.WillSaveFeature = WillSaveFeature;\nclass WillSaveWaitUntilFeature extends features_1.DynamicDocumentFeature {\n    constructor(client) {\n        super(client);\n        this._selectors = new Map();\n    }\n    getDocumentSelectors() {\n        return this._selectors.values();\n    }\n    get registrationType() {\n        return vscode_languageserver_protocol_1.WillSaveTextDocumentWaitUntilRequest.type;\n    }\n    fillClientCapabilities(capabilities) {\n        let value = (0, features_1.ensure)((0, features_1.ensure)(capabilities, 'textDocument'), 'synchronization');\n        value.willSaveWaitUntil = true;\n    }\n    initialize(capabilities, documentSelector) {\n        let textDocumentSyncOptions = capabilities.resolvedTextDocumentSync;\n        if (documentSelector && textDocumentSyncOptions && textDocumentSyncOptions.willSaveWaitUntil) {\n            this.register({\n                id: UUID.generateUuid(),\n                registerOptions: { documentSelector: documentSelector }\n            });\n        }\n    }\n    register(data) {\n        if (!data.registerOptions.documentSelector) {\n            return;\n        }\n        if (!this._listener) {\n            this._listener = vscode_1.workspace.onWillSaveTextDocument(this.callback, this);\n        }\n        this._selectors.set(data.id, this._client.protocol2CodeConverter.asDocumentSelector(data.registerOptions.documentSelector));\n    }\n    callback(event) {\n        if (features_1.TextDocumentEventFeature.textDocumentFilter(this._selectors.values(), event.document) && !this._client.hasDedicatedTextSynchronizationFeature(event.document)) {\n            let middleware = this._client.middleware;\n            let willSaveWaitUntil = (event) => {\n                return this._client.sendRequest(vscode_languageserver_protocol_1.WillSaveTextDocumentWaitUntilRequest.type, this._client.code2ProtocolConverter.asWillSaveTextDocumentParams(event)).then(async (edits) => {\n                    let vEdits = await this._client.protocol2CodeConverter.asTextEdits(edits);\n                    return vEdits === undefined ? [] : vEdits;\n                });\n            };\n            event.waitUntil(middleware.willSaveWaitUntil\n                ? middleware.willSaveWaitUntil(event, willSaveWaitUntil)\n                : willSaveWaitUntil(event));\n        }\n    }\n    unregister(id) {\n        this._selectors.delete(id);\n        if (this._selectors.size === 0 && this._listener) {\n            this._listener.dispose();\n            this._listener = undefined;\n        }\n    }\n    clear() {\n        this._selectors.clear();\n        if (this._listener) {\n            this._listener.dispose();\n            this._listener = undefined;\n        }\n    }\n}\nexports.WillSaveWaitUntilFeature = WillSaveWaitUntilFeature;\nclass DidSaveTextDocumentFeature extends features_1.TextDocumentEventFeature {\n    constructor(client) {\n        super(client, vscode_1.workspace.onDidSaveTextDocument, vscode_languageserver_protocol_1.DidSaveTextDocumentNotification.type, () => client.middleware.didSave, (textDocument) => client.code2ProtocolConverter.asSaveTextDocumentParams(textDocument, this._includeText), (data) => data, features_1.TextDocumentEventFeature.textDocumentFilter);\n        this._includeText = false;\n    }\n    get registrationType() {\n        return vscode_languageserver_protocol_1.DidSaveTextDocumentNotification.type;\n    }\n    fillClientCapabilities(capabilities) {\n        (0, features_1.ensure)((0, features_1.ensure)(capabilities, 'textDocument'), 'synchronization').didSave = true;\n    }\n    initialize(capabilities, documentSelector) {\n        const textDocumentSyncOptions = capabilities.resolvedTextDocumentSync;\n        if (documentSelector && textDocumentSyncOptions && textDocumentSyncOptions.save) {\n            const saveOptions = typeof textDocumentSyncOptions.save === 'boolean'\n                ? { includeText: false }\n                : { includeText: !!textDocumentSyncOptions.save.includeText };\n            this.register({\n                id: UUID.generateUuid(),\n                registerOptions: Object.assign({}, { documentSelector: documentSelector }, saveOptions)\n            });\n        }\n    }\n    register(data) {\n        this._includeText = !!data.registerOptions.includeText;\n        super.register(data);\n    }\n    getTextDocument(data) {\n        return data;\n    }\n}\nexports.DidSaveTextDocumentFeature = DidSaveTextDocumentFeature;\n", "\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CompletionItemFeature = void 0;\nconst vscode_1 = require(\"vscode\");\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\nconst features_1 = require(\"./features\");\nconst UUID = require(\"./utils/uuid\");\nconst SupportedCompletionItemKinds = [\n    vscode_languageserver_protocol_1.CompletionItemKind.Text,\n    vscode_languageserver_protocol_1.CompletionItemKind.Method,\n    vscode_languageserver_protocol_1.CompletionItemKind.Function,\n    vscode_languageserver_protocol_1.CompletionItemKind.Constructor,\n    vscode_languageserver_protocol_1.CompletionItemKind.Field,\n    vscode_languageserver_protocol_1.CompletionItemKind.Variable,\n    vscode_languageserver_protocol_1.CompletionItemKind.Class,\n    vscode_languageserver_protocol_1.CompletionItemKind.Interface,\n    vscode_languageserver_protocol_1.CompletionItemKind.Module,\n    vscode_languageserver_protocol_1.CompletionItemKind.Property,\n    vscode_languageserver_protocol_1.CompletionItemKind.Unit,\n    vscode_languageserver_protocol_1.CompletionItemKind.Value,\n    vscode_languageserver_protocol_1.CompletionItemKind.Enum,\n    vscode_languageserver_protocol_1.CompletionItemKind.Keyword,\n    vscode_languageserver_protocol_1.CompletionItemKind.Snippet,\n    vscode_languageserver_protocol_1.CompletionItemKind.Color,\n    vscode_languageserver_protocol_1.CompletionItemKind.File,\n    vscode_languageserver_protocol_1.CompletionItemKind.Reference,\n    vscode_languageserver_protocol_1.CompletionItemKind.Folder,\n    vscode_languageserver_protocol_1.CompletionItemKind.EnumMember,\n    vscode_languageserver_protocol_1.CompletionItemKind.Constant,\n    vscode_languageserver_protocol_1.CompletionItemKind.Struct,\n    vscode_languageserver_protocol_1.CompletionItemKind.Event,\n    vscode_languageserver_protocol_1.CompletionItemKind.Operator,\n    vscode_languageserver_protocol_1.CompletionItemKind.TypeParameter\n];\nclass CompletionItemFeature extends features_1.TextDocumentLanguageFeature {\n    constructor(client) {\n        super(client, vscode_languageserver_protocol_1.CompletionRequest.type);\n        this.labelDetailsSupport = new Map();\n    }\n    fillClientCapabilities(capabilities) {\n        let completion = (0, features_1.ensure)((0, features_1.ensure)(capabilities, 'textDocument'), 'completion');\n        completion.dynamicRegistration = true;\n        completion.contextSupport = true;\n        completion.completionItem = {\n            snippetSupport: true,\n            commitCharactersSupport: true,\n            documentationFormat: [vscode_languageserver_protocol_1.MarkupKind.Markdown, vscode_languageserver_protocol_1.MarkupKind.PlainText],\n            deprecatedSupport: true,\n            preselectSupport: true,\n            tagSupport: { valueSet: [vscode_languageserver_protocol_1.CompletionItemTag.Deprecated] },\n            insertReplaceSupport: true,\n            resolveSupport: {\n                properties: ['documentation', 'detail', 'additionalTextEdits']\n            },\n            insertTextModeSupport: { valueSet: [vscode_languageserver_protocol_1.InsertTextMode.asIs, vscode_languageserver_protocol_1.InsertTextMode.adjustIndentation] },\n            labelDetailsSupport: true\n        };\n        completion.insertTextMode = vscode_languageserver_protocol_1.InsertTextMode.adjustIndentation;\n        completion.completionItemKind = { valueSet: SupportedCompletionItemKinds };\n        completion.completionList = {\n            itemDefaults: [\n                'commitCharacters', 'editRange', 'insertTextFormat', 'insertTextMode', 'data'\n            ]\n        };\n    }\n    initialize(capabilities, documentSelector) {\n        const options = this.getRegistrationOptions(documentSelector, capabilities.completionProvider);\n        if (!options) {\n            return;\n        }\n        this.register({\n            id: UUID.generateUuid(),\n            registerOptions: options\n        });\n    }\n    registerLanguageProvider(options, id) {\n        this.labelDetailsSupport.set(id, !!options.completionItem?.labelDetailsSupport);\n        const triggerCharacters = options.triggerCharacters ?? [];\n        const defaultCommitCharacters = options.allCommitCharacters;\n        const selector = options.documentSelector;\n        const provider = {\n            provideCompletionItems: (document, position, token, context) => {\n                const client = this._client;\n                const middleware = this._client.middleware;\n                const provideCompletionItems = (document, position, context, token) => {\n                    return client.sendRequest(vscode_languageserver_protocol_1.CompletionRequest.type, client.code2ProtocolConverter.asCompletionParams(document, position, context), token).then((result) => {\n                        if (token.isCancellationRequested) {\n                            return null;\n                        }\n                        return client.protocol2CodeConverter.asCompletionResult(result, defaultCommitCharacters, token);\n                    }, (error) => {\n                        return client.handleFailedRequest(vscode_languageserver_protocol_1.CompletionRequest.type, token, error, null);\n                    });\n                };\n                return middleware.provideCompletionItem\n                    ? middleware.provideCompletionItem(document, position, context, token, provideCompletionItems)\n                    : provideCompletionItems(document, position, context, token);\n            },\n            resolveCompletionItem: options.resolveProvider\n                ? (item, token) => {\n                    const client = this._client;\n                    const middleware = this._client.middleware;\n                    const resolveCompletionItem = (item, token) => {\n                        return client.sendRequest(vscode_languageserver_protocol_1.CompletionResolveRequest.type, client.code2ProtocolConverter.asCompletionItem(item, !!this.labelDetailsSupport.get(id)), token).then((result) => {\n                            if (token.isCancellationRequested) {\n                                return null;\n                            }\n                            return client.protocol2CodeConverter.asCompletionItem(result);\n                        }, (error) => {\n                            return client.handleFailedRequest(vscode_languageserver_protocol_1.CompletionResolveRequest.type, token, error, item);\n                        });\n                    };\n                    return middleware.resolveCompletionItem\n                        ? middleware.resolveCompletionItem(item, token, resolveCompletionItem)\n                        : resolveCompletionItem(item, token);\n                }\n                : undefined\n        };\n        return [vscode_1.languages.registerCompletionItemProvider(this._client.protocol2CodeConverter.asDocumentSelector(selector), provider, ...triggerCharacters), provider];\n    }\n}\nexports.CompletionItemFeature = CompletionItemFeature;\n", "\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.HoverFeature = void 0;\nconst vscode_1 = require(\"vscode\");\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\nconst features_1 = require(\"./features\");\nconst UUID = require(\"./utils/uuid\");\nclass HoverFeature extends features_1.TextDocumentLanguageFeature {\n    constructor(client) {\n        super(client, vscode_languageserver_protocol_1.HoverRequest.type);\n    }\n    fillClientCapabilities(capabilities) {\n        const hoverCapability = ((0, features_1.ensure)((0, features_1.ensure)(capabilities, 'textDocument'), 'hover'));\n        hoverCapability.dynamicRegistration = true;\n        hoverCapability.contentFormat = [vscode_languageserver_protocol_1.MarkupKind.Markdown, vscode_languageserver_protocol_1.MarkupKind.PlainText];\n    }\n    initialize(capabilities, documentSelector) {\n        const options = this.getRegistrationOptions(documentSelector, capabilities.hoverProvider);\n        if (!options) {\n            return;\n        }\n        this.register({\n            id: UUID.generateUuid(),\n            registerOptions: options\n        });\n    }\n    registerLanguageProvider(options) {\n        const selector = options.documentSelector;\n        const provider = {\n            provideHover: (document, position, token) => {\n                const client = this._client;\n                const provideHover = (document, position, token) => {\n                    return client.sendRequest(vscode_languageserver_protocol_1.HoverRequest.type, client.code2ProtocolConverter.asTextDocumentPositionParams(document, position), token).then((result) => {\n                        if (token.isCancellationRequested) {\n                            return null;\n                        }\n                        return client.protocol2CodeConverter.asHover(result);\n                    }, (error) => {\n                        return client.handleFailedRequest(vscode_languageserver_protocol_1.HoverRequest.type, token, error, null);\n                    });\n                };\n                const middleware = client.middleware;\n                return middleware.provideHover\n                    ? middleware.provideHover(document, position, token, provideHover)\n                    : provideHover(document, position, token);\n            }\n        };\n        return [this.registerProvider(selector, provider), provider];\n    }\n    registerProvider(selector, provider) {\n        return vscode_1.languages.registerHoverProvider(this._client.protocol2CodeConverter.asDocumentSelector(selector), provider);\n    }\n}\nexports.HoverFeature = HoverFeature;\n", "\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DefinitionFeature = void 0;\nconst vscode_1 = require(\"vscode\");\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\nconst features_1 = require(\"./features\");\nconst UUID = require(\"./utils/uuid\");\nclass DefinitionFeature extends features_1.TextDocumentLanguageFeature {\n    constructor(client) {\n        super(client, vscode_languageserver_protocol_1.DefinitionRequest.type);\n    }\n    fillClientCapabilities(capabilities) {\n        let definitionSupport = (0, features_1.ensure)((0, features_1.ensure)(capabilities, 'textDocument'), 'definition');\n        definitionSupport.dynamicRegistration = true;\n        definitionSupport.linkSupport = true;\n    }\n    initialize(capabilities, documentSelector) {\n        const options = this.getRegistrationOptions(documentSelector, capabilities.definitionProvider);\n        if (!options) {\n            return;\n        }\n        this.register({ id: UUID.generateUuid(), registerOptions: options });\n    }\n    registerLanguageProvider(options) {\n        const selector = options.documentSelector;\n        const provider = {\n            provideDefinition: (document, position, token) => {\n                const client = this._client;\n                const provideDefinition = (document, position, token) => {\n                    return client.sendRequest(vscode_languageserver_protocol_1.DefinitionRequest.type, client.code2ProtocolConverter.asTextDocumentPositionParams(document, position), token).then((result) => {\n                        if (token.isCancellationRequested) {\n                            return null;\n                        }\n                        return client.protocol2CodeConverter.asDefinitionResult(result, token);\n                    }, (error) => {\n                        return client.handleFailedRequest(vscode_languageserver_protocol_1.DefinitionRequest.type, token, error, null);\n                    });\n                };\n                const middleware = client.middleware;\n                return middleware.provideDefinition\n                    ? middleware.provideDefinition(document, position, token, provideDefinition)\n                    : provideDefinition(document, position, token);\n            }\n        };\n        return [this.registerProvider(selector, provider), provider];\n    }\n    registerProvider(selector, provider) {\n        return vscode_1.languages.registerDefinitionProvider(this._client.protocol2CodeConverter.asDocumentSelector(selector), provider);\n    }\n}\nexports.DefinitionFeature = DefinitionFeature;\n", "\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SignatureHelpFeature = void 0;\nconst vscode_1 = require(\"vscode\");\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\nconst features_1 = require(\"./features\");\nconst UUID = require(\"./utils/uuid\");\nclass SignatureHelpFeature extends features_1.TextDocumentLanguageFeature {\n    constructor(client) {\n        super(client, vscode_languageserver_protocol_1.SignatureHelpRequest.type);\n    }\n    fillClientCapabilities(capabilities) {\n        let config = (0, features_1.ensure)((0, features_1.ensure)(capabilities, 'textDocument'), 'signatureHelp');\n        config.dynamicRegistration = true;\n        config.signatureInformation = { documentationFormat: [vscode_languageserver_protocol_1.MarkupKind.Markdown, vscode_languageserver_protocol_1.MarkupKind.PlainText] };\n        config.signatureInformation.parameterInformation = { labelOffsetSupport: true };\n        config.signatureInformation.activeParameterSupport = true;\n        config.contextSupport = true;\n    }\n    initialize(capabilities, documentSelector) {\n        const options = this.getRegistrationOptions(documentSelector, capabilities.signatureHelpProvider);\n        if (!options) {\n            return;\n        }\n        this.register({\n            id: UUID.generateUuid(),\n            registerOptions: options\n        });\n    }\n    registerLanguageProvider(options) {\n        const provider = {\n            provideSignatureHelp: (document, position, token, context) => {\n                const client = this._client;\n                const providerSignatureHelp = (document, position, context, token) => {\n                    return client.sendRequest(vscode_languageserver_protocol_1.SignatureHelpRequest.type, client.code2ProtocolConverter.asSignatureHelpParams(document, position, context), token).then((result) => {\n                        if (token.isCancellationRequested) {\n                            return null;\n                        }\n                        return client.protocol2CodeConverter.asSignatureHelp(result, token);\n                    }, (error) => {\n                        return client.handleFailedRequest(vscode_languageserver_protocol_1.SignatureHelpRequest.type, token, error, null);\n                    });\n                };\n                const middleware = client.middleware;\n                return middleware.provideSignatureHelp\n                    ? middleware.provideSignatureHelp(document, position, context, token, providerSignatureHelp)\n                    : providerSignatureHelp(document, position, context, token);\n            }\n        };\n        return [this.registerProvider(options, provider), provider];\n    }\n    registerProvider(options, provider) {\n        const selector = this._client.protocol2CodeConverter.asDocumentSelector(options.documentSelector);\n        if (options.retriggerCharacters === undefined) {\n            const triggerCharacters = options.triggerCharacters || [];\n            return vscode_1.languages.registerSignatureHelpProvider(selector, provider, ...triggerCharacters);\n        }\n        else {\n            const metaData = {\n                triggerCharacters: options.triggerCharacters || [],\n                retriggerCharacters: options.retriggerCharacters || []\n            };\n            return vscode_1.languages.registerSignatureHelpProvider(selector, provider, metaData);\n        }\n    }\n}\nexports.SignatureHelpFeature = SignatureHelpFeature;\n", "\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DocumentHighlightFeature = void 0;\nconst vscode_1 = require(\"vscode\");\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\nconst features_1 = require(\"./features\");\nconst UUID = require(\"./utils/uuid\");\nclass DocumentHighlightFeature extends features_1.TextDocumentLanguageFeature {\n    constructor(client) {\n        super(client, vscode_languageserver_protocol_1.DocumentHighlightRequest.type);\n    }\n    fillClientCapabilities(capabilities) {\n        (0, features_1.ensure)((0, features_1.ensure)(capabilities, 'textDocument'), 'documentHighlight').dynamicRegistration = true;\n    }\n    initialize(capabilities, documentSelector) {\n        const options = this.getRegistrationOptions(documentSelector, capabilities.documentHighlightProvider);\n        if (!options) {\n            return;\n        }\n        this.register({ id: UUID.generateUuid(), registerOptions: options });\n    }\n    registerLanguageProvider(options) {\n        const selector = options.documentSelector;\n        const provider = {\n            provideDocumentHighlights: (document, position, token) => {\n                const client = this._client;\n                const _provideDocumentHighlights = (document, position, token) => {\n                    return client.sendRequest(vscode_languageserver_protocol_1.DocumentHighlightRequest.type, client.code2ProtocolConverter.asTextDocumentPositionParams(document, position), token).then((result) => {\n                        if (token.isCancellationRequested) {\n                            return null;\n                        }\n                        return client.protocol2CodeConverter.asDocumentHighlights(result, token);\n                    }, (error) => {\n                        return client.handleFailedRequest(vscode_languageserver_protocol_1.DocumentHighlightRequest.type, token, error, null);\n                    });\n                };\n                const middleware = client.middleware;\n                return middleware.provideDocumentHighlights\n                    ? middleware.provideDocumentHighlights(document, position, token, _provideDocumentHighlights)\n                    : _provideDocumentHighlights(document, position, token);\n            }\n        };\n        return [vscode_1.languages.registerDocumentHighlightProvider(this._client.protocol2CodeConverter.asDocumentSelector(selector), provider), provider];\n    }\n}\nexports.DocumentHighlightFeature = DocumentHighlightFeature;\n", "\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DocumentSymbolFeature = exports.SupportedSymbolTags = exports.SupportedSymbolKinds = void 0;\nconst vscode_1 = require(\"vscode\");\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\nconst features_1 = require(\"./features\");\nconst UUID = require(\"./utils/uuid\");\nexports.SupportedSymbolKinds = [\n    vscode_languageserver_protocol_1.SymbolKind.File,\n    vscode_languageserver_protocol_1.SymbolKind.Module,\n    vscode_languageserver_protocol_1.SymbolKind.Namespace,\n    vscode_languageserver_protocol_1.SymbolKind.Package,\n    vscode_languageserver_protocol_1.SymbolKind.Class,\n    vscode_languageserver_protocol_1.SymbolKind.Method,\n    vscode_languageserver_protocol_1.SymbolKind.Property,\n    vscode_languageserver_protocol_1.SymbolKind.Field,\n    vscode_languageserver_protocol_1.SymbolKind.Constructor,\n    vscode_languageserver_protocol_1.SymbolKind.Enum,\n    vscode_languageserver_protocol_1.SymbolKind.Interface,\n    vscode_languageserver_protocol_1.SymbolKind.Function,\n    vscode_languageserver_protocol_1.SymbolKind.Variable,\n    vscode_languageserver_protocol_1.SymbolKind.Constant,\n    vscode_languageserver_protocol_1.SymbolKind.String,\n    vscode_languageserver_protocol_1.SymbolKind.Number,\n    vscode_languageserver_protocol_1.SymbolKind.Boolean,\n    vscode_languageserver_protocol_1.SymbolKind.Array,\n    vscode_languageserver_protocol_1.SymbolKind.Object,\n    vscode_languageserver_protocol_1.SymbolKind.Key,\n    vscode_languageserver_protocol_1.SymbolKind.Null,\n    vscode_languageserver_protocol_1.SymbolKind.EnumMember,\n    vscode_languageserver_protocol_1.SymbolKind.Struct,\n    vscode_languageserver_protocol_1.SymbolKind.Event,\n    vscode_languageserver_protocol_1.SymbolKind.Operator,\n    vscode_languageserver_protocol_1.SymbolKind.TypeParameter\n];\nexports.SupportedSymbolTags = [\n    vscode_languageserver_protocol_1.SymbolTag.Deprecated\n];\nclass DocumentSymbolFeature extends features_1.TextDocumentLanguageFeature {\n    constructor(client) {\n        super(client, vscode_languageserver_protocol_1.DocumentSymbolRequest.type);\n    }\n    fillClientCapabilities(capabilities) {\n        let symbolCapabilities = (0, features_1.ensure)((0, features_1.ensure)(capabilities, 'textDocument'), 'documentSymbol');\n        symbolCapabilities.dynamicRegistration = true;\n        symbolCapabilities.symbolKind = {\n            valueSet: exports.SupportedSymbolKinds\n        };\n        symbolCapabilities.hierarchicalDocumentSymbolSupport = true;\n        symbolCapabilities.tagSupport = {\n            valueSet: exports.SupportedSymbolTags\n        };\n        symbolCapabilities.labelSupport = true;\n    }\n    initialize(capabilities, documentSelector) {\n        const options = this.getRegistrationOptions(documentSelector, capabilities.documentSymbolProvider);\n        if (!options) {\n            return;\n        }\n        this.register({ id: UUID.generateUuid(), registerOptions: options });\n    }\n    registerLanguageProvider(options) {\n        const selector = options.documentSelector;\n        const provider = {\n            provideDocumentSymbols: (document, token) => {\n                const client = this._client;\n                const _provideDocumentSymbols = async (document, token) => {\n                    try {\n                        const data = await client.sendRequest(vscode_languageserver_protocol_1.DocumentSymbolRequest.type, client.code2ProtocolConverter.asDocumentSymbolParams(document), token);\n                        if (token.isCancellationRequested || data === undefined || data === null) {\n                            return null;\n                        }\n                        if (data.length === 0) {\n                            return [];\n                        }\n                        else {\n                            const first = data[0];\n                            if (vscode_languageserver_protocol_1.DocumentSymbol.is(first)) {\n                                return await client.protocol2CodeConverter.asDocumentSymbols(data, token);\n                            }\n                            else {\n                                return await client.protocol2CodeConverter.asSymbolInformations(data, token);\n                            }\n                        }\n                    }\n                    catch (error) {\n                        return client.handleFailedRequest(vscode_languageserver_protocol_1.DocumentSymbolRequest.type, token, error, null);\n                    }\n                };\n                const middleware = client.middleware;\n                return middleware.provideDocumentSymbols\n                    ? middleware.provideDocumentSymbols(document, token, _provideDocumentSymbols)\n                    : _provideDocumentSymbols(document, token);\n            }\n        };\n        const metaData = options.label !== undefined ? { label: options.label } : undefined;\n        return [vscode_1.languages.registerDocumentSymbolProvider(this._client.protocol2CodeConverter.asDocumentSelector(selector), provider, metaData), provider];\n    }\n}\nexports.DocumentSymbolFeature = DocumentSymbolFeature;\n", "\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WorkspaceSymbolFeature = void 0;\nconst vscode_1 = require(\"vscode\");\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\nconst features_1 = require(\"./features\");\nconst documentSymbol_1 = require(\"./documentSymbol\");\nconst UUID = require(\"./utils/uuid\");\nclass WorkspaceSymbolFeature extends features_1.WorkspaceFeature {\n    constructor(client) {\n        super(client, vscode_languageserver_protocol_1.WorkspaceSymbolRequest.type);\n    }\n    fillClientCapabilities(capabilities) {\n        let symbolCapabilities = (0, features_1.ensure)((0, features_1.ensure)(capabilities, 'workspace'), 'symbol');\n        symbolCapabilities.dynamicRegistration = true;\n        symbolCapabilities.symbolKind = {\n            valueSet: documentSymbol_1.SupportedSymbolKinds\n        };\n        symbolCapabilities.tagSupport = {\n            valueSet: documentSymbol_1.SupportedSymbolTags\n        };\n        symbolCapabilities.resolveSupport = { properties: ['location.range'] };\n    }\n    initialize(capabilities) {\n        if (!capabilities.workspaceSymbolProvider) {\n            return;\n        }\n        this.register({\n            id: UUID.generateUuid(),\n            registerOptions: capabilities.workspaceSymbolProvider === true ? { workDoneProgress: false } : capabilities.workspaceSymbolProvider\n        });\n    }\n    registerLanguageProvider(options) {\n        const provider = {\n            provideWorkspaceSymbols: (query, token) => {\n                const client = this._client;\n                const provideWorkspaceSymbols = (query, token) => {\n                    return client.sendRequest(vscode_languageserver_protocol_1.WorkspaceSymbolRequest.type, { query }, token).then((result) => {\n                        if (token.isCancellationRequested) {\n                            return null;\n                        }\n                        return client.protocol2CodeConverter.asSymbolInformations(result, token);\n                    }, (error) => {\n                        return client.handleFailedRequest(vscode_languageserver_protocol_1.WorkspaceSymbolRequest.type, token, error, null);\n                    });\n                };\n                const middleware = client.middleware;\n                return middleware.provideWorkspaceSymbols\n                    ? middleware.provideWorkspaceSymbols(query, token, provideWorkspaceSymbols)\n                    : provideWorkspaceSymbols(query, token);\n            },\n            resolveWorkspaceSymbol: options.resolveProvider === true\n                ? (item, token) => {\n                    const client = this._client;\n                    const resolveWorkspaceSymbol = (item, token) => {\n                        return client.sendRequest(vscode_languageserver_protocol_1.WorkspaceSymbolResolveRequest.type, client.code2ProtocolConverter.asWorkspaceSymbol(item), token).then((result) => {\n                            if (token.isCancellationRequested) {\n                                return null;\n                            }\n                            return client.protocol2CodeConverter.asSymbolInformation(result);\n                        }, (error) => {\n                            return client.handleFailedRequest(vscode_languageserver_protocol_1.WorkspaceSymbolResolveRequest.type, token, error, null);\n                        });\n                    };\n                    const middleware = client.middleware;\n                    return middleware.resolveWorkspaceSymbol\n                        ? middleware.resolveWorkspaceSymbol(item, token, resolveWorkspaceSymbol)\n                        : resolveWorkspaceSymbol(item, token);\n                }\n                : undefined\n        };\n        return [vscode_1.languages.registerWorkspaceSymbolProvider(provider), provider];\n    }\n}\nexports.WorkspaceSymbolFeature = WorkspaceSymbolFeature;\n", "\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ReferencesFeature = void 0;\nconst vscode_1 = require(\"vscode\");\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\nconst features_1 = require(\"./features\");\nconst UUID = require(\"./utils/uuid\");\nclass ReferencesFeature extends features_1.TextDocumentLanguageFeature {\n    constructor(client) {\n        super(client, vscode_languageserver_protocol_1.ReferencesRequest.type);\n    }\n    fillClientCapabilities(capabilities) {\n        (0, features_1.ensure)((0, features_1.ensure)(capabilities, 'textDocument'), 'references').dynamicRegistration = true;\n    }\n    initialize(capabilities, documentSelector) {\n        const options = this.getRegistrationOptions(documentSelector, capabilities.referencesProvider);\n        if (!options) {\n            return;\n        }\n        this.register({ id: UUID.generateUuid(), registerOptions: options });\n    }\n    registerLanguageProvider(options) {\n        const selector = options.documentSelector;\n        const provider = {\n            provideReferences: (document, position, options, token) => {\n                const client = this._client;\n                const _providerReferences = (document, position, options, token) => {\n                    return client.sendRequest(vscode_languageserver_protocol_1.ReferencesRequest.type, client.code2ProtocolConverter.asReferenceParams(document, position, options), token).then((result) => {\n                        if (token.isCancellationRequested) {\n                            return null;\n                        }\n                        return client.protocol2CodeConverter.asReferences(result, token);\n                    }, (error) => {\n                        return client.handleFailedRequest(vscode_languageserver_protocol_1.ReferencesRequest.type, token, error, null);\n                    });\n                };\n                const middleware = client.middleware;\n                return middleware.provideReferences\n                    ? middleware.provideReferences(document, position, options, token, _providerReferences)\n                    : _providerReferences(document, position, options, token);\n            }\n        };\n        return [this.registerProvider(selector, provider), provider];\n    }\n    registerProvider(selector, provider) {\n        return vscode_1.languages.registerReferenceProvider(this._client.protocol2CodeConverter.asDocumentSelector(selector), provider);\n    }\n}\nexports.ReferencesFeature = ReferencesFeature;\n", "\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CodeActionFeature = void 0;\nconst vscode_1 = require(\"vscode\");\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\nconst UUID = require(\"./utils/uuid\");\nconst features_1 = require(\"./features\");\nclass CodeActionFeature extends features_1.TextDocumentLanguageFeature {\n    constructor(client) {\n        super(client, vscode_languageserver_protocol_1.CodeActionRequest.type);\n    }\n    fillClientCapabilities(capabilities) {\n        const cap = (0, features_1.ensure)((0, features_1.ensure)(capabilities, 'textDocument'), 'codeAction');\n        cap.dynamicRegistration = true;\n        cap.isPreferredSupport = true;\n        cap.disabledSupport = true;\n        cap.dataSupport = true;\n        // We can only resolve the edit property.\n        cap.resolveSupport = {\n            properties: ['edit']\n        };\n        cap.codeActionLiteralSupport = {\n            codeActionKind: {\n                valueSet: [\n                    vscode_languageserver_protocol_1.CodeActionKind.Empty,\n                    vscode_languageserver_protocol_1.CodeActionKind.QuickFix,\n                    vscode_languageserver_protocol_1.CodeActionKind.Refactor,\n                    vscode_languageserver_protocol_1.CodeActionKind.RefactorExtract,\n                    vscode_languageserver_protocol_1.CodeActionKind.RefactorInline,\n                    vscode_languageserver_protocol_1.CodeActionKind.RefactorRewrite,\n                    vscode_languageserver_protocol_1.CodeActionKind.Source,\n                    vscode_languageserver_protocol_1.CodeActionKind.SourceOrganizeImports\n                ]\n            }\n        };\n        cap.honorsChangeAnnotations = true;\n    }\n    initialize(capabilities, documentSelector) {\n        const options = this.getRegistrationOptions(documentSelector, capabilities.codeActionProvider);\n        if (!options) {\n            return;\n        }\n        this.register({ id: UUID.generateUuid(), registerOptions: options });\n    }\n    registerLanguageProvider(options) {\n        const selector = options.documentSelector;\n        const provider = {\n            provideCodeActions: (document, range, context, token) => {\n                const client = this._client;\n                const _provideCodeActions = async (document, range, context, token) => {\n                    const params = {\n                        textDocument: client.code2ProtocolConverter.asTextDocumentIdentifier(document),\n                        range: client.code2ProtocolConverter.asRange(range),\n                        context: client.code2ProtocolConverter.asCodeActionContextSync(context)\n                    };\n                    return client.sendRequest(vscode_languageserver_protocol_1.CodeActionRequest.type, params, token).then((values) => {\n                        if (token.isCancellationRequested || values === null || values === undefined) {\n                            return null;\n                        }\n                        return client.protocol2CodeConverter.asCodeActionResult(values, token);\n                    }, (error) => {\n                        return client.handleFailedRequest(vscode_languageserver_protocol_1.CodeActionRequest.type, token, error, null);\n                    });\n                };\n                const middleware = client.middleware;\n                return middleware.provideCodeActions\n                    ? middleware.provideCodeActions(document, range, context, token, _provideCodeActions)\n                    : _provideCodeActions(document, range, context, token);\n            },\n            resolveCodeAction: options.resolveProvider\n                ? (item, token) => {\n                    const client = this._client;\n                    const middleware = this._client.middleware;\n                    const resolveCodeAction = async (item, token) => {\n                        return client.sendRequest(vscode_languageserver_protocol_1.CodeActionResolveRequest.type, client.code2ProtocolConverter.asCodeActionSync(item), token).then((result) => {\n                            if (token.isCancellationRequested) {\n                                return item;\n                            }\n                            return client.protocol2CodeConverter.asCodeAction(result, token);\n                        }, (error) => {\n                            return client.handleFailedRequest(vscode_languageserver_protocol_1.CodeActionResolveRequest.type, token, error, item);\n                        });\n                    };\n                    return middleware.resolveCodeAction\n                        ? middleware.resolveCodeAction(item, token, resolveCodeAction)\n                        : resolveCodeAction(item, token);\n                }\n                : undefined\n        };\n        return [vscode_1.languages.registerCodeActionsProvider(this._client.protocol2CodeConverter.asDocumentSelector(selector), provider, (options.codeActionKinds\n                ? { providedCodeActionKinds: this._client.protocol2CodeConverter.asCodeActionKinds(options.codeActionKinds) }\n                : undefined)), provider];\n    }\n}\nexports.CodeActionFeature = CodeActionFeature;\n", "\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CodeLensFeature = void 0;\nconst vscode_1 = require(\"vscode\");\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\nconst UUID = require(\"./utils/uuid\");\nconst features_1 = require(\"./features\");\nclass CodeLensFeature extends features_1.TextDocumentLanguageFeature {\n    constructor(client) {\n        super(client, vscode_languageserver_protocol_1.CodeLensRequest.type);\n    }\n    fillClientCapabilities(capabilities) {\n        (0, features_1.ensure)((0, features_1.ensure)(capabilities, 'textDocument'), 'codeLens').dynamicRegistration = true;\n        (0, features_1.ensure)((0, features_1.ensure)(capabilities, 'workspace'), 'codeLens').refreshSupport = true;\n    }\n    initialize(capabilities, documentSelector) {\n        const client = this._client;\n        client.onRequest(vscode_languageserver_protocol_1.CodeLensRefreshRequest.type, async () => {\n            for (const provider of this.getAllProviders()) {\n                provider.onDidChangeCodeLensEmitter.fire();\n            }\n        });\n        const options = this.getRegistrationOptions(documentSelector, capabilities.codeLensProvider);\n        if (!options) {\n            return;\n        }\n        this.register({ id: UUID.generateUuid(), registerOptions: options });\n    }\n    registerLanguageProvider(options) {\n        const selector = options.documentSelector;\n        const eventEmitter = new vscode_1.EventEmitter();\n        const provider = {\n            onDidChangeCodeLenses: eventEmitter.event,\n            provideCodeLenses: (document, token) => {\n                const client = this._client;\n                const provideCodeLenses = (document, token) => {\n                    return client.sendRequest(vscode_languageserver_protocol_1.CodeLensRequest.type, client.code2ProtocolConverter.asCodeLensParams(document), token).then((result) => {\n                        if (token.isCancellationRequested) {\n                            return null;\n                        }\n                        return client.protocol2CodeConverter.asCodeLenses(result, token);\n                    }, (error) => {\n                        return client.handleFailedRequest(vscode_languageserver_protocol_1.CodeLensRequest.type, token, error, null);\n                    });\n                };\n                const middleware = client.middleware;\n                return middleware.provideCodeLenses\n                    ? middleware.provideCodeLenses(document, token, provideCodeLenses)\n                    : provideCodeLenses(document, token);\n            },\n            resolveCodeLens: (options.resolveProvider)\n                ? (codeLens, token) => {\n                    const client = this._client;\n                    const resolveCodeLens = (codeLens, token) => {\n                        return client.sendRequest(vscode_languageserver_protocol_1.CodeLensResolveRequest.type, client.code2ProtocolConverter.asCodeLens(codeLens), token).then((result) => {\n                            if (token.isCancellationRequested) {\n                                return codeLens;\n                            }\n                            return client.protocol2CodeConverter.asCodeLens(result);\n                        }, (error) => {\n                            return client.handleFailedRequest(vscode_languageserver_protocol_1.CodeLensResolveRequest.type, token, error, codeLens);\n                        });\n                    };\n                    const middleware = client.middleware;\n                    return middleware.resolveCodeLens\n                        ? middleware.resolveCodeLens(codeLens, token, resolveCodeLens)\n                        : resolveCodeLens(codeLens, token);\n                }\n                : undefined\n        };\n        return [vscode_1.languages.registerCodeLensProvider(this._client.protocol2CodeConverter.asDocumentSelector(selector), provider), { provider, onDidChangeCodeLensEmitter: eventEmitter }];\n    }\n}\nexports.CodeLensFeature = CodeLensFeature;\n", "\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DocumentOnTypeFormattingFeature = exports.DocumentRangeFormattingFeature = exports.DocumentFormattingFeature = void 0;\nconst vscode_1 = require(\"vscode\");\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\nconst UUID = require(\"./utils/uuid\");\nconst features_1 = require(\"./features\");\nvar FileFormattingOptions;\n(function (FileFormattingOptions) {\n    function fromConfiguration(document) {\n        const filesConfig = vscode_1.workspace.getConfiguration('files', document);\n        return {\n            trimTrailingWhitespace: filesConfig.get('trimTrailingWhitespace'),\n            trimFinalNewlines: filesConfig.get('trimFinalNewlines'),\n            insertFinalNewline: filesConfig.get('insertFinalNewline'),\n        };\n    }\n    FileFormattingOptions.fromConfiguration = fromConfiguration;\n})(FileFormattingOptions || (FileFormattingOptions = {}));\nclass DocumentFormattingFeature extends features_1.TextDocumentLanguageFeature {\n    constructor(client) {\n        super(client, vscode_languageserver_protocol_1.DocumentFormattingRequest.type);\n    }\n    fillClientCapabilities(capabilities) {\n        (0, features_1.ensure)((0, features_1.ensure)(capabilities, 'textDocument'), 'formatting').dynamicRegistration = true;\n    }\n    initialize(capabilities, documentSelector) {\n        const options = this.getRegistrationOptions(documentSelector, capabilities.documentFormattingProvider);\n        if (!options) {\n            return;\n        }\n        this.register({ id: UUID.generateUuid(), registerOptions: options });\n    }\n    registerLanguageProvider(options) {\n        const selector = options.documentSelector;\n        const provider = {\n            provideDocumentFormattingEdits: (document, options, token) => {\n                const client = this._client;\n                const provideDocumentFormattingEdits = (document, options, token) => {\n                    const params = {\n                        textDocument: client.code2ProtocolConverter.asTextDocumentIdentifier(document),\n                        options: client.code2ProtocolConverter.asFormattingOptions(options, FileFormattingOptions.fromConfiguration(document))\n                    };\n                    return client.sendRequest(vscode_languageserver_protocol_1.DocumentFormattingRequest.type, params, token).then((result) => {\n                        if (token.isCancellationRequested) {\n                            return null;\n                        }\n                        return client.protocol2CodeConverter.asTextEdits(result, token);\n                    }, (error) => {\n                        return client.handleFailedRequest(vscode_languageserver_protocol_1.DocumentFormattingRequest.type, token, error, null);\n                    });\n                };\n                const middleware = client.middleware;\n                return middleware.provideDocumentFormattingEdits\n                    ? middleware.provideDocumentFormattingEdits(document, options, token, provideDocumentFormattingEdits)\n                    : provideDocumentFormattingEdits(document, options, token);\n            }\n        };\n        return [vscode_1.languages.registerDocumentFormattingEditProvider(this._client.protocol2CodeConverter.asDocumentSelector(selector), provider), provider];\n    }\n}\nexports.DocumentFormattingFeature = DocumentFormattingFeature;\nclass DocumentRangeFormattingFeature extends features_1.TextDocumentLanguageFeature {\n    constructor(client) {\n        super(client, vscode_languageserver_protocol_1.DocumentRangeFormattingRequest.type);\n    }\n    fillClientCapabilities(capabilities) {\n        const capability = (0, features_1.ensure)((0, features_1.ensure)(capabilities, 'textDocument'), 'rangeFormatting');\n        capability.dynamicRegistration = true;\n        capability.rangesSupport = true;\n    }\n    initialize(capabilities, documentSelector) {\n        const options = this.getRegistrationOptions(documentSelector, capabilities.documentRangeFormattingProvider);\n        if (!options) {\n            return;\n        }\n        this.register({ id: UUID.generateUuid(), registerOptions: options });\n    }\n    registerLanguageProvider(options) {\n        const selector = options.documentSelector;\n        const provider = {\n            provideDocumentRangeFormattingEdits: (document, range, options, token) => {\n                const client = this._client;\n                const provideDocumentRangeFormattingEdits = (document, range, options, token) => {\n                    const params = {\n                        textDocument: client.code2ProtocolConverter.asTextDocumentIdentifier(document),\n                        range: client.code2ProtocolConverter.asRange(range),\n                        options: client.code2ProtocolConverter.asFormattingOptions(options, FileFormattingOptions.fromConfiguration(document))\n                    };\n                    return client.sendRequest(vscode_languageserver_protocol_1.DocumentRangeFormattingRequest.type, params, token).then((result) => {\n                        if (token.isCancellationRequested) {\n                            return null;\n                        }\n                        return client.protocol2CodeConverter.asTextEdits(result, token);\n                    }, (error) => {\n                        return client.handleFailedRequest(vscode_languageserver_protocol_1.DocumentRangeFormattingRequest.type, token, error, null);\n                    });\n                };\n                const middleware = client.middleware;\n                return middleware.provideDocumentRangeFormattingEdits\n                    ? middleware.provideDocumentRangeFormattingEdits(document, range, options, token, provideDocumentRangeFormattingEdits)\n                    : provideDocumentRangeFormattingEdits(document, range, options, token);\n            }\n        };\n        if (options.rangesSupport) {\n            provider.provideDocumentRangesFormattingEdits = (document, ranges, options, token) => {\n                const client = this._client;\n                const provideDocumentRangesFormattingEdits = (document, ranges, options, token) => {\n                    const params = {\n                        textDocument: client.code2ProtocolConverter.asTextDocumentIdentifier(document),\n                        ranges: client.code2ProtocolConverter.asRanges(ranges),\n                        options: client.code2ProtocolConverter.asFormattingOptions(options, FileFormattingOptions.fromConfiguration(document))\n                    };\n                    return client.sendRequest(vscode_languageserver_protocol_1.DocumentRangesFormattingRequest.type, params, token).then((result) => {\n                        if (token.isCancellationRequested) {\n                            return null;\n                        }\n                        return client.protocol2CodeConverter.asTextEdits(result, token);\n                    }, (error) => {\n                        return client.handleFailedRequest(vscode_languageserver_protocol_1.DocumentRangesFormattingRequest.type, token, error, null);\n                    });\n                };\n                const middleware = client.middleware;\n                return middleware.provideDocumentRangesFormattingEdits\n                    ? middleware.provideDocumentRangesFormattingEdits(document, ranges, options, token, provideDocumentRangesFormattingEdits)\n                    : provideDocumentRangesFormattingEdits(document, ranges, options, token);\n            };\n        }\n        return [vscode_1.languages.registerDocumentRangeFormattingEditProvider(this._client.protocol2CodeConverter.asDocumentSelector(selector), provider), provider];\n    }\n}\nexports.DocumentRangeFormattingFeature = DocumentRangeFormattingFeature;\nclass DocumentOnTypeFormattingFeature extends features_1.TextDocumentLanguageFeature {\n    constructor(client) {\n        super(client, vscode_languageserver_protocol_1.DocumentOnTypeFormattingRequest.type);\n    }\n    fillClientCapabilities(capabilities) {\n        (0, features_1.ensure)((0, features_1.ensure)(capabilities, 'textDocument'), 'onTypeFormatting').dynamicRegistration = true;\n    }\n    initialize(capabilities, documentSelector) {\n        const options = this.getRegistrationOptions(documentSelector, capabilities.documentOnTypeFormattingProvider);\n        if (!options) {\n            return;\n        }\n        this.register({ id: UUID.generateUuid(), registerOptions: options });\n    }\n    registerLanguageProvider(options) {\n        const selector = options.documentSelector;\n        const provider = {\n            provideOnTypeFormattingEdits: (document, position, ch, options, token) => {\n                const client = this._client;\n                const provideOnTypeFormattingEdits = (document, position, ch, options, token) => {\n                    let params = {\n                        textDocument: client.code2ProtocolConverter.asTextDocumentIdentifier(document),\n                        position: client.code2ProtocolConverter.asPosition(position),\n                        ch: ch,\n                        options: client.code2ProtocolConverter.asFormattingOptions(options, FileFormattingOptions.fromConfiguration(document))\n                    };\n                    return client.sendRequest(vscode_languageserver_protocol_1.DocumentOnTypeFormattingRequest.type, params, token).then((result) => {\n                        if (token.isCancellationRequested) {\n                            return null;\n                        }\n                        return client.protocol2CodeConverter.asTextEdits(result, token);\n                    }, (error) => {\n                        return client.handleFailedRequest(vscode_languageserver_protocol_1.DocumentOnTypeFormattingRequest.type, token, error, null);\n                    });\n                };\n                const middleware = client.middleware;\n                return middleware.provideOnTypeFormattingEdits\n                    ? middleware.provideOnTypeFormattingEdits(document, position, ch, options, token, provideOnTypeFormattingEdits)\n                    : provideOnTypeFormattingEdits(document, position, ch, options, token);\n            }\n        };\n        const moreTriggerCharacter = options.moreTriggerCharacter || [];\n        return [vscode_1.languages.registerOnTypeFormattingEditProvider(this._client.protocol2CodeConverter.asDocumentSelector(selector), provider, options.firstTriggerCharacter, ...moreTriggerCharacter), provider];\n    }\n}\nexports.DocumentOnTypeFormattingFeature = DocumentOnTypeFormattingFeature;\n", "\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RenameFeature = void 0;\nconst vscode_1 = require(\"vscode\");\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\nconst UUID = require(\"./utils/uuid\");\nconst Is = require(\"./utils/is\");\nconst features_1 = require(\"./features\");\nclass RenameFeature extends features_1.TextDocumentLanguageFeature {\n    constructor(client) {\n        super(client, vscode_languageserver_protocol_1.RenameRequest.type);\n    }\n    fillClientCapabilities(capabilities) {\n        let rename = (0, features_1.ensure)((0, features_1.ensure)(capabilities, 'textDocument'), 'rename');\n        rename.dynamicRegistration = true;\n        rename.prepareSupport = true;\n        rename.prepareSupportDefaultBehavior = vscode_languageserver_protocol_1.PrepareSupportDefaultBehavior.Identifier;\n        rename.honorsChangeAnnotations = true;\n    }\n    initialize(capabilities, documentSelector) {\n        const options = this.getRegistrationOptions(documentSelector, capabilities.renameProvider);\n        if (!options) {\n            return;\n        }\n        if (Is.boolean(capabilities.renameProvider)) {\n            options.prepareProvider = false;\n        }\n        this.register({ id: UUID.generateUuid(), registerOptions: options });\n    }\n    registerLanguageProvider(options) {\n        const selector = options.documentSelector;\n        const provider = {\n            provideRenameEdits: (document, position, newName, token) => {\n                const client = this._client;\n                const provideRenameEdits = (document, position, newName, token) => {\n                    let params = {\n                        textDocument: client.code2ProtocolConverter.asTextDocumentIdentifier(document),\n                        position: client.code2ProtocolConverter.asPosition(position),\n                        newName: newName\n                    };\n                    return client.sendRequest(vscode_languageserver_protocol_1.RenameRequest.type, params, token).then((result) => {\n                        if (token.isCancellationRequested) {\n                            return null;\n                        }\n                        return client.protocol2CodeConverter.asWorkspaceEdit(result, token);\n                    }, (error) => {\n                        return client.handleFailedRequest(vscode_languageserver_protocol_1.RenameRequest.type, token, error, null, false);\n                    });\n                };\n                const middleware = client.middleware;\n                return middleware.provideRenameEdits\n                    ? middleware.provideRenameEdits(document, position, newName, token, provideRenameEdits)\n                    : provideRenameEdits(document, position, newName, token);\n            },\n            prepareRename: options.prepareProvider\n                ? (document, position, token) => {\n                    const client = this._client;\n                    const prepareRename = (document, position, token) => {\n                        let params = {\n                            textDocument: client.code2ProtocolConverter.asTextDocumentIdentifier(document),\n                            position: client.code2ProtocolConverter.asPosition(position),\n                        };\n                        return client.sendRequest(vscode_languageserver_protocol_1.PrepareRenameRequest.type, params, token).then((result) => {\n                            if (token.isCancellationRequested) {\n                                return null;\n                            }\n                            if (vscode_languageserver_protocol_1.Range.is(result)) {\n                                return client.protocol2CodeConverter.asRange(result);\n                            }\n                            else if (this.isDefaultBehavior(result)) {\n                                return result.defaultBehavior === true\n                                    ? null\n                                    : Promise.reject(new Error(`The element can't be renamed.`));\n                            }\n                            else if (result && vscode_languageserver_protocol_1.Range.is(result.range)) {\n                                return {\n                                    range: client.protocol2CodeConverter.asRange(result.range),\n                                    placeholder: result.placeholder\n                                };\n                            }\n                            // To cancel the rename vscode API expects a rejected promise.\n                            return Promise.reject(new Error(`The element can't be renamed.`));\n                        }, (error) => {\n                            if (typeof error.message === 'string') {\n                                throw new Error(error.message);\n                            }\n                            else {\n                                throw new Error(`The element can't be renamed.`);\n                            }\n                        });\n                    };\n                    const middleware = client.middleware;\n                    return middleware.prepareRename\n                        ? middleware.prepareRename(document, position, token, prepareRename)\n                        : prepareRename(document, position, token);\n                }\n                : undefined\n        };\n        return [this.registerProvider(selector, provider), provider];\n    }\n    registerProvider(selector, provider) {\n        return vscode_1.languages.registerRenameProvider(this._client.protocol2CodeConverter.asDocumentSelector(selector), provider);\n    }\n    isDefaultBehavior(value) {\n        const candidate = value;\n        return candidate && Is.boolean(candidate.defaultBehavior);\n    }\n}\nexports.RenameFeature = RenameFeature;\n", "\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DocumentLinkFeature = void 0;\nconst vscode_1 = require(\"vscode\");\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\nconst features_1 = require(\"./features\");\nconst UUID = require(\"./utils/uuid\");\nclass DocumentLinkFeature extends features_1.TextDocumentLanguageFeature {\n    constructor(client) {\n        super(client, vscode_languageserver_protocol_1.DocumentLinkRequest.type);\n    }\n    fillClientCapabilities(capabilities) {\n        const documentLinkCapabilities = (0, features_1.ensure)((0, features_1.ensure)(capabilities, 'textDocument'), 'documentLink');\n        documentLinkCapabilities.dynamicRegistration = true;\n        documentLinkCapabilities.tooltipSupport = true;\n    }\n    initialize(capabilities, documentSelector) {\n        const options = this.getRegistrationOptions(documentSelector, capabilities.documentLinkProvider);\n        if (!options) {\n            return;\n        }\n        this.register({ id: UUID.generateUuid(), registerOptions: options });\n    }\n    registerLanguageProvider(options) {\n        const selector = options.documentSelector;\n        const provider = {\n            provideDocumentLinks: (document, token) => {\n                const client = this._client;\n                const provideDocumentLinks = (document, token) => {\n                    return client.sendRequest(vscode_languageserver_protocol_1.DocumentLinkRequest.type, client.code2ProtocolConverter.asDocumentLinkParams(document), token).then((result) => {\n                        if (token.isCancellationRequested) {\n                            return null;\n                        }\n                        return client.protocol2CodeConverter.asDocumentLinks(result, token);\n                    }, (error) => {\n                        return client.handleFailedRequest(vscode_languageserver_protocol_1.DocumentLinkRequest.type, token, error, null);\n                    });\n                };\n                const middleware = client.middleware;\n                return middleware.provideDocumentLinks\n                    ? middleware.provideDocumentLinks(document, token, provideDocumentLinks)\n                    : provideDocumentLinks(document, token);\n            },\n            resolveDocumentLink: options.resolveProvider\n                ? (link, token) => {\n                    const client = this._client;\n                    let resolveDocumentLink = (link, token) => {\n                        return client.sendRequest(vscode_languageserver_protocol_1.DocumentLinkResolveRequest.type, client.code2ProtocolConverter.asDocumentLink(link), token).then((result) => {\n                            if (token.isCancellationRequested) {\n                                return link;\n                            }\n                            return client.protocol2CodeConverter.asDocumentLink(result);\n                        }, (error) => {\n                            return client.handleFailedRequest(vscode_languageserver_protocol_1.DocumentLinkResolveRequest.type, token, error, link);\n                        });\n                    };\n                    const middleware = client.middleware;\n                    return middleware.resolveDocumentLink\n                        ? middleware.resolveDocumentLink(link, token, resolveDocumentLink)\n                        : resolveDocumentLink(link, token);\n                }\n                : undefined\n        };\n        return [vscode_1.languages.registerDocumentLinkProvider(this._client.protocol2CodeConverter.asDocumentSelector(selector), provider), provider];\n    }\n}\nexports.DocumentLinkFeature = DocumentLinkFeature;\n", "\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ExecuteCommandFeature = void 0;\nconst vscode_1 = require(\"vscode\");\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\nconst UUID = require(\"./utils/uuid\");\nconst features_1 = require(\"./features\");\nclass ExecuteCommandFeature {\n    constructor(client) {\n        this._client = client;\n        this._commands = new Map();\n    }\n    getState() {\n        return { kind: 'workspace', id: this.registrationType.method, registrations: this._commands.size > 0 };\n    }\n    get registrationType() {\n        return vscode_languageserver_protocol_1.ExecuteCommandRequest.type;\n    }\n    fillClientCapabilities(capabilities) {\n        (0, features_1.ensure)((0, features_1.ensure)(capabilities, 'workspace'), 'executeCommand').dynamicRegistration = true;\n    }\n    initialize(capabilities) {\n        if (!capabilities.executeCommandProvider) {\n            return;\n        }\n        this.register({\n            id: UUID.generateUuid(),\n            registerOptions: Object.assign({}, capabilities.executeCommandProvider)\n        });\n    }\n    register(data) {\n        const client = this._client;\n        const middleware = client.middleware;\n        const executeCommand = (command, args) => {\n            let params = {\n                command,\n                arguments: args\n            };\n            return client.sendRequest(vscode_languageserver_protocol_1.ExecuteCommandRequest.type, params).then(undefined, (error) => {\n                return client.handleFailedRequest(vscode_languageserver_protocol_1.ExecuteCommandRequest.type, undefined, error, undefined);\n            });\n        };\n        if (data.registerOptions.commands) {\n            const disposables = [];\n            for (const command of data.registerOptions.commands) {\n                disposables.push(vscode_1.commands.registerCommand(command, (...args) => {\n                    return middleware.executeCommand\n                        ? middleware.executeCommand(command, args, executeCommand)\n                        : executeCommand(command, args);\n                }));\n            }\n            this._commands.set(data.id, disposables);\n        }\n    }\n    unregister(id) {\n        let disposables = this._commands.get(id);\n        if (disposables) {\n            disposables.forEach(disposable => disposable.dispose());\n        }\n    }\n    clear() {\n        this._commands.forEach((value) => {\n            value.forEach(disposable => disposable.dispose());\n        });\n        this._commands.clear();\n    }\n}\nexports.ExecuteCommandFeature = ExecuteCommandFeature;\n", "\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.FileSystemWatcherFeature = void 0;\nconst vscode_1 = require(\"vscode\");\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\nconst features_1 = require(\"./features\");\nclass FileSystemWatcherFeature {\n    constructor(client, notifyFileEvent) {\n        this._client = client;\n        this._notifyFileEvent = notifyFileEvent;\n        this._watchers = new Map();\n    }\n    getState() {\n        return { kind: 'workspace', id: this.registrationType.method, registrations: this._watchers.size > 0 };\n    }\n    get registrationType() {\n        return vscode_languageserver_protocol_1.DidChangeWatchedFilesNotification.type;\n    }\n    fillClientCapabilities(capabilities) {\n        (0, features_1.ensure)((0, features_1.ensure)(capabilities, 'workspace'), 'didChangeWatchedFiles').dynamicRegistration = true;\n        (0, features_1.ensure)((0, features_1.ensure)(capabilities, 'workspace'), 'didChangeWatchedFiles').relativePatternSupport = true;\n    }\n    initialize(_capabilities, _documentSelector) {\n    }\n    register(data) {\n        if (!Array.isArray(data.registerOptions.watchers)) {\n            return;\n        }\n        const disposables = [];\n        for (const watcher of data.registerOptions.watchers) {\n            const globPattern = this._client.protocol2CodeConverter.asGlobPattern(watcher.globPattern);\n            if (globPattern === undefined) {\n                continue;\n            }\n            let watchCreate = true, watchChange = true, watchDelete = true;\n            if (watcher.kind !== undefined && watcher.kind !== null) {\n                watchCreate = (watcher.kind & vscode_languageserver_protocol_1.WatchKind.Create) !== 0;\n                watchChange = (watcher.kind & vscode_languageserver_protocol_1.WatchKind.Change) !== 0;\n                watchDelete = (watcher.kind & vscode_languageserver_protocol_1.WatchKind.Delete) !== 0;\n            }\n            const fileSystemWatcher = vscode_1.workspace.createFileSystemWatcher(globPattern, !watchCreate, !watchChange, !watchDelete);\n            this.hookListeners(fileSystemWatcher, watchCreate, watchChange, watchDelete, disposables);\n            disposables.push(fileSystemWatcher);\n        }\n        this._watchers.set(data.id, disposables);\n    }\n    registerRaw(id, fileSystemWatchers) {\n        let disposables = [];\n        for (let fileSystemWatcher of fileSystemWatchers) {\n            this.hookListeners(fileSystemWatcher, true, true, true, disposables);\n        }\n        this._watchers.set(id, disposables);\n    }\n    hookListeners(fileSystemWatcher, watchCreate, watchChange, watchDelete, listeners) {\n        if (watchCreate) {\n            fileSystemWatcher.onDidCreate((resource) => this._notifyFileEvent({\n                uri: this._client.code2ProtocolConverter.asUri(resource),\n                type: vscode_languageserver_protocol_1.FileChangeType.Created\n            }), null, listeners);\n        }\n        if (watchChange) {\n            fileSystemWatcher.onDidChange((resource) => this._notifyFileEvent({\n                uri: this._client.code2ProtocolConverter.asUri(resource),\n                type: vscode_languageserver_protocol_1.FileChangeType.Changed\n            }), null, listeners);\n        }\n        if (watchDelete) {\n            fileSystemWatcher.onDidDelete((resource) => this._notifyFileEvent({\n                uri: this._client.code2ProtocolConverter.asUri(resource),\n                type: vscode_languageserver_protocol_1.FileChangeType.Deleted\n            }), null, listeners);\n        }\n    }\n    unregister(id) {\n        let disposables = this._watchers.get(id);\n        if (disposables) {\n            for (let disposable of disposables) {\n                disposable.dispose();\n            }\n        }\n    }\n    clear() {\n        this._watchers.forEach((disposables) => {\n            for (let disposable of disposables) {\n                disposable.dispose();\n            }\n        });\n        this._watchers.clear();\n    }\n}\nexports.FileSystemWatcherFeature = FileSystemWatcherFeature;\n", "\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ColorProviderFeature = void 0;\nconst vscode_1 = require(\"vscode\");\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\nconst features_1 = require(\"./features\");\nclass ColorProviderFeature extends features_1.TextDocumentLanguageFeature {\n    constructor(client) {\n        super(client, vscode_languageserver_protocol_1.DocumentColorRequest.type);\n    }\n    fillClientCapabilities(capabilities) {\n        (0, features_1.ensure)((0, features_1.ensure)(capabilities, 'textDocument'), 'colorProvider').dynamicRegistration = true;\n    }\n    initialize(capabilities, documentSelector) {\n        let [id, options] = this.getRegistration(documentSelector, capabilities.colorProvider);\n        if (!id || !options) {\n            return;\n        }\n        this.register({ id: id, registerOptions: options });\n    }\n    registerLanguageProvider(options) {\n        const selector = options.documentSelector;\n        const provider = {\n            provideColorPresentations: (color, context, token) => {\n                const client = this._client;\n                const provideColorPresentations = (color, context, token) => {\n                    const requestParams = {\n                        color,\n                        textDocument: client.code2ProtocolConverter.asTextDocumentIdentifier(context.document),\n                        range: client.code2ProtocolConverter.asRange(context.range)\n                    };\n                    return client.sendRequest(vscode_languageserver_protocol_1.ColorPresentationRequest.type, requestParams, token).then((result) => {\n                        if (token.isCancellationRequested) {\n                            return null;\n                        }\n                        return this._client.protocol2CodeConverter.asColorPresentations(result, token);\n                    }, (error) => {\n                        return client.handleFailedRequest(vscode_languageserver_protocol_1.ColorPresentationRequest.type, token, error, null);\n                    });\n                };\n                const middleware = client.middleware;\n                return middleware.provideColorPresentations\n                    ? middleware.provideColorPresentations(color, context, token, provideColorPresentations)\n                    : provideColorPresentations(color, context, token);\n            },\n            provideDocumentColors: (document, token) => {\n                const client = this._client;\n                const provideDocumentColors = (document, token) => {\n                    const requestParams = {\n                        textDocument: client.code2ProtocolConverter.asTextDocumentIdentifier(document)\n                    };\n                    return client.sendRequest(vscode_languageserver_protocol_1.DocumentColorRequest.type, requestParams, token).then((result) => {\n                        if (token.isCancellationRequested) {\n                            return null;\n                        }\n                        return this._client.protocol2CodeConverter.asColorInformations(result, token);\n                    }, (error) => {\n                        return client.handleFailedRequest(vscode_languageserver_protocol_1.DocumentColorRequest.type, token, error, null);\n                    });\n                };\n                const middleware = client.middleware;\n                return middleware.provideDocumentColors\n                    ? middleware.provideDocumentColors(document, token, provideDocumentColors)\n                    : provideDocumentColors(document, token);\n            }\n        };\n        return [vscode_1.languages.registerColorProvider(this._client.protocol2CodeConverter.asDocumentSelector(selector), provider), provider];\n    }\n}\nexports.ColorProviderFeature = ColorProviderFeature;\n", "\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ImplementationFeature = void 0;\nconst vscode_1 = require(\"vscode\");\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\nconst features_1 = require(\"./features\");\nclass ImplementationFeature extends features_1.TextDocumentLanguageFeature {\n    constructor(client) {\n        super(client, vscode_languageserver_protocol_1.ImplementationRequest.type);\n    }\n    fillClientCapabilities(capabilities) {\n        let implementationSupport = (0, features_1.ensure)((0, features_1.ensure)(capabilities, 'textDocument'), 'implementation');\n        implementationSupport.dynamicRegistration = true;\n        implementationSupport.linkSupport = true;\n    }\n    initialize(capabilities, documentSelector) {\n        let [id, options] = this.getRegistration(documentSelector, capabilities.implementationProvider);\n        if (!id || !options) {\n            return;\n        }\n        this.register({ id: id, registerOptions: options });\n    }\n    registerLanguageProvider(options) {\n        const selector = options.documentSelector;\n        const provider = {\n            provideImplementation: (document, position, token) => {\n                const client = this._client;\n                const provideImplementation = (document, position, token) => {\n                    return client.sendRequest(vscode_languageserver_protocol_1.ImplementationRequest.type, client.code2ProtocolConverter.asTextDocumentPositionParams(document, position), token).then((result) => {\n                        if (token.isCancellationRequested) {\n                            return null;\n                        }\n                        return client.protocol2CodeConverter.asDefinitionResult(result, token);\n                    }, (error) => {\n                        return client.handleFailedRequest(vscode_languageserver_protocol_1.ImplementationRequest.type, token, error, null);\n                    });\n                };\n                const middleware = client.middleware;\n                return middleware.provideImplementation\n                    ? middleware.provideImplementation(document, position, token, provideImplementation)\n                    : provideImplementation(document, position, token);\n            }\n        };\n        return [this.registerProvider(selector, provider), provider];\n    }\n    registerProvider(selector, provider) {\n        return vscode_1.languages.registerImplementationProvider(this._client.protocol2CodeConverter.asDocumentSelector(selector), provider);\n    }\n}\nexports.ImplementationFeature = ImplementationFeature;\n", "\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TypeDefinitionFeature = void 0;\nconst vscode_1 = require(\"vscode\");\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\nconst features_1 = require(\"./features\");\nclass TypeDefinitionFeature extends features_1.TextDocumentLanguageFeature {\n    constructor(client) {\n        super(client, vscode_languageserver_protocol_1.TypeDefinitionRequest.type);\n    }\n    fillClientCapabilities(capabilities) {\n        (0, features_1.ensure)((0, features_1.ensure)(capabilities, 'textDocument'), 'typeDefinition').dynamicRegistration = true;\n        let typeDefinitionSupport = (0, features_1.ensure)((0, features_1.ensure)(capabilities, 'textDocument'), 'typeDefinition');\n        typeDefinitionSupport.dynamicRegistration = true;\n        typeDefinitionSupport.linkSupport = true;\n    }\n    initialize(capabilities, documentSelector) {\n        let [id, options] = this.getRegistration(documentSelector, capabilities.typeDefinitionProvider);\n        if (!id || !options) {\n            return;\n        }\n        this.register({ id: id, registerOptions: options });\n    }\n    registerLanguageProvider(options) {\n        const selector = options.documentSelector;\n        const provider = {\n            provideTypeDefinition: (document, position, token) => {\n                const client = this._client;\n                const provideTypeDefinition = (document, position, token) => {\n                    return client.sendRequest(vscode_languageserver_protocol_1.TypeDefinitionRequest.type, client.code2ProtocolConverter.asTextDocumentPositionParams(document, position), token).then((result) => {\n                        if (token.isCancellationRequested) {\n                            return null;\n                        }\n                        return client.protocol2CodeConverter.asDefinitionResult(result, token);\n                    }, (error) => {\n                        return client.handleFailedRequest(vscode_languageserver_protocol_1.TypeDefinitionRequest.type, token, error, null);\n                    });\n                };\n                const middleware = client.middleware;\n                return middleware.provideTypeDefinition\n                    ? middleware.provideTypeDefinition(document, position, token, provideTypeDefinition)\n                    : provideTypeDefinition(document, position, token);\n            }\n        };\n        return [this.registerProvider(selector, provider), provider];\n    }\n    registerProvider(selector, provider) {\n        return vscode_1.languages.registerTypeDefinitionProvider(this._client.protocol2CodeConverter.asDocumentSelector(selector), provider);\n    }\n}\nexports.TypeDefinitionFeature = TypeDefinitionFeature;\n", "\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WorkspaceFoldersFeature = exports.arrayDiff = void 0;\nconst UUID = require(\"./utils/uuid\");\nconst vscode_1 = require(\"vscode\");\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\nfunction access(target, key) {\n    if (target === undefined || target === null) {\n        return undefined;\n    }\n    return target[key];\n}\nfunction arrayDiff(left, right) {\n    return left.filter(element => right.indexOf(element) < 0);\n}\nexports.arrayDiff = arrayDiff;\nclass WorkspaceFoldersFeature {\n    constructor(client) {\n        this._client = client;\n        this._listeners = new Map();\n    }\n    getState() {\n        return { kind: 'workspace', id: this.registrationType.method, registrations: this._listeners.size > 0 };\n    }\n    get registrationType() {\n        return vscode_languageserver_protocol_1.DidChangeWorkspaceFoldersNotification.type;\n    }\n    fillInitializeParams(params) {\n        const folders = vscode_1.workspace.workspaceFolders;\n        this.initializeWithFolders(folders);\n        if (folders === void 0) {\n            params.workspaceFolders = null;\n        }\n        else {\n            params.workspaceFolders = folders.map(folder => this.asProtocol(folder));\n        }\n    }\n    initializeWithFolders(currentWorkspaceFolders) {\n        this._initialFolders = currentWorkspaceFolders;\n    }\n    fillClientCapabilities(capabilities) {\n        capabilities.workspace = capabilities.workspace || {};\n        capabilities.workspace.workspaceFolders = true;\n    }\n    initialize(capabilities) {\n        const client = this._client;\n        client.onRequest(vscode_languageserver_protocol_1.WorkspaceFoldersRequest.type, (token) => {\n            const workspaceFolders = () => {\n                const folders = vscode_1.workspace.workspaceFolders;\n                if (folders === undefined) {\n                    return null;\n                }\n                const result = folders.map((folder) => {\n                    return this.asProtocol(folder);\n                });\n                return result;\n            };\n            const middleware = client.middleware.workspace;\n            return middleware && middleware.workspaceFolders\n                ? middleware.workspaceFolders(token, workspaceFolders)\n                : workspaceFolders(token);\n        });\n        const value = access(access(access(capabilities, 'workspace'), 'workspaceFolders'), 'changeNotifications');\n        let id;\n        if (typeof value === 'string') {\n            id = value;\n        }\n        else if (value === true) {\n            id = UUID.generateUuid();\n        }\n        if (id) {\n            this.register({ id: id, registerOptions: undefined });\n        }\n    }\n    sendInitialEvent(currentWorkspaceFolders) {\n        let promise;\n        if (this._initialFolders && currentWorkspaceFolders) {\n            const removed = arrayDiff(this._initialFolders, currentWorkspaceFolders);\n            const added = arrayDiff(currentWorkspaceFolders, this._initialFolders);\n            if (added.length > 0 || removed.length > 0) {\n                promise = this.doSendEvent(added, removed);\n            }\n        }\n        else if (this._initialFolders) {\n            promise = this.doSendEvent([], this._initialFolders);\n        }\n        else if (currentWorkspaceFolders) {\n            promise = this.doSendEvent(currentWorkspaceFolders, []);\n        }\n        if (promise !== undefined) {\n            promise.catch((error) => {\n                this._client.error(`Sending notification ${vscode_languageserver_protocol_1.DidChangeWorkspaceFoldersNotification.type.method} failed`, error);\n            });\n        }\n    }\n    doSendEvent(addedFolders, removedFolders) {\n        let params = {\n            event: {\n                added: addedFolders.map(folder => this.asProtocol(folder)),\n                removed: removedFolders.map(folder => this.asProtocol(folder))\n            }\n        };\n        return this._client.sendNotification(vscode_languageserver_protocol_1.DidChangeWorkspaceFoldersNotification.type, params);\n    }\n    register(data) {\n        let id = data.id;\n        let client = this._client;\n        let disposable = vscode_1.workspace.onDidChangeWorkspaceFolders((event) => {\n            let didChangeWorkspaceFolders = (event) => {\n                return this.doSendEvent(event.added, event.removed);\n            };\n            let middleware = client.middleware.workspace;\n            const promise = middleware && middleware.didChangeWorkspaceFolders\n                ? middleware.didChangeWorkspaceFolders(event, didChangeWorkspaceFolders)\n                : didChangeWorkspaceFolders(event);\n            promise.catch((error) => {\n                this._client.error(`Sending notification ${vscode_languageserver_protocol_1.DidChangeWorkspaceFoldersNotification.type.method} failed`, error);\n            });\n        });\n        this._listeners.set(id, disposable);\n        this.sendInitialEvent(vscode_1.workspace.workspaceFolders);\n    }\n    unregister(id) {\n        let disposable = this._listeners.get(id);\n        if (disposable === void 0) {\n            return;\n        }\n        this._listeners.delete(id);\n        disposable.dispose();\n    }\n    clear() {\n        for (let disposable of this._listeners.values()) {\n            disposable.dispose();\n        }\n        this._listeners.clear();\n    }\n    asProtocol(workspaceFolder) {\n        if (workspaceFolder === void 0) {\n            return null;\n        }\n        return { uri: this._client.code2ProtocolConverter.asUri(workspaceFolder.uri), name: workspaceFolder.name };\n    }\n}\nexports.WorkspaceFoldersFeature = WorkspaceFoldersFeature;\n", "\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.FoldingRangeFeature = void 0;\nconst vscode_1 = require(\"vscode\");\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\nconst features_1 = require(\"./features\");\nclass FoldingRangeFeature extends features_1.TextDocumentLanguageFeature {\n    constructor(client) {\n        super(client, vscode_languageserver_protocol_1.FoldingRangeRequest.type);\n    }\n    fillClientCapabilities(capabilities) {\n        let capability = (0, features_1.ensure)((0, features_1.ensure)(capabilities, 'textDocument'), 'foldingRange');\n        capability.dynamicRegistration = true;\n        capability.rangeLimit = 5000;\n        capability.lineFoldingOnly = true;\n        capability.foldingRangeKind = { valueSet: [vscode_languageserver_protocol_1.FoldingRangeKind.Comment, vscode_languageserver_protocol_1.FoldingRangeKind.Imports, vscode_languageserver_protocol_1.FoldingRangeKind.Region] };\n        capability.foldingRange = { collapsedText: false };\n        (0, features_1.ensure)((0, features_1.ensure)(capabilities, 'workspace'), 'foldingRange').refreshSupport = true;\n    }\n    initialize(capabilities, documentSelector) {\n        this._client.onRequest(vscode_languageserver_protocol_1.FoldingRangeRefreshRequest.type, async () => {\n            for (const provider of this.getAllProviders()) {\n                provider.onDidChangeFoldingRange.fire();\n            }\n        });\n        let [id, options] = this.getRegistration(documentSelector, capabilities.foldingRangeProvider);\n        if (!id || !options) {\n            return;\n        }\n        this.register({ id: id, registerOptions: options });\n    }\n    registerLanguageProvider(options) {\n        const selector = options.documentSelector;\n        const eventEmitter = new vscode_1.EventEmitter();\n        const provider = {\n            onDidChangeFoldingRanges: eventEmitter.event,\n            provideFoldingRanges: (document, context, token) => {\n                const client = this._client;\n                const provideFoldingRanges = (document, _, token) => {\n                    const requestParams = {\n                        textDocument: client.code2ProtocolConverter.asTextDocumentIdentifier(document)\n                    };\n                    return client.sendRequest(vscode_languageserver_protocol_1.FoldingRangeRequest.type, requestParams, token).then((result) => {\n                        if (token.isCancellationRequested) {\n                            return null;\n                        }\n                        return client.protocol2CodeConverter.asFoldingRanges(result, token);\n                    }, (error) => {\n                        return client.handleFailedRequest(vscode_languageserver_protocol_1.FoldingRangeRequest.type, token, error, null);\n                    });\n                };\n                const middleware = client.middleware;\n                return middleware.provideFoldingRanges\n                    ? middleware.provideFoldingRanges(document, context, token, provideFoldingRanges)\n                    : provideFoldingRanges(document, context, token);\n            }\n        };\n        return [vscode_1.languages.registerFoldingRangeProvider(this._client.protocol2CodeConverter.asDocumentSelector(selector), provider), { provider: provider, onDidChangeFoldingRange: eventEmitter }];\n    }\n}\nexports.FoldingRangeFeature = FoldingRangeFeature;\n", "\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DeclarationFeature = void 0;\nconst vscode_1 = require(\"vscode\");\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\nconst features_1 = require(\"./features\");\nclass DeclarationFeature extends features_1.TextDocumentLanguageFeature {\n    constructor(client) {\n        super(client, vscode_languageserver_protocol_1.DeclarationRequest.type);\n    }\n    fillClientCapabilities(capabilities) {\n        const declarationSupport = (0, features_1.ensure)((0, features_1.ensure)(capabilities, 'textDocument'), 'declaration');\n        declarationSupport.dynamicRegistration = true;\n        declarationSupport.linkSupport = true;\n    }\n    initialize(capabilities, documentSelector) {\n        const [id, options] = this.getRegistration(documentSelector, capabilities.declarationProvider);\n        if (!id || !options) {\n            return;\n        }\n        this.register({ id: id, registerOptions: options });\n    }\n    registerLanguageProvider(options) {\n        const selector = options.documentSelector;\n        const provider = {\n            provideDeclaration: (document, position, token) => {\n                const client = this._client;\n                const provideDeclaration = (document, position, token) => {\n                    return client.sendRequest(vscode_languageserver_protocol_1.DeclarationRequest.type, client.code2ProtocolConverter.asTextDocumentPositionParams(document, position), token).then((result) => {\n                        if (token.isCancellationRequested) {\n                            return null;\n                        }\n                        return client.protocol2CodeConverter.asDeclarationResult(result, token);\n                    }, (error) => {\n                        return client.handleFailedRequest(vscode_languageserver_protocol_1.DeclarationRequest.type, token, error, null);\n                    });\n                };\n                const middleware = client.middleware;\n                return middleware.provideDeclaration\n                    ? middleware.provideDeclaration(document, position, token, provideDeclaration)\n                    : provideDeclaration(document, position, token);\n            }\n        };\n        return [this.registerProvider(selector, provider), provider];\n    }\n    registerProvider(selector, provider) {\n        return vscode_1.languages.registerDeclarationProvider(this._client.protocol2CodeConverter.asDocumentSelector(selector), provider);\n    }\n}\nexports.DeclarationFeature = DeclarationFeature;\n", "\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SelectionRangeFeature = void 0;\nconst vscode_1 = require(\"vscode\");\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\nconst features_1 = require(\"./features\");\nclass SelectionRangeFeature extends features_1.TextDocumentLanguageFeature {\n    constructor(client) {\n        super(client, vscode_languageserver_protocol_1.SelectionRangeRequest.type);\n    }\n    fillClientCapabilities(capabilities) {\n        const capability = (0, features_1.ensure)((0, features_1.ensure)(capabilities, 'textDocument'), 'selectionRange');\n        capability.dynamicRegistration = true;\n    }\n    initialize(capabilities, documentSelector) {\n        const [id, options] = this.getRegistration(documentSelector, capabilities.selectionRangeProvider);\n        if (!id || !options) {\n            return;\n        }\n        this.register({ id: id, registerOptions: options });\n    }\n    registerLanguageProvider(options) {\n        const selector = options.documentSelector;\n        const provider = {\n            provideSelectionRanges: (document, positions, token) => {\n                const client = this._client;\n                const provideSelectionRanges = async (document, positions, token) => {\n                    const requestParams = {\n                        textDocument: client.code2ProtocolConverter.asTextDocumentIdentifier(document),\n                        positions: client.code2ProtocolConverter.asPositionsSync(positions, token)\n                    };\n                    return client.sendRequest(vscode_languageserver_protocol_1.SelectionRangeRequest.type, requestParams, token).then((ranges) => {\n                        if (token.isCancellationRequested) {\n                            return null;\n                        }\n                        return client.protocol2CodeConverter.asSelectionRanges(ranges, token);\n                    }, (error) => {\n                        return client.handleFailedRequest(vscode_languageserver_protocol_1.SelectionRangeRequest.type, token, error, null);\n                    });\n                };\n                const middleware = client.middleware;\n                return middleware.provideSelectionRanges\n                    ? middleware.provideSelectionRanges(document, positions, token, provideSelectionRanges)\n                    : provideSelectionRanges(document, positions, token);\n            }\n        };\n        return [this.registerProvider(selector, provider), provider];\n    }\n    registerProvider(selector, provider) {\n        return vscode_1.languages.registerSelectionRangeProvider(this._client.protocol2CodeConverter.asDocumentSelector(selector), provider);\n    }\n}\nexports.SelectionRangeFeature = SelectionRangeFeature;\n", "\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ProgressFeature = void 0;\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\nconst progressPart_1 = require(\"./progressPart\");\nfunction ensure(target, key) {\n    if (target[key] === void 0) {\n        target[key] = Object.create(null);\n    }\n    return target[key];\n}\nclass ProgressFeature {\n    constructor(_client) {\n        this._client = _client;\n        this.activeParts = new Set();\n    }\n    getState() {\n        return { kind: 'window', id: vscode_languageserver_protocol_1.WorkDoneProgressCreateRequest.method, registrations: this.activeParts.size > 0 };\n    }\n    fillClientCapabilities(capabilities) {\n        ensure(capabilities, 'window').workDoneProgress = true;\n    }\n    initialize() {\n        const client = this._client;\n        const deleteHandler = (part) => {\n            this.activeParts.delete(part);\n        };\n        const createHandler = (params) => {\n            this.activeParts.add(new progressPart_1.ProgressPart(this._client, params.token, deleteHandler));\n        };\n        client.onRequest(vscode_languageserver_protocol_1.WorkDoneProgressCreateRequest.type, createHandler);\n    }\n    clear() {\n        for (const part of this.activeParts) {\n            part.done();\n        }\n        this.activeParts.clear();\n    }\n}\nexports.ProgressFeature = ProgressFeature;\n", "\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CallHierarchyFeature = void 0;\nconst vscode_1 = require(\"vscode\");\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\nconst features_1 = require(\"./features\");\nclass CallHierarchyProvider {\n    constructor(client) {\n        this.client = client;\n        this.middleware = client.middleware;\n    }\n    prepareCallHierarchy(document, position, token) {\n        const client = this.client;\n        const middleware = this.middleware;\n        const prepareCallHierarchy = (document, position, token) => {\n            const params = client.code2ProtocolConverter.asTextDocumentPositionParams(document, position);\n            return client.sendRequest(vscode_languageserver_protocol_1.CallHierarchyPrepareRequest.type, params, token).then((result) => {\n                if (token.isCancellationRequested) {\n                    return null;\n                }\n                return client.protocol2CodeConverter.asCallHierarchyItems(result, token);\n            }, (error) => {\n                return client.handleFailedRequest(vscode_languageserver_protocol_1.CallHierarchyPrepareRequest.type, token, error, null);\n            });\n        };\n        return middleware.prepareCallHierarchy\n            ? middleware.prepareCallHierarchy(document, position, token, prepareCallHierarchy)\n            : prepareCallHierarchy(document, position, token);\n    }\n    provideCallHierarchyIncomingCalls(item, token) {\n        const client = this.client;\n        const middleware = this.middleware;\n        const provideCallHierarchyIncomingCalls = (item, token) => {\n            const params = {\n                item: client.code2ProtocolConverter.asCallHierarchyItem(item)\n            };\n            return client.sendRequest(vscode_languageserver_protocol_1.CallHierarchyIncomingCallsRequest.type, params, token).then((result) => {\n                if (token.isCancellationRequested) {\n                    return null;\n                }\n                return client.protocol2CodeConverter.asCallHierarchyIncomingCalls(result, token);\n            }, (error) => {\n                return client.handleFailedRequest(vscode_languageserver_protocol_1.CallHierarchyIncomingCallsRequest.type, token, error, null);\n            });\n        };\n        return middleware.provideCallHierarchyIncomingCalls\n            ? middleware.provideCallHierarchyIncomingCalls(item, token, provideCallHierarchyIncomingCalls)\n            : provideCallHierarchyIncomingCalls(item, token);\n    }\n    provideCallHierarchyOutgoingCalls(item, token) {\n        const client = this.client;\n        const middleware = this.middleware;\n        const provideCallHierarchyOutgoingCalls = (item, token) => {\n            const params = {\n                item: client.code2ProtocolConverter.asCallHierarchyItem(item)\n            };\n            return client.sendRequest(vscode_languageserver_protocol_1.CallHierarchyOutgoingCallsRequest.type, params, token).then((result) => {\n                if (token.isCancellationRequested) {\n                    return null;\n                }\n                return client.protocol2CodeConverter.asCallHierarchyOutgoingCalls(result, token);\n            }, (error) => {\n                return client.handleFailedRequest(vscode_languageserver_protocol_1.CallHierarchyOutgoingCallsRequest.type, token, error, null);\n            });\n        };\n        return middleware.provideCallHierarchyOutgoingCalls\n            ? middleware.provideCallHierarchyOutgoingCalls(item, token, provideCallHierarchyOutgoingCalls)\n            : provideCallHierarchyOutgoingCalls(item, token);\n    }\n}\nclass CallHierarchyFeature extends features_1.TextDocumentLanguageFeature {\n    constructor(client) {\n        super(client, vscode_languageserver_protocol_1.CallHierarchyPrepareRequest.type);\n    }\n    fillClientCapabilities(cap) {\n        const capabilities = cap;\n        const capability = (0, features_1.ensure)((0, features_1.ensure)(capabilities, 'textDocument'), 'callHierarchy');\n        capability.dynamicRegistration = true;\n    }\n    initialize(capabilities, documentSelector) {\n        const [id, options] = this.getRegistration(documentSelector, capabilities.callHierarchyProvider);\n        if (!id || !options) {\n            return;\n        }\n        this.register({ id: id, registerOptions: options });\n    }\n    registerLanguageProvider(options) {\n        const client = this._client;\n        const provider = new CallHierarchyProvider(client);\n        return [vscode_1.languages.registerCallHierarchyProvider(this._client.protocol2CodeConverter.asDocumentSelector(options.documentSelector), provider), provider];\n    }\n}\nexports.CallHierarchyFeature = CallHierarchyFeature;\n", "\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SemanticTokensFeature = void 0;\nconst vscode = require(\"vscode\");\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\nconst features_1 = require(\"./features\");\nconst Is = require(\"./utils/is\");\nclass SemanticTokensFeature extends features_1.TextDocumentLanguageFeature {\n    constructor(client) {\n        super(client, vscode_languageserver_protocol_1.SemanticTokensRegistrationType.type);\n    }\n    fillClientCapabilities(capabilities) {\n        const capability = (0, features_1.ensure)((0, features_1.ensure)(capabilities, 'textDocument'), 'semanticTokens');\n        capability.dynamicRegistration = true;\n        capability.tokenTypes = [\n            vscode_languageserver_protocol_1.SemanticTokenTypes.namespace,\n            vscode_languageserver_protocol_1.SemanticTokenTypes.type,\n            vscode_languageserver_protocol_1.SemanticTokenTypes.class,\n            vscode_languageserver_protocol_1.SemanticTokenTypes.enum,\n            vscode_languageserver_protocol_1.SemanticTokenTypes.interface,\n            vscode_languageserver_protocol_1.SemanticTokenTypes.struct,\n            vscode_languageserver_protocol_1.SemanticTokenTypes.typeParameter,\n            vscode_languageserver_protocol_1.SemanticTokenTypes.parameter,\n            vscode_languageserver_protocol_1.SemanticTokenTypes.variable,\n            vscode_languageserver_protocol_1.SemanticTokenTypes.property,\n            vscode_languageserver_protocol_1.SemanticTokenTypes.enumMember,\n            vscode_languageserver_protocol_1.SemanticTokenTypes.event,\n            vscode_languageserver_protocol_1.SemanticTokenTypes.function,\n            vscode_languageserver_protocol_1.SemanticTokenTypes.method,\n            vscode_languageserver_protocol_1.SemanticTokenTypes.macro,\n            vscode_languageserver_protocol_1.SemanticTokenTypes.keyword,\n            vscode_languageserver_protocol_1.SemanticTokenTypes.modifier,\n            vscode_languageserver_protocol_1.SemanticTokenTypes.comment,\n            vscode_languageserver_protocol_1.SemanticTokenTypes.string,\n            vscode_languageserver_protocol_1.SemanticTokenTypes.number,\n            vscode_languageserver_protocol_1.SemanticTokenTypes.regexp,\n            vscode_languageserver_protocol_1.SemanticTokenTypes.operator,\n            vscode_languageserver_protocol_1.SemanticTokenTypes.decorator\n        ];\n        capability.tokenModifiers = [\n            vscode_languageserver_protocol_1.SemanticTokenModifiers.declaration,\n            vscode_languageserver_protocol_1.SemanticTokenModifiers.definition,\n            vscode_languageserver_protocol_1.SemanticTokenModifiers.readonly,\n            vscode_languageserver_protocol_1.SemanticTokenModifiers.static,\n            vscode_languageserver_protocol_1.SemanticTokenModifiers.deprecated,\n            vscode_languageserver_protocol_1.SemanticTokenModifiers.abstract,\n            vscode_languageserver_protocol_1.SemanticTokenModifiers.async,\n            vscode_languageserver_protocol_1.SemanticTokenModifiers.modification,\n            vscode_languageserver_protocol_1.SemanticTokenModifiers.documentation,\n            vscode_languageserver_protocol_1.SemanticTokenModifiers.defaultLibrary\n        ];\n        capability.formats = [vscode_languageserver_protocol_1.TokenFormat.Relative];\n        capability.requests = {\n            range: true,\n            full: {\n                delta: true\n            }\n        };\n        capability.multilineTokenSupport = false;\n        capability.overlappingTokenSupport = false;\n        capability.serverCancelSupport = true;\n        capability.augmentsSyntaxTokens = true;\n        (0, features_1.ensure)((0, features_1.ensure)(capabilities, 'workspace'), 'semanticTokens').refreshSupport = true;\n    }\n    initialize(capabilities, documentSelector) {\n        const client = this._client;\n        client.onRequest(vscode_languageserver_protocol_1.SemanticTokensRefreshRequest.type, async () => {\n            for (const provider of this.getAllProviders()) {\n                provider.onDidChangeSemanticTokensEmitter.fire();\n            }\n        });\n        const [id, options] = this.getRegistration(documentSelector, capabilities.semanticTokensProvider);\n        if (!id || !options) {\n            return;\n        }\n        this.register({ id: id, registerOptions: options });\n    }\n    registerLanguageProvider(options) {\n        const selector = options.documentSelector;\n        const fullProvider = Is.boolean(options.full) ? options.full : options.full !== undefined;\n        const hasEditProvider = options.full !== undefined && typeof options.full !== 'boolean' && options.full.delta === true;\n        const eventEmitter = new vscode.EventEmitter();\n        const documentProvider = fullProvider\n            ? {\n                onDidChangeSemanticTokens: eventEmitter.event,\n                provideDocumentSemanticTokens: (document, token) => {\n                    const client = this._client;\n                    const middleware = client.middleware;\n                    const provideDocumentSemanticTokens = (document, token) => {\n                        const params = {\n                            textDocument: client.code2ProtocolConverter.asTextDocumentIdentifier(document)\n                        };\n                        return client.sendRequest(vscode_languageserver_protocol_1.SemanticTokensRequest.type, params, token).then((result) => {\n                            if (token.isCancellationRequested) {\n                                return null;\n                            }\n                            return client.protocol2CodeConverter.asSemanticTokens(result, token);\n                        }, (error) => {\n                            return client.handleFailedRequest(vscode_languageserver_protocol_1.SemanticTokensRequest.type, token, error, null);\n                        });\n                    };\n                    return middleware.provideDocumentSemanticTokens\n                        ? middleware.provideDocumentSemanticTokens(document, token, provideDocumentSemanticTokens)\n                        : provideDocumentSemanticTokens(document, token);\n                },\n                provideDocumentSemanticTokensEdits: hasEditProvider\n                    ? (document, previousResultId, token) => {\n                        const client = this._client;\n                        const middleware = client.middleware;\n                        const provideDocumentSemanticTokensEdits = (document, previousResultId, token) => {\n                            const params = {\n                                textDocument: client.code2ProtocolConverter.asTextDocumentIdentifier(document),\n                                previousResultId\n                            };\n                            return client.sendRequest(vscode_languageserver_protocol_1.SemanticTokensDeltaRequest.type, params, token).then(async (result) => {\n                                if (token.isCancellationRequested) {\n                                    return null;\n                                }\n                                if (vscode_languageserver_protocol_1.SemanticTokens.is(result)) {\n                                    return await client.protocol2CodeConverter.asSemanticTokens(result, token);\n                                }\n                                else {\n                                    return await client.protocol2CodeConverter.asSemanticTokensEdits(result, token);\n                                }\n                            }, (error) => {\n                                return client.handleFailedRequest(vscode_languageserver_protocol_1.SemanticTokensDeltaRequest.type, token, error, null);\n                            });\n                        };\n                        return middleware.provideDocumentSemanticTokensEdits\n                            ? middleware.provideDocumentSemanticTokensEdits(document, previousResultId, token, provideDocumentSemanticTokensEdits)\n                            : provideDocumentSemanticTokensEdits(document, previousResultId, token);\n                    }\n                    : undefined\n            }\n            : undefined;\n        const hasRangeProvider = options.range === true;\n        const rangeProvider = hasRangeProvider\n            ? {\n                provideDocumentRangeSemanticTokens: (document, range, token) => {\n                    const client = this._client;\n                    const middleware = client.middleware;\n                    const provideDocumentRangeSemanticTokens = (document, range, token) => {\n                        const params = {\n                            textDocument: client.code2ProtocolConverter.asTextDocumentIdentifier(document),\n                            range: client.code2ProtocolConverter.asRange(range)\n                        };\n                        return client.sendRequest(vscode_languageserver_protocol_1.SemanticTokensRangeRequest.type, params, token).then((result) => {\n                            if (token.isCancellationRequested) {\n                                return null;\n                            }\n                            return client.protocol2CodeConverter.asSemanticTokens(result, token);\n                        }, (error) => {\n                            return client.handleFailedRequest(vscode_languageserver_protocol_1.SemanticTokensRangeRequest.type, token, error, null);\n                        });\n                    };\n                    return middleware.provideDocumentRangeSemanticTokens\n                        ? middleware.provideDocumentRangeSemanticTokens(document, range, token, provideDocumentRangeSemanticTokens)\n                        : provideDocumentRangeSemanticTokens(document, range, token);\n                }\n            }\n            : undefined;\n        const disposables = [];\n        const client = this._client;\n        const legend = client.protocol2CodeConverter.asSemanticTokensLegend(options.legend);\n        const documentSelector = client.protocol2CodeConverter.asDocumentSelector(selector);\n        if (documentProvider !== undefined) {\n            disposables.push(vscode.languages.registerDocumentSemanticTokensProvider(documentSelector, documentProvider, legend));\n        }\n        if (rangeProvider !== undefined) {\n            disposables.push(vscode.languages.registerDocumentRangeSemanticTokensProvider(documentSelector, rangeProvider, legend));\n        }\n        return [new vscode.Disposable(() => disposables.forEach(item => item.dispose())), { range: rangeProvider, full: documentProvider, onDidChangeSemanticTokensEmitter: eventEmitter }];\n    }\n}\nexports.SemanticTokensFeature = SemanticTokensFeature;\n", "\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WillDeleteFilesFeature = exports.WillRenameFilesFeature = exports.WillCreateFilesFeature = exports.DidDeleteFilesFeature = exports.DidRenameFilesFeature = exports.DidCreateFilesFeature = void 0;\nconst code = require(\"vscode\");\nconst minimatch = require(\"minimatch\");\nconst proto = require(\"vscode-languageserver-protocol\");\nconst UUID = require(\"./utils/uuid\");\nfunction ensure(target, key) {\n    if (target[key] === void 0) {\n        target[key] = {};\n    }\n    return target[key];\n}\nfunction access(target, key) {\n    return target[key];\n}\nfunction assign(target, key, value) {\n    target[key] = value;\n}\nclass FileOperationFeature {\n    constructor(client, event, registrationType, clientCapability, serverCapability) {\n        this._client = client;\n        this._event = event;\n        this._registrationType = registrationType;\n        this._clientCapability = clientCapability;\n        this._serverCapability = serverCapability;\n        this._filters = new Map();\n    }\n    getState() {\n        return { kind: 'workspace', id: this._registrationType.method, registrations: this._filters.size > 0 };\n    }\n    filterSize() {\n        return this._filters.size;\n    }\n    get registrationType() {\n        return this._registrationType;\n    }\n    fillClientCapabilities(capabilities) {\n        const value = ensure(ensure(capabilities, 'workspace'), 'fileOperations');\n        // this happens n times but it is the same value so we tolerate this.\n        assign(value, 'dynamicRegistration', true);\n        assign(value, this._clientCapability, true);\n    }\n    initialize(capabilities) {\n        const options = capabilities.workspace?.fileOperations;\n        const capability = options !== undefined ? access(options, this._serverCapability) : undefined;\n        if (capability?.filters !== undefined) {\n            try {\n                this.register({\n                    id: UUID.generateUuid(),\n                    registerOptions: { filters: capability.filters }\n                });\n            }\n            catch (e) {\n                this._client.warn(`Ignoring invalid glob pattern for ${this._serverCapability} registration: ${e}`);\n            }\n        }\n    }\n    register(data) {\n        if (!this._listener) {\n            this._listener = this._event(this.send, this);\n        }\n        const minimatchFilter = data.registerOptions.filters.map((filter) => {\n            const matcher = new minimatch.Minimatch(filter.pattern.glob, FileOperationFeature.asMinimatchOptions(filter.pattern.options));\n            if (!matcher.makeRe()) {\n                throw new Error(`Invalid pattern ${filter.pattern.glob}!`);\n            }\n            return { scheme: filter.scheme, matcher, kind: filter.pattern.matches };\n        });\n        this._filters.set(data.id, minimatchFilter);\n    }\n    unregister(id) {\n        this._filters.delete(id);\n        if (this._filters.size === 0 && this._listener) {\n            this._listener.dispose();\n            this._listener = undefined;\n        }\n    }\n    clear() {\n        this._filters.clear();\n        if (this._listener) {\n            this._listener.dispose();\n            this._listener = undefined;\n        }\n    }\n    getFileType(uri) {\n        return FileOperationFeature.getFileType(uri);\n    }\n    async filter(event, prop) {\n        // (Asynchronously) map each file onto a boolean of whether it matches\n        // any of the globs.\n        const fileMatches = await Promise.all(event.files.map(async (item) => {\n            const uri = prop(item);\n            // Use fsPath to make this consistent with file system watchers but help\n            // minimatch to use '/' instead of `\\\\` if present.\n            const path = uri.fsPath.replace(/\\\\/g, '/');\n            for (const filters of this._filters.values()) {\n                for (const filter of filters) {\n                    if (filter.scheme !== undefined && filter.scheme !== uri.scheme) {\n                        continue;\n                    }\n                    if (filter.matcher.match(path)) {\n                        // The pattern matches. If kind is undefined then everything is ok\n                        if (filter.kind === undefined) {\n                            return true;\n                        }\n                        const fileType = await this.getFileType(uri);\n                        // If we can't determine the file type than we treat it as a match.\n                        // Dropping it would be another alternative.\n                        if (fileType === undefined) {\n                            this._client.error(`Failed to determine file type for ${uri.toString()}.`);\n                            return true;\n                        }\n                        if ((fileType === code.FileType.File && filter.kind === proto.FileOperationPatternKind.file) || (fileType === code.FileType.Directory && filter.kind === proto.FileOperationPatternKind.folder)) {\n                            return true;\n                        }\n                    }\n                    else if (filter.kind === proto.FileOperationPatternKind.folder) {\n                        const fileType = await FileOperationFeature.getFileType(uri);\n                        if (fileType === code.FileType.Directory && filter.matcher.match(`${path}/`)) {\n                            return true;\n                        }\n                    }\n                }\n            }\n            return false;\n        }));\n        // Filter the files to those that matched.\n        const files = event.files.filter((_, index) => fileMatches[index]);\n        return { ...event, files };\n    }\n    static async getFileType(uri) {\n        try {\n            return (await code.workspace.fs.stat(uri)).type;\n        }\n        catch (e) {\n            return undefined;\n        }\n    }\n    static asMinimatchOptions(options) {\n        // The spec doesn't state that dot files don't match. So we make\n        // matching those the default.\n        const result = { dot: true };\n        if (options?.ignoreCase === true) {\n            result.nocase = true;\n        }\n        return result;\n    }\n}\nclass NotificationFileOperationFeature extends FileOperationFeature {\n    constructor(client, event, notificationType, clientCapability, serverCapability, accessUri, createParams) {\n        super(client, event, notificationType, clientCapability, serverCapability);\n        this._notificationType = notificationType;\n        this._accessUri = accessUri;\n        this._createParams = createParams;\n    }\n    async send(originalEvent) {\n        // Create a copy of the event that has the files filtered to match what the\n        // server wants.\n        const filteredEvent = await this.filter(originalEvent, this._accessUri);\n        if (filteredEvent.files.length) {\n            const next = async (event) => {\n                return this._client.sendNotification(this._notificationType, this._createParams(event));\n            };\n            return this.doSend(filteredEvent, next);\n        }\n    }\n}\nclass CachingNotificationFileOperationFeature extends NotificationFileOperationFeature {\n    constructor() {\n        super(...arguments);\n        this._fsPathFileTypes = new Map();\n    }\n    async getFileType(uri) {\n        const fsPath = uri.fsPath;\n        if (this._fsPathFileTypes.has(fsPath)) {\n            return this._fsPathFileTypes.get(fsPath);\n        }\n        const type = await FileOperationFeature.getFileType(uri);\n        if (type) {\n            this._fsPathFileTypes.set(fsPath, type);\n        }\n        return type;\n    }\n    async cacheFileTypes(event, prop) {\n        // Calling filter will force the matching logic to run. For any item\n        // that requires a getFileType lookup, the overriden getFileType will\n        // be called that will cache the result so that when onDidRename fires,\n        // it can still be checked even though the item no longer exists on disk\n        // in its original location.\n        await this.filter(event, prop);\n    }\n    clearFileTypeCache() {\n        this._fsPathFileTypes.clear();\n    }\n    unregister(id) {\n        super.unregister(id);\n        if (this.filterSize() === 0 && this._willListener) {\n            this._willListener.dispose();\n            this._willListener = undefined;\n        }\n    }\n    clear() {\n        super.clear();\n        if (this._willListener) {\n            this._willListener.dispose();\n            this._willListener = undefined;\n        }\n    }\n}\nclass DidCreateFilesFeature extends NotificationFileOperationFeature {\n    constructor(client) {\n        super(client, code.workspace.onDidCreateFiles, proto.DidCreateFilesNotification.type, 'didCreate', 'didCreate', (i) => i, client.code2ProtocolConverter.asDidCreateFilesParams);\n    }\n    doSend(event, next) {\n        const middleware = this._client.middleware.workspace;\n        return middleware?.didCreateFiles\n            ? middleware.didCreateFiles(event, next)\n            : next(event);\n    }\n}\nexports.DidCreateFilesFeature = DidCreateFilesFeature;\nclass DidRenameFilesFeature extends CachingNotificationFileOperationFeature {\n    constructor(client) {\n        super(client, code.workspace.onDidRenameFiles, proto.DidRenameFilesNotification.type, 'didRename', 'didRename', (i) => i.oldUri, client.code2ProtocolConverter.asDidRenameFilesParams);\n    }\n    register(data) {\n        if (!this._willListener) {\n            this._willListener = code.workspace.onWillRenameFiles(this.willRename, this);\n        }\n        super.register(data);\n    }\n    willRename(e) {\n        e.waitUntil(this.cacheFileTypes(e, (i) => i.oldUri));\n    }\n    doSend(event, next) {\n        this.clearFileTypeCache();\n        const middleware = this._client.middleware.workspace;\n        return middleware?.didRenameFiles\n            ? middleware.didRenameFiles(event, next)\n            : next(event);\n    }\n}\nexports.DidRenameFilesFeature = DidRenameFilesFeature;\nclass DidDeleteFilesFeature extends CachingNotificationFileOperationFeature {\n    constructor(client) {\n        super(client, code.workspace.onDidDeleteFiles, proto.DidDeleteFilesNotification.type, 'didDelete', 'didDelete', (i) => i, client.code2ProtocolConverter.asDidDeleteFilesParams);\n    }\n    register(data) {\n        if (!this._willListener) {\n            this._willListener = code.workspace.onWillDeleteFiles(this.willDelete, this);\n        }\n        super.register(data);\n    }\n    willDelete(e) {\n        e.waitUntil(this.cacheFileTypes(e, (i) => i));\n    }\n    doSend(event, next) {\n        this.clearFileTypeCache();\n        const middleware = this._client.middleware.workspace;\n        return middleware?.didDeleteFiles\n            ? middleware.didDeleteFiles(event, next)\n            : next(event);\n    }\n}\nexports.DidDeleteFilesFeature = DidDeleteFilesFeature;\nclass RequestFileOperationFeature extends FileOperationFeature {\n    constructor(client, event, requestType, clientCapability, serverCapability, accessUri, createParams) {\n        super(client, event, requestType, clientCapability, serverCapability);\n        this._requestType = requestType;\n        this._accessUri = accessUri;\n        this._createParams = createParams;\n    }\n    async send(originalEvent) {\n        const waitUntil = this.waitUntil(originalEvent);\n        originalEvent.waitUntil(waitUntil);\n    }\n    async waitUntil(originalEvent) {\n        // Create a copy of the event that has the files filtered to match what the\n        // server wants.\n        const filteredEvent = await this.filter(originalEvent, this._accessUri);\n        if (filteredEvent.files.length) {\n            const next = (event) => {\n                return this._client.sendRequest(this._requestType, this._createParams(event), event.token)\n                    .then(this._client.protocol2CodeConverter.asWorkspaceEdit);\n            };\n            return this.doSend(filteredEvent, next);\n        }\n        else {\n            return undefined;\n        }\n    }\n}\nclass WillCreateFilesFeature extends RequestFileOperationFeature {\n    constructor(client) {\n        super(client, code.workspace.onWillCreateFiles, proto.WillCreateFilesRequest.type, 'willCreate', 'willCreate', (i) => i, client.code2ProtocolConverter.asWillCreateFilesParams);\n    }\n    doSend(event, next) {\n        const middleware = this._client.middleware.workspace;\n        return middleware?.willCreateFiles\n            ? middleware.willCreateFiles(event, next)\n            : next(event);\n    }\n}\nexports.WillCreateFilesFeature = WillCreateFilesFeature;\nclass WillRenameFilesFeature extends RequestFileOperationFeature {\n    constructor(client) {\n        super(client, code.workspace.onWillRenameFiles, proto.WillRenameFilesRequest.type, 'willRename', 'willRename', (i) => i.oldUri, client.code2ProtocolConverter.asWillRenameFilesParams);\n    }\n    doSend(event, next) {\n        const middleware = this._client.middleware.workspace;\n        return middleware?.willRenameFiles\n            ? middleware.willRenameFiles(event, next)\n            : next(event);\n    }\n}\nexports.WillRenameFilesFeature = WillRenameFilesFeature;\nclass WillDeleteFilesFeature extends RequestFileOperationFeature {\n    constructor(client) {\n        super(client, code.workspace.onWillDeleteFiles, proto.WillDeleteFilesRequest.type, 'willDelete', 'willDelete', (i) => i, client.code2ProtocolConverter.asWillDeleteFilesParams);\n    }\n    doSend(event, next) {\n        const middleware = this._client.middleware.workspace;\n        return middleware?.willDeleteFiles\n            ? middleware.willDeleteFiles(event, next)\n            : next(event);\n    }\n}\nexports.WillDeleteFilesFeature = WillDeleteFilesFeature;\n", "\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LinkedEditingFeature = void 0;\nconst code = require(\"vscode\");\nconst proto = require(\"vscode-languageserver-protocol\");\nconst features_1 = require(\"./features\");\nclass LinkedEditingFeature extends features_1.TextDocumentLanguageFeature {\n    constructor(client) {\n        super(client, proto.LinkedEditingRangeRequest.type);\n    }\n    fillClientCapabilities(capabilities) {\n        const linkedEditingSupport = (0, features_1.ensure)((0, features_1.ensure)(capabilities, 'textDocument'), 'linkedEditingRange');\n        linkedEditingSupport.dynamicRegistration = true;\n    }\n    initialize(capabilities, documentSelector) {\n        let [id, options] = this.getRegistration(documentSelector, capabilities.linkedEditingRangeProvider);\n        if (!id || !options) {\n            return;\n        }\n        this.register({ id: id, registerOptions: options });\n    }\n    registerLanguageProvider(options) {\n        const selector = options.documentSelector;\n        const provider = {\n            provideLinkedEditingRanges: (document, position, token) => {\n                const client = this._client;\n                const provideLinkedEditing = (document, position, token) => {\n                    return client.sendRequest(proto.LinkedEditingRangeRequest.type, client.code2ProtocolConverter.asTextDocumentPositionParams(document, position), token).then((result) => {\n                        if (token.isCancellationRequested) {\n                            return null;\n                        }\n                        return client.protocol2CodeConverter.asLinkedEditingRanges(result, token);\n                    }, (error) => {\n                        return client.handleFailedRequest(proto.LinkedEditingRangeRequest.type, token, error, null);\n                    });\n                };\n                const middleware = client.middleware;\n                return middleware.provideLinkedEditingRange\n                    ? middleware.provideLinkedEditingRange(document, position, token, provideLinkedEditing)\n                    : provideLinkedEditing(document, position, token);\n            }\n        };\n        return [this.registerProvider(selector, provider), provider];\n    }\n    registerProvider(selector, provider) {\n        return code.languages.registerLinkedEditingRangeProvider(this._client.protocol2CodeConverter.asDocumentSelector(selector), provider);\n    }\n}\nexports.LinkedEditingFeature = LinkedEditingFeature;\n", "\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TypeHierarchyFeature = void 0;\nconst vscode_1 = require(\"vscode\");\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\nconst features_1 = require(\"./features\");\nclass TypeHierarchyProvider {\n    constructor(client) {\n        this.client = client;\n        this.middleware = client.middleware;\n    }\n    prepareTypeHierarchy(document, position, token) {\n        const client = this.client;\n        const middleware = this.middleware;\n        const prepareTypeHierarchy = (document, position, token) => {\n            const params = client.code2ProtocolConverter.asTextDocumentPositionParams(document, position);\n            return client.sendRequest(vscode_languageserver_protocol_1.TypeHierarchyPrepareRequest.type, params, token).then((result) => {\n                if (token.isCancellationRequested) {\n                    return null;\n                }\n                return client.protocol2CodeConverter.asTypeHierarchyItems(result, token);\n            }, (error) => {\n                return client.handleFailedRequest(vscode_languageserver_protocol_1.TypeHierarchyPrepareRequest.type, token, error, null);\n            });\n        };\n        return middleware.prepareTypeHierarchy\n            ? middleware.prepareTypeHierarchy(document, position, token, prepareTypeHierarchy)\n            : prepareTypeHierarchy(document, position, token);\n    }\n    provideTypeHierarchySupertypes(item, token) {\n        const client = this.client;\n        const middleware = this.middleware;\n        const provideTypeHierarchySupertypes = (item, token) => {\n            const params = {\n                item: client.code2ProtocolConverter.asTypeHierarchyItem(item)\n            };\n            return client.sendRequest(vscode_languageserver_protocol_1.TypeHierarchySupertypesRequest.type, params, token).then((result) => {\n                if (token.isCancellationRequested) {\n                    return null;\n                }\n                return client.protocol2CodeConverter.asTypeHierarchyItems(result, token);\n            }, (error) => {\n                return client.handleFailedRequest(vscode_languageserver_protocol_1.TypeHierarchySupertypesRequest.type, token, error, null);\n            });\n        };\n        return middleware.provideTypeHierarchySupertypes\n            ? middleware.provideTypeHierarchySupertypes(item, token, provideTypeHierarchySupertypes)\n            : provideTypeHierarchySupertypes(item, token);\n    }\n    provideTypeHierarchySubtypes(item, token) {\n        const client = this.client;\n        const middleware = this.middleware;\n        const provideTypeHierarchySubtypes = (item, token) => {\n            const params = {\n                item: client.code2ProtocolConverter.asTypeHierarchyItem(item)\n            };\n            return client.sendRequest(vscode_languageserver_protocol_1.TypeHierarchySubtypesRequest.type, params, token).then((result) => {\n                if (token.isCancellationRequested) {\n                    return null;\n                }\n                return client.protocol2CodeConverter.asTypeHierarchyItems(result, token);\n            }, (error) => {\n                return client.handleFailedRequest(vscode_languageserver_protocol_1.TypeHierarchySubtypesRequest.type, token, error, null);\n            });\n        };\n        return middleware.provideTypeHierarchySubtypes\n            ? middleware.provideTypeHierarchySubtypes(item, token, provideTypeHierarchySubtypes)\n            : provideTypeHierarchySubtypes(item, token);\n    }\n}\nclass TypeHierarchyFeature extends features_1.TextDocumentLanguageFeature {\n    constructor(client) {\n        super(client, vscode_languageserver_protocol_1.TypeHierarchyPrepareRequest.type);\n    }\n    fillClientCapabilities(capabilities) {\n        const capability = (0, features_1.ensure)((0, features_1.ensure)(capabilities, 'textDocument'), 'typeHierarchy');\n        capability.dynamicRegistration = true;\n    }\n    initialize(capabilities, documentSelector) {\n        const [id, options] = this.getRegistration(documentSelector, capabilities.typeHierarchyProvider);\n        if (!id || !options) {\n            return;\n        }\n        this.register({ id: id, registerOptions: options });\n    }\n    registerLanguageProvider(options) {\n        const client = this._client;\n        const provider = new TypeHierarchyProvider(client);\n        return [vscode_1.languages.registerTypeHierarchyProvider(client.protocol2CodeConverter.asDocumentSelector(options.documentSelector), provider), provider];\n    }\n}\nexports.TypeHierarchyFeature = TypeHierarchyFeature;\n", "\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InlineValueFeature = void 0;\nconst vscode_1 = require(\"vscode\");\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\nconst features_1 = require(\"./features\");\nclass InlineValueFeature extends features_1.TextDocumentLanguageFeature {\n    constructor(client) {\n        super(client, vscode_languageserver_protocol_1.InlineValueRequest.type);\n    }\n    fillClientCapabilities(capabilities) {\n        (0, features_1.ensure)((0, features_1.ensure)(capabilities, 'textDocument'), 'inlineValue').dynamicRegistration = true;\n        (0, features_1.ensure)((0, features_1.ensure)(capabilities, 'workspace'), 'inlineValue').refreshSupport = true;\n    }\n    initialize(capabilities, documentSelector) {\n        this._client.onRequest(vscode_languageserver_protocol_1.InlineValueRefreshRequest.type, async () => {\n            for (const provider of this.getAllProviders()) {\n                provider.onDidChangeInlineValues.fire();\n            }\n        });\n        const [id, options] = this.getRegistration(documentSelector, capabilities.inlineValueProvider);\n        if (!id || !options) {\n            return;\n        }\n        this.register({ id: id, registerOptions: options });\n    }\n    registerLanguageProvider(options) {\n        const selector = options.documentSelector;\n        const eventEmitter = new vscode_1.EventEmitter();\n        const provider = {\n            onDidChangeInlineValues: eventEmitter.event,\n            provideInlineValues: (document, viewPort, context, token) => {\n                const client = this._client;\n                const provideInlineValues = (document, viewPort, context, token) => {\n                    const requestParams = {\n                        textDocument: client.code2ProtocolConverter.asTextDocumentIdentifier(document),\n                        range: client.code2ProtocolConverter.asRange(viewPort),\n                        context: client.code2ProtocolConverter.asInlineValueContext(context)\n                    };\n                    return client.sendRequest(vscode_languageserver_protocol_1.InlineValueRequest.type, requestParams, token).then((values) => {\n                        if (token.isCancellationRequested) {\n                            return null;\n                        }\n                        return client.protocol2CodeConverter.asInlineValues(values, token);\n                    }, (error) => {\n                        return client.handleFailedRequest(vscode_languageserver_protocol_1.InlineValueRequest.type, token, error, null);\n                    });\n                };\n                const middleware = client.middleware;\n                return middleware.provideInlineValues\n                    ? middleware.provideInlineValues(document, viewPort, context, token, provideInlineValues)\n                    : provideInlineValues(document, viewPort, context, token);\n            }\n        };\n        return [this.registerProvider(selector, provider), { provider: provider, onDidChangeInlineValues: eventEmitter }];\n    }\n    registerProvider(selector, provider) {\n        return vscode_1.languages.registerInlineValuesProvider(this._client.protocol2CodeConverter.asDocumentSelector(selector), provider);\n    }\n}\nexports.InlineValueFeature = InlineValueFeature;\n", "\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InlayHintsFeature = void 0;\nconst vscode_1 = require(\"vscode\");\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\nconst features_1 = require(\"./features\");\nclass InlayHintsFeature extends features_1.TextDocumentLanguageFeature {\n    constructor(client) {\n        super(client, vscode_languageserver_protocol_1.InlayHintRequest.type);\n    }\n    fillClientCapabilities(capabilities) {\n        const inlayHint = (0, features_1.ensure)((0, features_1.ensure)(capabilities, 'textDocument'), 'inlayHint');\n        inlayHint.dynamicRegistration = true;\n        inlayHint.resolveSupport = {\n            properties: ['tooltip', 'textEdits', 'label.tooltip', 'label.location', 'label.command']\n        };\n        (0, features_1.ensure)((0, features_1.ensure)(capabilities, 'workspace'), 'inlayHint').refreshSupport = true;\n    }\n    initialize(capabilities, documentSelector) {\n        this._client.onRequest(vscode_languageserver_protocol_1.InlayHintRefreshRequest.type, async () => {\n            for (const provider of this.getAllProviders()) {\n                provider.onDidChangeInlayHints.fire();\n            }\n        });\n        const [id, options] = this.getRegistration(documentSelector, capabilities.inlayHintProvider);\n        if (!id || !options) {\n            return;\n        }\n        this.register({ id: id, registerOptions: options });\n    }\n    registerLanguageProvider(options) {\n        const selector = options.documentSelector;\n        const eventEmitter = new vscode_1.EventEmitter();\n        const provider = {\n            onDidChangeInlayHints: eventEmitter.event,\n            provideInlayHints: (document, viewPort, token) => {\n                const client = this._client;\n                const provideInlayHints = async (document, viewPort, token) => {\n                    const requestParams = {\n                        textDocument: client.code2ProtocolConverter.asTextDocumentIdentifier(document),\n                        range: client.code2ProtocolConverter.asRange(viewPort)\n                    };\n                    try {\n                        const values = await client.sendRequest(vscode_languageserver_protocol_1.InlayHintRequest.type, requestParams, token);\n                        if (token.isCancellationRequested) {\n                            return null;\n                        }\n                        return client.protocol2CodeConverter.asInlayHints(values, token);\n                    }\n                    catch (error) {\n                        return client.handleFailedRequest(vscode_languageserver_protocol_1.InlayHintRequest.type, token, error, null);\n                    }\n                };\n                const middleware = client.middleware;\n                return middleware.provideInlayHints\n                    ? middleware.provideInlayHints(document, viewPort, token, provideInlayHints)\n                    : provideInlayHints(document, viewPort, token);\n            }\n        };\n        provider.resolveInlayHint = options.resolveProvider === true\n            ? (hint, token) => {\n                const client = this._client;\n                const resolveInlayHint = async (item, token) => {\n                    try {\n                        const value = await client.sendRequest(vscode_languageserver_protocol_1.InlayHintResolveRequest.type, client.code2ProtocolConverter.asInlayHint(item), token);\n                        if (token.isCancellationRequested) {\n                            return null;\n                        }\n                        const result = client.protocol2CodeConverter.asInlayHint(value, token);\n                        return token.isCancellationRequested ? null : result;\n                    }\n                    catch (error) {\n                        return client.handleFailedRequest(vscode_languageserver_protocol_1.InlayHintResolveRequest.type, token, error, null);\n                    }\n                };\n                const middleware = client.middleware;\n                return middleware.resolveInlayHint\n                    ? middleware.resolveInlayHint(hint, token, resolveInlayHint)\n                    : resolveInlayHint(hint, token);\n            }\n            : undefined;\n        return [this.registerProvider(selector, provider), { provider: provider, onDidChangeInlayHints: eventEmitter }];\n    }\n    registerProvider(selector, provider) {\n        return vscode_1.languages.registerInlayHintsProvider(this._client.protocol2CodeConverter.asDocumentSelector(selector), provider);\n    }\n}\nexports.InlayHintsFeature = InlayHintsFeature;\n", "\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InlineCompletionItemFeature = void 0;\nconst vscode_1 = require(\"vscode\");\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\nconst features_1 = require(\"./features\");\nconst UUID = require(\"./utils/uuid\");\nclass InlineCompletionItemFeature extends features_1.TextDocumentLanguageFeature {\n    constructor(client) {\n        super(client, vscode_languageserver_protocol_1.InlineCompletionRequest.type);\n    }\n    fillClientCapabilities(capabilities) {\n        let inlineCompletion = (0, features_1.ensure)((0, features_1.ensure)(capabilities, 'textDocument'), 'inlineCompletion');\n        inlineCompletion.dynamicRegistration = true;\n    }\n    initialize(capabilities, documentSelector) {\n        const options = this.getRegistrationOptions(documentSelector, capabilities.inlineCompletionProvider);\n        if (!options) {\n            return;\n        }\n        this.register({\n            id: UUID.generateUuid(),\n            registerOptions: options\n        });\n    }\n    registerLanguageProvider(options) {\n        const selector = options.documentSelector;\n        const provider = {\n            provideInlineCompletionItems: (document, position, context, token) => {\n                const client = this._client;\n                const middleware = this._client.middleware;\n                const provideInlineCompletionItems = (document, position, context, token) => {\n                    return client.sendRequest(vscode_languageserver_protocol_1.InlineCompletionRequest.type, client.code2ProtocolConverter.asInlineCompletionParams(document, position, context), token).then((result) => {\n                        if (token.isCancellationRequested) {\n                            return null;\n                        }\n                        return client.protocol2CodeConverter.asInlineCompletionResult(result, token);\n                    }, (error) => {\n                        return client.handleFailedRequest(vscode_languageserver_protocol_1.InlineCompletionRequest.type, token, error, null);\n                    });\n                };\n                return middleware.provideInlineCompletionItems\n                    ? middleware.provideInlineCompletionItems(document, position, context, token, provideInlineCompletionItems)\n                    : provideInlineCompletionItems(document, position, context, token);\n            }\n        };\n        return [vscode_1.languages.registerInlineCompletionItemProvider(this._client.protocol2CodeConverter.asDocumentSelector(selector), provider), provider];\n    }\n}\nexports.InlineCompletionItemFeature = InlineCompletionItemFeature;\n", "\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ProposedFeatures = exports.BaseLanguageClient = exports.MessageTransports = exports.SuspendMode = exports.State = exports.CloseAction = exports.ErrorAction = exports.RevealOutputChannelOn = void 0;\nconst vscode_1 = require(\"vscode\");\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\nconst c2p = require(\"./codeConverter\");\nconst p2c = require(\"./protocolConverter\");\nconst Is = require(\"./utils/is\");\nconst async_1 = require(\"./utils/async\");\nconst UUID = require(\"./utils/uuid\");\nconst progressPart_1 = require(\"./progressPart\");\nconst features_1 = require(\"./features\");\nconst diagnostic_1 = require(\"./diagnostic\");\nconst notebook_1 = require(\"./notebook\");\nconst configuration_1 = require(\"./configuration\");\nconst textSynchronization_1 = require(\"./textSynchronization\");\nconst completion_1 = require(\"./completion\");\nconst hover_1 = require(\"./hover\");\nconst definition_1 = require(\"./definition\");\nconst signatureHelp_1 = require(\"./signatureHelp\");\nconst documentHighlight_1 = require(\"./documentHighlight\");\nconst documentSymbol_1 = require(\"./documentSymbol\");\nconst workspaceSymbol_1 = require(\"./workspaceSymbol\");\nconst reference_1 = require(\"./reference\");\nconst codeAction_1 = require(\"./codeAction\");\nconst codeLens_1 = require(\"./codeLens\");\nconst formatting_1 = require(\"./formatting\");\nconst rename_1 = require(\"./rename\");\nconst documentLink_1 = require(\"./documentLink\");\nconst executeCommand_1 = require(\"./executeCommand\");\nconst fileSystemWatcher_1 = require(\"./fileSystemWatcher\");\nconst colorProvider_1 = require(\"./colorProvider\");\nconst implementation_1 = require(\"./implementation\");\nconst typeDefinition_1 = require(\"./typeDefinition\");\nconst workspaceFolder_1 = require(\"./workspaceFolder\");\nconst foldingRange_1 = require(\"./foldingRange\");\nconst declaration_1 = require(\"./declaration\");\nconst selectionRange_1 = require(\"./selectionRange\");\nconst progress_1 = require(\"./progress\");\nconst callHierarchy_1 = require(\"./callHierarchy\");\nconst semanticTokens_1 = require(\"./semanticTokens\");\nconst fileOperations_1 = require(\"./fileOperations\");\nconst linkedEditingRange_1 = require(\"./linkedEditingRange\");\nconst typeHierarchy_1 = require(\"./typeHierarchy\");\nconst inlineValue_1 = require(\"./inlineValue\");\nconst inlayHint_1 = require(\"./inlayHint\");\nconst inlineCompletion_1 = require(\"./inlineCompletion\");\n/**\n * Controls when the output channel is revealed.\n */\nvar RevealOutputChannelOn;\n(function (RevealOutputChannelOn) {\n    RevealOutputChannelOn[RevealOutputChannelOn[\"Debug\"] = 0] = \"Debug\";\n    RevealOutputChannelOn[RevealOutputChannelOn[\"Info\"] = 1] = \"Info\";\n    RevealOutputChannelOn[RevealOutputChannelOn[\"Warn\"] = 2] = \"Warn\";\n    RevealOutputChannelOn[RevealOutputChannelOn[\"Error\"] = 3] = \"Error\";\n    RevealOutputChannelOn[RevealOutputChannelOn[\"Never\"] = 4] = \"Never\";\n})(RevealOutputChannelOn || (exports.RevealOutputChannelOn = RevealOutputChannelOn = {}));\n/**\n * An action to be performed when the connection is producing errors.\n */\nvar ErrorAction;\n(function (ErrorAction) {\n    /**\n     * Continue running the server.\n     */\n    ErrorAction[ErrorAction[\"Continue\"] = 1] = \"Continue\";\n    /**\n     * Shutdown the server.\n     */\n    ErrorAction[ErrorAction[\"Shutdown\"] = 2] = \"Shutdown\";\n})(ErrorAction || (exports.ErrorAction = ErrorAction = {}));\n/**\n * An action to be performed when the connection to a server got closed.\n */\nvar CloseAction;\n(function (CloseAction) {\n    /**\n     * Don't restart the server. The connection stays closed.\n     */\n    CloseAction[CloseAction[\"DoNotRestart\"] = 1] = \"DoNotRestart\";\n    /**\n     * Restart the server.\n     */\n    CloseAction[CloseAction[\"Restart\"] = 2] = \"Restart\";\n})(CloseAction || (exports.CloseAction = CloseAction = {}));\n/**\n * Signals in which state the language client is in.\n */\nvar State;\n(function (State) {\n    /**\n     * The client is stopped or got never started.\n     */\n    State[State[\"Stopped\"] = 1] = \"Stopped\";\n    /**\n     * The client is starting but not ready yet.\n     */\n    State[State[\"Starting\"] = 3] = \"Starting\";\n    /**\n     * The client is running and ready.\n     */\n    State[State[\"Running\"] = 2] = \"Running\";\n})(State || (exports.State = State = {}));\nvar SuspendMode;\n(function (SuspendMode) {\n    /**\n     * Don't allow suspend mode.\n     */\n    SuspendMode[\"off\"] = \"off\";\n    /**\n     * Support suspend mode even if not all\n     * registered providers have a corresponding\n     * activation listener.\n     */\n    SuspendMode[\"on\"] = \"on\";\n})(SuspendMode || (exports.SuspendMode = SuspendMode = {}));\nvar ResolvedClientOptions;\n(function (ResolvedClientOptions) {\n    function sanitizeIsTrusted(isTrusted) {\n        if (isTrusted === undefined || isTrusted === null) {\n            return false;\n        }\n        if ((typeof isTrusted === 'boolean') || (typeof isTrusted === 'object' && isTrusted !== null && Is.stringArray(isTrusted.enabledCommands))) {\n            return isTrusted;\n        }\n        return false;\n    }\n    ResolvedClientOptions.sanitizeIsTrusted = sanitizeIsTrusted;\n})(ResolvedClientOptions || (ResolvedClientOptions = {}));\nclass DefaultErrorHandler {\n    constructor(client, maxRestartCount) {\n        this.client = client;\n        this.maxRestartCount = maxRestartCount;\n        this.restarts = [];\n    }\n    error(_error, _message, count) {\n        if (count && count <= 3) {\n            return { action: ErrorAction.Continue };\n        }\n        return { action: ErrorAction.Shutdown };\n    }\n    closed() {\n        this.restarts.push(Date.now());\n        if (this.restarts.length <= this.maxRestartCount) {\n            return { action: CloseAction.Restart };\n        }\n        else {\n            let diff = this.restarts[this.restarts.length - 1] - this.restarts[0];\n            if (diff <= 3 * 60 * 1000) {\n                return { action: CloseAction.DoNotRestart, message: `The ${this.client.name} server crashed ${this.maxRestartCount + 1} times in the last 3 minutes. The server will not be restarted. See the output for more information.` };\n            }\n            else {\n                this.restarts.shift();\n                return { action: CloseAction.Restart };\n            }\n        }\n    }\n}\nvar ClientState;\n(function (ClientState) {\n    ClientState[\"Initial\"] = \"initial\";\n    ClientState[\"Starting\"] = \"starting\";\n    ClientState[\"StartFailed\"] = \"startFailed\";\n    ClientState[\"Running\"] = \"running\";\n    ClientState[\"Stopping\"] = \"stopping\";\n    ClientState[\"Stopped\"] = \"stopped\";\n})(ClientState || (ClientState = {}));\nvar MessageTransports;\n(function (MessageTransports) {\n    function is(value) {\n        let candidate = value;\n        return candidate && vscode_languageserver_protocol_1.MessageReader.is(value.reader) && vscode_languageserver_protocol_1.MessageWriter.is(value.writer);\n    }\n    MessageTransports.is = is;\n})(MessageTransports || (exports.MessageTransports = MessageTransports = {}));\nclass BaseLanguageClient {\n    constructor(id, name, clientOptions) {\n        this._traceFormat = vscode_languageserver_protocol_1.TraceFormat.Text;\n        this._diagnosticQueue = new Map();\n        this._diagnosticQueueState = { state: 'idle' };\n        this._features = [];\n        this._dynamicFeatures = new Map();\n        this.workspaceEditLock = new async_1.Semaphore(1);\n        this._id = id;\n        this._name = name;\n        clientOptions = clientOptions || {};\n        const markdown = { isTrusted: false, supportHtml: false };\n        if (clientOptions.markdown !== undefined) {\n            markdown.isTrusted = ResolvedClientOptions.sanitizeIsTrusted(clientOptions.markdown.isTrusted);\n            markdown.supportHtml = clientOptions.markdown.supportHtml === true;\n        }\n        // const defaultInterval = (clientOptions as TestOptions).$testMode ? 50 : 60000;\n        this._clientOptions = {\n            documentSelector: clientOptions.documentSelector ?? [],\n            synchronize: clientOptions.synchronize ?? {},\n            diagnosticCollectionName: clientOptions.diagnosticCollectionName,\n            outputChannelName: clientOptions.outputChannelName ?? this._name,\n            revealOutputChannelOn: clientOptions.revealOutputChannelOn ?? RevealOutputChannelOn.Error,\n            stdioEncoding: clientOptions.stdioEncoding ?? 'utf8',\n            initializationOptions: clientOptions.initializationOptions,\n            initializationFailedHandler: clientOptions.initializationFailedHandler,\n            progressOnInitialization: !!clientOptions.progressOnInitialization,\n            errorHandler: clientOptions.errorHandler ?? this.createDefaultErrorHandler(clientOptions.connectionOptions?.maxRestartCount),\n            middleware: clientOptions.middleware ?? {},\n            uriConverters: clientOptions.uriConverters,\n            workspaceFolder: clientOptions.workspaceFolder,\n            connectionOptions: clientOptions.connectionOptions,\n            markdown,\n            // suspend: {\n            // \tmode: clientOptions.suspend?.mode ?? SuspendMode.off,\n            // \tcallback: clientOptions.suspend?.callback ?? (() => Promise.resolve(true)),\n            // \tinterval: clientOptions.suspend?.interval ? Math.max(clientOptions.suspend.interval, defaultInterval) : defaultInterval\n            // },\n            diagnosticPullOptions: clientOptions.diagnosticPullOptions ?? { onChange: true, onSave: false },\n            notebookDocumentOptions: clientOptions.notebookDocumentOptions ?? {}\n        };\n        this._clientOptions.synchronize = this._clientOptions.synchronize || {};\n        this._state = ClientState.Initial;\n        this._ignoredRegistrations = new Set();\n        this._listeners = [];\n        this._notificationHandlers = new Map();\n        this._pendingNotificationHandlers = new Map();\n        this._notificationDisposables = new Map();\n        this._requestHandlers = new Map();\n        this._pendingRequestHandlers = new Map();\n        this._requestDisposables = new Map();\n        this._progressHandlers = new Map();\n        this._pendingProgressHandlers = new Map();\n        this._progressDisposables = new Map();\n        this._connection = undefined;\n        // this._idleStart = undefined;\n        this._initializeResult = undefined;\n        if (clientOptions.outputChannel) {\n            this._outputChannel = clientOptions.outputChannel;\n            this._disposeOutputChannel = false;\n        }\n        else {\n            this._outputChannel = undefined;\n            this._disposeOutputChannel = true;\n        }\n        this._traceOutputChannel = clientOptions.traceOutputChannel;\n        this._diagnostics = undefined;\n        this._pendingOpenNotifications = new Set();\n        this._pendingChangeSemaphore = new async_1.Semaphore(1);\n        this._pendingChangeDelayer = new async_1.Delayer(250);\n        this._fileEvents = [];\n        this._fileEventDelayer = new async_1.Delayer(250);\n        this._onStop = undefined;\n        this._telemetryEmitter = new vscode_languageserver_protocol_1.Emitter();\n        this._stateChangeEmitter = new vscode_languageserver_protocol_1.Emitter();\n        this._trace = vscode_languageserver_protocol_1.Trace.Off;\n        this._tracer = {\n            log: (messageOrDataObject, data) => {\n                if (Is.string(messageOrDataObject)) {\n                    this.logTrace(messageOrDataObject, data);\n                }\n                else {\n                    this.logObjectTrace(messageOrDataObject);\n                }\n            },\n        };\n        this._c2p = c2p.createConverter(clientOptions.uriConverters ? clientOptions.uriConverters.code2Protocol : undefined);\n        this._p2c = p2c.createConverter(clientOptions.uriConverters ? clientOptions.uriConverters.protocol2Code : undefined, this._clientOptions.markdown.isTrusted, this._clientOptions.markdown.supportHtml);\n        this._syncedDocuments = new Map();\n        this.registerBuiltinFeatures();\n    }\n    get name() {\n        return this._name;\n    }\n    get middleware() {\n        return this._clientOptions.middleware ?? Object.create(null);\n    }\n    get clientOptions() {\n        return this._clientOptions;\n    }\n    get protocol2CodeConverter() {\n        return this._p2c;\n    }\n    get code2ProtocolConverter() {\n        return this._c2p;\n    }\n    get onTelemetry() {\n        return this._telemetryEmitter.event;\n    }\n    get onDidChangeState() {\n        return this._stateChangeEmitter.event;\n    }\n    get outputChannel() {\n        if (!this._outputChannel) {\n            this._outputChannel = vscode_1.window.createOutputChannel(this._clientOptions.outputChannelName ? this._clientOptions.outputChannelName : this._name);\n        }\n        return this._outputChannel;\n    }\n    get traceOutputChannel() {\n        if (this._traceOutputChannel) {\n            return this._traceOutputChannel;\n        }\n        return this.outputChannel;\n    }\n    get diagnostics() {\n        return this._diagnostics;\n    }\n    get state() {\n        return this.getPublicState();\n    }\n    get $state() {\n        return this._state;\n    }\n    set $state(value) {\n        let oldState = this.getPublicState();\n        this._state = value;\n        let newState = this.getPublicState();\n        if (newState !== oldState) {\n            this._stateChangeEmitter.fire({ oldState, newState });\n        }\n    }\n    getPublicState() {\n        switch (this.$state) {\n            case ClientState.Starting:\n                return State.Starting;\n            case ClientState.Running:\n                return State.Running;\n            default:\n                return State.Stopped;\n        }\n    }\n    get initializeResult() {\n        return this._initializeResult;\n    }\n    async sendRequest(type, ...params) {\n        if (this.$state === ClientState.StartFailed || this.$state === ClientState.Stopping || this.$state === ClientState.Stopped) {\n            return Promise.reject(new vscode_languageserver_protocol_1.ResponseError(vscode_languageserver_protocol_1.ErrorCodes.ConnectionInactive, `Client is not running`));\n        }\n        // Ensure we have a connection before we force the document sync.\n        const connection = await this.$start();\n        // If any document is synced in full mode make sure we flush any pending\n        // full document syncs.\n        if (this._didChangeTextDocumentFeature.syncKind === vscode_languageserver_protocol_1.TextDocumentSyncKind.Full) {\n            await this.sendPendingFullTextDocumentChanges(connection);\n        }\n        const _sendRequest = this._clientOptions.middleware?.sendRequest;\n        if (_sendRequest !== undefined) {\n            let param = undefined;\n            let token = undefined;\n            // Separate cancellation tokens from other parameters for a better client interface\n            if (params.length === 1) {\n                // CancellationToken is an interface, so we need to check if the first param complies to it\n                if (vscode_languageserver_protocol_1.CancellationToken.is(params[0])) {\n                    token = params[0];\n                }\n                else {\n                    param = params[0];\n                }\n            }\n            else if (params.length === 2) {\n                param = params[0];\n                token = params[1];\n            }\n            // Return the general middleware invocation defining `next` as a utility function that reorganizes parameters to\n            // pass them to the original sendRequest function.\n            return _sendRequest(type, param, token, (type, param, token) => {\n                const params = [];\n                // Add the parameters if there are any\n                if (param !== undefined) {\n                    params.push(param);\n                }\n                // Add the cancellation token if there is one\n                if (token !== undefined) {\n                    params.push(token);\n                }\n                return connection.sendRequest(type, ...params);\n            });\n        }\n        else {\n            return connection.sendRequest(type, ...params);\n        }\n    }\n    onRequest(type, handler) {\n        const method = typeof type === 'string' ? type : type.method;\n        this._requestHandlers.set(method, handler);\n        const connection = this.activeConnection();\n        let disposable;\n        if (connection !== undefined) {\n            this._requestDisposables.set(method, connection.onRequest(type, handler));\n            disposable = {\n                dispose: () => {\n                    const disposable = this._requestDisposables.get(method);\n                    if (disposable !== undefined) {\n                        disposable.dispose();\n                        this._requestDisposables.delete(method);\n                    }\n                }\n            };\n        }\n        else {\n            this._pendingRequestHandlers.set(method, handler);\n            disposable = {\n                dispose: () => {\n                    this._pendingRequestHandlers.delete(method);\n                    const disposable = this._requestDisposables.get(method);\n                    if (disposable !== undefined) {\n                        disposable.dispose();\n                        this._requestDisposables.delete(method);\n                    }\n                }\n            };\n        }\n        return {\n            dispose: () => {\n                this._requestHandlers.delete(method);\n                disposable.dispose();\n            }\n        };\n    }\n    async sendNotification(type, params) {\n        if (this.$state === ClientState.StartFailed || this.$state === ClientState.Stopping || this.$state === ClientState.Stopped) {\n            return Promise.reject(new vscode_languageserver_protocol_1.ResponseError(vscode_languageserver_protocol_1.ErrorCodes.ConnectionInactive, `Client is not running`));\n        }\n        const needsPendingFullTextDocumentSync = this._didChangeTextDocumentFeature.syncKind === vscode_languageserver_protocol_1.TextDocumentSyncKind.Full;\n        let openNotification;\n        if (needsPendingFullTextDocumentSync && typeof type !== 'string' && type.method === vscode_languageserver_protocol_1.DidOpenTextDocumentNotification.method) {\n            openNotification = params?.textDocument.uri;\n            this._pendingOpenNotifications.add(openNotification);\n        }\n        // Ensure we have a connection before we force the document sync.\n        const connection = await this.$start();\n        // If any document is synced in full mode make sure we flush any pending\n        // full document syncs.\n        if (needsPendingFullTextDocumentSync) {\n            await this.sendPendingFullTextDocumentChanges(connection);\n        }\n        // We need to remove the pending open notification before we actually\n        // send the notification over the connection. Otherwise there could be\n        // a request coming in that although the open notification got already put\n        // onto the wire will ignore pending document changes.\n        //\n        // Since the code path of connection.sendNotification is actually sync\n        // until the message is handed of to the writer and the writer as a semaphore\n        // lock with a capacity of 1 no additional async scheduling can happen until\n        // the message is actually handed of.\n        if (openNotification !== undefined) {\n            this._pendingOpenNotifications.delete(openNotification);\n        }\n        const _sendNotification = this._clientOptions.middleware?.sendNotification;\n        return _sendNotification\n            ? _sendNotification(type, connection.sendNotification.bind(connection), params)\n            : connection.sendNotification(type, params);\n    }\n    onNotification(type, handler) {\n        const method = typeof type === 'string' ? type : type.method;\n        this._notificationHandlers.set(method, handler);\n        const connection = this.activeConnection();\n        let disposable;\n        if (connection !== undefined) {\n            this._notificationDisposables.set(method, connection.onNotification(type, handler));\n            disposable = {\n                dispose: () => {\n                    const disposable = this._notificationDisposables.get(method);\n                    if (disposable !== undefined) {\n                        disposable.dispose();\n                        this._notificationDisposables.delete(method);\n                    }\n                }\n            };\n        }\n        else {\n            this._pendingNotificationHandlers.set(method, handler);\n            disposable = {\n                dispose: () => {\n                    this._pendingNotificationHandlers.delete(method);\n                    const disposable = this._notificationDisposables.get(method);\n                    if (disposable !== undefined) {\n                        disposable.dispose();\n                        this._notificationDisposables.delete(method);\n                    }\n                }\n            };\n        }\n        return {\n            dispose: () => {\n                this._notificationHandlers.delete(method);\n                disposable.dispose();\n            }\n        };\n    }\n    async sendProgress(type, token, value) {\n        if (this.$state === ClientState.StartFailed || this.$state === ClientState.Stopping || this.$state === ClientState.Stopped) {\n            return Promise.reject(new vscode_languageserver_protocol_1.ResponseError(vscode_languageserver_protocol_1.ErrorCodes.ConnectionInactive, `Client is not running`));\n        }\n        try {\n            // Ensure we have a connection before we force the document sync.\n            const connection = await this.$start();\n            return connection.sendProgress(type, token, value);\n        }\n        catch (error) {\n            this.error(`Sending progress for token ${token} failed.`, error);\n            throw error;\n        }\n    }\n    onProgress(type, token, handler) {\n        this._progressHandlers.set(token, { type, handler });\n        const connection = this.activeConnection();\n        let disposable;\n        const handleWorkDoneProgress = this._clientOptions.middleware?.handleWorkDoneProgress;\n        const realHandler = vscode_languageserver_protocol_1.WorkDoneProgress.is(type) && handleWorkDoneProgress !== undefined\n            ? (params) => {\n                handleWorkDoneProgress(token, params, () => handler(params));\n            }\n            : handler;\n        if (connection !== undefined) {\n            this._progressDisposables.set(token, connection.onProgress(type, token, realHandler));\n            disposable = {\n                dispose: () => {\n                    const disposable = this._progressDisposables.get(token);\n                    if (disposable !== undefined) {\n                        disposable.dispose();\n                        this._progressDisposables.delete(token);\n                    }\n                }\n            };\n        }\n        else {\n            this._pendingProgressHandlers.set(token, { type, handler });\n            disposable = {\n                dispose: () => {\n                    this._pendingProgressHandlers.delete(token);\n                    const disposable = this._progressDisposables.get(token);\n                    if (disposable !== undefined) {\n                        disposable.dispose();\n                        this._progressDisposables.delete(token);\n                    }\n                }\n            };\n        }\n        return {\n            dispose: () => {\n                this._progressHandlers.delete(token);\n                disposable.dispose();\n            }\n        };\n    }\n    createDefaultErrorHandler(maxRestartCount) {\n        if (maxRestartCount !== undefined && maxRestartCount < 0) {\n            throw new Error(`Invalid maxRestartCount: ${maxRestartCount}`);\n        }\n        return new DefaultErrorHandler(this, maxRestartCount ?? 4);\n    }\n    async setTrace(value) {\n        this._trace = value;\n        const connection = this.activeConnection();\n        if (connection !== undefined) {\n            await connection.trace(this._trace, this._tracer, {\n                sendNotification: false,\n                traceFormat: this._traceFormat\n            });\n        }\n    }\n    data2String(data) {\n        if (data instanceof vscode_languageserver_protocol_1.ResponseError) {\n            const responseError = data;\n            return `  Message: ${responseError.message}\\n  Code: ${responseError.code} ${responseError.data ? '\\n' + responseError.data.toString() : ''}`;\n        }\n        if (data instanceof Error) {\n            if (Is.string(data.stack)) {\n                return data.stack;\n            }\n            return data.message;\n        }\n        if (Is.string(data)) {\n            return data;\n        }\n        return data.toString();\n    }\n    debug(message, data, showNotification = true) {\n        this.logOutputMessage(vscode_languageserver_protocol_1.MessageType.Debug, RevealOutputChannelOn.Debug, 'Debug', message, data, showNotification);\n    }\n    info(message, data, showNotification = true) {\n        this.logOutputMessage(vscode_languageserver_protocol_1.MessageType.Info, RevealOutputChannelOn.Info, 'Info', message, data, showNotification);\n    }\n    warn(message, data, showNotification = true) {\n        this.logOutputMessage(vscode_languageserver_protocol_1.MessageType.Warning, RevealOutputChannelOn.Warn, 'Warn', message, data, showNotification);\n    }\n    error(message, data, showNotification = true) {\n        this.logOutputMessage(vscode_languageserver_protocol_1.MessageType.Error, RevealOutputChannelOn.Error, 'Error', message, data, showNotification);\n    }\n    logOutputMessage(type, reveal, name, message, data, showNotification) {\n        this.outputChannel.appendLine(`[${name.padEnd(5)} - ${(new Date().toLocaleTimeString())}] ${message}`);\n        if (data !== null && data !== undefined) {\n            this.outputChannel.appendLine(this.data2String(data));\n        }\n        if (showNotification === 'force' || (showNotification && this._clientOptions.revealOutputChannelOn <= reveal)) {\n            this.showNotificationMessage(type, message);\n        }\n    }\n    showNotificationMessage(type, message) {\n        message = message ?? 'A request has failed. See the output for more information.';\n        const messageFunc = type === vscode_languageserver_protocol_1.MessageType.Error\n            ? vscode_1.window.showErrorMessage\n            : type === vscode_languageserver_protocol_1.MessageType.Warning\n                ? vscode_1.window.showWarningMessage\n                : vscode_1.window.showInformationMessage;\n        void messageFunc(message, 'Go to output').then((selection) => {\n            if (selection !== undefined) {\n                this.outputChannel.show(true);\n            }\n        });\n    }\n    logTrace(message, data) {\n        this.traceOutputChannel.appendLine(`[Trace - ${(new Date().toLocaleTimeString())}] ${message}`);\n        if (data) {\n            this.traceOutputChannel.appendLine(this.data2String(data));\n        }\n    }\n    logObjectTrace(data) {\n        if (data.isLSPMessage && data.type) {\n            this.traceOutputChannel.append(`[LSP   - ${(new Date().toLocaleTimeString())}] `);\n        }\n        else {\n            this.traceOutputChannel.append(`[Trace - ${(new Date().toLocaleTimeString())}] `);\n        }\n        if (data) {\n            this.traceOutputChannel.appendLine(`${JSON.stringify(data)}`);\n        }\n    }\n    needsStart() {\n        return this.$state === ClientState.Initial || this.$state === ClientState.Stopping || this.$state === ClientState.Stopped;\n    }\n    needsStop() {\n        return this.$state === ClientState.Starting || this.$state === ClientState.Running;\n    }\n    activeConnection() {\n        return this.$state === ClientState.Running && this._connection !== undefined ? this._connection : undefined;\n    }\n    isRunning() {\n        return this.$state === ClientState.Running;\n    }\n    async start() {\n        if (this._disposed === 'disposing' || this._disposed === 'disposed') {\n            throw new Error(`Client got disposed and can't be restarted.`);\n        }\n        if (this.$state === ClientState.Stopping) {\n            throw new Error(`Client is currently stopping. Can only restart a full stopped client`);\n        }\n        // We are already running or are in the process of getting up\n        // to speed.\n        if (this._onStart !== undefined) {\n            return this._onStart;\n        }\n        const [promise, resolve, reject] = this.createOnStartPromise();\n        this._onStart = promise;\n        // If we restart then the diagnostics collection is reused.\n        if (this._diagnostics === undefined) {\n            this._diagnostics = this._clientOptions.diagnosticCollectionName\n                ? vscode_1.languages.createDiagnosticCollection(this._clientOptions.diagnosticCollectionName)\n                : vscode_1.languages.createDiagnosticCollection();\n        }\n        // When we start make all buffer handlers pending so that they\n        // get added.\n        for (const [method, handler] of this._notificationHandlers) {\n            if (!this._pendingNotificationHandlers.has(method)) {\n                this._pendingNotificationHandlers.set(method, handler);\n            }\n        }\n        for (const [method, handler] of this._requestHandlers) {\n            if (!this._pendingRequestHandlers.has(method)) {\n                this._pendingRequestHandlers.set(method, handler);\n            }\n        }\n        for (const [token, data] of this._progressHandlers) {\n            if (!this._pendingProgressHandlers.has(token)) {\n                this._pendingProgressHandlers.set(token, data);\n            }\n        }\n        this.$state = ClientState.Starting;\n        try {\n            const connection = await this.createConnection();\n            connection.onNotification(vscode_languageserver_protocol_1.LogMessageNotification.type, (message) => {\n                switch (message.type) {\n                    case vscode_languageserver_protocol_1.MessageType.Error:\n                        this.error(message.message, undefined, false);\n                        break;\n                    case vscode_languageserver_protocol_1.MessageType.Warning:\n                        this.warn(message.message, undefined, false);\n                        break;\n                    case vscode_languageserver_protocol_1.MessageType.Info:\n                        this.info(message.message, undefined, false);\n                        break;\n                    case vscode_languageserver_protocol_1.MessageType.Debug:\n                        this.debug(message.message, undefined, false);\n                        break;\n                    default:\n                        this.outputChannel.appendLine(message.message);\n                }\n            });\n            connection.onNotification(vscode_languageserver_protocol_1.ShowMessageNotification.type, (message) => {\n                switch (message.type) {\n                    case vscode_languageserver_protocol_1.MessageType.Error:\n                        void vscode_1.window.showErrorMessage(message.message);\n                        break;\n                    case vscode_languageserver_protocol_1.MessageType.Warning:\n                        void vscode_1.window.showWarningMessage(message.message);\n                        break;\n                    case vscode_languageserver_protocol_1.MessageType.Info:\n                        void vscode_1.window.showInformationMessage(message.message);\n                        break;\n                    default:\n                        void vscode_1.window.showInformationMessage(message.message);\n                }\n            });\n            connection.onRequest(vscode_languageserver_protocol_1.ShowMessageRequest.type, (params) => {\n                let messageFunc;\n                switch (params.type) {\n                    case vscode_languageserver_protocol_1.MessageType.Error:\n                        messageFunc = vscode_1.window.showErrorMessage;\n                        break;\n                    case vscode_languageserver_protocol_1.MessageType.Warning:\n                        messageFunc = vscode_1.window.showWarningMessage;\n                        break;\n                    case vscode_languageserver_protocol_1.MessageType.Info:\n                        messageFunc = vscode_1.window.showInformationMessage;\n                        break;\n                    default:\n                        messageFunc = vscode_1.window.showInformationMessage;\n                }\n                let actions = params.actions || [];\n                return messageFunc(params.message, ...actions);\n            });\n            connection.onNotification(vscode_languageserver_protocol_1.TelemetryEventNotification.type, (data) => {\n                this._telemetryEmitter.fire(data);\n            });\n            connection.onRequest(vscode_languageserver_protocol_1.ShowDocumentRequest.type, async (params) => {\n                const showDocument = async (params) => {\n                    const uri = this.protocol2CodeConverter.asUri(params.uri);\n                    try {\n                        if (params.external === true) {\n                            const success = await vscode_1.env.openExternal(uri);\n                            return { success };\n                        }\n                        else {\n                            const options = {};\n                            if (params.selection !== undefined) {\n                                options.selection = this.protocol2CodeConverter.asRange(params.selection);\n                            }\n                            if (params.takeFocus === undefined || params.takeFocus === false) {\n                                options.preserveFocus = true;\n                            }\n                            else if (params.takeFocus === true) {\n                                options.preserveFocus = false;\n                            }\n                            await vscode_1.window.showTextDocument(uri, options);\n                            return { success: true };\n                        }\n                    }\n                    catch (error) {\n                        return { success: false };\n                    }\n                };\n                const middleware = this._clientOptions.middleware.window?.showDocument;\n                if (middleware !== undefined) {\n                    return middleware(params, showDocument);\n                }\n                else {\n                    return showDocument(params);\n                }\n            });\n            connection.listen();\n            await this.initialize(connection);\n            resolve();\n        }\n        catch (error) {\n            this.$state = ClientState.StartFailed;\n            this.error(`${this._name} client: couldn't create connection to server.`, error, 'force');\n            reject(error);\n        }\n        return this._onStart;\n    }\n    createOnStartPromise() {\n        let resolve;\n        let reject;\n        const promise = new Promise((_resolve, _reject) => {\n            resolve = _resolve;\n            reject = _reject;\n        });\n        return [promise, resolve, reject];\n    }\n    async initialize(connection) {\n        this.refreshTrace(connection, false);\n        const initOption = this._clientOptions.initializationOptions;\n        // If the client is locked to a workspace folder use it. In this case the workspace folder\n        // feature is not registered and we need to initialize the value here.\n        const [rootPath, workspaceFolders] = this._clientOptions.workspaceFolder !== undefined\n            ? [this._clientOptions.workspaceFolder.uri.fsPath, [{ uri: this._c2p.asUri(this._clientOptions.workspaceFolder.uri), name: this._clientOptions.workspaceFolder.name }]]\n            : [this._clientGetRootPath(), null];\n        const initParams = {\n            processId: null,\n            clientInfo: {\n                name: vscode_1.env.appName,\n                version: vscode_1.version\n            },\n            locale: this.getLocale(),\n            rootPath: rootPath ? rootPath : null,\n            rootUri: rootPath ? this._c2p.asUri(vscode_1.Uri.file(rootPath)) : null,\n            capabilities: this.computeClientCapabilities(),\n            initializationOptions: Is.func(initOption) ? initOption() : initOption,\n            trace: vscode_languageserver_protocol_1.Trace.toString(this._trace),\n            workspaceFolders: workspaceFolders\n        };\n        this.fillInitializeParams(initParams);\n        if (this._clientOptions.progressOnInitialization) {\n            const token = UUID.generateUuid();\n            const part = new progressPart_1.ProgressPart(connection, token);\n            initParams.workDoneToken = token;\n            try {\n                const result = await this.doInitialize(connection, initParams);\n                part.done();\n                return result;\n            }\n            catch (error) {\n                part.cancel();\n                throw error;\n            }\n        }\n        else {\n            return this.doInitialize(connection, initParams);\n        }\n    }\n    async doInitialize(connection, initParams) {\n        try {\n            const result = await connection.initialize(initParams);\n            if (result.capabilities.positionEncoding !== undefined && result.capabilities.positionEncoding !== vscode_languageserver_protocol_1.PositionEncodingKind.UTF16) {\n                throw new Error(`Unsupported position encoding (${result.capabilities.positionEncoding}) received from server ${this.name}`);\n            }\n            this._initializeResult = result;\n            this.$state = ClientState.Running;\n            let textDocumentSyncOptions = undefined;\n            if (Is.number(result.capabilities.textDocumentSync)) {\n                if (result.capabilities.textDocumentSync === vscode_languageserver_protocol_1.TextDocumentSyncKind.None) {\n                    textDocumentSyncOptions = {\n                        openClose: false,\n                        change: vscode_languageserver_protocol_1.TextDocumentSyncKind.None,\n                        save: undefined\n                    };\n                }\n                else {\n                    textDocumentSyncOptions = {\n                        openClose: true,\n                        change: result.capabilities.textDocumentSync,\n                        save: {\n                            includeText: false\n                        }\n                    };\n                }\n            }\n            else if (result.capabilities.textDocumentSync !== undefined && result.capabilities.textDocumentSync !== null) {\n                textDocumentSyncOptions = result.capabilities.textDocumentSync;\n            }\n            this._capabilities = Object.assign({}, result.capabilities, { resolvedTextDocumentSync: textDocumentSyncOptions });\n            connection.onNotification(vscode_languageserver_protocol_1.PublishDiagnosticsNotification.type, params => this.handleDiagnostics(params));\n            connection.onRequest(vscode_languageserver_protocol_1.RegistrationRequest.type, params => this.handleRegistrationRequest(params));\n            // See https://github.com/Microsoft/vscode-languageserver-node/issues/199\n            connection.onRequest('client/registerFeature', params => this.handleRegistrationRequest(params));\n            connection.onRequest(vscode_languageserver_protocol_1.UnregistrationRequest.type, params => this.handleUnregistrationRequest(params));\n            // See https://github.com/Microsoft/vscode-languageserver-node/issues/199\n            connection.onRequest('client/unregisterFeature', params => this.handleUnregistrationRequest(params));\n            connection.onRequest(vscode_languageserver_protocol_1.ApplyWorkspaceEditRequest.type, params => this.handleApplyWorkspaceEdit(params));\n            // Add pending notification, request and progress handlers.\n            for (const [method, handler] of this._pendingNotificationHandlers) {\n                this._notificationDisposables.set(method, connection.onNotification(method, handler));\n            }\n            this._pendingNotificationHandlers.clear();\n            for (const [method, handler] of this._pendingRequestHandlers) {\n                this._requestDisposables.set(method, connection.onRequest(method, handler));\n            }\n            this._pendingRequestHandlers.clear();\n            for (const [token, data] of this._pendingProgressHandlers) {\n                this._progressDisposables.set(token, connection.onProgress(data.type, token, data.handler));\n            }\n            this._pendingProgressHandlers.clear();\n            // if (this._clientOptions.suspend.mode !== SuspendMode.off) {\n            // \tthis._idleInterval =  RAL().timer.setInterval(() => this.checkSuspend(), this._clientOptions.suspend.interval);\n            // }\n            await connection.sendNotification(vscode_languageserver_protocol_1.InitializedNotification.type, {});\n            this.hookFileEvents(connection);\n            this.hookConfigurationChanged(connection);\n            this.initializeFeatures(connection);\n            return result;\n        }\n        catch (error) {\n            if (this._clientOptions.initializationFailedHandler) {\n                if (this._clientOptions.initializationFailedHandler(error)) {\n                    void this.initialize(connection);\n                }\n                else {\n                    void this.stop();\n                }\n            }\n            else if (error instanceof vscode_languageserver_protocol_1.ResponseError && error.data && error.data.retry) {\n                void vscode_1.window.showErrorMessage(error.message, { title: 'Retry', id: 'retry' }).then(item => {\n                    if (item && item.id === 'retry') {\n                        void this.initialize(connection);\n                    }\n                    else {\n                        void this.stop();\n                    }\n                });\n            }\n            else {\n                if (error && error.message) {\n                    void vscode_1.window.showErrorMessage(error.message);\n                }\n                this.error('Server initialization failed.', error);\n                void this.stop();\n            }\n            throw error;\n        }\n    }\n    _clientGetRootPath() {\n        let folders = vscode_1.workspace.workspaceFolders;\n        if (!folders || folders.length === 0) {\n            return undefined;\n        }\n        let folder = folders[0];\n        if (folder.uri.scheme === 'file') {\n            return folder.uri.fsPath;\n        }\n        return undefined;\n    }\n    stop(timeout = 2000) {\n        // Wait 2 seconds on stop\n        return this.shutdown('stop', timeout);\n    }\n    dispose(timeout = 2000) {\n        try {\n            this._disposed = 'disposing';\n            return this.stop(timeout);\n        }\n        finally {\n            this._disposed = 'disposed';\n        }\n    }\n    async shutdown(mode, timeout) {\n        // If the client is stopped or in its initial state return.\n        if (this.$state === ClientState.Stopped || this.$state === ClientState.Initial) {\n            return;\n        }\n        // If we are stopping the client and have a stop promise return it.\n        if (this.$state === ClientState.Stopping) {\n            if (this._onStop !== undefined) {\n                return this._onStop;\n            }\n            else {\n                throw new Error(`Client is stopping but no stop promise available.`);\n            }\n        }\n        const connection = this.activeConnection();\n        // We can't stop a client that is not running (e.g. has no connection). Especially not\n        // on that us starting since it can't be correctly synchronized.\n        if (connection === undefined || this.$state !== ClientState.Running) {\n            throw new Error(`Client is not running and can't be stopped. It's current state is: ${this.$state}`);\n        }\n        this._initializeResult = undefined;\n        this.$state = ClientState.Stopping;\n        this.cleanUp(mode);\n        const tp = new Promise(c => { (0, vscode_languageserver_protocol_1.RAL)().timer.setTimeout(c, timeout); });\n        const shutdown = (async (connection) => {\n            await connection.shutdown();\n            await connection.exit();\n            return connection;\n        })(connection);\n        return this._onStop = Promise.race([tp, shutdown]).then((connection) => {\n            // The connection won the race with the timeout.\n            if (connection !== undefined) {\n                connection.end();\n                connection.dispose();\n            }\n            else {\n                this.error(`Stopping server timed out`, undefined, false);\n                throw new Error(`Stopping the server timed out`);\n            }\n        }, (error) => {\n            this.error(`Stopping server failed`, error, false);\n            throw error;\n        }).finally(() => {\n            this.$state = ClientState.Stopped;\n            mode === 'stop' && this.cleanUpChannel();\n            this._onStart = undefined;\n            this._onStop = undefined;\n            this._connection = undefined;\n            this._ignoredRegistrations.clear();\n        });\n    }\n    cleanUp(mode) {\n        // purge outstanding file events.\n        this._fileEvents = [];\n        this._fileEventDelayer.cancel();\n        const disposables = this._listeners.splice(0, this._listeners.length);\n        for (const disposable of disposables) {\n            disposable.dispose();\n        }\n        if (this._syncedDocuments) {\n            this._syncedDocuments.clear();\n        }\n        // Clear features in reverse order;\n        for (const feature of Array.from(this._features.entries()).map(entry => entry[1]).reverse()) {\n            feature.clear();\n        }\n        if (mode === 'stop' && this._diagnostics !== undefined) {\n            this._diagnostics.dispose();\n            this._diagnostics = undefined;\n        }\n        if (this._idleInterval !== undefined) {\n            this._idleInterval.dispose();\n            this._idleInterval = undefined;\n        }\n        // this._idleStart = undefined;\n    }\n    cleanUpChannel() {\n        if (this._outputChannel !== undefined && this._disposeOutputChannel) {\n            this._outputChannel.dispose();\n            this._outputChannel = undefined;\n        }\n    }\n    notifyFileEvent(event) {\n        const client = this;\n        async function didChangeWatchedFile(event) {\n            client._fileEvents.push(event);\n            return client._fileEventDelayer.trigger(async () => {\n                await client.sendNotification(vscode_languageserver_protocol_1.DidChangeWatchedFilesNotification.type, { changes: client._fileEvents });\n                client._fileEvents = [];\n            });\n        }\n        const workSpaceMiddleware = this.clientOptions.middleware?.workspace;\n        (workSpaceMiddleware?.didChangeWatchedFile ? workSpaceMiddleware.didChangeWatchedFile(event, didChangeWatchedFile) : didChangeWatchedFile(event)).catch((error) => {\n            client.error(`Notify file events failed.`, error);\n        });\n    }\n    async sendPendingFullTextDocumentChanges(connection) {\n        return this._pendingChangeSemaphore.lock(async () => {\n            try {\n                const changes = this._didChangeTextDocumentFeature.getPendingDocumentChanges(this._pendingOpenNotifications);\n                if (changes.length === 0) {\n                    return;\n                }\n                for (const document of changes) {\n                    const params = this.code2ProtocolConverter.asChangeTextDocumentParams(document);\n                    // We await the send and not the delivery since it is more or less the same for\n                    // notifications.\n                    await connection.sendNotification(vscode_languageserver_protocol_1.DidChangeTextDocumentNotification.type, params);\n                    this._didChangeTextDocumentFeature.notificationSent(document, vscode_languageserver_protocol_1.DidChangeTextDocumentNotification.type, params);\n                }\n            }\n            catch (error) {\n                this.error(`Sending pending changes failed`, error, false);\n                throw error;\n            }\n        });\n    }\n    triggerPendingChangeDelivery() {\n        this._pendingChangeDelayer.trigger(async () => {\n            const connection = this.activeConnection();\n            if (connection === undefined) {\n                this.triggerPendingChangeDelivery();\n                return;\n            }\n            await this.sendPendingFullTextDocumentChanges(connection);\n        }).catch((error) => this.error(`Delivering pending changes failed`, error, false));\n    }\n    handleDiagnostics(params) {\n        if (!this._diagnostics) {\n            return;\n        }\n        const key = params.uri;\n        if (this._diagnosticQueueState.state === 'busy' && this._diagnosticQueueState.document === key) {\n            // Cancel the active run;\n            this._diagnosticQueueState.tokenSource.cancel();\n        }\n        this._diagnosticQueue.set(params.uri, params.diagnostics);\n        this.triggerDiagnosticQueue();\n    }\n    triggerDiagnosticQueue() {\n        (0, vscode_languageserver_protocol_1.RAL)().timer.setImmediate(() => { this.workDiagnosticQueue(); });\n    }\n    workDiagnosticQueue() {\n        if (this._diagnosticQueueState.state === 'busy') {\n            return;\n        }\n        const next = this._diagnosticQueue.entries().next();\n        if (next.done === true) {\n            // Nothing in the queue\n            return;\n        }\n        const [document, diagnostics] = next.value;\n        this._diagnosticQueue.delete(document);\n        const tokenSource = new vscode_1.CancellationTokenSource();\n        this._diagnosticQueueState = { state: 'busy', document: document, tokenSource };\n        this._p2c.asDiagnostics(diagnostics, tokenSource.token).then((converted) => {\n            if (!tokenSource.token.isCancellationRequested) {\n                const uri = this._p2c.asUri(document);\n                const middleware = this.clientOptions.middleware;\n                if (middleware.handleDiagnostics) {\n                    middleware.handleDiagnostics(uri, converted, (uri, diagnostics) => this.setDiagnostics(uri, diagnostics));\n                }\n                else {\n                    this.setDiagnostics(uri, converted);\n                }\n            }\n        }).finally(() => {\n            this._diagnosticQueueState = { state: 'idle' };\n            this.triggerDiagnosticQueue();\n        });\n    }\n    setDiagnostics(uri, diagnostics) {\n        if (!this._diagnostics) {\n            return;\n        }\n        this._diagnostics.set(uri, diagnostics);\n    }\n    getLocale() {\n        return vscode_1.env.language;\n    }\n    async $start() {\n        if (this.$state === ClientState.StartFailed) {\n            throw new Error(`Previous start failed. Can't restart server.`);\n        }\n        await this.start();\n        const connection = this.activeConnection();\n        if (connection === undefined) {\n            throw new Error(`Starting server failed`);\n        }\n        return connection;\n    }\n    async createConnection() {\n        let errorHandler = (error, message, count) => {\n            this.handleConnectionError(error, message, count).catch((error) => this.error(`Handling connection error failed`, error));\n        };\n        let closeHandler = () => {\n            this.handleConnectionClosed().catch((error) => this.error(`Handling connection close failed`, error));\n        };\n        const transports = await this.createMessageTransports(this._clientOptions.stdioEncoding || 'utf8');\n        this._connection = createConnection(transports.reader, transports.writer, errorHandler, closeHandler, this._clientOptions.connectionOptions);\n        return this._connection;\n    }\n    async handleConnectionClosed() {\n        // Check whether this is a normal shutdown in progress or the client stopped normally.\n        if (this.$state === ClientState.Stopped) {\n            return;\n        }\n        try {\n            if (this._connection !== undefined) {\n                this._connection.dispose();\n            }\n        }\n        catch (error) {\n            // Disposing a connection could fail if error cases.\n        }\n        let handlerResult = { action: CloseAction.DoNotRestart };\n        if (this.$state !== ClientState.Stopping) {\n            try {\n                handlerResult = await this._clientOptions.errorHandler.closed();\n            }\n            catch (error) {\n                // Ignore errors coming from the error handler.\n            }\n        }\n        this._connection = undefined;\n        if (handlerResult.action === CloseAction.DoNotRestart) {\n            this.error(handlerResult.message ?? 'Connection to server got closed. Server will not be restarted.', undefined, handlerResult.handled === true ? false : 'force');\n            this.cleanUp('stop');\n            if (this.$state === ClientState.Starting) {\n                this.$state = ClientState.StartFailed;\n            }\n            else {\n                this.$state = ClientState.Stopped;\n            }\n            this._onStop = Promise.resolve();\n            this._onStart = undefined;\n        }\n        else if (handlerResult.action === CloseAction.Restart) {\n            this.info(handlerResult.message ?? 'Connection to server got closed. Server will restart.', !handlerResult.handled);\n            this.cleanUp('restart');\n            this.$state = ClientState.Initial;\n            this._onStop = Promise.resolve();\n            this._onStart = undefined;\n            this.start().catch((error) => this.error(`Restarting server failed`, error, 'force'));\n        }\n    }\n    async handleConnectionError(error, message, count) {\n        const handlerResult = await this._clientOptions.errorHandler.error(error, message, count);\n        if (handlerResult.action === ErrorAction.Shutdown) {\n            this.error(handlerResult.message ?? `Client ${this._name}: connection to server is erroring.\\n${error.message}\\nShutting down server.`, undefined, handlerResult.handled === true ? false : 'force');\n            this.stop().catch((error) => {\n                this.error(`Stopping server failed`, error, false);\n            });\n        }\n        else {\n            this.error(handlerResult.message ??\n                `Client ${this._name}: connection to server is erroring.\\n${error.message}`, undefined, handlerResult.handled === true ? false : 'force');\n        }\n    }\n    hookConfigurationChanged(connection) {\n        this._listeners.push(vscode_1.workspace.onDidChangeConfiguration(() => {\n            this.refreshTrace(connection, true);\n        }));\n    }\n    refreshTrace(connection, sendNotification = false) {\n        const config = vscode_1.workspace.getConfiguration(this._id);\n        let trace = vscode_languageserver_protocol_1.Trace.Off;\n        let traceFormat = vscode_languageserver_protocol_1.TraceFormat.Text;\n        if (config) {\n            const traceConfig = config.get('trace.server', 'off');\n            if (typeof traceConfig === 'string') {\n                trace = vscode_languageserver_protocol_1.Trace.fromString(traceConfig);\n            }\n            else {\n                trace = vscode_languageserver_protocol_1.Trace.fromString(config.get('trace.server.verbosity', 'off'));\n                traceFormat = vscode_languageserver_protocol_1.TraceFormat.fromString(config.get('trace.server.format', 'text'));\n            }\n        }\n        this._trace = trace;\n        this._traceFormat = traceFormat;\n        connection.trace(this._trace, this._tracer, {\n            sendNotification,\n            traceFormat: this._traceFormat\n        }).catch((error) => { this.error(`Updating trace failed with error`, error, false); });\n    }\n    hookFileEvents(_connection) {\n        let fileEvents = this._clientOptions.synchronize.fileEvents;\n        if (!fileEvents) {\n            return;\n        }\n        let watchers;\n        if (Is.array(fileEvents)) {\n            watchers = fileEvents;\n        }\n        else {\n            watchers = [fileEvents];\n        }\n        if (!watchers) {\n            return;\n        }\n        this._dynamicFeatures.get(vscode_languageserver_protocol_1.DidChangeWatchedFilesNotification.type.method).registerRaw(UUID.generateUuid(), watchers);\n    }\n    registerFeatures(features) {\n        for (let feature of features) {\n            this.registerFeature(feature);\n        }\n    }\n    registerFeature(feature) {\n        this._features.push(feature);\n        if (features_1.DynamicFeature.is(feature)) {\n            const registrationType = feature.registrationType;\n            this._dynamicFeatures.set(registrationType.method, feature);\n        }\n    }\n    getFeature(request) {\n        return this._dynamicFeatures.get(request);\n    }\n    hasDedicatedTextSynchronizationFeature(textDocument) {\n        const feature = this.getFeature(vscode_languageserver_protocol_1.NotebookDocumentSyncRegistrationType.method);\n        if (feature === undefined || !(feature instanceof notebook_1.NotebookDocumentSyncFeature)) {\n            return false;\n        }\n        return feature.handles(textDocument);\n    }\n    registerBuiltinFeatures() {\n        const pendingFullTextDocumentChanges = new Map();\n        this.registerFeature(new configuration_1.ConfigurationFeature(this));\n        this.registerFeature(new textSynchronization_1.DidOpenTextDocumentFeature(this, this._syncedDocuments));\n        this._didChangeTextDocumentFeature = new textSynchronization_1.DidChangeTextDocumentFeature(this, pendingFullTextDocumentChanges);\n        this._didChangeTextDocumentFeature.onPendingChangeAdded(() => {\n            this.triggerPendingChangeDelivery();\n        });\n        this.registerFeature(this._didChangeTextDocumentFeature);\n        this.registerFeature(new textSynchronization_1.WillSaveFeature(this));\n        this.registerFeature(new textSynchronization_1.WillSaveWaitUntilFeature(this));\n        this.registerFeature(new textSynchronization_1.DidSaveTextDocumentFeature(this));\n        this.registerFeature(new textSynchronization_1.DidCloseTextDocumentFeature(this, this._syncedDocuments, pendingFullTextDocumentChanges));\n        this.registerFeature(new fileSystemWatcher_1.FileSystemWatcherFeature(this, (event) => this.notifyFileEvent(event)));\n        this.registerFeature(new completion_1.CompletionItemFeature(this));\n        this.registerFeature(new hover_1.HoverFeature(this));\n        this.registerFeature(new signatureHelp_1.SignatureHelpFeature(this));\n        this.registerFeature(new definition_1.DefinitionFeature(this));\n        this.registerFeature(new reference_1.ReferencesFeature(this));\n        this.registerFeature(new documentHighlight_1.DocumentHighlightFeature(this));\n        this.registerFeature(new documentSymbol_1.DocumentSymbolFeature(this));\n        this.registerFeature(new workspaceSymbol_1.WorkspaceSymbolFeature(this));\n        this.registerFeature(new codeAction_1.CodeActionFeature(this));\n        this.registerFeature(new codeLens_1.CodeLensFeature(this));\n        this.registerFeature(new formatting_1.DocumentFormattingFeature(this));\n        this.registerFeature(new formatting_1.DocumentRangeFormattingFeature(this));\n        this.registerFeature(new formatting_1.DocumentOnTypeFormattingFeature(this));\n        this.registerFeature(new rename_1.RenameFeature(this));\n        this.registerFeature(new documentLink_1.DocumentLinkFeature(this));\n        this.registerFeature(new executeCommand_1.ExecuteCommandFeature(this));\n        this.registerFeature(new configuration_1.SyncConfigurationFeature(this));\n        this.registerFeature(new typeDefinition_1.TypeDefinitionFeature(this));\n        this.registerFeature(new implementation_1.ImplementationFeature(this));\n        this.registerFeature(new colorProvider_1.ColorProviderFeature(this));\n        // We only register the workspace folder feature if the client is not locked\n        // to a specific workspace folder.\n        if (this.clientOptions.workspaceFolder === undefined) {\n            this.registerFeature(new workspaceFolder_1.WorkspaceFoldersFeature(this));\n        }\n        this.registerFeature(new foldingRange_1.FoldingRangeFeature(this));\n        this.registerFeature(new declaration_1.DeclarationFeature(this));\n        this.registerFeature(new selectionRange_1.SelectionRangeFeature(this));\n        this.registerFeature(new progress_1.ProgressFeature(this));\n        this.registerFeature(new callHierarchy_1.CallHierarchyFeature(this));\n        this.registerFeature(new semanticTokens_1.SemanticTokensFeature(this));\n        this.registerFeature(new linkedEditingRange_1.LinkedEditingFeature(this));\n        this.registerFeature(new fileOperations_1.DidCreateFilesFeature(this));\n        this.registerFeature(new fileOperations_1.DidRenameFilesFeature(this));\n        this.registerFeature(new fileOperations_1.DidDeleteFilesFeature(this));\n        this.registerFeature(new fileOperations_1.WillCreateFilesFeature(this));\n        this.registerFeature(new fileOperations_1.WillRenameFilesFeature(this));\n        this.registerFeature(new fileOperations_1.WillDeleteFilesFeature(this));\n        this.registerFeature(new typeHierarchy_1.TypeHierarchyFeature(this));\n        this.registerFeature(new inlineValue_1.InlineValueFeature(this));\n        this.registerFeature(new inlayHint_1.InlayHintsFeature(this));\n        this.registerFeature(new diagnostic_1.DiagnosticFeature(this));\n        this.registerFeature(new notebook_1.NotebookDocumentSyncFeature(this));\n    }\n    registerProposedFeatures() {\n        this.registerFeatures(ProposedFeatures.createAll(this));\n    }\n    fillInitializeParams(params) {\n        for (let feature of this._features) {\n            if (Is.func(feature.fillInitializeParams)) {\n                feature.fillInitializeParams(params);\n            }\n        }\n    }\n    computeClientCapabilities() {\n        const result = {};\n        (0, features_1.ensure)(result, 'workspace').applyEdit = true;\n        const workspaceEdit = (0, features_1.ensure)((0, features_1.ensure)(result, 'workspace'), 'workspaceEdit');\n        workspaceEdit.documentChanges = true;\n        workspaceEdit.resourceOperations = [vscode_languageserver_protocol_1.ResourceOperationKind.Create, vscode_languageserver_protocol_1.ResourceOperationKind.Rename, vscode_languageserver_protocol_1.ResourceOperationKind.Delete];\n        workspaceEdit.failureHandling = vscode_languageserver_protocol_1.FailureHandlingKind.TextOnlyTransactional;\n        workspaceEdit.normalizesLineEndings = true;\n        workspaceEdit.changeAnnotationSupport = {\n            groupsOnLabel: true\n        };\n        const diagnostics = (0, features_1.ensure)((0, features_1.ensure)(result, 'textDocument'), 'publishDiagnostics');\n        diagnostics.relatedInformation = true;\n        diagnostics.versionSupport = false;\n        diagnostics.tagSupport = { valueSet: [vscode_languageserver_protocol_1.DiagnosticTag.Unnecessary, vscode_languageserver_protocol_1.DiagnosticTag.Deprecated] };\n        diagnostics.codeDescriptionSupport = true;\n        diagnostics.dataSupport = true;\n        const windowCapabilities = (0, features_1.ensure)(result, 'window');\n        const showMessage = (0, features_1.ensure)(windowCapabilities, 'showMessage');\n        showMessage.messageActionItem = { additionalPropertiesSupport: true };\n        const showDocument = (0, features_1.ensure)(windowCapabilities, 'showDocument');\n        showDocument.support = true;\n        const generalCapabilities = (0, features_1.ensure)(result, 'general');\n        generalCapabilities.staleRequestSupport = {\n            cancel: true,\n            retryOnContentModified: Array.from(BaseLanguageClient.RequestsToCancelOnContentModified)\n        };\n        generalCapabilities.regularExpressions = { engine: 'ECMAScript', version: 'ES2020' };\n        generalCapabilities.markdown = {\n            parser: 'marked',\n            version: '1.1.0',\n        };\n        generalCapabilities.positionEncodings = ['utf-16'];\n        if (this._clientOptions.markdown.supportHtml) {\n            generalCapabilities.markdown.allowedTags = ['ul', 'li', 'p', 'code', 'blockquote', 'ol', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'hr', 'em', 'pre', 'table', 'thead', 'tbody', 'tr', 'th', 'td', 'div', 'del', 'a', 'strong', 'br', 'img', 'span'];\n        }\n        for (let feature of this._features) {\n            feature.fillClientCapabilities(result);\n        }\n        return result;\n    }\n    initializeFeatures(_connection) {\n        const documentSelector = this._clientOptions.documentSelector;\n        for (const feature of this._features) {\n            if (Is.func(feature.preInitialize)) {\n                feature.preInitialize(this._capabilities, documentSelector);\n            }\n        }\n        for (const feature of this._features) {\n            feature.initialize(this._capabilities, documentSelector);\n        }\n    }\n    async handleRegistrationRequest(params) {\n        const middleware = this.clientOptions.middleware?.handleRegisterCapability;\n        if (middleware) {\n            return middleware(params, nextParams => this.doRegisterCapability(nextParams));\n        }\n        else {\n            return this.doRegisterCapability(params);\n        }\n    }\n    async doRegisterCapability(params) {\n        // We will not receive a registration call before a client is running\n        // from a server. However if we stop or shutdown we might which might\n        // try to restart the server. So ignore registrations if we are not running\n        if (!this.isRunning()) {\n            for (const registration of params.registrations) {\n                this._ignoredRegistrations.add(registration.id);\n            }\n            return;\n        }\n        for (const registration of params.registrations) {\n            const feature = this._dynamicFeatures.get(registration.method);\n            if (feature === undefined) {\n                return Promise.reject(new Error(`No feature implementation for ${registration.method} found. Registration failed.`));\n            }\n            const options = registration.registerOptions ?? {};\n            options.documentSelector = options.documentSelector ?? this._clientOptions.documentSelector;\n            const data = {\n                id: registration.id,\n                registerOptions: options\n            };\n            try {\n                feature.register(data);\n            }\n            catch (err) {\n                return Promise.reject(err);\n            }\n        }\n    }\n    async handleUnregistrationRequest(params) {\n        const middleware = this.clientOptions.middleware?.handleUnregisterCapability;\n        if (middleware) {\n            return middleware(params, nextParams => this.doUnregisterCapability(nextParams));\n        }\n        else {\n            return this.doUnregisterCapability(params);\n        }\n    }\n    async doUnregisterCapability(params) {\n        for (const unregistration of params.unregisterations) {\n            if (this._ignoredRegistrations.has(unregistration.id)) {\n                continue;\n            }\n            const feature = this._dynamicFeatures.get(unregistration.method);\n            if (!feature) {\n                return Promise.reject(new Error(`No feature implementation for ${unregistration.method} found. Unregistration failed.`));\n            }\n            feature.unregister(unregistration.id);\n        }\n    }\n    async handleApplyWorkspaceEdit(params) {\n        const workspaceEdit = params.edit;\n        // Make sure we convert workspace edits one after the other. Otherwise\n        // we might execute a workspace edit received first after we received another\n        // one since the conversion might race.\n        const converted = await this.workspaceEditLock.lock(() => {\n            return this._p2c.asWorkspaceEdit(workspaceEdit);\n        });\n        // This is some sort of workaround since the version check should be done by VS Code in the Workspace.applyEdit.\n        // However doing it here adds some safety since the server can lag more behind then an extension.\n        const openTextDocuments = new Map();\n        vscode_1.workspace.textDocuments.forEach((document) => openTextDocuments.set(document.uri.toString(), document));\n        let versionMismatch = false;\n        if (workspaceEdit.documentChanges) {\n            for (const change of workspaceEdit.documentChanges) {\n                if (vscode_languageserver_protocol_1.TextDocumentEdit.is(change) && change.textDocument.version && change.textDocument.version >= 0) {\n                    const changeUri = this._p2c.asUri(change.textDocument.uri).toString();\n                    const textDocument = openTextDocuments.get(changeUri);\n                    if (textDocument && textDocument.version !== change.textDocument.version) {\n                        versionMismatch = true;\n                        break;\n                    }\n                }\n            }\n        }\n        if (versionMismatch) {\n            return Promise.resolve({ applied: false });\n        }\n        return Is.asPromise(vscode_1.workspace.applyEdit(converted).then((value) => { return { applied: value }; }));\n    }\n    handleFailedRequest(type, token, error, defaultValue, showNotification = true) {\n        // If we get a request cancel or a content modified don't log anything.\n        if (error instanceof vscode_languageserver_protocol_1.ResponseError) {\n            // The connection got disposed while we were waiting for a response.\n            // Simply return the default value. Is the best we can do.\n            if (error.code === vscode_languageserver_protocol_1.ErrorCodes.PendingResponseRejected || error.code === vscode_languageserver_protocol_1.ErrorCodes.ConnectionInactive) {\n                return defaultValue;\n            }\n            if (error.code === vscode_languageserver_protocol_1.LSPErrorCodes.RequestCancelled || error.code === vscode_languageserver_protocol_1.LSPErrorCodes.ServerCancelled) {\n                if (token !== undefined && token.isCancellationRequested) {\n                    return defaultValue;\n                }\n                else {\n                    if (error.data !== undefined) {\n                        throw new features_1.LSPCancellationError(error.data);\n                    }\n                    else {\n                        throw new vscode_1.CancellationError();\n                    }\n                }\n            }\n            else if (error.code === vscode_languageserver_protocol_1.LSPErrorCodes.ContentModified) {\n                if (BaseLanguageClient.RequestsToCancelOnContentModified.has(type.method) || BaseLanguageClient.CancellableResolveCalls.has(type.method)) {\n                    throw new vscode_1.CancellationError();\n                }\n                else {\n                    return defaultValue;\n                }\n            }\n        }\n        this.error(`Request ${type.method} failed.`, error, showNotification);\n        throw error;\n    }\n}\nexports.BaseLanguageClient = BaseLanguageClient;\nBaseLanguageClient.RequestsToCancelOnContentModified = new Set([\n    vscode_languageserver_protocol_1.SemanticTokensRequest.method,\n    vscode_languageserver_protocol_1.SemanticTokensRangeRequest.method,\n    vscode_languageserver_protocol_1.SemanticTokensDeltaRequest.method\n]);\nBaseLanguageClient.CancellableResolveCalls = new Set([\n    vscode_languageserver_protocol_1.CompletionResolveRequest.method,\n    vscode_languageserver_protocol_1.CodeLensResolveRequest.method,\n    vscode_languageserver_protocol_1.CodeActionResolveRequest.method,\n    vscode_languageserver_protocol_1.InlayHintResolveRequest.method,\n    vscode_languageserver_protocol_1.DocumentLinkResolveRequest.method,\n    vscode_languageserver_protocol_1.WorkspaceSymbolResolveRequest.method\n]);\nclass ConsoleLogger {\n    error(message) {\n        (0, vscode_languageserver_protocol_1.RAL)().console.error(message);\n    }\n    warn(message) {\n        (0, vscode_languageserver_protocol_1.RAL)().console.warn(message);\n    }\n    info(message) {\n        (0, vscode_languageserver_protocol_1.RAL)().console.info(message);\n    }\n    log(message) {\n        (0, vscode_languageserver_protocol_1.RAL)().console.log(message);\n    }\n}\nfunction createConnection(input, output, errorHandler, closeHandler, options) {\n    const logger = new ConsoleLogger();\n    const connection = (0, vscode_languageserver_protocol_1.createProtocolConnection)(input, output, logger, options);\n    connection.onError((data) => { errorHandler(data[0], data[1], data[2]); });\n    connection.onClose(closeHandler);\n    const result = {\n        listen: () => connection.listen(),\n        sendRequest: connection.sendRequest,\n        onRequest: connection.onRequest,\n        hasPendingResponse: connection.hasPendingResponse,\n        sendNotification: connection.sendNotification,\n        onNotification: connection.onNotification,\n        onProgress: connection.onProgress,\n        sendProgress: connection.sendProgress,\n        trace: (value, tracer, sendNotificationOrTraceOptions) => {\n            const defaultTraceOptions = {\n                sendNotification: false,\n                traceFormat: vscode_languageserver_protocol_1.TraceFormat.Text\n            };\n            if (sendNotificationOrTraceOptions === undefined) {\n                return connection.trace(value, tracer, defaultTraceOptions);\n            }\n            else if (Is.boolean(sendNotificationOrTraceOptions)) {\n                return connection.trace(value, tracer, sendNotificationOrTraceOptions);\n            }\n            else {\n                return connection.trace(value, tracer, sendNotificationOrTraceOptions);\n            }\n        },\n        initialize: (params) => {\n            // This needs to return and MUST not be await to avoid any async\n            // scheduling. Otherwise messages might overtake each other.\n            return connection.sendRequest(vscode_languageserver_protocol_1.InitializeRequest.type, params);\n        },\n        shutdown: () => {\n            // This needs to return and MUST not be await to avoid any async\n            // scheduling. Otherwise messages might overtake each other.\n            return connection.sendRequest(vscode_languageserver_protocol_1.ShutdownRequest.type, undefined);\n        },\n        exit: () => {\n            // This needs to return and MUST not be await to avoid any async\n            // scheduling. Otherwise messages might overtake each other.\n            return connection.sendNotification(vscode_languageserver_protocol_1.ExitNotification.type);\n        },\n        end: () => connection.end(),\n        dispose: () => connection.dispose()\n    };\n    return result;\n}\n// Exporting proposed protocol.\nvar ProposedFeatures;\n(function (ProposedFeatures) {\n    function createAll(_client) {\n        let result = [\n            new inlineCompletion_1.InlineCompletionItemFeature(_client)\n        ];\n        return result;\n    }\n    ProposedFeatures.createAll = createAll;\n})(ProposedFeatures || (exports.ProposedFeatures = ProposedFeatures = {}));\n", "\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.terminate = void 0;\nconst cp = require(\"child_process\");\nconst path_1 = require(\"path\");\nconst isWindows = (process.platform === 'win32');\nconst isMacintosh = (process.platform === 'darwin');\nconst isLinux = (process.platform === 'linux');\nfunction terminate(process, cwd) {\n    if (isWindows) {\n        try {\n            // This we run in Atom execFileSync is available.\n            // Ignore stderr since this is otherwise piped to parent.stderr\n            // which might be already closed.\n            let options = {\n                stdio: ['pipe', 'pipe', 'ignore']\n            };\n            if (cwd) {\n                options.cwd = cwd;\n            }\n            cp.execFileSync('taskkill', ['/T', '/F', '/PID', process.pid.toString()], options);\n            return true;\n        }\n        catch (err) {\n            return false;\n        }\n    }\n    else if (isLinux || isMacintosh) {\n        try {\n            var cmd = (0, path_1.join)(__dirname, 'terminateProcess.sh');\n            var result = cp.spawnSync(cmd, [process.pid.toString()]);\n            return result.error ? false : true;\n        }\n        catch (err) {\n            return false;\n        }\n    }\n    else {\n        process.kill('SIGKILL');\n        return true;\n    }\n}\nexports.terminate = terminate;\n", "/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ----------------------------------------------------------------------------------------- */\n'use strict';\n\nmodule.exports = require('./lib/node/main');", "const debug = (\n  typeof process === 'object' &&\n  process.env &&\n  process.env.NODE_DEBUG &&\n  /\\bsemver\\b/i.test(process.env.NODE_DEBUG)\n) ? (...args) => console.error('SEMVER', ...args)\n  : () => {}\n\nmodule.exports = debug\n", "// Note: this is the semver.org version of the spec that it implements\n// Not necessarily the package version of this code.\nconst SEMVER_SPEC_VERSION = '2.0.0'\n\nconst MAX_LENGTH = 256\nconst MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER ||\n/* istanbul ignore next */ 9007199254740991\n\n// Max safe segment length for coercion.\nconst MAX_SAFE_COMPONENT_LENGTH = 16\n\n// Max safe length for a build identifier. The max length minus 6 characters for\n// the shortest version with a build 0.0.0+BUILD.\nconst MAX_SAFE_BUILD_LENGTH = MAX_LENGTH - 6\n\nconst RELEASE_TYPES = [\n  'major',\n  'premajor',\n  'minor',\n  'preminor',\n  'patch',\n  'prepatch',\n  'prerelease',\n]\n\nmodule.exports = {\n  MAX_LENGTH,\n  MAX_SAFE_COMPONENT_LENGTH,\n  MAX_SAFE_BUILD_LENGTH,\n  MAX_SAFE_INTEGER,\n  RELEASE_TYPES,\n  SEMVER_SPEC_VERSION,\n  FLAG_INCLUDE_PRERELEASE: 0b001,\n  FLAG_LOOSE: 0b010,\n}\n", "const {\n  MAX_SAFE_COMPONENT_LENGTH,\n  MAX_SAFE_BUILD_LENGTH,\n  MAX_LENGTH,\n} = require('./constants')\nconst debug = require('./debug')\nexports = module.exports = {}\n\n// The actual regexps go on exports.re\nconst re = exports.re = []\nconst safeRe = exports.safeRe = []\nconst src = exports.src = []\nconst t = exports.t = {}\nlet R = 0\n\nconst LETTERDASHNUMBER = '[a-zA-Z0-9-]'\n\n// Replace some greedy regex tokens to prevent regex dos issues. These regex are\n// used internally via the safeRe object since all inputs in this library get\n// normalized first to trim and collapse all extra whitespace. The original\n// regexes are exported for userland consumption and lower level usage. A\n// future breaking change could export the safer regex only with a note that\n// all input should have extra whitespace removed.\nconst safeRegexReplacements = [\n  ['\\\\s', 1],\n  ['\\\\d', MAX_LENGTH],\n  [LETTERDASHNUMBER, MAX_SAFE_BUILD_LENGTH],\n]\n\nconst makeSafeRegex = (value) => {\n  for (const [token, max] of safeRegexReplacements) {\n    value = value\n      .split(`${token}*`).join(`${token}{0,${max}}`)\n      .split(`${token}+`).join(`${token}{1,${max}}`)\n  }\n  return value\n}\n\nconst createToken = (name, value, isGlobal) => {\n  const safe = makeSafeRegex(value)\n  const index = R++\n  debug(name, index, value)\n  t[name] = index\n  src[index] = value\n  re[index] = new RegExp(value, isGlobal ? 'g' : undefined)\n  safeRe[index] = new RegExp(safe, isGlobal ? 'g' : undefined)\n}\n\n// The following Regular Expressions can be used for tokenizing,\n// validating, and parsing SemVer version strings.\n\n// ## Numeric Identifier\n// A single `0`, or a non-zero digit followed by zero or more digits.\n\ncreateToken('NUMERICIDENTIFIER', '0|[1-9]\\\\d*')\ncreateToken('NUMERICIDENTIFIERLOOSE', '\\\\d+')\n\n// ## Non-numeric Identifier\n// Zero or more digits, followed by a letter or hyphen, and then zero or\n// more letters, digits, or hyphens.\n\ncreateToken('NONNUMERICIDENTIFIER', `\\\\d*[a-zA-Z-]${LETTERDASHNUMBER}*`)\n\n// ## Main Version\n// Three dot-separated numeric identifiers.\n\ncreateToken('MAINVERSION', `(${src[t.NUMERICIDENTIFIER]})\\\\.` +\n                   `(${src[t.NUMERICIDENTIFIER]})\\\\.` +\n                   `(${src[t.NUMERICIDENTIFIER]})`)\n\ncreateToken('MAINVERSIONLOOSE', `(${src[t.NUMERICIDENTIFIERLOOSE]})\\\\.` +\n                        `(${src[t.NUMERICIDENTIFIERLOOSE]})\\\\.` +\n                        `(${src[t.NUMERICIDENTIFIERLOOSE]})`)\n\n// ## Pre-release Version Identifier\n// A numeric identifier, or a non-numeric identifier.\n\ncreateToken('PRERELEASEIDENTIFIER', `(?:${src[t.NUMERICIDENTIFIER]\n}|${src[t.NONNUMERICIDENTIFIER]})`)\n\ncreateToken('PRERELEASEIDENTIFIERLOOSE', `(?:${src[t.NUMERICIDENTIFIERLOOSE]\n}|${src[t.NONNUMERICIDENTIFIER]})`)\n\n// ## Pre-release Version\n// Hyphen, followed by one or more dot-separated pre-release version\n// identifiers.\n\ncreateToken('PRERELEASE', `(?:-(${src[t.PRERELEASEIDENTIFIER]\n}(?:\\\\.${src[t.PRERELEASEIDENTIFIER]})*))`)\n\ncreateToken('PRERELEASELOOSE', `(?:-?(${src[t.PRERELEASEIDENTIFIERLOOSE]\n}(?:\\\\.${src[t.PRERELEASEIDENTIFIERLOOSE]})*))`)\n\n// ## Build Metadata Identifier\n// Any combination of digits, letters, or hyphens.\n\ncreateToken('BUILDIDENTIFIER', `${LETTERDASHNUMBER}+`)\n\n// ## Build Metadata\n// Plus sign, followed by one or more period-separated build metadata\n// identifiers.\n\ncreateToken('BUILD', `(?:\\\\+(${src[t.BUILDIDENTIFIER]\n}(?:\\\\.${src[t.BUILDIDENTIFIER]})*))`)\n\n// ## Full Version String\n// A main version, followed optionally by a pre-release version and\n// build metadata.\n\n// Note that the only major, minor, patch, and pre-release sections of\n// the version string are capturing groups.  The build metadata is not a\n// capturing group, because it should not ever be used in version\n// comparison.\n\ncreateToken('FULLPLAIN', `v?${src[t.MAINVERSION]\n}${src[t.PRERELEASE]}?${\n  src[t.BUILD]}?`)\n\ncreateToken('FULL', `^${src[t.FULLPLAIN]}$`)\n\n// like full, but allows v1.2.3 and =1.2.3, which people do sometimes.\n// also, 1.0.0alpha1 (prerelease without the hyphen) which is pretty\n// common in the npm registry.\ncreateToken('LOOSEPLAIN', `[v=\\\\s]*${src[t.MAINVERSIONLOOSE]\n}${src[t.PRERELEASELOOSE]}?${\n  src[t.BUILD]}?`)\n\ncreateToken('LOOSE', `^${src[t.LOOSEPLAIN]}$`)\n\ncreateToken('GTLT', '((?:<|>)?=?)')\n\n// Something like \"2.*\" or \"1.2.x\".\n// Note that \"x.x\" is a valid xRange identifer, meaning \"any version\"\n// Only the first item is strictly required.\ncreateToken('XRANGEIDENTIFIERLOOSE', `${src[t.NUMERICIDENTIFIERLOOSE]}|x|X|\\\\*`)\ncreateToken('XRANGEIDENTIFIER', `${src[t.NUMERICIDENTIFIER]}|x|X|\\\\*`)\n\ncreateToken('XRANGEPLAIN', `[v=\\\\s]*(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:\\\\.(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:\\\\.(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:${src[t.PRERELEASE]})?${\n                     src[t.BUILD]}?` +\n                   `)?)?`)\n\ncreateToken('XRANGEPLAINLOOSE', `[v=\\\\s]*(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:\\\\.(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:\\\\.(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:${src[t.PRERELEASELOOSE]})?${\n                          src[t.BUILD]}?` +\n                        `)?)?`)\n\ncreateToken('XRANGE', `^${src[t.GTLT]}\\\\s*${src[t.XRANGEPLAIN]}$`)\ncreateToken('XRANGELOOSE', `^${src[t.GTLT]}\\\\s*${src[t.XRANGEPLAINLOOSE]}$`)\n\n// Coercion.\n// Extract anything that could conceivably be a part of a valid semver\ncreateToken('COERCE', `${'(^|[^\\\\d])' +\n              '(\\\\d{1,'}${MAX_SAFE_COMPONENT_LENGTH}})` +\n              `(?:\\\\.(\\\\d{1,${MAX_SAFE_COMPONENT_LENGTH}}))?` +\n              `(?:\\\\.(\\\\d{1,${MAX_SAFE_COMPONENT_LENGTH}}))?` +\n              `(?:$|[^\\\\d])`)\ncreateToken('COERCERTL', src[t.COERCE], true)\n\n// Tilde ranges.\n// Meaning is \"reasonably at or greater than\"\ncreateToken('LONETILDE', '(?:~>?)')\n\ncreateToken('TILDETRIM', `(\\\\s*)${src[t.LONETILDE]}\\\\s+`, true)\nexports.tildeTrimReplace = '$1~'\n\ncreateToken('TILDE', `^${src[t.LONETILDE]}${src[t.XRANGEPLAIN]}$`)\ncreateToken('TILDELOOSE', `^${src[t.LONETILDE]}${src[t.XRANGEPLAINLOOSE]}$`)\n\n// Caret ranges.\n// Meaning is \"at least and backwards compatible with\"\ncreateToken('LONECARET', '(?:\\\\^)')\n\ncreateToken('CARETTRIM', `(\\\\s*)${src[t.LONECARET]}\\\\s+`, true)\nexports.caretTrimReplace = '$1^'\n\ncreateToken('CARET', `^${src[t.LONECARET]}${src[t.XRANGEPLAIN]}$`)\ncreateToken('CARETLOOSE', `^${src[t.LONECARET]}${src[t.XRANGEPLAINLOOSE]}$`)\n\n// A simple gt/lt/eq thing, or just \"\" to indicate \"any version\"\ncreateToken('COMPARATORLOOSE', `^${src[t.GTLT]}\\\\s*(${src[t.LOOSEPLAIN]})$|^$`)\ncreateToken('COMPARATOR', `^${src[t.GTLT]}\\\\s*(${src[t.FULLPLAIN]})$|^$`)\n\n// An expression to strip any whitespace between the gtlt and the thing\n// it modifies, so that `> 1.2.3` ==> `>1.2.3`\ncreateToken('COMPARATORTRIM', `(\\\\s*)${src[t.GTLT]\n}\\\\s*(${src[t.LOOSEPLAIN]}|${src[t.XRANGEPLAIN]})`, true)\nexports.comparatorTrimReplace = '$1$2$3'\n\n// Something like `1.2.3 - 1.2.4`\n// Note that these all use the loose form, because they'll be\n// checked against either the strict or loose comparator form\n// later.\ncreateToken('HYPHENRANGE', `^\\\\s*(${src[t.XRANGEPLAIN]})` +\n                   `\\\\s+-\\\\s+` +\n                   `(${src[t.XRANGEPLAIN]})` +\n                   `\\\\s*$`)\n\ncreateToken('HYPHENRANGELOOSE', `^\\\\s*(${src[t.XRANGEPLAINLOOSE]})` +\n                        `\\\\s+-\\\\s+` +\n                        `(${src[t.XRANGEPLAINLOOSE]})` +\n                        `\\\\s*$`)\n\n// Star ranges basically just allow anything at all.\ncreateToken('STAR', '(<|>)?=?\\\\s*\\\\*')\n// >=0.0.0 is like a star\ncreateToken('GTE0', '^\\\\s*>=\\\\s*0\\\\.0\\\\.0\\\\s*$')\ncreateToken('GTE0PRE', '^\\\\s*>=\\\\s*0\\\\.0\\\\.0-0\\\\s*$')\n", "// parse out just the options we care about\nconst looseOption = Object.freeze({ loose: true })\nconst emptyOpts = Object.freeze({ })\nconst parseOptions = options => {\n  if (!options) {\n    return emptyOpts\n  }\n\n  if (typeof options !== 'object') {\n    return looseOption\n  }\n\n  return options\n}\nmodule.exports = parseOptions\n", "const numeric = /^[0-9]+$/\nconst compareIdentifiers = (a, b) => {\n  const anum = numeric.test(a)\n  const bnum = numeric.test(b)\n\n  if (anum && bnum) {\n    a = +a\n    b = +b\n  }\n\n  return a === b ? 0\n    : (anum && !bnum) ? -1\n    : (bnum && !anum) ? 1\n    : a < b ? -1\n    : 1\n}\n\nconst rcompareIdentifiers = (a, b) => compareIdentifiers(b, a)\n\nmodule.exports = {\n  compareIdentifiers,\n  rcompareIdentifiers,\n}\n", "const debug = require('../internal/debug')\nconst { MAX_LENGTH, MAX_SAFE_INTEGER } = require('../internal/constants')\nconst { safeRe: re, t } = require('../internal/re')\n\nconst parseOptions = require('../internal/parse-options')\nconst { compareIdentifiers } = require('../internal/identifiers')\nclass SemVer {\n  constructor (version, options) {\n    options = parseOptions(options)\n\n    if (version instanceof SemVer) {\n      if (version.loose === !!options.loose &&\n          version.includePrerelease === !!options.includePrerelease) {\n        return version\n      } else {\n        version = version.version\n      }\n    } else if (typeof version !== 'string') {\n      throw new TypeError(`Invalid version. Must be a string. Got type \"${typeof version}\".`)\n    }\n\n    if (version.length > MAX_LENGTH) {\n      throw new TypeError(\n        `version is longer than ${MAX_LENGTH} characters`\n      )\n    }\n\n    debug('SemVer', version, options)\n    this.options = options\n    this.loose = !!options.loose\n    // this isn't actually relevant for versions, but keep it so that we\n    // don't run into trouble passing this.options around.\n    this.includePrerelease = !!options.includePrerelease\n\n    const m = version.trim().match(options.loose ? re[t.LOOSE] : re[t.FULL])\n\n    if (!m) {\n      throw new TypeError(`Invalid Version: ${version}`)\n    }\n\n    this.raw = version\n\n    // these are actually numbers\n    this.major = +m[1]\n    this.minor = +m[2]\n    this.patch = +m[3]\n\n    if (this.major > MAX_SAFE_INTEGER || this.major < 0) {\n      throw new TypeError('Invalid major version')\n    }\n\n    if (this.minor > MAX_SAFE_INTEGER || this.minor < 0) {\n      throw new TypeError('Invalid minor version')\n    }\n\n    if (this.patch > MAX_SAFE_INTEGER || this.patch < 0) {\n      throw new TypeError('Invalid patch version')\n    }\n\n    // numberify any prerelease numeric ids\n    if (!m[4]) {\n      this.prerelease = []\n    } else {\n      this.prerelease = m[4].split('.').map((id) => {\n        if (/^[0-9]+$/.test(id)) {\n          const num = +id\n          if (num >= 0 && num < MAX_SAFE_INTEGER) {\n            return num\n          }\n        }\n        return id\n      })\n    }\n\n    this.build = m[5] ? m[5].split('.') : []\n    this.format()\n  }\n\n  format () {\n    this.version = `${this.major}.${this.minor}.${this.patch}`\n    if (this.prerelease.length) {\n      this.version += `-${this.prerelease.join('.')}`\n    }\n    return this.version\n  }\n\n  toString () {\n    return this.version\n  }\n\n  compare (other) {\n    debug('SemVer.compare', this.version, this.options, other)\n    if (!(other instanceof SemVer)) {\n      if (typeof other === 'string' && other === this.version) {\n        return 0\n      }\n      other = new SemVer(other, this.options)\n    }\n\n    if (other.version === this.version) {\n      return 0\n    }\n\n    return this.compareMain(other) || this.comparePre(other)\n  }\n\n  compareMain (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    return (\n      compareIdentifiers(this.major, other.major) ||\n      compareIdentifiers(this.minor, other.minor) ||\n      compareIdentifiers(this.patch, other.patch)\n    )\n  }\n\n  comparePre (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    // NOT having a prerelease is > having one\n    if (this.prerelease.length && !other.prerelease.length) {\n      return -1\n    } else if (!this.prerelease.length && other.prerelease.length) {\n      return 1\n    } else if (!this.prerelease.length && !other.prerelease.length) {\n      return 0\n    }\n\n    let i = 0\n    do {\n      const a = this.prerelease[i]\n      const b = other.prerelease[i]\n      debug('prerelease compare', i, a, b)\n      if (a === undefined && b === undefined) {\n        return 0\n      } else if (b === undefined) {\n        return 1\n      } else if (a === undefined) {\n        return -1\n      } else if (a === b) {\n        continue\n      } else {\n        return compareIdentifiers(a, b)\n      }\n    } while (++i)\n  }\n\n  compareBuild (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    let i = 0\n    do {\n      const a = this.build[i]\n      const b = other.build[i]\n      debug('prerelease compare', i, a, b)\n      if (a === undefined && b === undefined) {\n        return 0\n      } else if (b === undefined) {\n        return 1\n      } else if (a === undefined) {\n        return -1\n      } else if (a === b) {\n        continue\n      } else {\n        return compareIdentifiers(a, b)\n      }\n    } while (++i)\n  }\n\n  // preminor will bump the version up to the next minor release, and immediately\n  // down to pre-release. premajor and prepatch work the same way.\n  inc (release, identifier, identifierBase) {\n    switch (release) {\n      case 'premajor':\n        this.prerelease.length = 0\n        this.patch = 0\n        this.minor = 0\n        this.major++\n        this.inc('pre', identifier, identifierBase)\n        break\n      case 'preminor':\n        this.prerelease.length = 0\n        this.patch = 0\n        this.minor++\n        this.inc('pre', identifier, identifierBase)\n        break\n      case 'prepatch':\n        // If this is already a prerelease, it will bump to the next version\n        // drop any prereleases that might already exist, since they are not\n        // relevant at this point.\n        this.prerelease.length = 0\n        this.inc('patch', identifier, identifierBase)\n        this.inc('pre', identifier, identifierBase)\n        break\n      // If the input is a non-prerelease version, this acts the same as\n      // prepatch.\n      case 'prerelease':\n        if (this.prerelease.length === 0) {\n          this.inc('patch', identifier, identifierBase)\n        }\n        this.inc('pre', identifier, identifierBase)\n        break\n\n      case 'major':\n        // If this is a pre-major version, bump up to the same major version.\n        // Otherwise increment major.\n        // 1.0.0-5 bumps to 1.0.0\n        // 1.1.0 bumps to 2.0.0\n        if (\n          this.minor !== 0 ||\n          this.patch !== 0 ||\n          this.prerelease.length === 0\n        ) {\n          this.major++\n        }\n        this.minor = 0\n        this.patch = 0\n        this.prerelease = []\n        break\n      case 'minor':\n        // If this is a pre-minor version, bump up to the same minor version.\n        // Otherwise increment minor.\n        // 1.2.0-5 bumps to 1.2.0\n        // 1.2.1 bumps to 1.3.0\n        if (this.patch !== 0 || this.prerelease.length === 0) {\n          this.minor++\n        }\n        this.patch = 0\n        this.prerelease = []\n        break\n      case 'patch':\n        // If this is not a pre-release version, it will increment the patch.\n        // If it is a pre-release it will bump up to the same patch version.\n        // 1.2.0-5 patches to 1.2.0\n        // 1.2.0 patches to 1.2.1\n        if (this.prerelease.length === 0) {\n          this.patch++\n        }\n        this.prerelease = []\n        break\n      // This probably shouldn't be used publicly.\n      // 1.0.0 'pre' would become 1.0.0-0 which is the wrong direction.\n      case 'pre': {\n        const base = Number(identifierBase) ? 1 : 0\n\n        if (!identifier && identifierBase === false) {\n          throw new Error('invalid increment argument: identifier is empty')\n        }\n\n        if (this.prerelease.length === 0) {\n          this.prerelease = [base]\n        } else {\n          let i = this.prerelease.length\n          while (--i >= 0) {\n            if (typeof this.prerelease[i] === 'number') {\n              this.prerelease[i]++\n              i = -2\n            }\n          }\n          if (i === -1) {\n            // didn't increment anything\n            if (identifier === this.prerelease.join('.') && identifierBase === false) {\n              throw new Error('invalid increment argument: identifier already exists')\n            }\n            this.prerelease.push(base)\n          }\n        }\n        if (identifier) {\n          // 1.2.0-beta.1 bumps to 1.2.0-beta.2,\n          // 1.2.0-beta.fooblz or 1.2.0-beta bumps to 1.2.0-beta.0\n          let prerelease = [identifier, base]\n          if (identifierBase === false) {\n            prerelease = [identifier]\n          }\n          if (compareIdentifiers(this.prerelease[0], identifier) === 0) {\n            if (isNaN(this.prerelease[1])) {\n              this.prerelease = prerelease\n            }\n          } else {\n            this.prerelease = prerelease\n          }\n        }\n        break\n      }\n      default:\n        throw new Error(`invalid increment argument: ${release}`)\n    }\n    this.raw = this.format()\n    if (this.build.length) {\n      this.raw += `+${this.build.join('.')}`\n    }\n    return this\n  }\n}\n\nmodule.exports = SemVer\n", "const SemVer = require('../classes/semver')\nconst parse = (version, options, throwErrors = false) => {\n  if (version instanceof SemVer) {\n    return version\n  }\n  try {\n    return new SemVer(version, options)\n  } catch (er) {\n    if (!throwErrors) {\n      return null\n    }\n    throw er\n  }\n}\n\nmodule.exports = parse\n", "'use strict'\nmodule.exports = function (Yallist) {\n  Yallist.prototype[Symbol.iterator] = function* () {\n    for (let walker = this.head; walker; walker = walker.next) {\n      yield walker.value\n    }\n  }\n}\n", "'use strict'\nmodule.exports = Yallist\n\nYallist.Node = Node\nYallist.create = Yallist\n\nfunction Yallist (list) {\n  var self = this\n  if (!(self instanceof Yallist)) {\n    self = new Yallist()\n  }\n\n  self.tail = null\n  self.head = null\n  self.length = 0\n\n  if (list && typeof list.forEach === 'function') {\n    list.forEach(function (item) {\n      self.push(item)\n    })\n  } else if (arguments.length > 0) {\n    for (var i = 0, l = arguments.length; i < l; i++) {\n      self.push(arguments[i])\n    }\n  }\n\n  return self\n}\n\nYallist.prototype.removeNode = function (node) {\n  if (node.list !== this) {\n    throw new Error('removing node which does not belong to this list')\n  }\n\n  var next = node.next\n  var prev = node.prev\n\n  if (next) {\n    next.prev = prev\n  }\n\n  if (prev) {\n    prev.next = next\n  }\n\n  if (node === this.head) {\n    this.head = next\n  }\n  if (node === this.tail) {\n    this.tail = prev\n  }\n\n  node.list.length--\n  node.next = null\n  node.prev = null\n  node.list = null\n\n  return next\n}\n\nYallist.prototype.unshiftNode = function (node) {\n  if (node === this.head) {\n    return\n  }\n\n  if (node.list) {\n    node.list.removeNode(node)\n  }\n\n  var head = this.head\n  node.list = this\n  node.next = head\n  if (head) {\n    head.prev = node\n  }\n\n  this.head = node\n  if (!this.tail) {\n    this.tail = node\n  }\n  this.length++\n}\n\nYallist.prototype.pushNode = function (node) {\n  if (node === this.tail) {\n    return\n  }\n\n  if (node.list) {\n    node.list.removeNode(node)\n  }\n\n  var tail = this.tail\n  node.list = this\n  node.prev = tail\n  if (tail) {\n    tail.next = node\n  }\n\n  this.tail = node\n  if (!this.head) {\n    this.head = node\n  }\n  this.length++\n}\n\nYallist.prototype.push = function () {\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    push(this, arguments[i])\n  }\n  return this.length\n}\n\nYallist.prototype.unshift = function () {\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    unshift(this, arguments[i])\n  }\n  return this.length\n}\n\nYallist.prototype.pop = function () {\n  if (!this.tail) {\n    return undefined\n  }\n\n  var res = this.tail.value\n  this.tail = this.tail.prev\n  if (this.tail) {\n    this.tail.next = null\n  } else {\n    this.head = null\n  }\n  this.length--\n  return res\n}\n\nYallist.prototype.shift = function () {\n  if (!this.head) {\n    return undefined\n  }\n\n  var res = this.head.value\n  this.head = this.head.next\n  if (this.head) {\n    this.head.prev = null\n  } else {\n    this.tail = null\n  }\n  this.length--\n  return res\n}\n\nYallist.prototype.forEach = function (fn, thisp) {\n  thisp = thisp || this\n  for (var walker = this.head, i = 0; walker !== null; i++) {\n    fn.call(thisp, walker.value, i, this)\n    walker = walker.next\n  }\n}\n\nYallist.prototype.forEachReverse = function (fn, thisp) {\n  thisp = thisp || this\n  for (var walker = this.tail, i = this.length - 1; walker !== null; i--) {\n    fn.call(thisp, walker.value, i, this)\n    walker = walker.prev\n  }\n}\n\nYallist.prototype.get = function (n) {\n  for (var i = 0, walker = this.head; walker !== null && i < n; i++) {\n    // abort out of the list early if we hit a cycle\n    walker = walker.next\n  }\n  if (i === n && walker !== null) {\n    return walker.value\n  }\n}\n\nYallist.prototype.getReverse = function (n) {\n  for (var i = 0, walker = this.tail; walker !== null && i < n; i++) {\n    // abort out of the list early if we hit a cycle\n    walker = walker.prev\n  }\n  if (i === n && walker !== null) {\n    return walker.value\n  }\n}\n\nYallist.prototype.map = function (fn, thisp) {\n  thisp = thisp || this\n  var res = new Yallist()\n  for (var walker = this.head; walker !== null;) {\n    res.push(fn.call(thisp, walker.value, this))\n    walker = walker.next\n  }\n  return res\n}\n\nYallist.prototype.mapReverse = function (fn, thisp) {\n  thisp = thisp || this\n  var res = new Yallist()\n  for (var walker = this.tail; walker !== null;) {\n    res.push(fn.call(thisp, walker.value, this))\n    walker = walker.prev\n  }\n  return res\n}\n\nYallist.prototype.reduce = function (fn, initial) {\n  var acc\n  var walker = this.head\n  if (arguments.length > 1) {\n    acc = initial\n  } else if (this.head) {\n    walker = this.head.next\n    acc = this.head.value\n  } else {\n    throw new TypeError('Reduce of empty list with no initial value')\n  }\n\n  for (var i = 0; walker !== null; i++) {\n    acc = fn(acc, walker.value, i)\n    walker = walker.next\n  }\n\n  return acc\n}\n\nYallist.prototype.reduceReverse = function (fn, initial) {\n  var acc\n  var walker = this.tail\n  if (arguments.length > 1) {\n    acc = initial\n  } else if (this.tail) {\n    walker = this.tail.prev\n    acc = this.tail.value\n  } else {\n    throw new TypeError('Reduce of empty list with no initial value')\n  }\n\n  for (var i = this.length - 1; walker !== null; i--) {\n    acc = fn(acc, walker.value, i)\n    walker = walker.prev\n  }\n\n  return acc\n}\n\nYallist.prototype.toArray = function () {\n  var arr = new Array(this.length)\n  for (var i = 0, walker = this.head; walker !== null; i++) {\n    arr[i] = walker.value\n    walker = walker.next\n  }\n  return arr\n}\n\nYallist.prototype.toArrayReverse = function () {\n  var arr = new Array(this.length)\n  for (var i = 0, walker = this.tail; walker !== null; i++) {\n    arr[i] = walker.value\n    walker = walker.prev\n  }\n  return arr\n}\n\nYallist.prototype.slice = function (from, to) {\n  to = to || this.length\n  if (to < 0) {\n    to += this.length\n  }\n  from = from || 0\n  if (from < 0) {\n    from += this.length\n  }\n  var ret = new Yallist()\n  if (to < from || to < 0) {\n    return ret\n  }\n  if (from < 0) {\n    from = 0\n  }\n  if (to > this.length) {\n    to = this.length\n  }\n  for (var i = 0, walker = this.head; walker !== null && i < from; i++) {\n    walker = walker.next\n  }\n  for (; walker !== null && i < to; i++, walker = walker.next) {\n    ret.push(walker.value)\n  }\n  return ret\n}\n\nYallist.prototype.sliceReverse = function (from, to) {\n  to = to || this.length\n  if (to < 0) {\n    to += this.length\n  }\n  from = from || 0\n  if (from < 0) {\n    from += this.length\n  }\n  var ret = new Yallist()\n  if (to < from || to < 0) {\n    return ret\n  }\n  if (from < 0) {\n    from = 0\n  }\n  if (to > this.length) {\n    to = this.length\n  }\n  for (var i = this.length, walker = this.tail; walker !== null && i > to; i--) {\n    walker = walker.prev\n  }\n  for (; walker !== null && i > from; i--, walker = walker.prev) {\n    ret.push(walker.value)\n  }\n  return ret\n}\n\nYallist.prototype.splice = function (start, deleteCount, ...nodes) {\n  if (start > this.length) {\n    start = this.length - 1\n  }\n  if (start < 0) {\n    start = this.length + start;\n  }\n\n  for (var i = 0, walker = this.head; walker !== null && i < start; i++) {\n    walker = walker.next\n  }\n\n  var ret = []\n  for (var i = 0; walker && i < deleteCount; i++) {\n    ret.push(walker.value)\n    walker = this.removeNode(walker)\n  }\n  if (walker === null) {\n    walker = this.tail\n  }\n\n  if (walker !== this.head && walker !== this.tail) {\n    walker = walker.prev\n  }\n\n  for (var i = 0; i < nodes.length; i++) {\n    walker = insert(this, walker, nodes[i])\n  }\n  return ret;\n}\n\nYallist.prototype.reverse = function () {\n  var head = this.head\n  var tail = this.tail\n  for (var walker = head; walker !== null; walker = walker.prev) {\n    var p = walker.prev\n    walker.prev = walker.next\n    walker.next = p\n  }\n  this.head = tail\n  this.tail = head\n  return this\n}\n\nfunction insert (self, node, value) {\n  var inserted = node === self.head ?\n    new Node(value, null, node, self) :\n    new Node(value, node, node.next, self)\n\n  if (inserted.next === null) {\n    self.tail = inserted\n  }\n  if (inserted.prev === null) {\n    self.head = inserted\n  }\n\n  self.length++\n\n  return inserted\n}\n\nfunction push (self, item) {\n  self.tail = new Node(item, self.tail, null, self)\n  if (!self.head) {\n    self.head = self.tail\n  }\n  self.length++\n}\n\nfunction unshift (self, item) {\n  self.head = new Node(item, null, self.head, self)\n  if (!self.tail) {\n    self.tail = self.head\n  }\n  self.length++\n}\n\nfunction Node (value, prev, next, list) {\n  if (!(this instanceof Node)) {\n    return new Node(value, prev, next, list)\n  }\n\n  this.list = list\n  this.value = value\n\n  if (prev) {\n    prev.next = this\n    this.prev = prev\n  } else {\n    this.prev = null\n  }\n\n  if (next) {\n    next.prev = this\n    this.next = next\n  } else {\n    this.next = null\n  }\n}\n\ntry {\n  // add if support for Symbol.iterator is present\n  require('./iterator.js')(Yallist)\n} catch (er) {}\n", "'use strict'\n\n// A linked list to keep track of recently-used-ness\nconst Yallist = require('yallist')\n\nconst MAX = Symbol('max')\nconst LENGTH = Symbol('length')\nconst LENGTH_CALCULATOR = Symbol('lengthCalculator')\nconst ALLOW_STALE = Symbol('allowStale')\nconst MAX_AGE = Symbol('maxAge')\nconst DISPOSE = Symbol('dispose')\nconst NO_DISPOSE_ON_SET = Symbol('noDisposeOnSet')\nconst LRU_LIST = Symbol('lruList')\nconst CACHE = Symbol('cache')\nconst UPDATE_AGE_ON_GET = Symbol('updateAgeOnGet')\n\nconst naiveLength = () => 1\n\n// lruList is a yallist where the head is the youngest\n// item, and the tail is the oldest.  the list contains the Hit\n// objects as the entries.\n// Each Hit object has a reference to its Yallist.Node.  This\n// never changes.\n//\n// cache is a Map (or PseudoMap) that matches the keys to\n// the Yallist.Node object.\nclass LRUCache {\n  constructor (options) {\n    if (typeof options === 'number')\n      options = { max: options }\n\n    if (!options)\n      options = {}\n\n    if (options.max && (typeof options.max !== 'number' || options.max < 0))\n      throw new TypeError('max must be a non-negative number')\n    // Kind of weird to have a default max of Infinity, but oh well.\n    const max = this[MAX] = options.max || Infinity\n\n    const lc = options.length || naiveLength\n    this[LENGTH_CALCULATOR] = (typeof lc !== 'function') ? naiveLength : lc\n    this[ALLOW_STALE] = options.stale || false\n    if (options.maxAge && typeof options.maxAge !== 'number')\n      throw new TypeError('maxAge must be a number')\n    this[MAX_AGE] = options.maxAge || 0\n    this[DISPOSE] = options.dispose\n    this[NO_DISPOSE_ON_SET] = options.noDisposeOnSet || false\n    this[UPDATE_AGE_ON_GET] = options.updateAgeOnGet || false\n    this.reset()\n  }\n\n  // resize the cache when the max changes.\n  set max (mL) {\n    if (typeof mL !== 'number' || mL < 0)\n      throw new TypeError('max must be a non-negative number')\n\n    this[MAX] = mL || Infinity\n    trim(this)\n  }\n  get max () {\n    return this[MAX]\n  }\n\n  set allowStale (allowStale) {\n    this[ALLOW_STALE] = !!allowStale\n  }\n  get allowStale () {\n    return this[ALLOW_STALE]\n  }\n\n  set maxAge (mA) {\n    if (typeof mA !== 'number')\n      throw new TypeError('maxAge must be a non-negative number')\n\n    this[MAX_AGE] = mA\n    trim(this)\n  }\n  get maxAge () {\n    return this[MAX_AGE]\n  }\n\n  // resize the cache when the lengthCalculator changes.\n  set lengthCalculator (lC) {\n    if (typeof lC !== 'function')\n      lC = naiveLength\n\n    if (lC !== this[LENGTH_CALCULATOR]) {\n      this[LENGTH_CALCULATOR] = lC\n      this[LENGTH] = 0\n      this[LRU_LIST].forEach(hit => {\n        hit.length = this[LENGTH_CALCULATOR](hit.value, hit.key)\n        this[LENGTH] += hit.length\n      })\n    }\n    trim(this)\n  }\n  get lengthCalculator () { return this[LENGTH_CALCULATOR] }\n\n  get length () { return this[LENGTH] }\n  get itemCount () { return this[LRU_LIST].length }\n\n  rforEach (fn, thisp) {\n    thisp = thisp || this\n    for (let walker = this[LRU_LIST].tail; walker !== null;) {\n      const prev = walker.prev\n      forEachStep(this, fn, walker, thisp)\n      walker = prev\n    }\n  }\n\n  forEach (fn, thisp) {\n    thisp = thisp || this\n    for (let walker = this[LRU_LIST].head; walker !== null;) {\n      const next = walker.next\n      forEachStep(this, fn, walker, thisp)\n      walker = next\n    }\n  }\n\n  keys () {\n    return this[LRU_LIST].toArray().map(k => k.key)\n  }\n\n  values () {\n    return this[LRU_LIST].toArray().map(k => k.value)\n  }\n\n  reset () {\n    if (this[DISPOSE] &&\n        this[LRU_LIST] &&\n        this[LRU_LIST].length) {\n      this[LRU_LIST].forEach(hit => this[DISPOSE](hit.key, hit.value))\n    }\n\n    this[CACHE] = new Map() // hash of items by key\n    this[LRU_LIST] = new Yallist() // list of items in order of use recency\n    this[LENGTH] = 0 // length of items in the list\n  }\n\n  dump () {\n    return this[LRU_LIST].map(hit =>\n      isStale(this, hit) ? false : {\n        k: hit.key,\n        v: hit.value,\n        e: hit.now + (hit.maxAge || 0)\n      }).toArray().filter(h => h)\n  }\n\n  dumpLru () {\n    return this[LRU_LIST]\n  }\n\n  set (key, value, maxAge) {\n    maxAge = maxAge || this[MAX_AGE]\n\n    if (maxAge && typeof maxAge !== 'number')\n      throw new TypeError('maxAge must be a number')\n\n    const now = maxAge ? Date.now() : 0\n    const len = this[LENGTH_CALCULATOR](value, key)\n\n    if (this[CACHE].has(key)) {\n      if (len > this[MAX]) {\n        del(this, this[CACHE].get(key))\n        return false\n      }\n\n      const node = this[CACHE].get(key)\n      const item = node.value\n\n      // dispose of the old one before overwriting\n      // split out into 2 ifs for better coverage tracking\n      if (this[DISPOSE]) {\n        if (!this[NO_DISPOSE_ON_SET])\n          this[DISPOSE](key, item.value)\n      }\n\n      item.now = now\n      item.maxAge = maxAge\n      item.value = value\n      this[LENGTH] += len - item.length\n      item.length = len\n      this.get(key)\n      trim(this)\n      return true\n    }\n\n    const hit = new Entry(key, value, len, now, maxAge)\n\n    // oversized objects fall out of cache automatically.\n    if (hit.length > this[MAX]) {\n      if (this[DISPOSE])\n        this[DISPOSE](key, value)\n\n      return false\n    }\n\n    this[LENGTH] += hit.length\n    this[LRU_LIST].unshift(hit)\n    this[CACHE].set(key, this[LRU_LIST].head)\n    trim(this)\n    return true\n  }\n\n  has (key) {\n    if (!this[CACHE].has(key)) return false\n    const hit = this[CACHE].get(key).value\n    return !isStale(this, hit)\n  }\n\n  get (key) {\n    return get(this, key, true)\n  }\n\n  peek (key) {\n    return get(this, key, false)\n  }\n\n  pop () {\n    const node = this[LRU_LIST].tail\n    if (!node)\n      return null\n\n    del(this, node)\n    return node.value\n  }\n\n  del (key) {\n    del(this, this[CACHE].get(key))\n  }\n\n  load (arr) {\n    // reset the cache\n    this.reset()\n\n    const now = Date.now()\n    // A previous serialized cache has the most recent items first\n    for (let l = arr.length - 1; l >= 0; l--) {\n      const hit = arr[l]\n      const expiresAt = hit.e || 0\n      if (expiresAt === 0)\n        // the item was created without expiration in a non aged cache\n        this.set(hit.k, hit.v)\n      else {\n        const maxAge = expiresAt - now\n        // dont add already expired items\n        if (maxAge > 0) {\n          this.set(hit.k, hit.v, maxAge)\n        }\n      }\n    }\n  }\n\n  prune () {\n    this[CACHE].forEach((value, key) => get(this, key, false))\n  }\n}\n\nconst get = (self, key, doUse) => {\n  const node = self[CACHE].get(key)\n  if (node) {\n    const hit = node.value\n    if (isStale(self, hit)) {\n      del(self, node)\n      if (!self[ALLOW_STALE])\n        return undefined\n    } else {\n      if (doUse) {\n        if (self[UPDATE_AGE_ON_GET])\n          node.value.now = Date.now()\n        self[LRU_LIST].unshiftNode(node)\n      }\n    }\n    return hit.value\n  }\n}\n\nconst isStale = (self, hit) => {\n  if (!hit || (!hit.maxAge && !self[MAX_AGE]))\n    return false\n\n  const diff = Date.now() - hit.now\n  return hit.maxAge ? diff > hit.maxAge\n    : self[MAX_AGE] && (diff > self[MAX_AGE])\n}\n\nconst trim = self => {\n  if (self[LENGTH] > self[MAX]) {\n    for (let walker = self[LRU_LIST].tail;\n      self[LENGTH] > self[MAX] && walker !== null;) {\n      // We know that we're about to delete this one, and also\n      // what the next least recently used key will be, so just\n      // go ahead and set it now.\n      const prev = walker.prev\n      del(self, walker)\n      walker = prev\n    }\n  }\n}\n\nconst del = (self, node) => {\n  if (node) {\n    const hit = node.value\n    if (self[DISPOSE])\n      self[DISPOSE](hit.key, hit.value)\n\n    self[LENGTH] -= hit.length\n    self[CACHE].delete(hit.key)\n    self[LRU_LIST].removeNode(node)\n  }\n}\n\nclass Entry {\n  constructor (key, value, length, now, maxAge) {\n    this.key = key\n    this.value = value\n    this.length = length\n    this.now = now\n    this.maxAge = maxAge || 0\n  }\n}\n\nconst forEachStep = (self, fn, node, thisp) => {\n  let hit = node.value\n  if (isStale(self, hit)) {\n    del(self, node)\n    if (!self[ALLOW_STALE])\n      hit = undefined\n  }\n  if (hit)\n    fn.call(thisp, hit.value, hit.key, self)\n}\n\nmodule.exports = LRUCache\n", "const SemVer = require('../classes/semver')\nconst compare = (a, b, loose) =>\n  new SemVer(a, loose).compare(new SemVer(b, loose))\n\nmodule.exports = compare\n", "const compare = require('./compare')\nconst eq = (a, b, loose) => compare(a, b, loose) === 0\nmodule.exports = eq\n", "const compare = require('./compare')\nconst neq = (a, b, loose) => compare(a, b, loose) !== 0\nmodule.exports = neq\n", "const compare = require('./compare')\nconst gt = (a, b, loose) => compare(a, b, loose) > 0\nmodule.exports = gt\n", "const compare = require('./compare')\nconst gte = (a, b, loose) => compare(a, b, loose) >= 0\nmodule.exports = gte\n", "const compare = require('./compare')\nconst lt = (a, b, loose) => compare(a, b, loose) < 0\nmodule.exports = lt\n", "const compare = require('./compare')\nconst lte = (a, b, loose) => compare(a, b, loose) <= 0\nmodule.exports = lte\n", "const eq = require('./eq')\nconst neq = require('./neq')\nconst gt = require('./gt')\nconst gte = require('./gte')\nconst lt = require('./lt')\nconst lte = require('./lte')\n\nconst cmp = (a, op, b, loose) => {\n  switch (op) {\n    case '===':\n      if (typeof a === 'object') {\n        a = a.version\n      }\n      if (typeof b === 'object') {\n        b = b.version\n      }\n      return a === b\n\n    case '!==':\n      if (typeof a === 'object') {\n        a = a.version\n      }\n      if (typeof b === 'object') {\n        b = b.version\n      }\n      return a !== b\n\n    case '':\n    case '=':\n    case '==':\n      return eq(a, b, loose)\n\n    case '!=':\n      return neq(a, b, loose)\n\n    case '>':\n      return gt(a, b, loose)\n\n    case '>=':\n      return gte(a, b, loose)\n\n    case '<':\n      return lt(a, b, loose)\n\n    case '<=':\n      return lte(a, b, loose)\n\n    default:\n      throw new TypeError(`Invalid operator: ${op}`)\n  }\n}\nmodule.exports = cmp\n", "const ANY = Symbol('SemVer ANY')\n// hoisted class for cyclic dependency\nclass Comparator {\n  static get ANY () {\n    return ANY\n  }\n\n  constructor (comp, options) {\n    options = parseOptions(options)\n\n    if (comp instanceof Comparator) {\n      if (comp.loose === !!options.loose) {\n        return comp\n      } else {\n        comp = comp.value\n      }\n    }\n\n    comp = comp.trim().split(/\\s+/).join(' ')\n    debug('comparator', comp, options)\n    this.options = options\n    this.loose = !!options.loose\n    this.parse(comp)\n\n    if (this.semver === ANY) {\n      this.value = ''\n    } else {\n      this.value = this.operator + this.semver.version\n    }\n\n    debug('comp', this)\n  }\n\n  parse (comp) {\n    const r = this.options.loose ? re[t.COMPARATORLOOSE] : re[t.COMPARATOR]\n    const m = comp.match(r)\n\n    if (!m) {\n      throw new TypeError(`Invalid comparator: ${comp}`)\n    }\n\n    this.operator = m[1] !== undefined ? m[1] : ''\n    if (this.operator === '=') {\n      this.operator = ''\n    }\n\n    // if it literally is just '>' or '' then allow anything.\n    if (!m[2]) {\n      this.semver = ANY\n    } else {\n      this.semver = new SemVer(m[2], this.options.loose)\n    }\n  }\n\n  toString () {\n    return this.value\n  }\n\n  test (version) {\n    debug('Comparator.test', version, this.options.loose)\n\n    if (this.semver === ANY || version === ANY) {\n      return true\n    }\n\n    if (typeof version === 'string') {\n      try {\n        version = new SemVer(version, this.options)\n      } catch (er) {\n        return false\n      }\n    }\n\n    return cmp(version, this.operator, this.semver, this.options)\n  }\n\n  intersects (comp, options) {\n    if (!(comp instanceof Comparator)) {\n      throw new TypeError('a Comparator is required')\n    }\n\n    if (this.operator === '') {\n      if (this.value === '') {\n        return true\n      }\n      return new Range(comp.value, options).test(this.value)\n    } else if (comp.operator === '') {\n      if (comp.value === '') {\n        return true\n      }\n      return new Range(this.value, options).test(comp.semver)\n    }\n\n    options = parseOptions(options)\n\n    // Special cases where nothing can possibly be lower\n    if (options.includePrerelease &&\n      (this.value === '<0.0.0-0' || comp.value === '<0.0.0-0')) {\n      return false\n    }\n    if (!options.includePrerelease &&\n      (this.value.startsWith('<0.0.0') || comp.value.startsWith('<0.0.0'))) {\n      return false\n    }\n\n    // Same direction increasing (> or >=)\n    if (this.operator.startsWith('>') && comp.operator.startsWith('>')) {\n      return true\n    }\n    // Same direction decreasing (< or <=)\n    if (this.operator.startsWith('<') && comp.operator.startsWith('<')) {\n      return true\n    }\n    // same SemVer and both sides are inclusive (<= or >=)\n    if (\n      (this.semver.version === comp.semver.version) &&\n      this.operator.includes('=') && comp.operator.includes('=')) {\n      return true\n    }\n    // opposite directions less than\n    if (cmp(this.semver, '<', comp.semver, options) &&\n      this.operator.startsWith('>') && comp.operator.startsWith('<')) {\n      return true\n    }\n    // opposite directions greater than\n    if (cmp(this.semver, '>', comp.semver, options) &&\n      this.operator.startsWith('<') && comp.operator.startsWith('>')) {\n      return true\n    }\n    return false\n  }\n}\n\nmodule.exports = Comparator\n\nconst parseOptions = require('../internal/parse-options')\nconst { safeRe: re, t } = require('../internal/re')\nconst cmp = require('../functions/cmp')\nconst debug = require('../internal/debug')\nconst SemVer = require('./semver')\nconst Range = require('./range')\n", "// hoisted class for cyclic dependency\nclass Range {\n  constructor (range, options) {\n    options = parseOptions(options)\n\n    if (range instanceof Range) {\n      if (\n        range.loose === !!options.loose &&\n        range.includePrerelease === !!options.includePrerelease\n      ) {\n        return range\n      } else {\n        return new Range(range.raw, options)\n      }\n    }\n\n    if (range instanceof Comparator) {\n      // just put it in the set and return\n      this.raw = range.value\n      this.set = [[range]]\n      this.format()\n      return this\n    }\n\n    this.options = options\n    this.loose = !!options.loose\n    this.includePrerelease = !!options.includePrerelease\n\n    // First reduce all whitespace as much as possible so we do not have to rely\n    // on potentially slow regexes like \\s*. This is then stored and used for\n    // future error messages as well.\n    this.raw = range\n      .trim()\n      .split(/\\s+/)\n      .join(' ')\n\n    // First, split on ||\n    this.set = this.raw\n      .split('||')\n      // map the range to a 2d array of comparators\n      .map(r => this.parseRange(r.trim()))\n      // throw out any comparator lists that are empty\n      // this generally means that it was not a valid range, which is allowed\n      // in loose mode, but will still throw if the WHOLE range is invalid.\n      .filter(c => c.length)\n\n    if (!this.set.length) {\n      throw new TypeError(`Invalid SemVer Range: ${this.raw}`)\n    }\n\n    // if we have any that are not the null set, throw out null sets.\n    if (this.set.length > 1) {\n      // keep the first one, in case they're all null sets\n      const first = this.set[0]\n      this.set = this.set.filter(c => !isNullSet(c[0]))\n      if (this.set.length === 0) {\n        this.set = [first]\n      } else if (this.set.length > 1) {\n        // if we have any that are *, then the range is just *\n        for (const c of this.set) {\n          if (c.length === 1 && isAny(c[0])) {\n            this.set = [c]\n            break\n          }\n        }\n      }\n    }\n\n    this.format()\n  }\n\n  format () {\n    this.range = this.set\n      .map((comps) => comps.join(' ').trim())\n      .join('||')\n      .trim()\n    return this.range\n  }\n\n  toString () {\n    return this.range\n  }\n\n  parseRange (range) {\n    // memoize range parsing for performance.\n    // this is a very hot path, and fully deterministic.\n    const memoOpts =\n      (this.options.includePrerelease && FLAG_INCLUDE_PRERELEASE) |\n      (this.options.loose && FLAG_LOOSE)\n    const memoKey = memoOpts + ':' + range\n    const cached = cache.get(memoKey)\n    if (cached) {\n      return cached\n    }\n\n    const loose = this.options.loose\n    // `1.2.3 - 1.2.4` => `>=1.2.3 <=1.2.4`\n    const hr = loose ? re[t.HYPHENRANGELOOSE] : re[t.HYPHENRANGE]\n    range = range.replace(hr, hyphenReplace(this.options.includePrerelease))\n    debug('hyphen replace', range)\n\n    // `> 1.2.3 < 1.2.5` => `>1.2.3 <1.2.5`\n    range = range.replace(re[t.COMPARATORTRIM], comparatorTrimReplace)\n    debug('comparator trim', range)\n\n    // `~ 1.2.3` => `~1.2.3`\n    range = range.replace(re[t.TILDETRIM], tildeTrimReplace)\n    debug('tilde trim', range)\n\n    // `^ 1.2.3` => `^1.2.3`\n    range = range.replace(re[t.CARETTRIM], caretTrimReplace)\n    debug('caret trim', range)\n\n    // At this point, the range is completely trimmed and\n    // ready to be split into comparators.\n\n    let rangeList = range\n      .split(' ')\n      .map(comp => parseComparator(comp, this.options))\n      .join(' ')\n      .split(/\\s+/)\n      // >=0.0.0 is equivalent to *\n      .map(comp => replaceGTE0(comp, this.options))\n\n    if (loose) {\n      // in loose mode, throw out any that are not valid comparators\n      rangeList = rangeList.filter(comp => {\n        debug('loose invalid filter', comp, this.options)\n        return !!comp.match(re[t.COMPARATORLOOSE])\n      })\n    }\n    debug('range list', rangeList)\n\n    // if any comparators are the null set, then replace with JUST null set\n    // if more than one comparator, remove any * comparators\n    // also, don't include the same comparator more than once\n    const rangeMap = new Map()\n    const comparators = rangeList.map(comp => new Comparator(comp, this.options))\n    for (const comp of comparators) {\n      if (isNullSet(comp)) {\n        return [comp]\n      }\n      rangeMap.set(comp.value, comp)\n    }\n    if (rangeMap.size > 1 && rangeMap.has('')) {\n      rangeMap.delete('')\n    }\n\n    const result = [...rangeMap.values()]\n    cache.set(memoKey, result)\n    return result\n  }\n\n  intersects (range, options) {\n    if (!(range instanceof Range)) {\n      throw new TypeError('a Range is required')\n    }\n\n    return this.set.some((thisComparators) => {\n      return (\n        isSatisfiable(thisComparators, options) &&\n        range.set.some((rangeComparators) => {\n          return (\n            isSatisfiable(rangeComparators, options) &&\n            thisComparators.every((thisComparator) => {\n              return rangeComparators.every((rangeComparator) => {\n                return thisComparator.intersects(rangeComparator, options)\n              })\n            })\n          )\n        })\n      )\n    })\n  }\n\n  // if ANY of the sets match ALL of its comparators, then pass\n  test (version) {\n    if (!version) {\n      return false\n    }\n\n    if (typeof version === 'string') {\n      try {\n        version = new SemVer(version, this.options)\n      } catch (er) {\n        return false\n      }\n    }\n\n    for (let i = 0; i < this.set.length; i++) {\n      if (testSet(this.set[i], version, this.options)) {\n        return true\n      }\n    }\n    return false\n  }\n}\n\nmodule.exports = Range\n\nconst LRU = require('lru-cache')\nconst cache = new LRU({ max: 1000 })\n\nconst parseOptions = require('../internal/parse-options')\nconst Comparator = require('./comparator')\nconst debug = require('../internal/debug')\nconst SemVer = require('./semver')\nconst {\n  safeRe: re,\n  t,\n  comparatorTrimReplace,\n  tildeTrimReplace,\n  caretTrimReplace,\n} = require('../internal/re')\nconst { FLAG_INCLUDE_PRERELEASE, FLAG_LOOSE } = require('../internal/constants')\n\nconst isNullSet = c => c.value === '<0.0.0-0'\nconst isAny = c => c.value === ''\n\n// take a set of comparators and determine whether there\n// exists a version which can satisfy it\nconst isSatisfiable = (comparators, options) => {\n  let result = true\n  const remainingComparators = comparators.slice()\n  let testComparator = remainingComparators.pop()\n\n  while (result && remainingComparators.length) {\n    result = remainingComparators.every((otherComparator) => {\n      return testComparator.intersects(otherComparator, options)\n    })\n\n    testComparator = remainingComparators.pop()\n  }\n\n  return result\n}\n\n// comprised of xranges, tildes, stars, and gtlt's at this point.\n// already replaced the hyphen ranges\n// turn into a set of JUST comparators.\nconst parseComparator = (comp, options) => {\n  debug('comp', comp, options)\n  comp = replaceCarets(comp, options)\n  debug('caret', comp)\n  comp = replaceTildes(comp, options)\n  debug('tildes', comp)\n  comp = replaceXRanges(comp, options)\n  debug('xrange', comp)\n  comp = replaceStars(comp, options)\n  debug('stars', comp)\n  return comp\n}\n\nconst isX = id => !id || id.toLowerCase() === 'x' || id === '*'\n\n// ~, ~> --> * (any, kinda silly)\n// ~2, ~2.x, ~2.x.x, ~>2, ~>2.x ~>2.x.x --> >=2.0.0 <3.0.0-0\n// ~2.0, ~2.0.x, ~>2.0, ~>2.0.x --> >=2.0.0 <2.1.0-0\n// ~1.2, ~1.2.x, ~>1.2, ~>1.2.x --> >=1.2.0 <1.3.0-0\n// ~1.2.3, ~>1.2.3 --> >=1.2.3 <1.3.0-0\n// ~1.2.0, ~>1.2.0 --> >=1.2.0 <1.3.0-0\n// ~0.0.1 --> >=0.0.1 <0.1.0-0\nconst replaceTildes = (comp, options) => {\n  return comp\n    .trim()\n    .split(/\\s+/)\n    .map((c) => replaceTilde(c, options))\n    .join(' ')\n}\n\nconst replaceTilde = (comp, options) => {\n  const r = options.loose ? re[t.TILDELOOSE] : re[t.TILDE]\n  return comp.replace(r, (_, M, m, p, pr) => {\n    debug('tilde', comp, _, M, m, p, pr)\n    let ret\n\n    if (isX(M)) {\n      ret = ''\n    } else if (isX(m)) {\n      ret = `>=${M}.0.0 <${+M + 1}.0.0-0`\n    } else if (isX(p)) {\n      // ~1.2 == >=1.2.0 <1.3.0-0\n      ret = `>=${M}.${m}.0 <${M}.${+m + 1}.0-0`\n    } else if (pr) {\n      debug('replaceTilde pr', pr)\n      ret = `>=${M}.${m}.${p}-${pr\n      } <${M}.${+m + 1}.0-0`\n    } else {\n      // ~1.2.3 == >=1.2.3 <1.3.0-0\n      ret = `>=${M}.${m}.${p\n      } <${M}.${+m + 1}.0-0`\n    }\n\n    debug('tilde return', ret)\n    return ret\n  })\n}\n\n// ^ --> * (any, kinda silly)\n// ^2, ^2.x, ^2.x.x --> >=2.0.0 <3.0.0-0\n// ^2.0, ^2.0.x --> >=2.0.0 <3.0.0-0\n// ^1.2, ^1.2.x --> >=1.2.0 <2.0.0-0\n// ^1.2.3 --> >=1.2.3 <2.0.0-0\n// ^1.2.0 --> >=1.2.0 <2.0.0-0\n// ^0.0.1 --> >=0.0.1 <0.0.2-0\n// ^0.1.0 --> >=0.1.0 <0.2.0-0\nconst replaceCarets = (comp, options) => {\n  return comp\n    .trim()\n    .split(/\\s+/)\n    .map((c) => replaceCaret(c, options))\n    .join(' ')\n}\n\nconst replaceCaret = (comp, options) => {\n  debug('caret', comp, options)\n  const r = options.loose ? re[t.CARETLOOSE] : re[t.CARET]\n  const z = options.includePrerelease ? '-0' : ''\n  return comp.replace(r, (_, M, m, p, pr) => {\n    debug('caret', comp, _, M, m, p, pr)\n    let ret\n\n    if (isX(M)) {\n      ret = ''\n    } else if (isX(m)) {\n      ret = `>=${M}.0.0${z} <${+M + 1}.0.0-0`\n    } else if (isX(p)) {\n      if (M === '0') {\n        ret = `>=${M}.${m}.0${z} <${M}.${+m + 1}.0-0`\n      } else {\n        ret = `>=${M}.${m}.0${z} <${+M + 1}.0.0-0`\n      }\n    } else if (pr) {\n      debug('replaceCaret pr', pr)\n      if (M === '0') {\n        if (m === '0') {\n          ret = `>=${M}.${m}.${p}-${pr\n          } <${M}.${m}.${+p + 1}-0`\n        } else {\n          ret = `>=${M}.${m}.${p}-${pr\n          } <${M}.${+m + 1}.0-0`\n        }\n      } else {\n        ret = `>=${M}.${m}.${p}-${pr\n        } <${+M + 1}.0.0-0`\n      }\n    } else {\n      debug('no pr')\n      if (M === '0') {\n        if (m === '0') {\n          ret = `>=${M}.${m}.${p\n          }${z} <${M}.${m}.${+p + 1}-0`\n        } else {\n          ret = `>=${M}.${m}.${p\n          }${z} <${M}.${+m + 1}.0-0`\n        }\n      } else {\n        ret = `>=${M}.${m}.${p\n        } <${+M + 1}.0.0-0`\n      }\n    }\n\n    debug('caret return', ret)\n    return ret\n  })\n}\n\nconst replaceXRanges = (comp, options) => {\n  debug('replaceXRanges', comp, options)\n  return comp\n    .split(/\\s+/)\n    .map((c) => replaceXRange(c, options))\n    .join(' ')\n}\n\nconst replaceXRange = (comp, options) => {\n  comp = comp.trim()\n  const r = options.loose ? re[t.XRANGELOOSE] : re[t.XRANGE]\n  return comp.replace(r, (ret, gtlt, M, m, p, pr) => {\n    debug('xRange', comp, ret, gtlt, M, m, p, pr)\n    const xM = isX(M)\n    const xm = xM || isX(m)\n    const xp = xm || isX(p)\n    const anyX = xp\n\n    if (gtlt === '=' && anyX) {\n      gtlt = ''\n    }\n\n    // if we're including prereleases in the match, then we need\n    // to fix this to -0, the lowest possible prerelease value\n    pr = options.includePrerelease ? '-0' : ''\n\n    if (xM) {\n      if (gtlt === '>' || gtlt === '<') {\n        // nothing is allowed\n        ret = '<0.0.0-0'\n      } else {\n        // nothing is forbidden\n        ret = '*'\n      }\n    } else if (gtlt && anyX) {\n      // we know patch is an x, because we have any x at all.\n      // replace X with 0\n      if (xm) {\n        m = 0\n      }\n      p = 0\n\n      if (gtlt === '>') {\n        // >1 => >=2.0.0\n        // >1.2 => >=1.3.0\n        gtlt = '>='\n        if (xm) {\n          M = +M + 1\n          m = 0\n          p = 0\n        } else {\n          m = +m + 1\n          p = 0\n        }\n      } else if (gtlt === '<=') {\n        // <=0.7.x is actually <0.8.0, since any 0.7.x should\n        // pass.  Similarly, <=7.x is actually <8.0.0, etc.\n        gtlt = '<'\n        if (xm) {\n          M = +M + 1\n        } else {\n          m = +m + 1\n        }\n      }\n\n      if (gtlt === '<') {\n        pr = '-0'\n      }\n\n      ret = `${gtlt + M}.${m}.${p}${pr}`\n    } else if (xm) {\n      ret = `>=${M}.0.0${pr} <${+M + 1}.0.0-0`\n    } else if (xp) {\n      ret = `>=${M}.${m}.0${pr\n      } <${M}.${+m + 1}.0-0`\n    }\n\n    debug('xRange return', ret)\n\n    return ret\n  })\n}\n\n// Because * is AND-ed with everything else in the comparator,\n// and '' means \"any version\", just remove the *s entirely.\nconst replaceStars = (comp, options) => {\n  debug('replaceStars', comp, options)\n  // Looseness is ignored here.  star is always as loose as it gets!\n  return comp\n    .trim()\n    .replace(re[t.STAR], '')\n}\n\nconst replaceGTE0 = (comp, options) => {\n  debug('replaceGTE0', comp, options)\n  return comp\n    .trim()\n    .replace(re[options.includePrerelease ? t.GTE0PRE : t.GTE0], '')\n}\n\n// This function is passed to string.replace(re[t.HYPHENRANGE])\n// M, m, patch, prerelease, build\n// 1.2 - 3.4.5 => >=1.2.0 <=3.4.5\n// 1.2.3 - 3.4 => >=1.2.0 <3.5.0-0 Any 3.4.x will do\n// 1.2 - 3.4 => >=1.2.0 <3.5.0-0\nconst hyphenReplace = incPr => ($0,\n  from, fM, fm, fp, fpr, fb,\n  to, tM, tm, tp, tpr, tb) => {\n  if (isX(fM)) {\n    from = ''\n  } else if (isX(fm)) {\n    from = `>=${fM}.0.0${incPr ? '-0' : ''}`\n  } else if (isX(fp)) {\n    from = `>=${fM}.${fm}.0${incPr ? '-0' : ''}`\n  } else if (fpr) {\n    from = `>=${from}`\n  } else {\n    from = `>=${from}${incPr ? '-0' : ''}`\n  }\n\n  if (isX(tM)) {\n    to = ''\n  } else if (isX(tm)) {\n    to = `<${+tM + 1}.0.0-0`\n  } else if (isX(tp)) {\n    to = `<${tM}.${+tm + 1}.0-0`\n  } else if (tpr) {\n    to = `<=${tM}.${tm}.${tp}-${tpr}`\n  } else if (incPr) {\n    to = `<${tM}.${tm}.${+tp + 1}-0`\n  } else {\n    to = `<=${to}`\n  }\n\n  return `${from} ${to}`.trim()\n}\n\nconst testSet = (set, version, options) => {\n  for (let i = 0; i < set.length; i++) {\n    if (!set[i].test(version)) {\n      return false\n    }\n  }\n\n  if (version.prerelease.length && !options.includePrerelease) {\n    // Find the set of versions that are allowed to have prereleases\n    // For example, ^1.2.3-pr.1 desugars to >=1.2.3-pr.1 <2.0.0\n    // That should allow `1.2.3-pr.2` to pass.\n    // However, `1.2.4-alpha.notready` should NOT be allowed,\n    // even though it's within the range set by the comparators.\n    for (let i = 0; i < set.length; i++) {\n      debug(set[i].semver)\n      if (set[i].semver === Comparator.ANY) {\n        continue\n      }\n\n      if (set[i].semver.prerelease.length > 0) {\n        const allowed = set[i].semver\n        if (allowed.major === version.major &&\n            allowed.minor === version.minor &&\n            allowed.patch === version.patch) {\n          return true\n        }\n      }\n    }\n\n    // Version has a -pre, but it's not one of the ones we like.\n    return false\n  }\n\n  return true\n}\n", "const Range = require('../classes/range')\nconst satisfies = (version, range, options) => {\n  try {\n    range = new Range(range, options)\n  } catch (er) {\n    return false\n  }\n  return range.test(version)\n}\nmodule.exports = satisfies\n", "\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DiagnosticPullMode = exports.vsdiag = void 0;\n__exportStar(require(\"vscode-languageserver-protocol\"), exports);\n__exportStar(require(\"./features\"), exports);\nvar diagnostic_1 = require(\"./diagnostic\");\nObject.defineProperty(exports, \"vsdiag\", { enumerable: true, get: function () { return diagnostic_1.vsdiag; } });\nObject.defineProperty(exports, \"DiagnosticPullMode\", { enumerable: true, get: function () { return diagnostic_1.DiagnosticPullMode; } });\n__exportStar(require(\"./client\"), exports);\n", "\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SettingMonitor = exports.LanguageClient = exports.TransportKind = void 0;\nconst cp = require(\"child_process\");\nconst fs = require(\"fs\");\nconst path = require(\"path\");\nconst vscode_1 = require(\"vscode\");\nconst Is = require(\"../common/utils/is\");\nconst client_1 = require(\"../common/client\");\nconst processes_1 = require(\"./processes\");\nconst node_1 = require(\"vscode-languageserver-protocol/node\");\n// Import SemVer functions individually to avoid circular dependencies in SemVer\nconst semverParse = require(\"semver/functions/parse\");\nconst semverSatisfies = require(\"semver/functions/satisfies\");\n__exportStar(require(\"vscode-languageserver-protocol/node\"), exports);\n__exportStar(require(\"../common/api\"), exports);\nconst REQUIRED_VSCODE_VERSION = '^1.82.0'; // do not change format, updated by `updateVSCode` script\nvar TransportKind;\n(function (TransportKind) {\n    TransportKind[TransportKind[\"stdio\"] = 0] = \"stdio\";\n    TransportKind[TransportKind[\"ipc\"] = 1] = \"ipc\";\n    TransportKind[TransportKind[\"pipe\"] = 2] = \"pipe\";\n    TransportKind[TransportKind[\"socket\"] = 3] = \"socket\";\n})(TransportKind || (exports.TransportKind = TransportKind = {}));\nvar Transport;\n(function (Transport) {\n    function isSocket(value) {\n        const candidate = value;\n        return candidate && candidate.kind === TransportKind.socket && Is.number(candidate.port);\n    }\n    Transport.isSocket = isSocket;\n})(Transport || (Transport = {}));\nvar Executable;\n(function (Executable) {\n    function is(value) {\n        return Is.string(value.command);\n    }\n    Executable.is = is;\n})(Executable || (Executable = {}));\nvar NodeModule;\n(function (NodeModule) {\n    function is(value) {\n        return Is.string(value.module);\n    }\n    NodeModule.is = is;\n})(NodeModule || (NodeModule = {}));\nvar StreamInfo;\n(function (StreamInfo) {\n    function is(value) {\n        let candidate = value;\n        return candidate && candidate.writer !== undefined && candidate.reader !== undefined;\n    }\n    StreamInfo.is = is;\n})(StreamInfo || (StreamInfo = {}));\nvar ChildProcessInfo;\n(function (ChildProcessInfo) {\n    function is(value) {\n        let candidate = value;\n        return candidate && candidate.process !== undefined && typeof candidate.detached === 'boolean';\n    }\n    ChildProcessInfo.is = is;\n})(ChildProcessInfo || (ChildProcessInfo = {}));\nclass LanguageClient extends client_1.BaseLanguageClient {\n    constructor(arg1, arg2, arg3, arg4, arg5) {\n        let id;\n        let name;\n        let serverOptions;\n        let clientOptions;\n        let forceDebug;\n        if (Is.string(arg2)) {\n            id = arg1;\n            name = arg2;\n            serverOptions = arg3;\n            clientOptions = arg4;\n            forceDebug = !!arg5;\n        }\n        else {\n            id = arg1.toLowerCase();\n            name = arg1;\n            serverOptions = arg2;\n            clientOptions = arg3;\n            forceDebug = arg4;\n        }\n        if (forceDebug === undefined) {\n            forceDebug = false;\n        }\n        super(id, name, clientOptions);\n        this._serverOptions = serverOptions;\n        this._forceDebug = forceDebug;\n        this._isInDebugMode = forceDebug;\n        try {\n            this.checkVersion();\n        }\n        catch (error) {\n            if (Is.string(error.message)) {\n                this.outputChannel.appendLine(error.message);\n            }\n            throw error;\n        }\n    }\n    checkVersion() {\n        const codeVersion = semverParse(vscode_1.version);\n        if (!codeVersion) {\n            throw new Error(`No valid VS Code version detected. Version string is: ${vscode_1.version}`);\n        }\n        // Remove the insider pre-release since we stay API compatible.\n        if (codeVersion.prerelease && codeVersion.prerelease.length > 0) {\n            codeVersion.prerelease = [];\n        }\n        if (!semverSatisfies(codeVersion, REQUIRED_VSCODE_VERSION)) {\n            throw new Error(`The language client requires VS Code version ${REQUIRED_VSCODE_VERSION} but received version ${vscode_1.version}`);\n        }\n    }\n    get isInDebugMode() {\n        return this._isInDebugMode;\n    }\n    async restart() {\n        await this.stop();\n        // We are in debug mode. Wait a little before we restart\n        // so that the debug port can be freed. We can safely ignore\n        // the disposable returned from start since it will call\n        // stop on the same client instance.\n        if (this.isInDebugMode) {\n            await new Promise((resolve) => setTimeout(resolve, 1000));\n            await this.start();\n        }\n        else {\n            await this.start();\n        }\n    }\n    stop(timeout = 2000) {\n        return super.stop(timeout).finally(() => {\n            if (this._serverProcess) {\n                const toCheck = this._serverProcess;\n                this._serverProcess = undefined;\n                if (this._isDetached === undefined || !this._isDetached) {\n                    this.checkProcessDied(toCheck);\n                }\n                this._isDetached = undefined;\n            }\n        });\n    }\n    checkProcessDied(childProcess) {\n        if (!childProcess || childProcess.pid === undefined) {\n            return;\n        }\n        setTimeout(() => {\n            // Test if the process is still alive. Throws an exception if not\n            try {\n                if (childProcess.pid !== undefined) {\n                    process.kill(childProcess.pid, 0);\n                    (0, processes_1.terminate)(childProcess);\n                }\n            }\n            catch (error) {\n                // All is fine.\n            }\n        }, 2000);\n    }\n    handleConnectionClosed() {\n        this._serverProcess = undefined;\n        return super.handleConnectionClosed();\n    }\n    fillInitializeParams(params) {\n        super.fillInitializeParams(params);\n        if (params.processId === null) {\n            params.processId = process.pid;\n        }\n    }\n    createMessageTransports(encoding) {\n        function getEnvironment(env, fork) {\n            if (!env && !fork) {\n                return undefined;\n            }\n            const result = Object.create(null);\n            Object.keys(process.env).forEach(key => result[key] = process.env[key]);\n            if (fork) {\n                result['ELECTRON_RUN_AS_NODE'] = '1';\n                result['ELECTRON_NO_ASAR'] = '1';\n            }\n            if (env) {\n                Object.keys(env).forEach(key => result[key] = env[key]);\n            }\n            return result;\n        }\n        const debugStartWith = ['--debug=', '--debug-brk=', '--inspect=', '--inspect-brk='];\n        const debugEquals = ['--debug', '--debug-brk', '--inspect', '--inspect-brk'];\n        function startedInDebugMode() {\n            let args = process.execArgv;\n            if (args) {\n                return args.some((arg) => {\n                    return debugStartWith.some(value => arg.startsWith(value)) ||\n                        debugEquals.some(value => arg === value);\n                });\n            }\n            return false;\n        }\n        function assertStdio(process) {\n            if (process.stdin === null || process.stdout === null || process.stderr === null) {\n                throw new Error('Process created without stdio streams');\n            }\n        }\n        const server = this._serverOptions;\n        // We got a function.\n        if (Is.func(server)) {\n            return server().then((result) => {\n                if (client_1.MessageTransports.is(result)) {\n                    this._isDetached = !!result.detached;\n                    return result;\n                }\n                else if (StreamInfo.is(result)) {\n                    this._isDetached = !!result.detached;\n                    return { reader: new node_1.StreamMessageReader(result.reader), writer: new node_1.StreamMessageWriter(result.writer) };\n                }\n                else {\n                    let cp;\n                    if (ChildProcessInfo.is(result)) {\n                        cp = result.process;\n                        this._isDetached = result.detached;\n                    }\n                    else {\n                        cp = result;\n                        this._isDetached = false;\n                    }\n                    cp.stderr.on('data', data => this.outputChannel.append(Is.string(data) ? data : data.toString(encoding)));\n                    return { reader: new node_1.StreamMessageReader(cp.stdout), writer: new node_1.StreamMessageWriter(cp.stdin) };\n                }\n            });\n        }\n        let json;\n        let runDebug = server;\n        if (runDebug.run || runDebug.debug) {\n            if (this._forceDebug || startedInDebugMode()) {\n                json = runDebug.debug;\n                this._isInDebugMode = true;\n            }\n            else {\n                json = runDebug.run;\n                this._isInDebugMode = false;\n            }\n        }\n        else {\n            json = server;\n        }\n        return this._getServerWorkingDir(json.options).then(serverWorkingDir => {\n            if (NodeModule.is(json) && json.module) {\n                let node = json;\n                let transport = node.transport || TransportKind.stdio;\n                if (node.runtime) {\n                    const args = [];\n                    const options = node.options ?? Object.create(null);\n                    if (options.execArgv) {\n                        options.execArgv.forEach(element => args.push(element));\n                    }\n                    args.push(node.module);\n                    if (node.args) {\n                        node.args.forEach(element => args.push(element));\n                    }\n                    const execOptions = Object.create(null);\n                    execOptions.cwd = serverWorkingDir;\n                    execOptions.env = getEnvironment(options.env, false);\n                    const runtime = this._getRuntimePath(node.runtime, serverWorkingDir);\n                    let pipeName = undefined;\n                    if (transport === TransportKind.ipc) {\n                        // exec options not correctly typed in lib\n                        execOptions.stdio = [null, null, null, 'ipc'];\n                        args.push('--node-ipc');\n                    }\n                    else if (transport === TransportKind.stdio) {\n                        args.push('--stdio');\n                    }\n                    else if (transport === TransportKind.pipe) {\n                        pipeName = (0, node_1.generateRandomPipeName)();\n                        args.push(`--pipe=${pipeName}`);\n                    }\n                    else if (Transport.isSocket(transport)) {\n                        args.push(`--socket=${transport.port}`);\n                    }\n                    args.push(`--clientProcessId=${process.pid.toString()}`);\n                    if (transport === TransportKind.ipc || transport === TransportKind.stdio) {\n                        const serverProcess = cp.spawn(runtime, args, execOptions);\n                        if (!serverProcess || !serverProcess.pid) {\n                            return handleChildProcessStartError(serverProcess, `Launching server using runtime ${runtime} failed.`);\n                        }\n                        this._serverProcess = serverProcess;\n                        serverProcess.stderr.on('data', data => this.outputChannel.append(Is.string(data) ? data : data.toString(encoding)));\n                        if (transport === TransportKind.ipc) {\n                            serverProcess.stdout.on('data', data => this.outputChannel.append(Is.string(data) ? data : data.toString(encoding)));\n                            return Promise.resolve({ reader: new node_1.IPCMessageReader(serverProcess), writer: new node_1.IPCMessageWriter(serverProcess) });\n                        }\n                        else {\n                            return Promise.resolve({ reader: new node_1.StreamMessageReader(serverProcess.stdout), writer: new node_1.StreamMessageWriter(serverProcess.stdin) });\n                        }\n                    }\n                    else if (transport === TransportKind.pipe) {\n                        return (0, node_1.createClientPipeTransport)(pipeName).then((transport) => {\n                            const process = cp.spawn(runtime, args, execOptions);\n                            if (!process || !process.pid) {\n                                return handleChildProcessStartError(process, `Launching server using runtime ${runtime} failed.`);\n                            }\n                            this._serverProcess = process;\n                            process.stderr.on('data', data => this.outputChannel.append(Is.string(data) ? data : data.toString(encoding)));\n                            process.stdout.on('data', data => this.outputChannel.append(Is.string(data) ? data : data.toString(encoding)));\n                            return transport.onConnected().then((protocol) => {\n                                return { reader: protocol[0], writer: protocol[1] };\n                            });\n                        });\n                    }\n                    else if (Transport.isSocket(transport)) {\n                        return (0, node_1.createClientSocketTransport)(transport.port).then((transport) => {\n                            const process = cp.spawn(runtime, args, execOptions);\n                            if (!process || !process.pid) {\n                                return handleChildProcessStartError(process, `Launching server using runtime ${runtime} failed.`);\n                            }\n                            this._serverProcess = process;\n                            process.stderr.on('data', data => this.outputChannel.append(Is.string(data) ? data : data.toString(encoding)));\n                            process.stdout.on('data', data => this.outputChannel.append(Is.string(data) ? data : data.toString(encoding)));\n                            return transport.onConnected().then((protocol) => {\n                                return { reader: protocol[0], writer: protocol[1] };\n                            });\n                        });\n                    }\n                }\n                else {\n                    let pipeName = undefined;\n                    return new Promise((resolve, reject) => {\n                        const args = (node.args && node.args.slice()) ?? [];\n                        if (transport === TransportKind.ipc) {\n                            args.push('--node-ipc');\n                        }\n                        else if (transport === TransportKind.stdio) {\n                            args.push('--stdio');\n                        }\n                        else if (transport === TransportKind.pipe) {\n                            pipeName = (0, node_1.generateRandomPipeName)();\n                            args.push(`--pipe=${pipeName}`);\n                        }\n                        else if (Transport.isSocket(transport)) {\n                            args.push(`--socket=${transport.port}`);\n                        }\n                        args.push(`--clientProcessId=${process.pid.toString()}`);\n                        const options = node.options ?? Object.create(null);\n                        options.env = getEnvironment(options.env, true);\n                        options.execArgv = options.execArgv || [];\n                        options.cwd = serverWorkingDir;\n                        options.silent = true;\n                        if (transport === TransportKind.ipc || transport === TransportKind.stdio) {\n                            const sp = cp.fork(node.module, args || [], options);\n                            assertStdio(sp);\n                            this._serverProcess = sp;\n                            sp.stderr.on('data', data => this.outputChannel.append(Is.string(data) ? data : data.toString(encoding)));\n                            if (transport === TransportKind.ipc) {\n                                sp.stdout.on('data', data => this.outputChannel.append(Is.string(data) ? data : data.toString(encoding)));\n                                resolve({ reader: new node_1.IPCMessageReader(this._serverProcess), writer: new node_1.IPCMessageWriter(this._serverProcess) });\n                            }\n                            else {\n                                resolve({ reader: new node_1.StreamMessageReader(sp.stdout), writer: new node_1.StreamMessageWriter(sp.stdin) });\n                            }\n                        }\n                        else if (transport === TransportKind.pipe) {\n                            (0, node_1.createClientPipeTransport)(pipeName).then((transport) => {\n                                const sp = cp.fork(node.module, args || [], options);\n                                assertStdio(sp);\n                                this._serverProcess = sp;\n                                sp.stderr.on('data', data => this.outputChannel.append(Is.string(data) ? data : data.toString(encoding)));\n                                sp.stdout.on('data', data => this.outputChannel.append(Is.string(data) ? data : data.toString(encoding)));\n                                transport.onConnected().then((protocol) => {\n                                    resolve({ reader: protocol[0], writer: protocol[1] });\n                                }, reject);\n                            }, reject);\n                        }\n                        else if (Transport.isSocket(transport)) {\n                            (0, node_1.createClientSocketTransport)(transport.port).then((transport) => {\n                                const sp = cp.fork(node.module, args || [], options);\n                                assertStdio(sp);\n                                this._serverProcess = sp;\n                                sp.stderr.on('data', data => this.outputChannel.append(Is.string(data) ? data : data.toString(encoding)));\n                                sp.stdout.on('data', data => this.outputChannel.append(Is.string(data) ? data : data.toString(encoding)));\n                                transport.onConnected().then((protocol) => {\n                                    resolve({ reader: protocol[0], writer: protocol[1] });\n                                }, reject);\n                            }, reject);\n                        }\n                    });\n                }\n            }\n            else if (Executable.is(json) && json.command) {\n                const command = json;\n                const args = json.args !== undefined ? json.args.slice(0) : [];\n                let pipeName = undefined;\n                const transport = json.transport;\n                if (transport === TransportKind.stdio) {\n                    args.push('--stdio');\n                }\n                else if (transport === TransportKind.pipe) {\n                    pipeName = (0, node_1.generateRandomPipeName)();\n                    args.push(`--pipe=${pipeName}`);\n                }\n                else if (Transport.isSocket(transport)) {\n                    args.push(`--socket=${transport.port}`);\n                }\n                else if (transport === TransportKind.ipc) {\n                    throw new Error(`Transport kind ipc is not support for command executable`);\n                }\n                const options = Object.assign({}, command.options);\n                options.cwd = options.cwd || serverWorkingDir;\n                if (transport === undefined || transport === TransportKind.stdio) {\n                    const serverProcess = cp.spawn(command.command, args, options);\n                    if (!serverProcess || !serverProcess.pid) {\n                        return handleChildProcessStartError(serverProcess, `Launching server using command ${command.command} failed.`);\n                    }\n                    serverProcess.stderr.on('data', data => this.outputChannel.append(Is.string(data) ? data : data.toString(encoding)));\n                    this._serverProcess = serverProcess;\n                    this._isDetached = !!options.detached;\n                    return Promise.resolve({ reader: new node_1.StreamMessageReader(serverProcess.stdout), writer: new node_1.StreamMessageWriter(serverProcess.stdin) });\n                }\n                else if (transport === TransportKind.pipe) {\n                    return (0, node_1.createClientPipeTransport)(pipeName).then((transport) => {\n                        const serverProcess = cp.spawn(command.command, args, options);\n                        if (!serverProcess || !serverProcess.pid) {\n                            return handleChildProcessStartError(serverProcess, `Launching server using command ${command.command} failed.`);\n                        }\n                        this._serverProcess = serverProcess;\n                        this._isDetached = !!options.detached;\n                        serverProcess.stderr.on('data', data => this.outputChannel.append(Is.string(data) ? data : data.toString(encoding)));\n                        serverProcess.stdout.on('data', data => this.outputChannel.append(Is.string(data) ? data : data.toString(encoding)));\n                        return transport.onConnected().then((protocol) => {\n                            return { reader: protocol[0], writer: protocol[1] };\n                        });\n                    });\n                }\n                else if (Transport.isSocket(transport)) {\n                    return (0, node_1.createClientSocketTransport)(transport.port).then((transport) => {\n                        const serverProcess = cp.spawn(command.command, args, options);\n                        if (!serverProcess || !serverProcess.pid) {\n                            return handleChildProcessStartError(serverProcess, `Launching server using command ${command.command} failed.`);\n                        }\n                        this._serverProcess = serverProcess;\n                        this._isDetached = !!options.detached;\n                        serverProcess.stderr.on('data', data => this.outputChannel.append(Is.string(data) ? data : data.toString(encoding)));\n                        serverProcess.stdout.on('data', data => this.outputChannel.append(Is.string(data) ? data : data.toString(encoding)));\n                        return transport.onConnected().then((protocol) => {\n                            return { reader: protocol[0], writer: protocol[1] };\n                        });\n                    });\n                }\n            }\n            return Promise.reject(new Error(`Unsupported server configuration ` + JSON.stringify(server, null, 4)));\n        }).finally(() => {\n            if (this._serverProcess !== undefined) {\n                this._serverProcess.on('exit', (code, signal) => {\n                    if (code !== null) {\n                        this.error(`Server process exited with code ${code}.`, undefined, false);\n                    }\n                    if (signal !== null) {\n                        this.error(`Server process exited with signal ${signal}.`, undefined, false);\n                    }\n                });\n            }\n        });\n    }\n    _getRuntimePath(runtime, serverWorkingDirectory) {\n        if (path.isAbsolute(runtime)) {\n            return runtime;\n        }\n        const mainRootPath = this._mainGetRootPath();\n        if (mainRootPath !== undefined) {\n            const result = path.join(mainRootPath, runtime);\n            if (fs.existsSync(result)) {\n                return result;\n            }\n        }\n        if (serverWorkingDirectory !== undefined) {\n            const result = path.join(serverWorkingDirectory, runtime);\n            if (fs.existsSync(result)) {\n                return result;\n            }\n        }\n        return runtime;\n    }\n    _mainGetRootPath() {\n        let folders = vscode_1.workspace.workspaceFolders;\n        if (!folders || folders.length === 0) {\n            return undefined;\n        }\n        let folder = folders[0];\n        if (folder.uri.scheme === 'file') {\n            return folder.uri.fsPath;\n        }\n        return undefined;\n    }\n    _getServerWorkingDir(options) {\n        let cwd = options && options.cwd;\n        if (!cwd) {\n            cwd = this.clientOptions.workspaceFolder\n                ? this.clientOptions.workspaceFolder.uri.fsPath\n                : this._mainGetRootPath();\n        }\n        if (cwd) {\n            // make sure the folder exists otherwise creating the process will fail\n            return new Promise(s => {\n                fs.lstat(cwd, (err, stats) => {\n                    s(!err && stats.isDirectory() ? cwd : undefined);\n                });\n            });\n        }\n        return Promise.resolve(undefined);\n    }\n}\nexports.LanguageClient = LanguageClient;\nclass SettingMonitor {\n    constructor(_client, _setting) {\n        this._client = _client;\n        this._setting = _setting;\n        this._listeners = [];\n    }\n    start() {\n        vscode_1.workspace.onDidChangeConfiguration(this.onDidChangeConfiguration, this, this._listeners);\n        this.onDidChangeConfiguration();\n        return new vscode_1.Disposable(() => {\n            if (this._client.needsStop()) {\n                void this._client.stop();\n            }\n        });\n    }\n    onDidChangeConfiguration() {\n        let index = this._setting.indexOf('.');\n        let primary = index >= 0 ? this._setting.substr(0, index) : this._setting;\n        let rest = index >= 0 ? this._setting.substr(index + 1) : undefined;\n        let enabled = rest ? vscode_1.workspace.getConfiguration(primary).get(rest, false) : vscode_1.workspace.getConfiguration(primary);\n        if (enabled && this._client.needsStart()) {\n            this._client.start().catch((error) => this._client.error('Start failed after configuration change', error, 'force'));\n        }\n        else if (!enabled && this._client.needsStop()) {\n            void this._client.stop().catch((error) => this._client.error('Stop failed after configuration change', error, 'force'));\n        }\n    }\n}\nexports.SettingMonitor = SettingMonitor;\nfunction handleChildProcessStartError(process, message) {\n    if (process === null) {\n        return Promise.reject(message);\n    }\n    return new Promise((_, reject) => {\n        process.on('error', (err) => {\n            reject(`${message} ${err}`);\n        });\n        // the error event should always be run immediately,\n        // but race on it just in case\n        setImmediate(() => reject(message));\n    });\n}\n", "/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ----------------------------------------------------------------------------------------- */\n'use strict';\n\nmodule.exports = require('./lib/node/main');", "'use strict';\r\nimport { ExtensionContext } from 'vscode';\r\nimport { ResourceModule } from './extension/resource-module';\r\nimport { ClassModule } from './extension/class-module';\r\nimport { PropertyModule } from './extension/property-module';\r\nimport { IndividualModule } from './extension/individual-module';\r\nimport { SettingsModule } from './extension/settings-module';\r\nimport * as TurtleTokenProvider from './language-turtle/token-provider';\r\nimport {\r\n\tLanguageClientBase,\r\n\tTurtleLanguageClient,\r\n\tTrigLanguageClient,\r\n\tSparqlLanguageClient\r\n} from './languages';\r\n\r\nconst clients: LanguageClientBase[] = [\r\n\tnew TurtleLanguageClient(),\r\n\tnew TrigLanguageClient(),\r\n\tnew SparqlLanguageClient()\r\n];\r\n\r\nexport function activate(context: ExtensionContext) {\r\n\tSettingsModule.activate(context);\r\n\tResourceModule.activate(context);\r\n\tClassModule.activate(context);\r\n\tPropertyModule.activate(context);\r\n\tIndividualModule.activate(context);\r\n\tTurtleTokenProvider.activate(context);\r\n\r\n\tfor (const client of clients) {\r\n\t\tclient.start(context);\r\n\t}\r\n}\r\n\r\nexport function deactivate(): Thenable<void> {\r\n\tconst promises: Thenable<void>[] = [];\r\n\r\n\tfor (const client of clients) {\r\n\t\tpromises.push(client.stop());\r\n\t}\r\n\r\n\treturn Promise.all(promises).then(() => undefined);\r\n}", "import { ExtensionContext, commands, env, Uri } from \"vscode\";\r\n\r\n/**\r\n * Provides commands for browsing resources.\r\n */\r\nexport class ResourceModule {\r\n\tstatic activate(context: ExtensionContext): void {\r\n\t\tcommands.registerCommand('mentor.command.browseResource', (uri: string) => commands.executeCommand('open', Uri.parse(uri)));\r\n\t\tcommands.registerCommand('mentor.command.openExternal', (uri: string) => env.openExternal(Uri.parse(uri)));\r\n\t\tcommands.registerCommand('mentor.command.setNamespaceColor', (uri: string) => {\r\n\t\t\tcommands.executeCommand('editor.action.showOrFocusStandaloneColorPicker').then((value) => {\r\n\t\t\t\tconsole.debug(value);\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n}", "import { ExtensionContext, commands, window } from \"vscode\";\r\nimport { ClassNodeProvider } from \"./class-node-provider\";\r\n\r\n/**\r\n * Provides the class explorer and related commands.\r\n */\r\nexport class ClassModule {\r\n\tstatic activate(context: ExtensionContext): void {\r\n\t\tconst classProvider = new ClassNodeProvider();\r\n\t\twindow.registerTreeDataProvider('mentor.classExplorer', classProvider);\r\n\t\r\n\t\tcommands.registerCommand('mentor.command.selectClass', (uri: string) => classProvider.select(uri));\r\n\t\tcommands.registerCommand('mentor.classExplorer.command.addEntry', () => window.showInformationMessage(`Successfully called add entry.`));\r\n\t\tcommands.registerCommand('mentor.classExplorer.command.editEntry', (node: string) => window.showInformationMessage(`Successfully called edit entry on ${node}.`));\r\n\t\tcommands.registerCommand('mentor.classExplorer.command.deleteEntry', (node: string) => window.showInformationMessage(`Successfully called delete entry on ${node}.`));\r\n\t\tcommands.registerCommand('mentor.classExplorer.command.refreshEntry', () => classProvider.refresh());\r\n\t\tcommands.registerCommand('mentor.classExplorer.command.toggleReferenced', () => {\r\n\t\t\tclassProvider.toggleReferenced();\r\n\t\t\tclassProvider.refresh();\r\n\t\t});\r\n\t}\r\n}", "import * as vscode from 'vscode';\r\nimport { VocabularyContext } from './mentor';\r\nimport { ClassRepository} from '@faubulous/mentor-rdf';\r\nimport { ClassNode } from './class-node';\r\nimport { ResourceNodeProvider } from './resource-node-provider';\r\n\r\n/**\r\n * A tree node provider for RDF classes.\r\n */\r\nexport class ClassNodeProvider extends ResourceNodeProvider<ClassRepository> {\r\n\r\n\toverride getRepository(context: VocabularyContext): ClassRepository | undefined {\r\n\t\treturn new ClassRepository(context.store);\r\n\t}\r\n\r\n\toverride getParent(uri: string): string | undefined {\r\n\t\treturn undefined;\r\n\t}\r\n\r\n\toverride getChildren(uri: string): string[] {\r\n\t\tif (!this.repository) {\r\n\t\t\treturn [];\r\n\t\t}\r\n\r\n\t\tlet result = this.repository.getSubClasses(uri).sort().map(u => this.getNode(u));\r\n\r\n\t\tif (!this.showReferenced) {\r\n\t\t\tresult = result.filter(u => this.repository?.hasSubject(u) || this.repository?.hasSubClasses(u));\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\toverride getTreeItem(uri: string): vscode.TreeItem {\r\n\t\tif (!this.repository) {\r\n\t\t\tthrow new Error('Invalid repostory.');\r\n\t\t}\r\n\r\n\t\t// const workbench = vscode.workspace.getConfiguration(\"workbench\");\r\n\r\n\t\t// const colorCustomizations: any = workbench.get(\"colorCustomizations\");\r\n\r\n\t\t// workbench.update(\r\n\t\t// \t\"colorCustomizations\",\r\n\t\t// \t{\r\n\t\t// \t\t...colorCustomizations,\r\n\t\t// \t\t\"rdf.ns0\": \"#006EAE\",\r\n\t\t// \t},\r\n\t\t// \t1,\r\n\t\t// );\r\n\r\n\t\treturn new ClassNode(this.repository, uri);\r\n\t}\r\n}", "import * as vscode from 'vscode';\nimport { ClassRepository } from '@faubulous/mentor-rdf';\nimport { ResourceNode } from './resource-node';\n\nexport class ClassNode extends ResourceNode {\n\tcontextValue = 'class';\n\n\tconstructor(\n\t\tprotected readonly repository: ClassRepository,\n\t\tpublic readonly uri: string\n\t) {\n\t\tsuper(repository, uri);\n\n\t\tthis.collapsibleState = this.repository.hasSubClasses(uri) ?\n\t\t\tvscode.TreeItemCollapsibleState.Collapsed :\n\t\t\tvscode.TreeItemCollapsibleState.None;\n\n\t\tthis.command = {\n\t\t\tcommand: 'mentor.command.selectClass',\n\t\t\ttitle: '',\n\t\t\targuments: [uri]\n\t\t};\n\t}\n\n\toverride getIcon() {\n\t\tlet icon = 'rdf-class';\n\n\t\tif (this.repository.hasEquivalentClass(this.uri)) {\n\t\t\ticon += '-eq';\n\t\t}\n\t\telse if (!this.repository.hasSubject(this.uri)) {\n\t\t\ticon += '-ref';\n\t\t}\n\n\t\treturn new vscode.ThemeIcon(icon, this.getColor());\n\t}\n}", "import * as vscode from 'vscode';\nimport * as n3 from 'n3';\nimport { ResourceRepository, skos, rdfs } from '@faubulous/mentor-rdf';\nimport { getNamespaceUri, toJsonId } from '../utilities';\n\nexport class ResourceNode extends vscode.TreeItem {\n\tcontextValue: string = 'resource';\n\n\tcommand: vscode.Command | undefined;\n\n\tconstructor(\n\t\tprotected readonly repository: ResourceRepository,\n\t\tpublic readonly uri: string\n\t) {\n\t\tsuper('');\n\t\t\n\t\tthis.iconPath = this.getIcon();\n\t\tthis.label = this.getLabel();\n\t\tthis.tooltip = this.getTooltip();\n\n\t\tthis.command = {\n\t\t\tcommand: 'mentor.command.selectResource',\n\t\t\ttitle: '',\n\t\t\targuments: [uri]\n\t\t};\n\t}\n\n\tprotected getLabel(): vscode.TreeItemLabel {\n\t\tlet label: string;\n\n\t\tconst n = this.uri.lastIndexOf('#');\n\n\t\tif (n > -1) {\n\t\t\tlabel = this.uri.substring(n + 1);\n\t\t} else {\n\t\t\tlabel = this.uri.substring(this.uri.lastIndexOf('/') + 1);\n\t\t}\n\n\t\treturn {\n\t\t\tlabel: label,\n\t\t\thighlights: this.uri.length > 1 ? [[this.uri.length - 2, this.uri.length - 1]] : void 0\n\t\t}\n\t}\n\n\tprotected getTooltip(): vscode.MarkdownString {\n\t\tlet result = '';\n\n\t\tif (this.repository) {\n\t\t\tconst s = n3.DataFactory.namedNode(this.uri);\n\n\t\t\tfor (let d of this.repository.store.match(s, skos.definition, null, null)) {\n\t\t\t\tresult += d.object.value;\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tif (!result) {\n\t\t\t\tfor (let d of this.repository.store.match(s, rdfs.comment, null, null)) {\n\t\t\t\t\tresult += d.object.value;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (result) {\n\t\t\tresult += '\\n\\n';\n\t\t}\n\n\t\tresult += this.uri;\n\n\t\treturn new vscode.MarkdownString(result, true);\n\t}\n\n\tgetColor(): vscode.ThemeColor {\n\t\tconst id = toJsonId(getNamespaceUri(this.uri));\n\n\t\treturn new vscode.ThemeColor('mentor.color.' + id);\n\t}\n\n\tgetIcon(): vscode.ThemeIcon {\n\t\treturn new vscode.ThemeIcon('primitive-square', this.getColor());\n\t}\n}", "import { Uri, Webview, WorkspaceFolder, workspace } from \"vscode\";\n\n/**\n * A helper function which will get the webview URI of a given file or resource.\n *\n * @remarks This URI can be used within a webview's HTML as a link to the\n * given file/resource.\n *\n * @param webview A reference to the extension webview\n * @param extensionUri The URI of the directory containing the extension\n * @param pathList An array of strings representing the path to a file/resource\n * @returns A URI pointing to the file/resource\n */\nexport function getUri(webview: Webview, extensionUri: Uri, pathList: string[]) {\n\treturn webview.asWebviewUri(Uri.joinPath(extensionUri, ...pathList));\n}\n\n/**\n * A helper function that returns a unique alphanumeric identifier called a nonce.\n *\n * @remarks This function is primarily used to help enforce content security\n * policies for resources/scripts being executed in a webview context.\n *\n * @returns A nonce\n */\nexport function getNonce() {\n\tlet text = \"\";\n\tconst possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n\n\tfor (let i = 0; i < 32; i++) {\n\t\ttext += possible.charAt(Math.floor(Math.random() * possible.length));\n\t}\n\n\treturn text;\n}\n\n/**\n * Get the portion of a URI after the first occurance of '#' or the last occurance of '/'.\n * @param uri A URI.\n * @returns The namespace portion of the URI.\n */\nexport function getNamespaceUri(uri: string) {\n\tif (!uri) {\n\t\treturn uri;\n\t}\n\n\t// Remove any query strings from the URI.\n\tlet u = uri;\n\tlet n = u.indexOf('?');\n\n\tif (n > -1) {\n\t\tu = uri.substring(0, n);\n\t}\n\n\t// Find the first occurance of '#' and return the substring up to that point.\n\tn = u.indexOf('#');\n\n\tif (n > -1) {\n\t\treturn u.substring(0, n + 1);\n\t}\n\n\t// Find the last occurance of '/' and return the substring up to that point.\n\tn = u.lastIndexOf('/');\n\n\t// Only return the substring if it is not the 'http://' or 'https://' protocol.\n\tif (n > 8) {\n\t\treturn u.substring(0, n + 1);\n\t} else {\n\t\treturn u + \"/\";\n\t}\n}\n\n/**\n * Get a transformed version of the URI that can be used as a JSON identifier which only contains letters, numbers and dots.\n * @param uri A URI.\n * @returns A transformed version which only contains letters, numbers and dots.\n */\nexport function toJsonId(uri: string): string | undefined {\n\tif (!uri) {\n\t\treturn uri;\n\t}\n\n\tlet u = uri.split('//')[1];\n\tu = u.replace(/[^a-zA-Z0-9]/g, '.');\n\n\treturn u.endsWith('.') ? u.slice(0, -1) : u;\n}\n\nexport function getSortedWorkspaceFolders(): string[] {\n\tconst folders = workspace.workspaceFolders ? workspace.workspaceFolders.map(folder => {\n\t\tlet result = folder.uri.toString();\n\n\t\tif (result.charAt(result.length - 1) !== '/') {\n\t\t\tresult = result + '/';\n\t\t}\n\n\t\treturn result;\n\t}).sort((a, b) => { return a.length - b.length; }) : [];\n\n\treturn folders;\n}\n\n/**\n * Returns the outermost workspace folder if there are nested workspace folders.\n * @param folder The current workspace folder.\n * @returns The outermost workspace folder or the given workspace folder if there are no nested workspace folders.\n */\nexport function getOuterMostWorkspaceFolder(folder: WorkspaceFolder): WorkspaceFolder {\n\tconst sorted = getSortedWorkspaceFolders();\n\n\tfor (const element of sorted) {\n\t\tlet uri = folder.uri.toString();\n\n\t\tif (uri.charAt(uri.length - 1) !== '/') {\n\t\t\turi = uri + '/';\n\t\t}\n\n\t\tif (uri.startsWith(element)) {\n\t\t\treturn workspace.getWorkspaceFolder(Uri.parse(element))!;\n\t\t}\n\t}\n\n\treturn folder;\n}", "import * as vscode from 'vscode';\r\nimport { mentor, VocabularyContext } from './mentor';\r\n\r\nexport abstract class ResourceNodeProvider<T> implements vscode.TreeDataProvider<string> {\r\n\tprotected readonly nodes: any = {};\r\n\r\n\tprotected context: VocabularyContext | undefined;\r\n\r\n\tprotected repository: T | undefined;\r\n\r\n\tprotected showReferenced: boolean = false;\r\n\r\n\tprotected autoRefresh: boolean = true;\r\n\r\n\tprivate _onDidChangeTreeData: vscode.EventEmitter<string | undefined> = new vscode.EventEmitter<string | undefined>();\r\n\r\n\treadonly onDidChangeTreeData: vscode.Event<string | undefined> = this._onDidChangeTreeData.event;\r\n\r\n\tconstructor() {\r\n\t\tmentor.onDidChangeVocabularyContext((context) => this._onVocabularyChanged(context));\r\n\r\n\t\tif (mentor.activeContext) {\r\n\t\t\tthis._onVocabularyChanged(mentor.activeContext);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _onVocabularyChanged(e: VocabularyContext | undefined): void {\r\n\t\tif (e) {\r\n\t\t\tthis.context = e;\r\n\t\t\tthis.repository = this.getRepository(e);\r\n\t\t\tthis.refresh();\r\n\t\t}\r\n\t}\r\n\r\n\tprotected abstract getRepository(context: VocabularyContext): T | undefined;\r\n\r\n\ttoggleReferenced() {\r\n\t\tthis.showReferenced = !this.showReferenced;\r\n\t}\r\n\r\n\trefresh(): void {\r\n\t\tthis._onDidChangeTreeData.fire(void 0);\r\n\t}\r\n\r\n\tselect(uri: string) {\r\n\t\tif (this.context && this.context.tokens[uri]) {\r\n\t\t\tconst context = this.context;\r\n\r\n\t\t\tthis.activateDocument().then((editor) => {\r\n\t\t\t\t// Todo: This only selects the first occurance, but not necessarily the term definition.\r\n\t\t\t\tconst token = context.tokens[uri].sort((a: any, b: any) => a.start - b.start)[0] as any;\r\n\t\t\t\tconst text = token.type == 'prefixed' ? `${token.prefix}:${token.value}` : `<${token.value}>`;\r\n\r\n\t\t\t\t// The lexer ignores any tabs in front of the token, so we need to find the actual position in the line.\r\n\t\t\t\tconst n = token.line - 1;\r\n\t\t\t\tconst line = context.document.lineAt(n);\r\n\t\t\t\tconst start = line.text.indexOf(text);\r\n\t\t\t\tconst end = start + text.length;\r\n\r\n\t\t\t\tconst range = new vscode.Range(n, start, n, end);\r\n\r\n\t\t\t\tif (editor) {\r\n\t\t\t\t\teditor.selection = new vscode.Selection(range.start, range.end);\r\n\t\t\t\t\teditor.revealRange(range, vscode.TextEditorRevealType.InCenter);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tprivate async activateDocument(): Promise<vscode.TextEditor | undefined> {\r\n\t\tconst activeTextEditor = vscode.window.activeTextEditor;\r\n\r\n\t\tif (activeTextEditor?.document != this.context?.document) {\r\n\t\t\tawait vscode.commands.executeCommand<vscode.TextDocumentShowOptions>(\"vscode.open\", this.context?.document.uri);\r\n\t\t}\r\n\r\n\t\treturn activeTextEditor;\r\n\t}\r\n\r\n\tgetNode(uri: string): string {\r\n\t\tif (!this.nodes[uri]) {\r\n\t\t\tthis.nodes[uri] = uri;\r\n\t\t}\r\n\r\n\t\treturn this.nodes[uri];\r\n\t}\r\n\r\n\tabstract getParent(uri: string): string | undefined;\r\n\r\n\tabstract getChildren(uri: string): string[];\r\n\r\n\tabstract getTreeItem(uri: string): vscode.TreeItem;\r\n}", "import * as vscode from 'vscode';\r\nimport * as path from 'path';\r\nimport * as n3 from 'n3';\r\nimport { OwlReasoner, StoreFactory } from '@faubulous/mentor-rdf';\r\n\r\nexport class VocabularyContext {\r\n\t/**\r\n\t * The N3 store for the document.\r\n\t */\r\n\treadonly store: n3.Store;\r\n\r\n\t/**\r\n\t * The document.\r\n\t */\r\n\treadonly document: vscode.TextDocument;\r\n\r\n\t/**\r\n\t * All namespaces defined in the document.\r\n\t */\r\n\treadonly namespaces: { [key: string]: string } = {};\r\n\r\n\t/**\r\n\t * Maps resource URIs to indexed tokens.\r\n\t */\r\n\treadonly tokens: { [key: string]: n3.Token[] } = {};\r\n\r\n\tconstructor(document: vscode.TextDocument, store: n3.Store) {\r\n\t\tthis.document = document;\r\n\t\tthis.store = store;\r\n\r\n\t\tthis._parseTokens(document);\r\n\t}\r\n\r\n\tprivate _parseTokens(document: vscode.TextDocument): void {\r\n\t\tconst text = document.getText();\r\n\t\tconst tokens = new n3.Lexer().tokenize(text);\r\n\r\n\t\ttokens.forEach((t, i) => {\r\n\t\t\tif (!t.value) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tlet v = t.value;\r\n\r\n\t\t\tswitch (t.type) {\r\n\t\t\t\tcase 'prefix': {\r\n\t\t\t\t\tlet u = tokens[i + 1].value;\r\n\r\n\t\t\t\t\tif (u) {\r\n\t\t\t\t\t\tthis.namespaces[v] = u;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tcase 'prefixed': {\r\n\t\t\t\t\tif (t.prefix) {\r\n\t\t\t\t\t\tv = this.namespaces[t.prefix] + t.value;\r\n\r\n\t\t\t\t\t\tif (!this.tokens[v]) {\r\n\t\t\t\t\t\t\tthis.tokens[v] = [];\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tthis.tokens[v].push(t);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tcase 'IRI': {\r\n\t\t\t\t\tif (!this.tokens[v]) {\r\n\t\t\t\t\t\tthis.tokens[v] = [];\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tthis.tokens[v].push(t);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n}\r\n\r\nclass MentorExtension {\r\n\t/**\r\n\t * Maps document URIs to loaded document contexts.\r\n\t */\r\n\tcontexts: { [key: string]: VocabularyContext } = {};\r\n\r\n\t/**\r\n\t * The active document context.\r\n\t */\r\n\tactiveContext: VocabularyContext | undefined;\r\n\r\n\tprivate _onDidChangeDocumentContext = new vscode.EventEmitter<VocabularyContext | undefined>();\r\n\r\n\treadonly onDidChangeVocabularyContext = this._onDidChangeDocumentContext.event;\r\n\r\n\tconstructor() {\r\n\t\tvscode.workspace.onDidChangeTextDocument((e) => this.onTextDocumentChanged(e));\r\n\t\tvscode.window.onDidChangeActiveTextEditor(() => this.onActiveEditorChanged());\r\n\r\n\t\tthis.onActiveEditorChanged();\r\n\t}\r\n\r\n\tonActiveEditorChanged(): void {\r\n\t\tif (!vscode.window.activeTextEditor) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst editor = vscode.window.activeTextEditor;\r\n\r\n\t\tif (editor.document == this.activeContext?.document) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (!this._canLoadDocument(editor.document.uri)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis._loadDocument(editor.document).then((context) => {\r\n\t\t\tif (context) {\r\n\t\t\t\tthis.activeContext = context;\r\n\t\t\t\tthis._onDidChangeDocumentContext?.fire(context);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tonTextDocumentChanged(e: vscode.TextDocumentChangeEvent): void {\r\n\t\tif (!this._canLoadDocument(e.document.uri)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis._loadDocument(e.document, true).then((context) => {\r\n\t\t\tif (context) {\r\n\t\t\t\tthis._onDidChangeDocumentContext?.fire(context);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether a document with the given URI can be loaded.\r\n\t * @param uri A document URI.\r\n\t * @returns <c>true</c> if the document can be loaded, <c>false</c> otherwise.\r\n\t */\r\n\tprivate _canLoadDocument(uri: vscode.Uri): boolean {\r\n\t\tif (!uri || uri.scheme !== 'file') {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tconst ext = path.extname(uri.fsPath);\r\n\r\n\t\treturn ext === '.ttl' || ext === '.nt';\r\n\t}\r\n\r\n\tprivate async _loadDocument(document: vscode.TextDocument, reload: boolean = false): Promise<VocabularyContext | undefined> {\r\n\t\tif (!document) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst uri = document.uri.toString();\r\n\r\n\t\tlet context = this.contexts[uri];\r\n\r\n\t\tif (context && !reload) {\r\n\t\t\treturn context;\r\n\t\t}\r\n\r\n\t\tconst store = await StoreFactory.createFromStream(document.getText(), uri);\r\n\r\n\t\tnew OwlReasoner().expand(store, uri, uri + \"#inference\");\r\n\r\n\t\tcontext = new VocabularyContext(document, store);\r\n\r\n\t\tthis.contexts[uri] = context;\r\n\t\tthis.activeContext = context;\r\n\r\n\t\treturn context;\r\n\t}\r\n}\r\n\r\nexport const mentor: MentorExtension = new MentorExtension();", "import { ExtensionContext, commands, window } from \"vscode\";\r\nimport { PropertyNodeProvider } from \"./property-node-provider\";\r\n\r\n/**\r\n * Provides the property explorer and related commands.\r\n */\r\nexport class PropertyModule {\r\n\tstatic activate(context: ExtensionContext): void {\r\n\t\tconst propertyProvider = new PropertyNodeProvider();\r\n\t\twindow.registerTreeDataProvider('mentor.propertyExplorer', propertyProvider);\r\n\t\r\n\t\tcommands.registerCommand('mentor.command.selectProperty', (uri: string) => propertyProvider.select(uri));\r\n\t\tcommands.registerCommand('mentor.propertyExplorer.command.addEntry', () => window.showInformationMessage(`Successfully called add entry.`));\r\n\t\tcommands.registerCommand('mentor.propertyExplorer.command.editEntry', (node: string) => window.showInformationMessage(`Successfully called edit entry on ${node}.`));\r\n\t\tcommands.registerCommand('mentor.propertyExplorer.command.deleteEntry', (node: string) => window.showInformationMessage(`Successfully called delete entry on ${node}.`));\r\n\t\tcommands.registerCommand('mentor.propertyExplorer.command.refreshEntry', () => propertyProvider.refresh());\r\n\t\tcommands.registerCommand('mentor.propertyExplorer.command.toggleReferenced', () => {\r\n\t\t\tpropertyProvider.toggleReferenced();\r\n\t\t\tpropertyProvider.refresh();\r\n\t\t});\r\n\t}\r\n}", "import * as vscode from 'vscode';\r\nimport { VocabularyContext } from './mentor';\r\nimport { PropertyRepository } from '@faubulous/mentor-rdf';\r\nimport { PropertyNode } from './property-node';\r\nimport { ResourceNodeProvider } from './resource-node-provider';\r\n\r\n/**\r\n * A tree node provider for RDF properties.\r\n */\r\nexport class PropertyNodeProvider extends ResourceNodeProvider<PropertyRepository> {\r\n\t\r\n\toverride getRepository(context: VocabularyContext): PropertyRepository | undefined {\r\n\t\treturn new PropertyRepository(context.store);\r\n\t}\r\n\r\n\toverride getParent(uri: string): string | undefined {\r\n\t\treturn undefined;\r\n\t}\r\n\r\n\toverride getChildren(uri: string): string[] {\r\n\t\tif (!this.repository) {\r\n\t\t\treturn [];\r\n\t\t}\r\n\r\n\t\tlet result = this.repository.getSubProperties(uri).sort().map(u => this.getNode(u));\r\n\r\n\t\tif (!this.showReferenced) {\r\n\t\t\tresult = result.filter(u => this.repository?.hasSubject(u));\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\toverride getTreeItem(uri: string): vscode.TreeItem {\r\n\t\tif (!this.repository) {\r\n\t\t\tthrow new Error('Invalid repostory.');\r\n\t\t}\r\n\r\n\t\t// const workbench = vscode.workspace.getConfiguration(\"workbench\");\r\n\r\n\t\t// const colorCustomizations: any = workbench.get(\"colorCustomizations\");\r\n\r\n\t\t// workbench.update(\r\n\t\t// \t\"colorCustomizations\",\r\n\t\t// \t{\r\n\t\t// \t\t...colorCustomizations,\r\n\t\t// \t\t\"rdf.ns0\": \"#006EAE\",\r\n\t\t// \t},\r\n\t\t// \t1,\r\n\t\t// );\r\n\r\n\t\treturn new PropertyNode(this.repository, uri);\r\n\t}\r\n}", "import * as vscode from 'vscode';\nimport { PropertyRepository, xsd } from '@faubulous/mentor-rdf';\nimport { ResourceNode } from './resource-node';\n\nexport class PropertyNode extends ResourceNode {\n\tcontextValue = 'property';\n\n\tconstructor(\n\t\tprotected readonly repository: PropertyRepository,\n\t\tpublic readonly uri: string\n\t) {\n\t\tsuper(repository, uri);\n\n\t\tthis.collapsibleState = this.repository.hasSubProperties(uri) ?\n\t\t\tvscode.TreeItemCollapsibleState.Collapsed :\n\t\t\tvscode.TreeItemCollapsibleState.None;\n\n\t\tthis.command = {\n\t\t\tcommand: 'mentor.command.selectProperty',\n\t\t\ttitle: '',\n\t\t\targuments: [uri]\n\t\t};\n\t}\n\n\toverride getIcon(): vscode.ThemeIcon {\n\t\tlet icon = 'arrow-right';\n\n\t\tconst range = this.repository.getRange(this.uri);\n\n\t\tswitch (range) {\n\t\t\tcase xsd.date.id:\n\t\t\tcase xsd.dateTime.id: {\n\t\t\t\ticon = 'calendar';\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase xsd.byte.id:\n\t\t\tcase xsd.decimal.id:\n\t\t\tcase xsd.double.id:\n\t\t\tcase xsd.float.id:\n\t\t\tcase xsd.int.id:\n\t\t\tcase xsd.integer.id:\n\t\t\tcase xsd.short.id:\n\t\t\tcase xsd.unsignedInt.id:\n\t\t\tcase xsd.unsignedShort.id:\n\t\t\tcase xsd.unsingedLong.id:\n\t\t\tcase xsd.usignedByte.id: {\n\t\t\t\ticon = 'symbol-number';\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase xsd.boolean.id: {\n\t\t\t\ticon = 'symbol-boolean';\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase xsd.string.id: {\n\t\t\t\ticon = 'symbol-text';\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase xsd.base64Binary.id: {\n\t\t\t\ticon = 'file-binary';\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn new vscode.ThemeIcon(icon, this.getColor());\n\t}\n}", "import { ExtensionContext, commands, window } from \"vscode\";\r\nimport { IndividualNodeProvider } from \"./individual-node-provider\";\r\n\r\n/**\r\n * Provides the individual explorer and related commands.\r\n */\r\nexport class IndividualModule {\r\n\tstatic activate(context: ExtensionContext): void {\r\n\t\tconst individualProvider = new IndividualNodeProvider();\r\n\t\twindow.registerTreeDataProvider('mentor.individualExplorer', individualProvider);\r\n\t\r\n\t\tcommands.registerCommand('mentor.command.selectIndividual', (uri: string) => individualProvider.select(uri));\r\n\t\tcommands.registerCommand('mentor.individualExplorer.command.addEntry', () => window.showInformationMessage(`Successfully called add entry.`));\r\n\t\tcommands.registerCommand('mentor.individualExplorer.command.editEntry', (node: string) => window.showInformationMessage(`Successfully called edit entry on ${node}.`));\r\n\t\tcommands.registerCommand('mentor.individualExplorer.command.deleteEntry', (node: string) => window.showInformationMessage(`Successfully called delete entry on ${node}.`));\r\n\t\tcommands.registerCommand('mentor.individualExplorer.command.refreshEntry', () => individualProvider.refresh());\r\n\t\tcommands.registerCommand('mentor.individualExplorer.command.toggleReferenced', () => {\r\n\t\t\tindividualProvider.toggleReferenced();\r\n\t\t\tindividualProvider.refresh();\r\n\t\t});\r\n\t}\r\n}", "import * as vscode from 'vscode';\r\nimport { VocabularyContext } from './mentor';\r\nimport { IndividualRepository } from '@faubulous/mentor-rdf';\r\nimport { IndividualNode } from './individual-node';\r\nimport { ResourceNodeProvider } from './resource-node-provider';\r\n\r\n/**\r\n * A tree node provider for RDF properties.\r\n */\r\nexport class IndividualNodeProvider extends ResourceNodeProvider<IndividualRepository> {\r\n\r\n\toverride getRepository(context: VocabularyContext): IndividualRepository | undefined {\r\n\t\treturn new IndividualRepository(context.store);\r\n\t}\r\n\r\n\toverride getParent(uri: string): string | undefined {\r\n\t\treturn undefined;\r\n\t}\r\n\r\n\toverride getChildren(uri: string): string[] {\r\n\t\tif (!this.repository) {\r\n\t\t\treturn [];\r\n\t\t}\r\n\r\n\t\tlet result = this.repository.getIndividuals().sort().map(u => this.getNode(u));\r\n\r\n\t\tif (!this.showReferenced) {\r\n\t\t\tresult = result.filter(u => this.repository?.hasSubject(u));\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\toverride getTreeItem(uri: string): vscode.TreeItem {\r\n\t\tif (!this.repository) {\r\n\t\t\tthrow new Error('Invalid repostory.');\r\n\t\t}\r\n\r\n\t\t// const workbench = vscode.workspace.getConfiguration(\"workbench\");\r\n\r\n\t\t// const colorCustomizations: any = workbench.get(\"colorCustomizations\");\r\n\r\n\t\t// workbench.update(\r\n\t\t// \t\"colorCustomizations\",\r\n\t\t// \t{\r\n\t\t// \t\t...colorCustomizations,\r\n\t\t// \t\t\"rdf.ns0\": \"#006EAE\",\r\n\t\t// \t},\r\n\t\t// \t1,\r\n\t\t// );\r\n\r\n\t\treturn new IndividualNode(this.repository, uri);\r\n\t}\r\n}", "import * as vscode from 'vscode';\nimport { IndividualRepository } from '@faubulous/mentor-rdf';\nimport { ResourceNode } from './resource-node';\n\nexport class IndividualNode extends ResourceNode {\n\tcontextValue = 'individual';\n\n\tconstructor(\n\t\tprotected readonly repository: IndividualRepository,\n\t\tpublic readonly uri: string\n\t) {\n\t\tsuper(repository, uri);\n\n\t\tthis.collapsibleState = vscode.TreeItemCollapsibleState.None;\n\n\t\tthis.command = {\n\t\t\tcommand: 'mentor.command.selectIndividual',\n\t\t\ttitle: '',\n\t\t\targuments: [uri]\n\t\t};\n\t}\n\n\toverride getIcon(): vscode.ThemeIcon {\n\t\treturn new vscode.ThemeIcon('rdf-individual', this.getColor());\n\t}\n}", "import { ExtensionContext, commands, window } from \"vscode\";\r\nimport { SettingsPanel } from \"./panels/SettingsPanel\";\r\nimport { SettingsViewProvider } from \"./panels/SettingsViewProvider\";\r\n\r\nexport class SettingsModule {\r\n\tstatic activate(context: ExtensionContext) {\r\n\t\t// Open the settings view via command\r\n\t\tconst command = () => { SettingsPanel.render(context.extensionUri); }\r\n\t\tconst showGalleryCommand = commands.registerCommand(\"mentor.command.openSettings\", command);\r\n\r\n\t\tcontext.subscriptions.push(showGalleryCommand);\r\n\r\n\t\t// Open the settings view as a webview; will use this for the tree view once React components are implemented.\r\n\t\tconst settingsViewProvider = new SettingsViewProvider(context.extensionUri);\r\n\t\tconst settingsDisposable = window.registerWebviewViewProvider(SettingsViewProvider.viewType, settingsViewProvider)\r\n\r\n\t\tcontext.subscriptions.push(settingsDisposable);\r\n\t}\r\n}", "import { Disposable, Webview, WebviewPanel, window, Uri, ViewColumn } from \"vscode\";\nimport { getUri, getNonce } from \"../../utilities\";\n\n/**\n * This class manages the state and behavior of Settings webview panels.\n *\n * It contains all the data and methods for:\n *\n * - Creating and rendering ComponentGallery webview panels\n * - Properly cleaning up and disposing of webview resources when the panel is closed\n * - Setting the HTML (and by proxy CSS/JavaScript) content of the webview panel\n */\nexport class SettingsPanel {\n  public static currentPanel: SettingsPanel | undefined;\n  private readonly _panel: WebviewPanel;\n  private _disposables: Disposable[] = [];\n\n  /**\n   * The ComponentGalleryPanel class private constructor (called only from the render method).\n   *\n   * @param panel A reference to the webview panel\n   * @param extensionUri The URI of the directory containing the extension\n   */\n  private constructor(panel: WebviewPanel, extensionUri: Uri) {\n    this._panel = panel;\n\n    // Set an event listener to listen for when the panel is disposed (i.e. when the user closes\n    // the panel or when the panel is closed programmatically)\n    this._panel.onDidDispose(() => this.dispose(), null, this._disposables);\n\n    // Set the HTML content for the webview panel\n    this._panel.webview.html = this._getWebviewContent(this._panel.webview, extensionUri);\n  }\n\n  /**\n   * Renders the current webview panel if it exists otherwise a new webview panel\n   * will be created and displayed.\n   *\n   * @param extensionUri The URI of the directory containing the extension.\n   */\n  public static render(extensionUri: Uri) {\n    if (SettingsPanel.currentPanel) {\n      // If the webview panel already exists reveal it\n      SettingsPanel.currentPanel._panel.reveal(ViewColumn.One);\n    } else {\n      // If a webview panel does not already exist create and show a new one\n      const panel = window.createWebviewPanel(\n        // Panel view type\n        \"mentor.view.settings\",\n        // Panel title\n        \"Mentor Settings\",\n        // The editor column the panel should be displayed in\n        ViewColumn.One,\n        // Extra panel configurations\n        {\n          // Enable JavaScript in the webview\n          enableScripts: true,\n          // Restrict the webview to only load resources from the `out` directory\n          localResourceRoots: [Uri.joinPath(extensionUri, \"out\")],\n        }\n      );\n\n      SettingsPanel.currentPanel = new SettingsPanel(panel, extensionUri);\n    }\n  }\n\n  /**\n   * Cleans up and disposes of webview resources when the webview panel is closed.\n   */\n  public dispose() {\n    SettingsPanel.currentPanel = undefined;\n\n    // Dispose of the current webview panel\n    this._panel.dispose();\n\n    // Dispose of all disposables (i.e. commands) associated with the current webview panel\n    while (this._disposables.length) {\n      const disposable = this._disposables.pop();\n\n      if (disposable) {\n        disposable.dispose();\n      }\n    }\n  }\n\n  /**\n   * Defines and returns the HTML that should be rendered within the webview panel.\n   *\n   * @remarks This is also the place where *references* to CSS and JavaScript files\n   * are created and inserted into the webview HTML.\n   *\n   * @param webview A reference to the extension webview\n   * @param extensionUri The URI of the directory containing the extension\n   * @returns A template string literal containing the HTML that should be\n   * rendered within the webview panel\n   */\n  private _getWebviewContent(webview: Webview, extensionUri: Uri) {\n    const webviewUri = getUri(webview, extensionUri, [\"out\", \"webview.js\"]);\n    const styleUri = getUri(webview, extensionUri, [\"out\", \"style.css\"]);\n    const codiconUri = getUri(webview, extensionUri, [\"out\", \"codicon.css\"]);\n    const nonce = getNonce();\n\n    // Note: Since the below HTML is defined within a JavaScript template literal, all of\n    // the HTML for each component demo can be defined elsewhere and then imported/inserted\n    // into the below code. This can help with code readability and organization.\n    //\n    // Tip: Install the es6-string-html VS Code extension to enable code highlighting below\n    return /*html*/ `\n      <!DOCTYPE html>\n      <html lang=\"en\">\n        <head>\n          <meta charset=\"UTF-8\">\n          <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n          <meta http-equiv=\"Content-Security-Policy\" content=\"default-src 'none'; style-src ${webview.cspSource}; font-src ${webview.cspSource}; script-src 'nonce-${nonce}';\">\n          <link rel=\"stylesheet\" href=\"${styleUri}\">\n          <link rel=\"stylesheet\" href=\"${codiconUri}\">\n          <title>Mentor Settings 2</title>\n        </head>\n        <body>\n          <section class=\"component-container\">\n            <h2>Namespaces</h2>\n            <section class=\"component-example\">\n              <vscode-data-grid class=\"basic-grid\" generate-header=\"sticky\" grid-template-columns=\"100px 1fr 2fr\" aria-label=\"With Sticky Header\"></vscode-data-grid>\n            </section>\n          </section>\n          <script type=\"module\" nonce=\"${nonce}\" src=\"${webviewUri}\"></script>\n        </body>\n      </html>\n    `;\n  }\n}\n", "import * as vscode from 'vscode';\nimport { getUri, getNonce } from \"../../utilities\";\n\nexport class SettingsViewProvider implements vscode.WebviewViewProvider {\n\n\tpublic static readonly viewType = 'mentor.view.settings';\n\n\tprivate _view?: vscode.WebviewView;\n\n\tconstructor(private readonly _extensionUri: vscode.Uri) { }\n\n\tpublic resolveWebviewView(\n\t\twebviewView: vscode.WebviewView,\n\t\tcontext: vscode.WebviewViewResolveContext,\n\t\t_token: vscode.CancellationToken,\n\t) {\n\t\tthis._view = webviewView;\n\n\t\twebviewView.webview.options = {\n\t\t\t// Allow scripts in the webview\n\t\t\tenableScripts: true,\n\t\t\tlocalResourceRoots: [\n\t\t\t\tthis._extensionUri\n\t\t\t]\n\t\t};\n\n\t\twebviewView.webview.html = this._getHtmlForWebview(webviewView.webview);\n\t}\n\n\tprivate _getHtmlForWebview(webview: vscode.Webview) {\n\t\tconst webviewUri = getUri(webview, this._extensionUri, [\"out\", \"webview.js\"]);\n\t\tconst styleUri = getUri(webview, this._extensionUri, [\"out\", \"style.css\"]);\n\t\tconst codiconUri = getUri(webview, this._extensionUri, [\"out\", \"codicon.css\"]);\n\t\tconst nonce = getNonce();\n\n\t\t// Note: Since the below HTML is defined within a JavaScript template literal, all of\n\t\t// the HTML for each component demo can be defined elsewhere and then imported/inserted\n\t\t// into the below code. This can help with code readability and organization.\n\t\t//\n\t\t// Tip: Install the es6-string-html VS Code extension to enable code highlighting below\n\t\treturn /*html*/ `\n\t\t  <!DOCTYPE html>\n\t\t  <html lang=\"en\">\n\t\t\t<head>\n\t\t\t  <meta charset=\"UTF-8\">\n\t\t\t  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n\t\t\t  <meta http-equiv=\"Content-Security-Policy\" content=\"default-src 'none'; style-src ${webview.cspSource}; font-src ${webview.cspSource}; script-src 'nonce-${nonce}';\">\n\t\t\t  <link rel=\"stylesheet\" href=\"${styleUri}\">\n\t\t\t  <link rel=\"stylesheet\" href=\"${codiconUri}\">\n\t\t\t  <title>Mentor Settings</title>\n\t\t\t</head>\n\t\t\t<body>\n\t\t\t  <vscode-text-field placeholder=\"Find\"></vscode-text-field>\n\t\t\t  <vscode-panels aria-label=\"With Badge\">\n\t\t\t\t<vscode-panel-tab id=\"tab-1\">\n\t\t\t\t  Classes\n\t\t\t\t  <vscode-badge>1</vscode-badge>\n\t\t\t\t</vscode-panel-tab>\n\t\t\t\t<vscode-panel-tab id=\"tab-2\">\n\t\t\t\t  Properties\n\t\t\t\t  <vscode-badge>1</vscode-badge>\n\t\t\t\t</vscode-panel-tab>\n\t\t\t\t<vscode-panel-tab id=\"tab-3\">\n\t\t\t\t  Individuals\n\t\t\t\t</vscode-panel-tab>\n\t\t\t\t<vscode-panel-view id=\"view-1\"></vscode-panel-view>\n\t\t\t\t<vscode-panel-view id=\"view-2\"></vscode-panel-view>\n\t\t\t\t<vscode-panel-view id=\"view-3\"></vscode-panel-view>\n\t\t\t  </vscode-panels>\n\t\t\t  <script type=\"module\" nonce=\"${nonce}\" src=\"${webviewUri}\"></script>\n\t\t\t</body>\n\t\t  </html>\n\t\t`;\n\t}\n}\n", "import * as vscode from 'vscode';\r\nimport { TurtleParser } from 'millan';\r\n\r\n// https://code.visualstudio.com/api/language-extensions/semantic-highlight-guide#semantic-token-provider\r\n\r\nconst tokenTypes = ['keyword', 'namespace', 'class', 'property', 'label', 'comment', 'string', 'number', 'variable', 'decorator', 'operator', 'const', 'enumMember', 'typeParameter'];\r\nconst tokenModifiers = ['definition', 'declaration', 'documentation', 'readonly', 'modification', 'async', 'defaultLibrary'];\r\nconst legend = new vscode.SemanticTokensLegend(tokenTypes, tokenModifiers);\r\n\r\nconst provider: vscode.DocumentSemanticTokensProvider = {\r\n\tprovideDocumentSemanticTokens(document: vscode.TextDocument): vscode.ProviderResult<vscode.SemanticTokens> {\r\n\t\t// analyze the document and return semantic tokens\r\n\t\tconst parser = new TurtleParser();\r\n\r\n\t\tparser.parse(document.getText(), 'standard');\r\n\r\n\t\tconst tokens = parser.input;\r\n\t\tconst tokensBuilder = new vscode.SemanticTokensBuilder(legend);\r\n\r\n\t\tlet lastToken: string | undefined = undefined;\r\n\r\n\t\tfor (let t of tokens) {\r\n\t\t\ttry {\r\n\t\t\t\tconst startLine = t.startLine ? t.startLine - 1 : 0;\r\n\t\t\t\tconst startColumn = t.startColumn ? t.startColumn - 1 : 0;\r\n\t\t\t\tconst endLine = t.endLine ? t.endLine - 1 : 0;\r\n\t\t\t\tconst endColumn = t.endColumn ? t.endColumn : 0;\r\n\r\n\t\t\t\tconst start = new vscode.Position(startLine, startColumn);\r\n\t\t\t\tconst end = new vscode.Position(endLine, endColumn);\r\n\r\n\t\t\t\tconst token = t.tokenType?.tokenName;\r\n\r\n\t\t\t\tif (!token) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tswitch (token) {\r\n\t\t\t\t\tcase \"A\":\r\n\t\t\t\t\tcase \"TTL_PREFIX\":\r\n\t\t\t\t\t\ttokensBuilder.push(new vscode.Range(start, end), 'keyword');\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"PNAME_NS\":\r\n\t\t\t\t\t\ttokensBuilder.push(new vscode.Range(start, end), 'namespace', ['definition']);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"PNAME_LN\":\r\n\t\t\t\t\t\tconst p = t.image.split(\":\")[0];\r\n\r\n\t\t\t\t\t\tif (lastToken === \"DoubleCaret\") {\r\n\t\t\t\t\t\t\ttokensBuilder.push(new vscode.Range(start, end), 'decorator');\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\ttokensBuilder.push(new vscode.Range(new vscode.Position(startLine, startColumn), new vscode.Position(startLine, startColumn + p.length + 1)), 'namespace', ['declaration']);\r\n\t\t\t\t\t\t\ttokensBuilder.push(new vscode.Range(new vscode.Position(startLine, startColumn + p.length + 1), new vscode.Position(startLine, endColumn)), 'label', []);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"IRIREF\":\r\n\t\t\t\t\t\tif (lastToken === \"DoubleCaret\") {\r\n\t\t\t\t\t\t\ttokensBuilder.push(new vscode.Range(start, end), 'decorator');\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\ttokensBuilder.push(new vscode.Range(start, end), 'enumMember', ['readonly']);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"STRING_LITERAL_SINGLE_QUOTE\":\r\n\t\t\t\t\tcase \"STRING_LITERAL_LONG_QUOTE\":\r\n\t\t\t\t\tcase \"STRING_LITERAL_QUOTE\":\r\n\t\t\t\t\t\ttokensBuilder.push(new vscode.Range(start, end), 'string');\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"DoubleCaret\":\r\n\t\t\t\t\tcase \"LANGTAG\":\r\n\t\t\t\t\t\ttokensBuilder.push(new vscode.Range(start, end), 'decorator');\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"INTEGER\":\r\n\t\t\t\t\tcase \"DECIMAL\":\r\n\t\t\t\t\tcase \"DOUBLE\":\r\n\t\t\t\t\t\ttokensBuilder.push(new vscode.Range(start, end), 'number');\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"COMMENT\":\r\n\t\t\t\t\t\ttokensBuilder.push(new vscode.Range(start, end), 'comment');\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t// tokensBuilder.push(new vscode.Range(start, end), 'const');\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlastToken = token\r\n\t\t\t} catch (e) {\r\n\t\t\t\tconsole.error(e);\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn tokensBuilder.build();\r\n\t}\r\n};\r\n\r\nexport function activate(context: vscode.ExtensionContext) {\r\n\tconst selector = { language: 'turtle' };\r\n\r\n\tvscode.languages.registerDocumentSemanticTokensProvider(selector, provider, legend);\r\n}", "import * as vscode from 'vscode';\r\nimport { LanguageClient, LanguageClientOptions, TransportKind } from 'vscode-languageclient/node';\r\n\r\nexport abstract class LanguageClientBase {\r\n\t/**\r\n\t * Get the relative path to the compiled language server module.\r\n\t */\r\n\tabstract get serverPath(): string;\r\n\r\n\t/**\r\n\t * Get the human readably name of the language.\r\n\t */\r\n\treadonly languageName: string;\r\n\r\n\t/**\r\n\t * The language ID for the language client.\r\n\t */\r\n\treadonly languageId: string;\r\n\r\n\t/**\r\n\t * The channel ID for logging.\r\n\t */\r\n\treadonly channelName: string;\r\n\r\n\t/**\r\n\t * The channel ID for logging.\r\n\t */\r\n\treadonly channelId: string;\r\n\r\n\t/**\r\n\t * The output channel.\r\n\t */\r\n\treadonly channel: vscode.OutputChannel;\r\n\r\n\t/**\r\n\t * The VS Code language client.\r\n\t */\r\n\tclient: LanguageClient | undefined;\r\n\r\n\tconstructor(langaugeId: string, languageName: string) {\r\n\t\tthis.languageName = languageName;\r\n\t\tthis.languageId = langaugeId;\r\n\t\tthis.channelName = `Mentor Language (${languageName})`;\r\n\t\tthis.channelId = `mentor.language.${langaugeId}`;\r\n\t\tthis.channel = vscode.window.createOutputChannel(this.channelName, this.channelId);\r\n\t}\r\n\r\n\tstart(context: vscode.ExtensionContext) {\r\n\t\tconsole.log(`Starting ${this.languageName} Language Client..`);\r\n\r\n\t\tconst module = context.asAbsolutePath(this.serverPath);\r\n\r\n\t\tconst serverOptions = {\r\n\t\t\trun: { module, transport: TransportKind.ipc },\r\n\t\t\tdebug: { module, transport: TransportKind.ipc }\r\n\t\t};\r\n\r\n\t\tconst clientOptions: LanguageClientOptions = {\r\n\t\t\tdiagnosticCollectionName: this.channelId,\r\n\t\t\tdocumentSelector: [{ language: this.languageId }],\r\n\t\t\toutputChannel: this.channel\r\n\t\t};\r\n\r\n\t\tthis.client = new LanguageClient(this.channelId, `${this.languageName} Language Client`, serverOptions, clientOptions);\r\n\t\tthis.client.start();\r\n\t}\r\n\r\n\tasync stop() {\r\n\t\tif (this.client) {\r\n\t\t\tawait this.client.stop();\r\n\t\t}\r\n\t}\r\n}", "import * as path from 'path';\r\nimport { LanguageClientBase } from './language-client';\r\n\r\nexport class TurtleLanguageClient extends LanguageClientBase {\r\n\tget serverPath(): string {\r\n\t\treturn path.join('out', 'language-server-turtle.js');\r\n\t}\r\n\r\n\tconstructor() {\r\n\t\tsuper('turtle', 'Turtle');\r\n\t}\r\n}\r\n", "import * as path from 'path';\r\nimport { LanguageClientBase } from './language-client';\r\n\r\nexport class TrigLanguageClient extends LanguageClientBase {\r\n\tget serverPath(): string {\r\n\t\treturn path.join('out', 'language-server-trig.js');\r\n\t}\r\n\r\n\tconstructor() {\r\n\t\tsuper('trig', 'TriG');\r\n\t}\r\n}\r\n", "import * as path from 'path';\r\nimport { LanguageClientBase } from './language-client';\r\n\r\nexport class SparqlLanguageClient extends LanguageClientBase {\r\n\tget serverPath(): string {\r\n\t\treturn path.join('out', 'language-server-sparql.js');\r\n\t}\r\n\r\n\tconstructor() {\r\n\t\tsuper('sparql', 'SPARQL');\r\n\t}\r\n}\r\n"],
  "mappings": "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",
  "names": ["v", "d", "b", "__assign", "module", "prefix", "self", "queueMicrotask", "quad", "prefixes", "prefix", "xsd", "namedNode", "prefix", "literal", "quad", "DEFAULTGRAPH", "rdf", "xsd", "literal", "prefix", "prefixes", "module", "self", "module", "isBlob", "EventTarget", "defineEventAttribute", "module", "module", "String", "module", "module", "Symbol", "module", "process", "Promise", "module", "process", "Symbol", "self", "err", "module", "module", "module", "Uint8Array", "Buffer", "module", "module", "process", "Buffer", "Readable", "module", "process", "Promise", "Symbol", "Readable", "Buffer", "self", "module", "process", "Error", "Symbol", "Buffer", "stream", "state", "module", "process", "Readable", "isBlob", "then", "module", "Readable", "module", "Symbol", "Transform", "module", "Transform", "module", "process", "Promise", "Readable", "err", "onError", "endFn", "module", "writable", "readable", "module", "Number", "Promise", "Symbol", "map", "asIndexedPairs", "options", "flatMap", "drop", "take", "module", "Promise", "module", "Buffer", "fn", "module", "quad", "import_readable_stream", "quad", "prefix", "import_readable_stream", "quad", "prefix", "ResourceRepository", "ClassRepository", "path", "o", "PropertyRepository", "path", "o", "IndividualRepository", "quad", "OwlReasoner", "quad", "StoreFactory", "path", "quad", "quad", "prefix", "s", "path", "root", "factory", "exports", "module", "define", "amd", "self", "this", "installedModules", "__webpack_require__", "moduleId", "i", "l", "modules", "call", "m", "c", "d", "name", "getter", "o", "Object", "defineProperty", "enumerable", "get", "r", "Symbol", "toStringTag", "value", "t", "mode", "__esModule", "ns", "create", "key", "bind", "n", "object", "property", "prototype", "hasOwnProperty", "p", "s", "__assign", "assign", "arguments", "length", "apply", "__rest", "e", "indexOf", "getOwnPropertySymbols", "__webpack_exports__", "keywords_createKeyword", "keywords", "keywords_assign", "keywords_rest", "_a", "_b", "longer_alt", "UNKNOWN", "props", "pattern", "api", "RegExp", "SELECT", "CONSTRUCT", "DISTINCT", "START", "END", "VIA", "PATHS", "PATHS_ALL", "PATHS_SHORTEST", "CYCLIC", "AS", "WHERE", "A", "GROUP_BY", "ORDER_BY", "BY", "BASE", "PREFIX", "DESCRIBE", "ASK", "FROM", "REDUCED", "NAMED", "HAVING", "ASC", "DESC", "OFFSET", "LIMIT", "VALUES", "LOAD", "SILENT", "INTO", "CLEAR", "DROP", "CREATE", "ADD", "TO", "MOVE", "COPY", "INSERT_DATA", "DELETE_DATA", "DELETE_WHERE", "WITH", "DELETE", "INSERT", "USING", "DEFAULT", "GRAPH", "ALL", "OPTIONAL", "SERVICE", "BIND", "UNNEST", "UNDEF", "MINUS", "UNION", "FILTER", "STR", "LANG", "LANGMATCHES", "DATATYPE", "BOUND", "IRI", "URI", "BNODE", "RAND", "ABS", "CEIL", "FLOOR", "ROUND", "CONCAT", "STRLEN", "UCASE", "LCASE", "ENCODE_FOR_URI", "CONTAINS", "STRSTARTS", "STRENDS", "STRBEFORE", "STRAFTER", "YEAR", "MONTH", "DAY", "HOURS", "MINUTES", "SECONDS", "TIMEZONE", "TZ", "NOW", "UUID", "STRUUID", "MD5", "SHA1", "SHA256", "SHA384", "SHA512", "COALESCE", "IF", "STRLANG", "STRDT", "sameTerm", "isIRI", "isURI", "isBLANK", "isLITERAL", "isNUMERIC", "REGEX", "SUBSTR", "REPLACE", "EXISTS", "NOT_EXISTS", "COUNT", "SUM", "MIN", "AVG", "SAMPLE", "GROUP_CONCAT", "SEPARATOR", "TRUE", "FALSE", "IN", "NOT_IN", "MAX_LENGTH", "MAX", "VALIDATE", "SHAPES", "SHAPE", "PER", "parser_1", "lexer_public_1", "tokens_public_1", "exceptions_public_1", "version_1", "errors_public_1", "render_public_1", "gast_visitor_public_1", "gast_public_1", "gast_resolver_public_1", "generate_public_1", "lexer_errors_public_1", "API", "VERSION", "Parser", "CstParser", "EmbeddedActionsParser", "ParserDefinitionErrorType", "Lexer", "LexerDefinitionErrorType", "EOF", "tokenName", "tokenLabel", "tokenMatcher", "createToken", "createTokenInstance", "EMPTY_ALT", "defaultParserErrorProvider", "isRecognitionException", "EarlyExitException", "MismatchedTokenException", "NotAllInputParsedException", "NoViableAltException", "defaultLexerErrorProvider", "Flat", "Repetition", "RepetitionWithSeparator", "RepetitionMandatory", "RepetitionMandatoryWithSeparator", "Option", "Alternation", "NonTerminal", "Terminal", "Rule", "GAstVisitor", "serializeGrammar", "serializeProduction", "resolveGrammar", "defaultGrammarResolverErrorProvider", "validateGrammar", "defaultGrammarValidatorErrorProvider", "assignOccurrenceIndices", "clearCache", "console", "warn", "createSyntaxDiagramsCode", "generateParserFactory", "generateParserModule", "regex", "or", "_i", "map", "source", "join", "and", "option", "many", "CATCH_ALL", "CATCH_ALL_AT_LEAST_ONE", "IRIREF", "PN_CHARS_BASE", "LANGTAG", "INTEGER", "DECIMAL", "EXPONENT", "ECHAR", "WS", "HEX", "PN_LOCAL_ESC", "PN_CHARS_U", "PN_CHARS", "PN_PREFIX", "PERCENT", "PLX", "PN_LOCAL", "VARNAME", "ANON", "NIL", "STRING_LITERAL1", "STRING_LITERAL2", "STRING_LITERAL_LONG1", "STRING_LITERAL_LONG2", "DOUBLE", "INTEGER_POSITIVE", "DECIMAL_POSITIVE", "DOUBLE_POSITIVE", "INTEGER_NEGATIVE", "DECIMAL_NEGATIVE", "DOUBLE_NEGATIVE", "VAR1", "VAR2", "BLANK_NODE_LABEL", "PNAME_NS", "PNAME_LN", "_regex__WEBPACK_IMPORTED_MODULE_0__", "isEmpty", "arr", "keys", "obj", "values", "vals", "push", "mapValues", "callback", "result", "objKeys", "idx", "currKey", "flatten", "currItem", "Array", "isArray", "concat", "first", "last", "len", "undefined", "forEach", "collection", "iteratorCallback", "isObject", "Error", "colKeys", "isString", "item", "isUndefined", "isFunction", "Function", "drop", "howMuch", "slice", "dropRight", "filter", "predicate", "reject", "pick", "has", "prop", "contains", "find", "cloneArr", "newArr", "cloneObj", "clonedObj", "findAll", "found", "reduce", "arrOrObj", "iterator", "initial", "isArr", "accumulator", "compact", "uniq", "identity", "identities", "currIdentity", "partial", "func", "restArgs", "allArgs", "isRegExp", "every", "difference", "some", "sortBy", "orderFunc", "sort", "a", "b", "zipObject", "target", "sources", "curSource", "currSourceKeys", "j", "assignNoOverwrite", "defaults", "groupBy", "groupKeyFunc", "currGroupKey", "currGroupArr", "merge", "obj1", "obj2", "keys2", "NOOP", "IDENTITY", "packArray", "holeyArr", "orgValue", "PRINT_ERROR", "msg", "error", "PRINT_WARNING", "isES2015MapSupported", "Map", "applyMixins", "derivedCtor", "baseCtors", "baseCtor", "baseProto", "getOwnPropertyNames", "propName", "basePropDescriptor", "getOwnPropertyDescriptor", "set", "toFastProperties", "toBecomeFast", "FakeConstructor", "fakeInstance", "fakeAccess", "bar", "terminals", "chevrotain__WEBPACK_IMPORTED_MODULE_0__", "helpers_matchers__WEBPACK_IMPORTED_MODULE_1__", "STRING_LITERAL_LONG1_TOKEN", "STRING_LITERAL_LONG2_TOKEN", "PNAME_LN_TOKEN", "label", "extendStatics", "__extends", "setPrototypeOf", "__proto__", "__", "constructor", "utils_1", "AbstractProduction", "definition", "accept", "visitor", "visit", "prod", "_super", "options", "_this", "v", "referencedRule", "configurable", "orgText", "node", "convertDefinition", "type", "nonTerminalName", "separator", "terminalType", "serializedTerminal", "PATTERN", "topRules", "lang_extensions_1", "tokens_1", "hasTokenLabel", "LABEL", "functionName", "clazz", "PARENT", "CATEGORIES", "GROUP", "PUSH_MODE", "POP_MODE", "LONGER_ALT", "LINE_BREAKS", "START_CHARS_HINT", "config", "tokenType", "defineNameProp", "augmentTokenTypes", "NA", "tokType", "image", "startOffset", "endOffset", "startLine", "endLine", "startColumn", "endColumn", "tokenTypeIdx", "token", "tokenStructuredMatcher", "follow_1", "gast_builder_1", "cst_1", "recoverable_1", "looksahead_1", "tree_builder_1", "lexer_adapter_1", "recognizer_api_1", "recognizer_engine_1", "error_handler_1", "context_assist_1", "END_OF_FILE", "NaN", "freeze", "DEFAULT_PARSER_CONFIG", "recoveryEnabled", "maxLookahead", "ignoredIssues", "dynamicTokensEnabled", "outputCst", "errorMessageProvider", "serializedGrammar", "nodeLocationTracking", "DEFAULT_RULE_CONFIG", "recoveryValueFunc", "resyncEnabled", "tokenVocabulary", "definitionErrors", "selfAnalysisDone", "initErrorHandler", "initLexerAdapter", "initLooksAhead", "initRecognizerEngine", "initRecoverable", "initTreeBuilder", "initContentAssist", "performSelfAnalysis", "parserInstance", "defErrorsMsgs", "className", "classNameFromInstance", "productions", "gastProductionsCache", "rules", "deserializeGrammar", "tokensMap", "rule", "put", "resolverErrors", "validationErrors", "tokenTypes", "errMsgProvider", "grammarName", "allFollows", "computeAllProdsFollows", "resyncFollows", "cstAnalysisResult", "analyzeCst", "fullRuleNameToShort", "allRuleNames", "DEFER_DEFINITION_ERRORS_HANDLING", "defError", "message", "Recoverable", "LooksAhead", "TreeBuilder", "LexerAdapter", "RecognizerEngine", "RecognizerApi", "ErrorHandler", "ContentAssist", "configClone", "sparqlTokenMap", "baseTokens", "pathsTokens", "nonStandardTokens", "stardogSparqlTokens", "sparqlTokenTypes", "_terminals__WEBPACK_IMPORTED_MODULE_1__", "_keywords__WEBPACK_IMPORTED_MODULE_2__", "Comment", "group", "LCurly", "RCurly", "LParen", "RParen", "WhiteSpace", "SKIPPED", "line_breaks", "Star", "Period", "QuestionMark", "Plus", "Minus", "LBracket", "RBracket", "Semicolon", "Comma", "Pipe", "ForwardSlash", "Caret", "DoubleCaret", "Bang", "LogicalOr", "LogicalAnd", "Equals", "NotEquals", "LessThan", "GreaterThan", "LessThanEquals", "GreaterThanEquals", "LEmbed", "REmbed", "indexOfSelect", "instance", "FUNC_NAME_REGEXP", "NAME", "existingNameProp", "toString", "match", "nameValue", "namePropDescriptor", "writable", "HashTable", "_state", "putAll", "other", "containsKey", "clear", "visitNonTerminal", "visitFlat", "visitOption", "visitRepetitionMandatory", "visitRepetitionMandatoryWithSeparator", "visitRepetitionWithSeparator", "visitRepetition", "visitAlternation", "visitTerminal", "visitRule", "traverse", "unsafeTraverse", "isCstNode", "isIToken", "getFirstChildCstElementByRuleStack", "_traverse", "Boolean", "ruleStack", "rootCstNode", "currentCstElement", "ruleStack_1", "ruleName", "children", "TraverseContext", "parentCtx", "ctx", "visitSafely", "childType", "child", "childCtx", "transformedCtx", "nextCtx", "MISMATCHED_TOKEN_EXCEPTION", "NO_VIABLE_ALT_EXCEPTION", "EARLY_EXIT_EXCEPTION", "NOT_ALL_INPUT_PARSED_EXCEPTION", "RECOGNITION_EXCEPTION_NAMES", "previousToken", "resyncedTokens", "expandCategories", "categories", "searching", "currTokType", "newCategories", "assignTokenDefaultProps", "hasShortKeyProperty", "tokenIdxToClass", "tokenShortNameIdx", "hasCategoriesProperty", "hasExtendingTokensTypesProperty", "categoryMatches", "hasExtendingTokensTypesMapProperty", "categoryMatchesMap", "hasTokenNameProperty", "assignCategoriesTokensProp", "val", "assignCategoriesMapProp", "singleAssignCategoriesToksMap", "path", "nextNode", "pathNode", "nextCategory", "newPath", "tokInstance", "tokConstructor", "instanceType", "isParent", "tokenStructuredMatcherNoCategories", "tokenTypesAndParents", "isTokenType", "isSequenceProd", "isOptionalProd", "alreadyVisited", "subProd", "isBranchingProd", "getProductionDslName", "DslMethodsCollectorVisitor", "dslMethods", "alternation", "repetition", "repetitionWithSeparator", "repetitionMandatory", "repetitionMandatoryWithSeparator", "terminal", "subrule", "manySep", "atLeastOne", "atLeastOneSep", "getKeyForAutomaticLookahead", "ruleIdx", "dslMethodIdx", "occurrence", "BITS_FOR_METHOD_IDX", "BITS_FOR_OCCURRENCE_IDX", "BITS_FOR_RULE_IDX", "BITS_FOR_ALT_IDX", "OR_IDX", "OPTION_IDX", "MANY_IDX", "AT_LEAST_ONE_IDX", "MANY_SEP_IDX", "AT_LEAST_ONE_SEP_IDX", "BITS_START_FOR_ALT_IDX", "getKeyForAltIndex", "altIdx", "altIdxBitMap", "utils", "gast_1", "checks_1", "buildMismatchTokenMessage", "expected", "actual", "previous", "buildNotAllInputParsedMessage", "firstRedundant", "buildNoViableAltMessage", "expectedPathsPerAlt", "customUserDescription", "errSuffix", "allLookAheadPaths", "currAltPaths", "nextValidTokenSequences", "currPath", "currTokenType", "itemMsg", "buildEarlyExitMessage", "expectedIterationPaths", "buildRuleNotFoundError", "topLevelRule", "undefinedRule", "buildDuplicateFoundError", "duplicateProds", "topLevelName", "duplicateProd", "index", "dslName", "extraArgument", "replace", "buildInvalidNestedRuleNameError", "nestedProd", "validNestedRuleName", "buildDuplicateNestedRuleNameError", "buildNamespaceConflictError", "buildAlternationPrefixAmbiguityError", "pathMsg", "prefixPath", "currTok", "ambiguityIndices", "buildAlternationAmbiguityError", "currtok", "currMessage", "docs_version", "buildEmptyRepetitionError", "buildTokenNameError", "expectedPattern", "buildEmptyAlternationError", "emptyChoiceIdx", "buildTooManyAlternativesError", "buildLeftRecursionError", "leftRecursionPath", "currRule", "buildInvalidRuleNameError", "buildDuplicateRuleNameError", "lookahead_1", "interpreter_1", "identifyProductionForDuplicates", "getExtraProductionArgument", "topLevels", "duplicateErrors", "currTopLevel", "collectorVisitor", "OccurrenceValidationCollector", "allRuleProductions", "allProductions", "productionGroups", "duplicates", "currGroup", "currDuplicates", "firstProd", "DUPLICATE_PRODUCTIONS", "param", "parameter", "leftRecursionErrors", "currTopRule", "validateNoLeftRecursion", "emptyAltErrors", "ambiguousAltsErrors", "emptyRepetitionErrors", "validateEmptyOrAlternative", "validateAmbiguousAlternationAlternatives", "validateSomeNonEmptyLookaheadPath", "termsNamespaceConflictErrors", "errors", "tokenNames", "currToken", "currRuleName", "errMsg", "CONFLICT_TOKENS_RULES_NAMESPACE", "tokenNameErrors", "validateTokenName", "nestedRulesNameErrors", "curTopLevel", "namedCollectorVisitor", "NamedDSLMethodsCollectorVisitor", "nestedProds", "orgProd", "currNestedProd", "validateNestedRuleName", "nestedRulesDuplicateErrors", "topLevelRules", "prodsByGroup", "currDupGroup", "currDupProds", "dupGroup", "DUPLICATE_NESTED_NAME", "tooManyAltsErrors", "curRule", "validateTooManyAlts", "ruleNameErrors", "validateRuleName", "duplicateRulesError", "validateRuleDoesNotAlreadyExist", "validTermsPattern", "INVALID_RULE_NAME", "topLevel", "INVALID_NESTED_RULE_NAME", "INVALID_TOKEN_NAME", "allRules", "DUPLICATE_RULE_NAME", "topRule", "nextNonTerminals", "getFirstNoneTerminal", "LEFT_RECURSION", "validNextSteps", "errorsFromNextSteps", "currRefRule", "currSubDef", "isFirstOptional", "hasMore", "rest", "validateRuleIsOverridden", "definedRulesNames", "INVALID_RULE_OVERRIDE", "OrCollector", "alternations", "orCollector", "ors", "currOr", "exceptLast", "currErrors", "currAlternative", "currAltIdx", "possibleFirstInAlt", "nextPossibleTokensAfter", "NONE_LAST_EMPTY_ALT", "alternative", "ignoredIssuesForCurrentRule", "currOccurrence", "alternatives", "getLookaheadPathsForOr", "altsAmbiguityErrors", "foundAmbiguousPaths", "identicalAmbiguities", "currAlt", "altsCurrPathAppearsIn", "currOtherAlt", "currOtherAltIdx", "containsPath", "alts", "currAmbDescriptor", "ambgIndices", "AMBIGUOUS_ALTS", "altsPrefixAmbiguityErrors", "checkPrefixAlternativesAmbiguities", "RepetionCollector", "TOO_MANY_ALTS", "currProd", "prodType", "getProdType", "pathsInsideProduction", "getLookaheadPathsForOptionalProd", "NO_NON_EMPTY_LOOKAHEAD", "pathsAndIndices", "currPathsAndIdx", "currPathAndIdx", "targetIdx", "targetPath", "prefixAmbiguitiesPathsAndIndices", "searchPathAndIdx", "isStrictPrefixOfPath", "currPathPrefixErrors", "currAmbPathAndIdx", "AMBIGUOUS_PREFIX_ALTS", "PROD_TYPE", "rest_1", "OPTION", "REPETITION", "REPETITION_MANDATORY", "REPETITION_MANDATORY_WITH_SEPARATOR", "REPETITION_WITH_SEPARATOR", "ALTERNATION", "buildLookaheadFuncForOr", "ruleGrammar", "k", "hasPredicates", "laFuncBuilder", "lookAheadPaths", "areTokenCategoriesNotUsed", "buildLookaheadFuncForOptionalProd", "lookaheadBuilder", "buildAlternativesLookAheadFunc", "numOfAlts", "areAllOneTokenLookahead", "orAlts", "predicates", "GATE", "currNumOfPaths", "currPredicate", "nextPath", "currPathLength", "nextToken", "LA", "singleTokenAlts", "choiceToAlt_1", "currExtendingType", "buildSingleAlternativeLookaheadFunction", "alt", "numOfPaths", "singleTokensTypes", "expectedTokenUniqueKey_1", "choiceToAlt_2", "RestDefinitionFinderWalker", "topProd", "targetOccurrence", "targetProdType", "startWalking", "walk", "restDef", "checkIsTarget", "expectedProdType", "currRest", "prevRest", "walkOption", "optionProd", "walkAtLeastOne", "atLeastOneProd", "walkAtLeastOneSep", "atLeastOneSepProd", "walkMany", "manyProd", "walkManySep", "manySepProd", "RestWalker", "InsideDefinitionFinderVisitor", "expectedProdName", "lookAheadSequenceFromAlternatives", "altsDefs", "getOtherPaths", "pathsAndSuffixes", "filterIdx", "currPathsAndSuffixes", "currIdx", "currPartialPaths", "singlePathAndSuffix", "partialPath", "isUniquePrefix", "currOtherPath", "currPathTok", "tokTypeA", "tokTypeB", "initializeArrayOfArrays", "size", "partialAlts", "possiblePathsFrom", "finalResult", "newData", "pathLength", "currDataset", "resultIdx", "currAltPathsAndSuffixes", "otherPaths", "currPathIdx", "currPathPrefix", "suffixDef", "currAltResult", "newPartialPathsAndSuffixes", "insideDefVisitor", "insideDef", "afterDef", "otherPath", "targetItem", "singleAltPaths", "singlePath", "prefix", "otherTokType", "first_1", "AbstractNextPossibleTokensWalker", "possibleTokTypes", "nextProductionName", "nextProductionOccurrence", "isAtEndOfPath", "reverse", "occurrenceStack", "pop", "updateExpectedNext", "walkProdRef", "refProd", "fullRest", "NextAfterTokenWalker", "nextTerminalName", "nextTerminalOccurrence", "lastTok", "lastTokOccurrence", "walkTerminal", "restProd", "AbstractNextTerminalAfterProductionWalker", "isEndOfRule", "NextTerminalAfterManyWalker", "firstAfterMany", "NextTerminalAfterManySepWalker", "firstAfterManySep", "NextTerminalAfterAtLeastOneWalker", "firstAfterAtLeastOne", "NextTerminalAfterAtLeastOneSepWalker", "atleastOneSepProd", "firstAfterfirstAfterAtLeastOneSep", "expandTopLevelRule", "currRuleStack", "currOccurrenceStack", "newRuleStack", "newCurrOccurrenceStack", "def", "targetDef", "maxLength", "getAlternativesForProd", "newDef", "initialDef", "tokenVector", "tokMatcher", "maxLookAhead", "EXIT_NON_TERMINAL_ARR", "foundCompletePath", "tokenVectorLength", "minimalAlternativesIndex", "possiblePaths", "currDef", "nextIdx", "nextTokenType", "nextTokenOccurrence", "newOccurrenceStack", "nextPathWithout", "nextPathWith", "secondIteration", "separatorGast", "nthRepetition", "currAltPath", "BaseSparqlParser", "log", "args", "tokenVocab", "tokenize", "document", "lexer", "tokens", "parse", "entryRule", "SparqlDoc", "lexerResult", "input", "comments", "groups", "cst", "parseGroupGraphPattern", "GroupGraphPattern", "parseTriplesBlock", "TriplesBlock", "RULE", "MANY", "OR", "ALT", "SUBRULE", "Prologue", "QueryUnit", "UpdateUnit", "Query", "SelectQuery", "ConstructQuery", "DescribeQuery", "AskQuery", "ValuesClause", "Constant", "iri", "RDFLiteral", "NumericLiteral", "BooleanLiteral", "MaxLength", "CONSUME", "Update", "AT_LEAST_ONE", "BaseDecl", "PrefixDecl", "SelectClause", "DatasetClause", "WhereClause", "SolutionModifier", "SubSelect", "OR1", "OR2", "Var", "Expression", "SUBRULE1", "ConstructTemplate", "MANY1", "TriplesTemplate", "VarOrIri", "DefaultGraphClause", "NamedGraphClause", "SourceSelector", "GroupClause", "OPTION1", "HavingClause", "OPTION2", "OrderClause", "OPTION3", "LimitOffsetClause", "GroupCondition", "BuiltInCall", "FunctionCall", "HavingCondition", "Constraint", "OrderCondition", "BrackettedExpression", "LimitClause", "OffsetClause", "DataBlock", "Update1", "Load", "Clear", "Drop", "Add", "Move", "Copy", "Create", "InsertData", "DeleteData", "DeleteWhere", "Modify", "GraphRef", "GraphRefAll", "GraphOrDefault", "QuadData", "QuadPattern", "DeleteClause", "InsertClause", "UsingClause", "Quads", "QuadsNotTriples", "TriplesSameSubject", "GroupGraphPatternSub", "GraphPatternNotTriples", "TriplesSameSubjectPath", "GroupOrUnionGraphPattern", "OptionalGraphPattern", "MinusGraphPattern", "GraphGraphPattern", "ServiceGraphPattern", "Filter", "Bind", "InlineData", "InlineDataOneVar", "InlineDataFull", "DataBlockValue", "CONSUME1", "MANY2", "ArgList", "ExpressionList", "ConstructTriples", "VarOrTerm", "PropertyListNotEmpty", "TriplesNode", "PropertyList", "Verb", "ObjectList", "AT_LEAST_ONE_SEP", "SEP", "DEF", "GraphNode", "PropertyListPathNotEmpty", "TriplesNodePath", "PropertyListPath", "VerbPath", "VerbSimple", "ObjectListPath", "Path", "ObjectPath", "GraphNodePath", "PathAlternative", "PathSequence", "PathEltOrInverse", "PathElt", "PathPrimary", "PathMod", "PathNegatedPropertySet", "PathOneInPropertySet", "MANY_SEP", "Integer", "Collection", "BlankNodePropertyList", "CollectionPath", "BlankNodePropertyListPath", "GraphTerm", "BlankNode", "ConditionalOrExpression", "ConditionalAndExpression", "ValueLogical", "RelationalExpression", "NumericExpression", "AdditiveExpression", "MultiplicativeExpression", "NumericLiteralPositive", "NumericLiteralNegative", "OR3", "OR4", "UnaryExpression", "SUBRULE2", "PrimaryExpression", "SUBRULE3", "iriOrFunction", "BuiltInCall_STR", "BuiltInCall_LANG", "BuiltInCall_LANGMATCHES", "BuiltInCall_DATATYPE", "BuiltInCall_BOUND", "BuiltInCall_IRI", "BuiltInCall_URI", "BuiltInCall_BNODE", "BuiltInCall_RAND", "BuiltInCall_ABS", "BuiltInCall_CEIL", "BuiltInCall_FLOOR", "BuiltInCall_ROUND", "BuiltInCall_CONCAT", "BuiltInCall_STRLEN", "BuiltInCall_UCASE", "BuiltInCall_LCASE", "BuiltInCall_ENCODE_FOR_URI", "BuiltInCall_CONTAINS", "BuiltInCall_STRSTARTS", "BuiltInCall_STRENDS", "BuiltInCall_STRBEFORE", "BuiltInCall_STRAFTER", "BuiltInCall_YEAR", "BuiltInCall_MONTH", "BuiltInCall_DAY", "BuiltInCall_HOURS", "BuiltInCall_MINUTES", "BuiltInCall_SECONDS", "BuiltInCall_TIMEZONE", "BuiltInCall_TZ", "BuiltInCall_NOW", "BuiltInCall_UUID", "BuiltInCall_STRUUID", "BuiltInCall_MD5", "BuiltInCall_SHA1", "BuiltInCall_SHA256", "BuiltInCall_SHA384", "BuiltInCall_SHA512", "BuiltInCall_COALESCE", "BuiltInCall_IF", "BuiltInCall_STRLANG", "BuiltInCall_STRDT", "BuiltInCall_sameTerm", "BuiltInCall_isIRI", "BuiltInCall_isURI", "BuiltInCall_isBLANK", "BuiltInCall_isLITERAL", "BuiltInCall_isNUMERIC", "Aggregate", "SubstringExpression", "StrReplaceExpression", "RegexExpression", "ExistsFunction", "NotExistsFunction", "CONSUME2", "Count", "CONSUME3", "Sum", "Min", "Max", "Avg", "Sample", "GroupConcat", "String", "NumericLiteralUnsigned", "PrefixedName", "walkFlat", "walkOr", "flatProd", "fullOrRest", "fullAtLeastOneRest", "fullAtLeastOneSepRest", "restForRepetitionWithSeparator", "fullManyRest", "fullManySepRest", "orProd", "prodWrapper", "repSepProd", "lexer_1", "DEFAULT_LEXER_CONFIG", "deferDefinitionErrorsHandling", "positionTracking", "lineTerminatorsPattern", "lineTerminatorCharacters", "ensureOptimizations", "safeMode", "lexerDefinition", "lexerDefinitionErrors", "lexerDefinitionWarning", "patternIdxToConfig", "charCodeToPatternIdxToConfig", "modes", "emptyGroups", "trackStartLines", "trackEndLines", "hasCustom", "canModeBeOptimized", "LineTerminatorOptimizedTester", "test", "actualDefinition", "hasOnlySingleMode", "DEFAULT_MODE", "performRuntimeChecks", "performWarningRuntimeChecks", "currModeValue", "currModeName", "allModeNames", "currModDef", "currModName", "validatePatterns", "currAnalyzeResult", "analyzeTokenTypes", "canBeOptimized", "defaultMode", "allErrMessagesString", "warningDescriptor", "SUPPORT_STICKY", "chopInput", "matchWithTest", "updateLastIndex", "matchWithExec", "handleModes", "computeNewColumn", "updateTokenEndLineColumnLocation", "createFullToken", "createStartOnlyToken", "createOffsetOnlyToken", "addToken", "addTokenUsingPush", "addTokenUsingMemberAccess", "unOptimizedModes", "cannotBeOptimized", "modeName", "text", "initialMode", "tokenizeInternal", "matchAltImage", "longerAltIdx", "matchedImage", "imageLength", "newToken", "errLength", "orgLength", "offset", "matchedTokensIndex", "guessedNumberOfTokens", "Math", "floor", "matchedTokens", "line", "column", "cloneEmptyGroups", "trackLines", "lineTerminatorPattern", "currModePatternsLength", "currCharCodeToPatternIdxToConfig", "modeStack", "emptyArray", "currConfig", "getPossiblePatterns", "pop_mode", "popToken", "msg_1", "buildUnableToPopLexerModeMessage", "newMode", "modeCanBeOptimized", "charCode", "possiblePatterns", "push_mode", "nextCharCode", "charCodeAt", "chosenPatternIdxToConfig", "chosenPatternsLength", "currPattern", "singleCharCode", "short", "isCustom", "exec", "longerAlt", "longerAltConfig", "longerAltPattern", "canLineTerminator", "numOfLTsInMatch", "foundTerminator", "lastLTEndOffset", "lastIndex", "errorStartOffset", "errorLine", "errorColumn", "foundResyncPoint", "currConfig_1", "buildUnexpectedCharactersMessage", "pushMode", "substring", "regExp", "newLastIndex", "lastLTIdx", "lastCharIsLT", "fixForEndingInLT", "oldColumn", "tokenToAdd", "regExpArray", "keys_1", "setNodeLocationOnlyOffset", "currNodeLocation", "newLocationInfo", "isNaN", "setNodeLocationFull", "addTerminalToCst", "tokenTypeName", "addNoneTerminalToCst", "ruleResult", "collectNamedDSLMethod", "newNodeConstructor", "methodIdx", "nameLessNode", "hasMoreThanOneAlternative", "currFlatAlt", "fullToShortName", "dictDef", "currTopRuleShortName", "getAsTypedTuple", "escapeSequence", "escapeReplacements", "\\", "'", "\"", "f", "_", "~", ".", "-", "!", "$", "&", "(", ")", "*", "+", ",", ";", "=", "/", "?", "#", "@", "%", "unescapedStringLiteralQuote", "unescapedStringLiteralSingleQuote", "stringLiteralQuote", "stringLiteralSingleQuote", "stringLiteralLongQuote", "stringLiteralLongSingleQuote", "illegalIriChars", "escapedIri", "unescapedIri", "unescape_unescape", "unicode4", "unicode8", "escapedChar", "fromCharCode", "parseInt", "replacement", "turtleTokenMap", "turtleTokenTypes", "unicodeRegexp", "TTL_BASE", "TTL_PREFIX", "matchers", "STRING_LITERAL_LONG_SINGLE_QUOTE", "STRING_LITERAL_LONG_QUOTE", "STRING_LITERAL_QUOTE", "textToMatch", "STRING_LITERAL_SINGLE_QUOTE", "UCHAR", "__WEBPACK_AMD_DEFINE_FACTORY__", "__WEBPACK_AMD_DEFINE_ARRAY__", "__WEBPACK_AMD_DEFINE_RESULT__", "RegExpParser", "saveState", "groupIdx", "restoreState", "newState", "consumeChar", "disjunction", "flags", "global", "ignoreCase", "multiLine", "unicode", "sticky", "isRegExpFlag", "popChar", "addFlag", "peekChar", "terms", "isTerm", "term", "isAssertion", "assertion", "atom", "ASSERT_EXISTS", "ASSERT_NEVER_REACH_HERE", "quantifier", "isBacktracking", "range", "atLeast", "atMost", "Infinity", "integerIncludingZero", "isDigit", "greedy", "dotAll", "atomEscape", "characterClass", "isPatternCharacter", "patternCharacter", "isQuantifier", "complement", "cc", "decimalEscapeAtom", "characterClassEscape", "controlEscapeAtom", "controlLetterEscapeAtom", "nulCharacterAtom", "hexEscapeSequenceAtom", "regExpUnicodeEscapeSequenceAtom", "identityEscapeAtom", "positiveInteger", "digitsCharCodes", "whitespaceCodes", "wordCharCodes", "escapeCode", "letter", "letterCode", "toUpperCase", "parseHexDigits", "classPatternCharacterAtom", "nextChar", "isClassAtom", "from", "classAtom", "isFromSingleChar", "isRangeDash", "to", "isToSingleChar", "insertToSet", "classEscape", "capturing", "groupAst", "number", "decimalPatternNoZero", "decimalPattern", "isAtom", "prevState", "howMany", "hexString", "hexChar", "hexDigitPattern", "char", "subItem", "flagObj", "flagKey", "BaseRegExpVisitor", "visitChildren", "subChild", "visitPattern", "visitFlags", "visitDisjunction", "visitAlternative", "visitStartAnchor", "visitEndAnchor", "visitWordBoundary", "visitNonWordBoundary", "visitLookahead", "visitNegativeLookahead", "visitCharacter", "visitSet", "visitGroup", "visitGroupBackReference", "visitQuantifier", "fullText", "charAt", "firstForTerminal", "firstForSequence", "firstForBranching", "currSubProd", "firstSet", "seq", "nextSubProdIdx", "hasInnerProdsRemaining", "isLastInnerProdOptional", "allAlternativesFirsts", "innerProd", "ProdType", "range_1", "namePropRegExp", "namePropRegExpNoCurlyFirstOfTwo", "terminalRegEx", "terminalRegGlobal", "refRegEx", "refRegExGlobal", "optionPrefixRegEx", "optionRegEx", "optionRegExGlobal", "manyPrefixRegEx", "manyRegEx", "manyRegExGlobal", "sepPropRegEx", "manyWithSeparatorRegEx", "manyWithSeparatorRegExGlobal", "atLeastOneWithSeparatorRegEx", "atLeastOneWithSeparatorRegExGlobal", "atLeastOnePrefixRegEx", "atLeastOneRegEx", "atLeastOneRegExGlobal", "orPrefixRegEx", "orRegEx", "orRegExGlobal", "orPartRegEx", "orPartRegExGlobal", "buildProdGast", "prodRange", "allRanges", "buildProdWithOccurrence", "buildRepetitionWithSep", "FLAT", "prodInstance", "nestedName", "buildAbstractProd", "REF", "reResult", "refOccurrence", "refProdName", "TERMINAL", "terminalOccurrence", "terminalName", "terminalNameToConstructor", "regEx", "isImplicitOccurrenceIdx", "repConstructor", "occurrenceIdx", "sepName", "separatorType", "repetitionInstance", "topLevelRange", "secondLevelProds", "getDirectlyContainedRanges", "secondLevelInOrder", "prodRng", "start", "y", "prodRanges", "x", "isXDescendantOfY", "strictlyContainsRange", "xDoesNotHaveAnyAncestorWhichIsDecendantOfY", "maybeAnotherParent", "isParentOfX", "isChildOfY", "isStrictlyContainedInRange", "buildTopProduction", "impelText", "createRanges", "removeStringLiterals", "removeComments", "topRange", "Range", "singleLineCommentRegEx", "multiLineCommentRegEx", "doubleQuoteStringLiteralRegEx", "singleQuoteStringLiteralRegEx", "replaceWithEmptyStringExceptNestedRules", "nestedRuleGroup", "terminalRanges", "createTerminalRanges", "refsRanges", "createRefsRanges", "atLeastOneRanges", "createAtLeastOneRanges", "atLeastOneSepRanges", "createAtLeastOneSepRanges", "manyRanges", "createManyRanges", "manySepRanges", "createManySepRanges", "optionRanges", "createOptionRanges", "orRanges", "createOrRanges", "createRefOrTerminalProdRangeInternal", "createOperatorProdRangeParenthesis", "orSubPartsRanges", "createOrPartRanges", "findClosingCurly", "findClosingOffset", "findClosingParen", "orPartRanges", "orRange", "currOrParts", "createOperatorProdRangeInternal", "currOrRangeStart", "orPart", "end", "matched", "stop_1", "currRange", "currText", "findTerminatorOffSet", "operatorRanges", "stop_2", "substr", "opening", "closing", "parenthesisStack", "grammar", "production", "deserializeProduction", "resolver_1", "topRulesTable", "methodsCollector", "methods", "currMethod", "arrIdx", "constants_1", "InRuleRecoveryException", "IN_RULE_RECOVERY_EXCEPTION", "EOF_FOLLOW_KEY", "firstAfterRepMap", "attemptInRepetitionRecovery", "getTokenToInsert", "tokToInsert", "isInsertedInRecovery", "canTokenTypeBeInsertedInRecovery", "tryInRepetitionRecovery", "grammarRule", "grammarRuleArgs", "lookAheadFunc", "expectedTokType", "reSyncTokType", "findReSyncTokenType", "savedLexerState", "exportLexerState", "passedResyncPoint", "nextTokenWithoutResync", "generateErrorMessage", "getCurrRuleFullName", "SAVE_ERROR", "SKIP_TOKEN", "addToResyncTokens", "importLexerState", "shouldInRepetitionRecoveryBeTried", "expectTokAfterLastMatch", "nextTokIdx", "isBackTracking", "canPerformInRuleRecovery", "getFollowsForInRuleRecovery", "tokIdxInRule", "grammarPath", "getCurrentGrammarPath", "getNextPossibleTokenTypes", "tryInRuleRecovery", "follows", "canRecoverWithSingleTokenInsertion", "canRecoverWithSingleTokenDeletion", "nextTok", "consumeToken", "expectedToken", "mismatchedTok", "possibleFollowsTokType", "isInCurrentRuleReSyncSet", "followKey", "getCurrFollowKey", "currentRuleReSyncSet", "getFollowSetFromFollowKey", "allPossibleReSyncTokTypes", "flattenFollowSet", "RULE_STACK", "currRuleShortName", "getLastExplicitRuleShortName", "currRuleIdx", "getLastExplicitRuleOccurrenceIndex", "prevRuleShortName", "getPreviousExplicitRuleShortName", "shortRuleNameToFullName", "idxInCallingRule", "inRule", "buildFullFollowKeyStack", "explicitRuleStack", "explicitOccurrenceStack", "RULE_OCCURRENCE_STACK", "LAST_EXPLICIT_RULE_STACK", "followStack", "followName", "resyncTokens", "reSyncTo", "prodFunc", "lookaheadFunc", "prodOccurrence", "nextToksWalker", "getHumanReadableRuleStack", "currShortName", "firstAfterRepInfo", "getGAstProductions", "TurtleParser", "namespacesMap", "semanticErrors", "resetManagedState", "turtleDoc", "allowEdgeProperties", "statement", "ARGS", "directive", "triples", "prefixID", "base", "sparqlPrefix", "sparqlBase", "pnameNsToken", "iriToken", "pnameImageWithoutColon", "iriImage", "subject", "predicateObjectList", "EmbeddedTriplePattern", "blankNodePropertyList", "verb", "objectList", "EmbeddedPredicateObjectList", "literal", "prefixedNameToken", "context", "ruleOccurrenceStack", "StardogSparqlParser", "_BaseSparqlParser__WEBPACK_IMPORTED_MODULE_0__", "chevrotain__WEBPACK_IMPORTED_MODULE_1__", "shouldSkipAnalysis", "ValidateQuery", "MultiGraphRef", "UsingShapesClause", "SUBRULE4", "SUBRULE5", "LimitPerShapeClause", "OVERRIDE_RULE", "PathQuery", "PathSpec", "PathTerminal", "Via", "Unnest", "disallowEdgeProperties", "EmbeddedPropertyList", "EmbeddedPropertyListPath", "VarOrTermOrEmbeddedTriplePattern", "VarOrBlankNodeOrIriOrLit", "ExpressionOrEmbeddedTriplePattern", "StardogOrCustomFunction", "ResyncFollowsWalker", "buildBetweenProdsFollowPrefix", "t_in_topProd_follows", "inner", "occurenceInParent", "topProductions", "reSyncFollows", "currRefsFollow", "buildInProdFollowPrefix", "regexp_to_ast_1", "reg_exp_1", "regExpParser", "findMissingPatterns", "tokenTypesWithMissingPattern", "currType", "MISSING_PATTERN", "valid", "findInvalidPatterns", "tokenTypesWithInvalidPattern", "INVALID_PATTERN", "MODES", "disableSticky", "enableSticky", "useSticky", "debug", "onlyRelevantTypes", "allTransformedPatterns", "regExpSource", "addStickyFlag", "addStartOfInput", "escapedRegExpString", "wrappedRegExp", "patternIdxToType", "patternIdxToGroup", "groupName", "patternIdxToLongerAltIdx", "longerAltType", "patternIdxToPushMode", "patternIdxToPopMode", "lineTerminatorCharCodes", "getCharCodes", "patternIdxToCanLineTerminator", "checkLineBreaksIssues", "canMatchCharCode", "patternIdxToIsCustom", "isCustomPattern", "patternIdxToShort", "isShortPattern", "acc", "addToMapOfArrays", "charOrInt", "failedOptimizationPrefixMsg", "startCodes", "getStartCodes", "code", "validModesNames", "missingResult", "invalidResult", "validTokenTypes", "withRegExpPatterns", "findEndOfInputAnchor", "findStartOfInputAnchor", "findUnsupportedFlags", "findDuplicatePatterns", "findEmptyMatchRegExps", "findInvalidGroupType", "findModesThatDoNotExist", "findUnreachablePatterns", "end_of_input", "EndAnchorFinder", "invalidRegex", "regexpAst", "endAnchorVisitor", "EOI_ANCHOR_FOUND", "matchesEmptyString", "EMPTY_MATCH_PATTERN", "start_of_input", "StartAnchorFinder", "startAnchorVisitor", "SOI_ANCHOR_FOUND", "invalidFlags", "multiline", "UNSUPPORTED_FLAGS_FOUND", "identicalPatterns", "outerType", "innerType", "duplicatePatterns", "currIdenticalSet", "setOfIdentical", "tokenTypeNames", "DUPLICATE_PATTERNS_FOUND", "invalidTypes", "INVALID_GROUP_TYPE_FOUND", "validModes", "invalidModes", "PUSH_MODE_DOES_NOT_EXIST", "canBeTested", "str", "testIdx", "UNREACHABLE_PATTERN", "issue", "IDENTIFY_TERMINATOR", "CUSTOM_LINE_BREAK", "buildLineBreakIssueMessage", "details", "charsOrCodes", "numOrString", "MULTI_MODE_LEXER_WITHOUT_DEFAULT_MODE", "MULTI_MODE_LEXER_WITHOUT_MODES_PROPERTY", "MULTI_MODE_LEXER_DEFAULT_MODE_VALUE_DOES_NOT_EXIST", "LEXER_DEFINITION_CANNOT_CONTAIN_UNDEFINED", "warnings", "hasAnyLineBreak", "allTokenTypes", "tokTypes", "concreteTokenTypes", "terminatorCharCodes", "currIssue", "NO_LINE_BREAKS_FLAGS", "clonedResult", "groupKeys", "currGroupValue", "complementErrorMessage", "firstChar", "ast", "startChars_1", "rangeCode", "groupCodes", "isOptionalQuantifier", "isWholeOptional", "applyIgnoreCase", "firstChars", "firstCharsCase", "toLowerCase", "findCode", "setNode", "targetCharCodes", "codeOrRange", "targetCode", "msgSuffix", "CharCodeFinder", "charCodes", "charCodeFinder", "isValidRange", "num", "containsRange", "isContainedInRange", "refResolver", "GastRefResolverVisitor", "resolveRefs", "nameToTopRule", "ref", "UNRESOLVED_SUBRULE_REF", "unresolvedRefName", "lookAheadFuncsCache", "getLaFuncFromCache", "getLaFuncFromMap", "setLaFuncCache", "setLaFuncCacheUsingMap", "getLaFuncFromObj", "setLaFuncUsingObj", "lookAheadBuilderForOptional", "lookAheadBuilderForAlternatives", "getLookaheadFuncForOr", "laFunc", "getLookaheadFuncForOption", "getLookaheadFuncFor", "getLookaheadFuncForMany", "getLookaheadFuncForManySep", "getLookaheadFuncForAtLeastOne", "getLookaheadFuncForAtLeastOneSep", "cst_visitor_1", "CST_STACK", "setNodeLocationFromToken", "setNodeLocationFromNode", "cstPostRule", "setInitialNodeLocation", "setInitialNodeLocationFullRecovery", "cstPostRuleFull", "setInitialNodeLocationFullRegular", "setInitialNodeLocationOnlyOffsetRecovery", "cstPostRuleOnlyOffset", "setInitialNodeLocationOnlyOffsetRegular", "cstInvocationStateUpdate", "cstFinallyStateUpdate", "cstPostTerminal", "cstPostNonTerminal", "getLastExplicitRuleShortNameNoCst", "getPreviousExplicitRuleShortNameNoCst", "getLastExplicitRuleOccurrenceIndexNoCst", "manyInternal", "manyInternalNoCst", "orInternal", "orInternalNoCst", "optionInternal", "optionInternalNoCst", "atLeastOneInternal", "atLeastOneInternalNoCst", "manySepFirstInternal", "manySepFirstInternalNoCst", "atLeastOneSepFirstInternal", "atLeastOneSepFirstInternalNoCst", "cstNode", "location", "cstNestedInvocationStateUpdate", "shortName", "fullName", "shortRuleNameToFull", "fullRuleName", "cstNestedFinallyStateUpdate", "lastCstNode", "ruleCstNode", "prevToken", "loc", "consumedToken", "rootCst", "ruleCstResult", "getBaseCstVisitorConstructor", "baseCstVisitorConstructor", "newBaseCstVisitorConstructor", "createBaseSemanticVisitorConstructor", "getBaseCstVisitorConstructorWithDefaults", "baseCstVisitorWithDefaultsConstructor", "newConstructor", "createBaseVisitorConstructorWithDefaults", "nestedRuleBeforeClause", "methodOpts", "laKey", "nestedRuleInvocationStateUpdate", "nestedAltBeforeClause", "methodKeyIdx", "nestedRuleFinallyClause", "cstStack", "nestedRuleCst", "nestedRuleFinallyStateUpdate", "parentCstNode", "lastExplictIndex", "lastExplicitIndex", "nestedRuleName", "shortNameKey", "CstVisitorDefinitionError", "defaultVisit", "childrenNames", "childrenNamesLength", "currChildArray", "currChildArrayLength", "currChild", "validateVisitor", "visitorInstance", "ruleNames", "missingErrors", "validateMissingCstMethods", "redundantErrors", "validateRedundantMethods", "MISSING_METHOD", "methodName", "derivedConstructor", "semanticDefinitionErrors", "errorMessages", "currDefError", "_RULE_NAMES", "baseConstructor", "withDefaultsProto", "VALID_PROP_NAMES", "REDUNDANT_METHOD", "tokVector", "tokVectorLength", "newInput", "reset", "resetLexerState", "moveToTerminatedState", "getLexerPosition", "consumeInternal", "CONSUME4", "CONSUME5", "CONSUME6", "CONSUME7", "CONSUME8", "CONSUME9", "ruleToCall", "subruleInternal", "SUBRULE6", "SUBRULE7", "SUBRULE8", "SUBRULE9", "actionORMethodDef", "OPTION4", "OPTION5", "OPTION6", "OPTION7", "OPTION8", "OPTION9", "altsOrOpts", "OR5", "OR6", "OR7", "OR8", "OR9", "MANY3", "MANY4", "MANY5", "MANY6", "MANY7", "MANY8", "MANY9", "MANY_SEP1", "MANY_SEP2", "MANY_SEP3", "MANY_SEP4", "MANY_SEP5", "MANY_SEP6", "MANY_SEP7", "MANY_SEP8", "MANY_SEP9", "AT_LEAST_ONE1", "AT_LEAST_ONE2", "AT_LEAST_ONE3", "AT_LEAST_ONE4", "AT_LEAST_ONE5", "AT_LEAST_ONE6", "AT_LEAST_ONE7", "AT_LEAST_ONE8", "AT_LEAST_ONE9", "AT_LEAST_ONE_SEP1", "AT_LEAST_ONE_SEP2", "AT_LEAST_ONE_SEP3", "AT_LEAST_ONE_SEP4", "AT_LEAST_ONE_SEP5", "AT_LEAST_ONE_SEP6", "AT_LEAST_ONE_SEP7", "AT_LEAST_ONE_SEP8", "AT_LEAST_ONE_SEP9", "implementation", "gastProduction", "ruleImplementation", "defineRule", "impl", "ruleErrors", "BACKTRACK", "isBackTrackingStack", "orgState", "saveRecogState", "reloadRecogState", "getSerializedGastProductions", "ruleShortNameIdx", "tokenClazz", "uniqueTokens", "noTokenCategoriesUsed", "tokenConstructor", "wrappedGrammarRule", "ruleInvocationStateUpdate", "isFirstInvokedRule", "reSyncEnabled", "partialCstResult", "recoveredNode", "ruleFinallyStateUpdate", "optionInternalLogic", "action", "orgLookaheadFunction_1", "atLeastOneInternalLogic", "orgLookaheadFunction_2", "raiseEarlyExitException", "ERR_MSG", "notStuck", "doSingleRepetition", "atLeastOneSepFirstInternalLogic", "separatorLookAheadFunc", "repetitionSepSecondInternal", "manyInternalLogic", "lookaheadFunction", "orgLookaheadFunction_3", "manySepFirstInternalLogic", "nextTerminalAfterWalker", "beforeIteration", "altIdxToTake", "raiseNoAltException", "chosenAlternative", "nestedAltBeforeClauseResult", "isAtEndOfInput", "firstRedundantTok", "eFromConsumption", "eFromInRuleRecovery", "savedErrors", "savedRuleStack", "lexerState", "_errors", "newErrors", "userDefinedErrMsg", "insideProdPaths", "actualTokens", "errMsgTypes", "lookAheadPathsPerAlternative", "computeContentAssist", "startRuleName", "precedingInput", "startRuleGast", "topRuleName", "topProduction", "_c", "resourceBase", "_d", "css", "JSON", "stringify", "generate_1", "wrapperText", "genWrapperFunction", "constructorWrapper", "genUmdModule", "NL", "genClass", "genAllRules", "genRule", "indent", "genDefinition", "genTerminal", "genNonTerminal", "genAlternation", "altDef", "genSingleAlt", "genDSLRule", "genDefFunction", "W3SpecSparqlParser", "BaseGraphQlParser", "graphQlTokenMap", "Document", "Definition", "ExecutableDefinition", "TypeSystemDefinition", "TypeSystemExtension", "OperationDefinition", "FragmentDefinition", "SelectionSet", "OperationType", "Name", "VariableDefinitions", "Directives", "Mutation", "Subscription", "Selection", "Field", "InlineFragment", "FragmentSpread", "Alias", "Arguments", "Colon", "isConst", "Argument", "Value", "Spread", "FragmentName", "TypeCondition", "Fragment", "On", "NamedType", "Variable", "IntValue", "FloatValue", "StringValue", "BooleanValue", "NullValue", "EnumValue", "ListValue", "ObjectValue", "IntValueToken", "FloatValueToken", "StringValueToken", "BooleanValueToken", "NullValueToken", "EnumValueToken", "ObjectField", "VariableDefinition", "Type", "DefaultValue", "Dollar", "ListType", "Directive", "At", "SchemaDefinition", "TypeDefinition", "DirectiveDefinition", "SchemaExtension", "TypeExtension", "Schema", "OperationTypeDefinition", "Extend", "OperationTypeDefinitionList", "Description", "ScalarTypeDefinition", "ObjectTypeDefinition", "InterfaceTypeDefinition", "UnionTypeDefinition", "EnumTypeDefinition", "InputObjectTypeDefinition", "ScalarTypeExtension", "ObjectTypeExtension", "InterfaceTypeExtension", "UnionTypeExtension", "EnumTypeExtension", "InputObjectTypeExtension", "Scalar", "TypeToken", "ImplementsInterfaces", "FieldsDefinition", "Implements", "Amp", "FieldDefinition", "ArgumentsDefinition", "InputValueDefinition", "Interface", "Union", "UnionMemberTypes", "Enum", "EnumValuesDefinition", "EnumValueDefinition", "Input", "InputFieldsDefinition", "DirectiveToken", "DirectiveLocations", "DirectiveLocation", "ExecutableDirectiveLocation", "TypeSystemDirectiveLocation", "QUERY", "MUTATION", "SUBSCRIPTION", "FIELD", "FRAGMENT_DEFINITION", "FRAGMENT_SPREAD", "INLINE_FRAGMENT", "SCHEMA", "SCALAR", "OBJECT", "FIELD_DEFINITION", "ARGUMENT_DEFINITION", "INTERFACE", "ENUM", "ENUM_VALUE", "INPUT_OBJECT", "INPUT_FIELD_DEFINITION", "graphQlUtils", "helpers_chevrotain_cst__WEBPACK_IMPORTED_MODULE_1__", "stardogGraphQlTokenMap", "ToArgumentToken", "IfArgumentToken", "AliasArgumentToken", "GraphArgumentToken", "BindDirectiveToken", "ConfigDirectiveToken", "conditionalDirectiveTokens", "SkipDirectiveToken", "IncludeDirectiveToken", "FilterDirectiveToken", "sparqlReceivingStardogDirectiveTokens", "getArgumentNodes", "argumentDictionary", "argumentsNode", "getArgumentTokenTypesForDirectiveNameToken", "directiveNameToken", "isSparqlReceivingStardogDirective", "directiveToken", "sparqlTokens", "_W3SpecSparqlParser__WEBPACK_IMPORTED_MODULE_1__", "_StardogSparqlParser__WEBPACK_IMPORTED_MODULE_2__", "graphQlTokens", "stardogGraphQlTokens", "helpers_regex__WEBPACK_IMPORTED_MODULE_1__", "helpers_matchers__WEBPACK_IMPORTED_MODULE_2__", "INTEGER_PART_PATTERN", "EXPONENT_PART_PATTERN", "STRING_CHARACTER_PATTERN", "BOOLEAN_PATTERN", "NULL_PATTERN", "ON_PATTERN", "createAndPushTokenWithNameAlt", "createAndPushToken", "createAndPushPunctuator", "Punctuator", "ignoredTokens", "UnicodeBOM", "LineTerminator", "punctuators", "nonKeywordTerminals", "BlockStringToken", "StringToken", "StardogDirective", "SparqlReceivingStardogDirective", "StardogArgument", "TopLevel", "stardogDirectives", "includes", "tokenMap", "orderedTokens", "stardogArguments", "stardogOrderByArgumentFieldPropertyToken", "stardogOrderByArgumentDescPropertyToken", "OrderByArgumentFieldPropertyToken", "OrderByArgumentDescPropertyToken", "finalTokens", "LARGE_ARRAY_SIZE", "HASH_UNDEFINED", "COMPARE_PARTIAL_FLAG", "COMPARE_UNORDERED_FLAG", "MAX_SAFE_INTEGER", "argsTag", "arrayTag", "asyncTag", "boolTag", "dateTag", "errorTag", "funcTag", "genTag", "mapTag", "numberTag", "nullTag", "objectTag", "proxyTag", "regexpTag", "setTag", "stringTag", "symbolTag", "undefinedTag", "arrayBufferTag", "dataViewTag", "reIsHostCtor", "reIsUint", "typedArrayTags", "freeGlobal", "freeSelf", "freeExports", "nodeType", "freeModule", "moduleExports", "freeProcess", "process", "nodeUtil", "binding", "nodeIsTypedArray", "isTypedArray", "arraySome", "array", "mapToArray", "setToArray", "uid", "transform", "arrayProto", "funcProto", "objectProto", "coreJsData", "funcToString", "maskSrcKey", "IE_PROTO", "nativeObjectToString", "reIsNative", "Buffer", "Uint8Array", "propertyIsEnumerable", "splice", "symToStringTag", "nativeGetSymbols", "nativeIsBuffer", "isBuffer", "nativeKeys", "arg", "DataView", "getNative", "Promise", "Set", "WeakMap", "nativeCreate", "dataViewCtorString", "toSource", "mapCtorString", "promiseCtorString", "setCtorString", "weakMapCtorString", "symbolProto", "symbolValueOf", "valueOf", "Hash", "entries", "entry", "ListCache", "MapCache", "SetCache", "__data__", "add", "Stack", "data", "arrayLikeKeys", "inherited", "isArg", "isArguments", "isBuff", "isType", "skipIndexes", "iteratee", "isIndex", "assocIndexOf", "eq", "baseGetTag", "isOwn", "tag", "unmasked", "baseIsArguments", "isObjectLike", "baseIsEqual", "bitmask", "customizer", "stack", "equalFunc", "objIsArr", "othIsArr", "objTag", "getTag", "othTag", "objIsObj", "othIsObj", "isSameTag", "equalArrays", "byteLength", "byteOffset", "buffer", "convert", "isPartial", "stacked", "objIsWrapped", "othIsWrapped", "objUnwrapped", "othUnwrapped", "objProps", "getAllKeys", "objLength", "othLength", "skipCtor", "objValue", "othValue", "compared", "objCtor", "othCtor", "baseIsNative", "baseKeys", "Ctor", "proto", "arrLength", "seen", "arrValue", "othIndex", "keysFunc", "symbolsFunc", "getSymbols", "getMapData", "hash", "string", "pairs", "resIndex", "symbol", "ArrayBuffer", "resolve", "ctorString", "isLength", "multiModeLexerDefinition", "srsTokenMap", "srsTokenTypes", "LexerMode", "_helpers_matchers__WEBPACK_IMPORTED_MODULE_1__", "If", "IFCLAUSE", "Then", "THENCLAUSE", "EndThen", "cursor", "unclosedBraceCount", "indexOfIriRef", "TURTLE", "TrigParser", "_turtle_TurtleParser__WEBPACK_IMPORTED_MODULE_1__", "trigTokenMap", "trigTokenTypes", "trigDoc", "block", "triplesOrGraph", "wrappedGraph", "triples2", "labelOrSubject", "didParseEmbeddedTriplePattern", "triplesBlock", "turtle_tokens__WEBPACK_IMPORTED_MODULE_0__", "sparql_tokens__WEBPACK_IMPORTED_MODULE_1__", "indexOfPnCharsBase", "SmsParser", "_sparql__WEBPACK_IMPORTED_MODULE_1__", "smsTokenTypes", "smsTokenMap", "MappingDoc", "MappingClause", "MappingDecl", "FromClause", "ToClause", "Mapping", "SqlClause", "JsonClause", "GraphQlClause", "CsvClause", "Json", "JsonBlock", "GraphQl", "GraphQlBlock", "Sql", "SqlBlock", "Csv", "BindExpression", "TemplateFunc", "Template", "_sparql_keywords__WEBPACK_IMPORTED_MODULE_1__", "FROM_BLOCK_END_MATCHER", "FROM_JSON_BLOCK_END_MATCHER", "explicitEndMatcher", "endCandidateChar", "endMatcher", "blockEndCandidate", "matchedTokensSoFar", "secondToLastToken", "lastToken", "StandardGraphQlParser", "_BaseGraphQlParser__WEBPACK_IMPORTED_MODULE_0__", "defaultNamespacesMap", "getSparqlSrsVisitor", "BaseVisitor", "SparqlSrsVisitor", "groupGraphPatterns", "triplesBlocks", "IfClause", "cstInputTokens", "$storePlaceholderTokenReplacement", "tokenStore", "originalTokenContext", "subParserRule", "sparqlParser", "ThenClause", "stripWrappers", "originalToken", "$getPlaceholderTokenReplacement", "parseResult", "frontPadding", "latestEndOffset", "latestEndLine", "linesBetweenTokens", "untokenizedSpaceBetweenTokens", "repeat", "max", "split", "parseImage", "$getGroupGraphPatterns", "$getTriplesBlocks", "$resetState", "sparql", "reduceVisitorItemErrors", "findAndSwapPlaceholders", "parentNode", "visitorItems", "matchingVisitorItem", "visitorItem", "customErrors_a", "subExpressionMatcher", "defaultEarlyAbortTest", "disallowedSparqlTokenNameToRuleMap", "disallowedSparqlTokenNames", "disallowedSparqlLiteralTokenNames", "isCstNodeTraverseContext", "getCustomErrorRuleStack", "traverseCtx", "fullCtx", "startRuleNames", "topLevelSubParserRuleName", "earlyAbortTest", "stackUnwindingPointer", "chevrotain_cst", "unshift", "getCustomIRecognitionException", "getNoPrefixError", "subParserRuleName", "getDisallowedTokenError", "getDisallowedLiteralError", "foundPropertyListPathNotEmptyCtx", "didFindSubExpressionWithMultipleChildren", "errorContext", "errorRuleStack", "stackCtx", "nodeName", "isExpression", "isTriplesBlock", "isBoundExpressionWithLiteralSubject", "parentNodeName", "isTriplesBlockSubject", "SrsParser_SrsParser", "SrsParser_extends", "SrsParser_assign", "SrsParser_a", "SrsParser", "baseNamespacesMap", "visitCst", "sparqlSrsVisitor", "BaseSrsVisitor", "getSparqlRulesFromVisitor", "setBaseNamespaces", "newBaseNamespaces", "SrsDoc", "next", "currentTokenName", "shift", "RuleDoc", "RuleClause", "getShaclLocalNameMatcher", "shaclPrefix", "escape_string_regexp_default", "getUnderlyingStartToken", "currentNode", "currentNodeKey", "getLocalName", "matcher", "addPredicatesAndTypesToShape", "shape", "shaclRulePredicateObjectListNodes", "verbTokenInsensitive", "shapeTypeNode", "SHACL_NodeShape", "types", "SHACL_PropertyShape", "SingleIriTakingPredicate", "ManyIriTakingPredicate", "SHACL_nodeKind", "SHACL_targetNode", "SHACL_path", "ShapeExpectingPredicate", "SHACL_hasValue", "getShaclShapeFromBlankNodePropertyList", "blankNodeNode", "predicateObjectListNode", "optionalPredicateObjectListNode", "shaclRulePredicateObjectList", "getShaclVisitor", "ShaclVisitor", "shapes", "shaclShape", "$validateShapes", "shacl", "localNameMatcher", "bnodeCount", "shapesConsolidatedBySubject", "consolidatedShapes", "subjectImage", "consolidatedShape", "subjects", "shapeType", "pathPredicates", "nonPathPredicateMap", "localName", "predicateImage", "prefixedImage", "ShaclParser_ShaclParser", "ShaclParser_extends", "getShaclTokenTypes", "getShaclTokenMap", "categoryTokenMap", "ShaclParser", "prefixes", "xsd", "validateWithVisitor", "shaclVisitor", "shaclPredicateIRI", "shaclNodeKind", "shaclTargetNode", "shaclPropertyPath", "shaclLiteralConstraint", "shaclListTakingConstraint", "shaclShapeExpectingConstraint", "shaclHasValueConstraint", "shaclVerbShape", "shaclTokenMap", "NodeKindIRI", "shaclIRIOrLiteral", "shaclShapeType", "SHACL_Shape", "shaclPropertyPathPath", "shaclPredicatePath", "shaclSequencePath", "shaclAlternativePath", "shaclInversePath", "shaclZeroOrMorePath", "shaclOneOrMorePath", "shaclZeroOrOnePath", "SHACL_alternativePath", "SHACL_inversePath", "SHACL_zeroOrMorePath", "SHACL_oneOrMorePath", "SHACL_zeroOrOnePath", "shaclIntConstraint", "shaclStringConstraint", "shaclStringLiteralQuoteConstraint", "shaclLangStringConstraint", "shaclBooleanConstraint", "shaclAnyLiteralConstraint", "IntTakingPredicate", "shaclXsdInteger", "SHACL_select", "SHACL_ask", "StringLiteralQuoteTakingPredicate", "SHACL_xsd_string", "SHACL_xsd_anyURI", "LangStringTakingPredicate", "BooleanTakingPredicate", "shaclXsdBoolean", "AnyLiteralTakingPredicate", "shaclLanguageInConstraint", "shaclShapeListTakingConstraint", "shaclIRIListTakingConstraint", "shaclShapeOrLiteralListTakingConstraint", "SHACL_languageIn", "shaclStringCollection", "SHACL_and", "SHACL_or", "SHACL_xone", "shaclShapeCollection", "SHACL_ignoredProperties", "shaclIRICollection", "SHACL_in", "shaclShapeOrLiteralCollection", "shaclShapeOrLiteral", "shaclStringWithDoubleCaret", "SHACL_xsd_boolean", "shaclXsdString", "SHACL_xsd_integer", "shaclXsdDate", "SHACL_xsd_date", "shaclXsdAnyURI", "simpleIsEqual", "newArgs", "lastArgs", "newArg", "newValue", "oldValue", "memoize_one_esm", "resultFn", "isEqual", "lastThis", "lastResult", "calledOnce", "_len", "_key", "categoryTokens", "tokens_a", "localNamesByCategory", "xsdLocalNames", "localNameToCategoryMap", "nameToCategoryMap", "category", "localNames", "xsdUnprefixedTokenMap", "iriTokenName", "iriOrPrefixCategoryToken", "shaclUnprefixedTokenMap", "categoryToken", "makePrefixer", "prefixWithShacl", "prefixWithXsd", "prefixedTokenName", "lodash_isequal_default", "pnameIndex", "iriIndex", "reverseSort", "aName", "aRemainder", "bName", "bRemainder", "aSortString", "bSortString", "aSuffix", "bSuffix", "endsWith", "iriTokens", "pnameTokens", "validateDirectiveArgumentsArity", "allowedArgumentTokenTypes", "directiveImage", "errorAccumulator", "numMinimumArguments", "numSuppliedArguments", "suppliedArgumentNodes", "numAllowedArguments", "validArgumentsPhrase", "argumentTokenType", "requiresPhrase", "stardogGraphQlErrors", "validateDirectiveArgumentsNameAndValue", "argumentNode", "argumentNameToken", "stringValueToken", "stardogSparqlParser", "innerExpressionImage", "argumentTokenTypeName", "argumentStringValueToken", "sparqlErrors", "tokenForOffset", "offsetPadding", "tokenStartOffset", "tokenEndOffset", "tokenStartColumn", "tokenEndColumn", "errorEndOffset", "errorStartColumn", "errorEndColumn", "getStardogGraphQlVisitor", "StardogGraphQlVisitor", "accumulatedErrors", "validatorOptions", "validators", "validator", "ruleOccurrenceStack_1", "partialError", "sparqlError", "StardogGraphQlParser_StardogGraphQlParser", "StardogGraphQlParser_extends", "StardogGraphQlParser", "stardogGraphQlVisitor", "BaseStardogGraphQlVisitor", "matchOperatorsRegex", "TypeError", "g", "window", "webpackPolyfill", "deprecate", "paths", "turtleTokens", "srsTokens", "trigTokens", "smsTokens", "shaclTokens", "_sparql_BaseSparqlParser__WEBPACK_IMPORTED_MODULE_0__", "_sparql_StardogSparqlParser__WEBPACK_IMPORTED_MODULE_1__", "_sparql_W3SpecSparqlParser__WEBPACK_IMPORTED_MODULE_2__", "_turtle_TurtleParser__WEBPACK_IMPORTED_MODULE_3__", "_srs_SrsParser__WEBPACK_IMPORTED_MODULE_4__", "_trig_TrigParser__WEBPACK_IMPORTED_MODULE_5__", "_sms_SmsParser__WEBPACK_IMPORTED_MODULE_6__", "_shacl_ShaclParser__WEBPACK_IMPORTED_MODULE_7__", "_graphql_BaseGraphQlParser__WEBPACK_IMPORTED_MODULE_8__", "_graphql_StandardGraphQlParser__WEBPACK_IMPORTED_MODULE_9__", "_graphql_StardogGraphQlParser__WEBPACK_IMPORTED_MODULE_10__", "_graphql_utils__WEBPACK_IMPORTED_MODULE_11__", "_helpers_chevrotain_cst__WEBPACK_IMPORTED_MODULE_12__", "_helpers_chevrotain_types__WEBPACK_IMPORTED_MODULE_13__", "_sparql_keywords__WEBPACK_IMPORTED_MODULE_14__", "_sparql_terminals__WEBPACK_IMPORTED_MODULE_15__", "_helpers_matchers__WEBPACK_IMPORTED_MODULE_16__", "error", "require_is", "ErrorCodes", "Message", "Touch", "Disposable", "RAL", "Event", "CancellationToken", "CancellationState", "MessageReader", "ResolvedMessageReaderOptions", "MessageWriter", "ResolvedMessageWriterOptions", "result", "CancelNotification", "ProgressToken", "ProgressNotification", "StarRequestHandler", "Trace", "TraceValues", "TraceFormat", "SetTraceNotification", "LogTraceNotification", "ConnectionErrors", "ConnectionStrategy", "IdCancellationReceiverStrategy", "RequestCancellationReceiverStrategy", "CancellationReceiverStrategy", "CancellationSenderStrategy", "CancellationStrategy", "MessageStrategy", "ConnectionOptions", "ConnectionState", "startTime", "RIL", "__createBinding", "__exportStar", "exports", "path", "process", "module", "require_main", "module", "require", "exports", "DocumentUri", "URI", "integer", "uinteger", "Position", "Range", "Location", "LocationLink", "Color", "ColorInformation", "ColorPresentation", "FoldingRangeKind", "FoldingRange", "DiagnosticRelatedInformation", "DiagnosticSeverity", "DiagnosticTag", "CodeDescription", "Diagnostic", "Command", "TextEdit", "ChangeAnnotation", "ChangeAnnotationIdentifier", "AnnotatedTextEdit", "TextDocumentEdit", "CreateFile", "RenameFile", "DeleteFile", "WorkspaceEdit", "TextEditChangeImpl", "ChangeAnnotations", "WorkspaceChange", "TextDocumentIdentifier", "VersionedTextDocumentIdentifier", "OptionalVersionedTextDocumentIdentifier", "TextDocumentItem", "MarkupKind", "MarkupContent", "CompletionItemKind", "InsertTextFormat", "CompletionItemTag", "InsertReplaceEdit", "InsertTextMode", "CompletionItemLabelDetails", "CompletionItem", "CompletionList", "MarkedString", "Hover", "ParameterInformation", "SignatureInformation", "DocumentHighlightKind", "DocumentHighlight", "SymbolKind", "SymbolTag", "SymbolInformation", "WorkspaceSymbol", "DocumentSymbol", "CodeActionKind", "CodeActionTriggerKind", "CodeActionContext", "CodeAction", "CodeLens", "FormattingOptions", "DocumentLink", "SelectionRange", "SemanticTokenTypes", "SemanticTokenModifiers", "SemanticTokens", "InlineValueText", "InlineValueVariableLookup", "InlineValueEvaluatableExpression", "InlineValueContext", "InlayHintKind", "InlayHintLabelPart", "InlayHint", "StringValue", "InlineCompletionItem", "InlineCompletionList", "InlineCompletionTriggerKind", "SelectedCompletionInfo", "InlineCompletionContext", "WorkspaceFolder", "TextDocument", "FullTextDocument", "Is", "undefined", "require_messages", "MessageDirection", "require_is", "ImplementationRequest", "TypeDefinitionRequest", "WorkspaceFoldersRequest", "DidChangeWorkspaceFoldersNotification", "ConfigurationRequest", "DocumentColorRequest", "ColorPresentationRequest", "FoldingRangeRequest", "FoldingRangeRefreshRequest", "DeclarationRequest", "SelectionRangeRequest", "WorkDoneProgress", "WorkDoneProgressCreateRequest", "WorkDoneProgressCancelNotification", "CallHierarchyPrepareRequest", "CallHierarchyIncomingCallsRequest", "CallHierarchyOutgoingCallsRequest", "TokenFormat", "SemanticTokensRegistrationType", "SemanticTokensRequest", "SemanticTokensDeltaRequest", "SemanticTokensRangeRequest", "SemanticTokensRefreshRequest", "ShowDocumentRequest", "LinkedEditingRangeRequest", "FileOperationPatternKind", "WillCreateFilesRequest", "DidCreateFilesNotification", "WillRenameFilesRequest", "DidRenameFilesNotification", "DidDeleteFilesNotification", "WillDeleteFilesRequest", "UniquenessLevel", "MonikerKind", "MonikerRequest", "TypeHierarchyPrepareRequest", "TypeHierarchySupertypesRequest", "TypeHierarchySubtypesRequest", "InlineValueRequest", "InlineValueRefreshRequest", "InlayHintRequest", "InlayHintResolveRequest", "InlayHintRefreshRequest", "DiagnosticServerCancellationData", "DocumentDiagnosticReportKind", "DocumentDiagnosticRequest", "WorkspaceDiagnosticRequest", "DiagnosticRefreshRequest", "NotebookCellKind", "ExecutionSummary", "NotebookCell", "NotebookDocument", "NotebookDocumentSyncRegistrationType", "DidOpenNotebookDocumentNotification", "NotebookCellArrayChange", "DidChangeNotebookDocumentNotification", "DidSaveNotebookDocumentNotification", "DidCloseNotebookDocumentNotification", "InlineCompletionRequest", "TextDocumentFilter", "NotebookDocumentFilter", "NotebookCellTextDocumentFilter", "DocumentSelector", "RegistrationRequest", "UnregistrationRequest", "ResourceOperationKind", "FailureHandlingKind", "PositionEncodingKind", "StaticRegistrationOptions", "TextDocumentRegistrationOptions", "WorkDoneProgressOptions", "InitializeRequest", "InitializeErrorCodes", "InitializedNotification", "ShutdownRequest", "ExitNotification", "DidChangeConfigurationNotification", "MessageType", "ShowMessageNotification", "ShowMessageRequest", "LogMessageNotification", "TelemetryEventNotification", "TextDocumentSyncKind", "DidOpenTextDocumentNotification", "TextDocumentContentChangeEvent", "DidChangeTextDocumentNotification", "DidCloseTextDocumentNotification", "DidSaveTextDocumentNotification", "TextDocumentSaveReason", "WillSaveTextDocumentNotification", "WillSaveTextDocumentWaitUntilRequest", "DidChangeWatchedFilesNotification", "FileChangeType", "RelativePattern", "WatchKind", "PublishDiagnosticsNotification", "CompletionTriggerKind", "CompletionRequest", "CompletionResolveRequest", "HoverRequest", "SignatureHelpTriggerKind", "SignatureHelpRequest", "DefinitionRequest", "ReferencesRequest", "DocumentHighlightRequest", "DocumentSymbolRequest", "CodeActionRequest", "CodeActionResolveRequest", "WorkspaceSymbolRequest", "WorkspaceSymbolResolveRequest", "CodeLensRequest", "CodeLensResolveRequest", "CodeLensRefreshRequest", "DocumentLinkRequest", "DocumentLinkResolveRequest", "DocumentFormattingRequest", "DocumentRangeFormattingRequest", "DocumentRangesFormattingRequest", "DocumentOnTypeFormattingRequest", "PrepareSupportDefaultBehavior", "RenameRequest", "PrepareRenameRequest", "ExecuteCommandRequest", "ApplyWorkspaceEditRequest", "require_connection", "require_api", "__createBinding", "__exportStar", "exports", "LSPErrorCodes", "require_main", "__createBinding", "__exportStar", "exports", "vscode", "vscode", "DiagnosticCode", "InsertReplaceRange", "code", "CodeBlock", "StaticFeature", "DynamicFeature", "data", "module", "module", "module", "module", "path", "set", "vsdiag", "DocumentDiagnosticReportKind", "DiagnosticPullMode", "RequestStateKind", "PullState", "DocumentOrUri", "document", "previousResultId", "token", "result", "resultIds", "provider", "vscode", "Converter", "c2p", "event", "$NotebookCell", "$NotebookDocumentFilter", "$NotebookDocumentSyncOptions", "SyncInfo", "notebookDocument", "cells", "provider", "params", "sections", "path", "textDocument", "event", "provider", "document", "position", "context", "token", "item", "provider", "document", "position", "token", "provider", "document", "position", "token", "provider", "document", "position", "context", "token", "provider", "document", "position", "token", "provider", "document", "token", "provider", "query", "token", "item", "provider", "options", "document", "position", "token", "provider", "document", "range", "context", "token", "item", "provider", "document", "token", "codeLens", "FileFormattingOptions", "provider", "options", "document", "token", "range", "ranges", "position", "ch", "provider", "document", "position", "newName", "token", "provider", "document", "token", "link", "provider", "color", "context", "token", "document", "provider", "document", "position", "token", "provider", "document", "position", "token", "event", "provider", "document", "token", "provider", "document", "position", "token", "provider", "document", "positions", "token", "document", "position", "token", "item", "provider", "vscode", "provider", "client", "document", "token", "previousResultId", "range", "legend", "path", "provider", "document", "position", "token", "document", "position", "token", "item", "provider", "provider", "document", "viewPort", "context", "token", "provider", "document", "viewPort", "token", "provider", "document", "position", "context", "token", "RevealOutputChannelOn", "ErrorAction", "CloseAction", "State", "SuspendMode", "ResolvedClientOptions", "ClientState", "MessageTransports", "type", "param", "token", "params", "disposable", "connection", "event", "uri", "diagnostics", "error", "ProposedFeatures", "process", "require_node", "module", "module", "module", "module", "module", "module", "module", "module", "module", "module", "self", "module", "self", "module", "module", "module", "module", "module", "module", "module", "module", "module", "Range", "module", "Range", "module", "Range", "require_api", "__createBinding", "__exportStar", "exports", "require_main", "__createBinding", "__exportStar", "exports", "path", "TransportKind", "Transport", "Executable", "NodeModule", "StreamInfo", "ChildProcessInfo", "LanguageClient", "env", "process", "cp", "transport", "require_node", "module", "activate", "import_vscode", "import_mentor_rdf", "vscode", "import_vscode", "vscode", "vscode", "import_mentor_rdf", "import_vscode", "import_mentor_rdf", "vscode", "import_mentor_rdf", "import_vscode", "import_mentor_rdf", "vscode", "import_vscode", "import_vscode", "vscode", "vscode", "module", "path", "path", "path", "activate"]
}
