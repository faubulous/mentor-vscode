{
  "version": 3,
  "sources": ["../src/languages/language-server.ts"],
  "sourcesContent": ["import {\r\n\tConnection,\r\n\tDiagnostic,\r\n\tDidChangeConfigurationNotification,\r\n\tProposedFeatures,\r\n\tInitializeParams,\r\n\tInitializeResult,\r\n\tTextDocuments,\r\n\tTextDocumentSyncKind,\r\n\tTextDocumentChangeEvent,\r\n\tcreateConnection,\r\n\tDiagnosticSeverity,\r\n\tRange,\r\n\tDidChangeWatchedFilesParams,\r\n\tDidChangeConfigurationParams,\r\n\tTextDocumentPositionParams,\r\n\tCompletionItem\r\n} from 'vscode-languageserver/node';\r\nimport { TextDocument } from 'vscode-languageserver-textdocument';\r\nimport { ISemanticError, IStardogParser, IToken } from 'millan';\r\n\r\ninterface ParserSettings {\r\n\tmaxNumberOfProblems: number;\r\n}\r\n\r\nconst defaultSettings: ParserSettings = { maxNumberOfProblems: 1000 };\r\n\r\nexport abstract class LanguageServerBase<T extends IStardogParser> {\r\n\treadonly languageName: string;\r\n\r\n\treadonly languageId: string;\r\n\r\n\tabstract get parser(): T;\r\n\r\n\treadonly connection: Connection;\r\n\r\n\treadonly documents: TextDocuments<TextDocument> = new TextDocuments(TextDocument);\r\n\r\n\thasConfigurationCapability = false;\r\n\r\n\thasWorkspaceFolderCapability = false;\r\n\r\n\thasDiagnosticRelatedInformationCapability = false;\r\n\r\n\tglobalSettings: ParserSettings = defaultSettings;\r\n\r\n\treadonly documentSettings: Map<string, Thenable<ParserSettings>> = new Map();\r\n\r\n\tconstructor(langaugeId: string, languageName: string) {\r\n\t\tthis.languageName = languageName;\r\n\t\tthis.languageId = langaugeId;\r\n\r\n\t\tthis.connection = createConnection(ProposedFeatures.all);\r\n\t\tthis.connection.onInitialize(this.onInitializeConnection.bind(this));\r\n\t\tthis.connection.onInitialized(this.onConnectionInitialized.bind(this));\r\n\t\tthis.connection.onDidChangeConfiguration(this.onDidChangeConfiguration.bind(this));\r\n\t\tthis.connection.onCompletion(this.onCompletion.bind(this));\r\n\t\tthis.connection.onCompletionResolve(this.onCompletionResolve.bind(this));\r\n\r\n\t\tthis.documents.onDidClose(this.onDidClose.bind(this));\r\n\t\tthis.documents.onDidChangeContent(this.onDidChangeContent.bind(this));\r\n\t}\r\n\r\n\tprotected log(message: string) {\r\n\t\tthis.connection.console.log(`[Server(${process.pid})] ${message}`);\r\n\t}\r\n\r\n\tstart() {\r\n\t\tthis.documents.listen(this.connection);\r\n\t\t\r\n\t\tthis.connection.listen();\r\n\t\t\r\n\t\tthis.log(`Started ${this.languageName} Language Server.`);\r\n\t}\r\n\r\n\tprotected onInitializeConnection(params: InitializeParams) {\r\n\t\tconst capabilities = params.capabilities;\r\n\r\n\t\t// Does the client support the `workspace/configuration` request?\r\n\t\t// If not, we fall back using global settings.\r\n\t\tthis.hasConfigurationCapability = !!(\r\n\t\t\tcapabilities.workspace && !!capabilities.workspace.configuration\r\n\t\t);\r\n\r\n\t\tthis.hasWorkspaceFolderCapability = !!(\r\n\t\t\tcapabilities.workspace && !!capabilities.workspace.workspaceFolders\r\n\t\t);\r\n\r\n\t\tthis.hasDiagnosticRelatedInformationCapability = !!(\r\n\t\t\tcapabilities.textDocument &&\r\n\t\t\tcapabilities.textDocument.publishDiagnostics &&\r\n\t\t\tcapabilities.textDocument.publishDiagnostics.relatedInformation\r\n\t\t);\r\n\r\n\t\tconst result: InitializeResult = {\r\n\t\t\tcapabilities: {\r\n\t\t\t\ttextDocumentSync: TextDocumentSyncKind.Incremental,\r\n\t\t\t\t// This server supports code completion.\r\n\t\t\t\tcompletionProvider: {\r\n\t\t\t\t\tresolveProvider: true\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tif (this.hasWorkspaceFolderCapability) {\r\n\t\t\tresult.capabilities.workspace = {\r\n\t\t\t\tworkspaceFolders: {\r\n\t\t\t\t\tsupported: true\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tprotected onConnectionInitialized() {\r\n\t\tif (this.hasConfigurationCapability) {\r\n\t\t\t// Register for all configuration changes.\r\n\t\t\tthis.connection.client.register(DidChangeConfigurationNotification.type, undefined);\r\n\t\t}\r\n\r\n\t\tif (this.hasWorkspaceFolderCapability) {\r\n\t\t\tthis.connection.workspace.onDidChangeWorkspaceFolders(_event => {\r\n\t\t\t\tthis.log('Workspace folder change event received.');\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tprotected onDidChangeConfiguration(change: DidChangeConfigurationParams) {\r\n\t\tthis.log(`Configuration changed.`);\r\n\r\n\t\tif (this.hasConfigurationCapability) {\r\n\t\t\t// Reset all cached document settings.\r\n\t\t\tthis.documentSettings.clear();\r\n\t\t} else {\r\n\t\t\tthis.globalSettings = <ParserSettings>((change.settings.languageServerExample || defaultSettings));\r\n\t\t}\r\n\r\n\t\t// Revalidate all open text documents.\r\n\t\tthis.documents.all().forEach(this.validateTextDocument);\r\n\t}\r\n\r\n\tprotected onDidChangeWatchedFiles(change: DidChangeWatchedFilesParams) {\r\n\t\tthis.log(`Watched files changed.`);\r\n\t}\r\n\r\n\tprotected onDidClose(e: TextDocumentChangeEvent<TextDocument>) {\r\n\t\t// Only keep settings for open documents.\r\n\t\tthis.documentSettings.delete(e.document.uri);\r\n\t}\r\n\r\n\tprotected onDidChangeContent(change: TextDocumentChangeEvent<TextDocument>) {\r\n\t\t// The content of a text document has changed. This event is emitted\r\n\t\t// when the text document first opened or when its content has changed.\r\n\t\tthis.validateTextDocument(change.document);\r\n\t}\r\n\r\n\t/**\r\n\t * Event handler that provides the initial list of the completion items.\r\n\t * @param _textDocumentPosition \r\n\t */\r\n\tprotected abstract onCompletion(_textDocumentPosition: TextDocumentPositionParams): CompletionItem[];\r\n\r\n\t/**\r\n\t * Event handler that resolvesd additional information for the item selected \r\n\t * in the completion list.\r\n\t */\r\n\tprotected onCompletionResolve(item: CompletionItem): CompletionItem {\r\n\t\treturn item;\r\n\t}\r\n\r\n\tprivate _getDocumentSettings(resource: string): Thenable<ParserSettings> {\r\n\t\tif (!this.hasConfigurationCapability) {\r\n\t\t\treturn Promise.resolve(this.globalSettings);\r\n\t\t}\r\n\r\n\t\tlet result = this.documentSettings.get(resource);\r\n\r\n\t\tif (!result) {\r\n\t\t\tresult = this.connection.workspace.getConfiguration({\r\n\t\t\t\tscopeUri: resource,\r\n\t\t\t\tsection: 'mentor.config.languageServer'\r\n\t\t\t});\r\n\r\n\t\t\tthis.documentSettings.set(resource, result);\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tprotected abstract parse(content: string): { tokens: IToken[], errors: any[] };\r\n\r\n\tasync validateTextDocument(document: TextDocument): Promise<void> {\r\n\t\tthis.log(`Validating document: ${document.uri}`);\r\n\r\n\t\t// In this simple example we get the settings for every validate run.\r\n\t\tconst settings = await this._getDocumentSettings(document.uri);\r\n\r\n\t\tlet diagnostics: Diagnostic[] = [];\r\n\r\n\t\tconst content = document.getText();\r\n\r\n\t\tif (content.length) {\r\n\t\t\tconst { tokens, errors } = this.parse(content);\r\n\r\n\t\t\tdiagnostics = [\r\n\t\t\t\t...this.getLexDiagnostics(document, tokens),\r\n\t\t\t\t...this.getParseDiagnostics(document, errors)\r\n\t\t\t];\r\n\t\t}\r\n\r\n\t\treturn this.connection.sendDiagnostics({ uri: document.uri, diagnostics });\r\n\t}\r\n\r\n\tprotected getLexDiagnostics(document: TextDocument, tokens: IToken[]) {\r\n\t\treturn tokens\r\n\t\t\t.filter((res) => res?.tokenType?.tokenName === 'Unknown')\r\n\t\t\t.map(\r\n\t\t\t\t(unknownToken): Diagnostic => ({\r\n\t\t\t\t\tseverity: DiagnosticSeverity.Error,\r\n\t\t\t\t\tmessage: `Unknown token`,\r\n\t\t\t\t\trange: {\r\n\t\t\t\t\t\tstart: document.positionAt(unknownToken.startOffset),\r\n\t\t\t\t\t\tend: document.positionAt((unknownToken.endOffset ?? unknownToken.startOffset) + 1),\r\n\t\t\t\t\t},\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t}\r\n\r\n\tprotected getParseDiagnostics(document: TextDocument, errors: ISemanticError[]) {\r\n\t\tconst content = document.getText();\r\n\r\n\t\treturn errors.map(\r\n\t\t\t(error): Diagnostic => {\r\n\t\t\t\tconst { message, context, token } = error;\r\n\r\n\t\t\t\tconst ruleStack = context ? context.ruleStack : null;\r\n\t\t\t\tconst source =\r\n\t\t\t\t\truleStack && ruleStack.length > 0\r\n\t\t\t\t\t\t? ruleStack[ruleStack.length - 1]\r\n\t\t\t\t\t\t: undefined;\r\n\r\n\t\t\t\tconst constructedDiagnostic: Partial<Diagnostic> = {\r\n\t\t\t\t\tmessage,\r\n\t\t\t\t\tsource,\r\n\t\t\t\t\tseverity: DiagnosticSeverity.Error,\r\n\t\t\t\t};\r\n\r\n\t\t\t\tif (token.tokenType?.tokenName !== 'EOF') {\r\n\t\t\t\t\tconstructedDiagnostic.range = Range.create(\r\n\t\t\t\t\t\tdocument.positionAt(token.startOffset),\r\n\t\t\t\t\t\tdocument.positionAt((token.endOffset ?? token.startOffset) + 1)\r\n\t\t\t\t\t);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconst { previousToken = {} } = error as any; // chevrotain doesn't have this typed fully, but it exists for early exit exceptions\r\n\t\t\t\t\tlet rangeStart;\r\n\t\t\t\t\tlet rangeEnd;\r\n\r\n\t\t\t\t\tif (typeof previousToken.endOffset !== 'undefined') {\r\n\t\t\t\t\t\trangeStart = Math.min(previousToken.endOffset + 1, content.length);\r\n\t\t\t\t\t\trangeEnd = Math.min(previousToken.endOffset + 2, content.length);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\trangeStart = rangeEnd = content.length;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tconstructedDiagnostic.range = Range.create(\r\n\t\t\t\t\t\tdocument.positionAt(rangeStart),\r\n\t\t\t\t\t\tdocument.positionAt(rangeEnd)\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn constructedDiagnostic as Diagnostic;\r\n\t\t\t}\r\n\t\t);\r\n\t}\r\n}"],
  "mappings": "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",
  "names": []
}
