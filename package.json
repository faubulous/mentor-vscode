{
  "name": "mentor",
  "displayName": "Mentor",
  "description": "Code editing support for RDF, RDFS, OWL, SKOS, SHACL and SPARQL.",
  "keywords": [
    "anzo",
    "blazegraph",
    "graphdb",
    "jena",
    "json-ld",
    "knowledge graph",
    "linked data",
    "n3",
    "neptune",
    "nquads",
    "ntriples",
    "ontology",
    "owl",
    "protege",
    "rdf",
    "rdf4j",
    "rdfa",
    "rdfox",
    "rdfs",
    "semantic web",
    "shacl",
    "skos",
    "sparql",
    "stardog",
    "taxonomy",
    "thesaurus",
    "terminology",
    "trig",
    "turtle",
    "vocabulary"
  ],
  "icon": "media/icons/mentor.png",
  "version": "0.2.10",
  "publisher": "faubulous",
  "private": false,
  "license": "GPL-3.0",
  "repository": {
    "type": "git",
    "url": "https://github.com/faubulous/mentor-vscode"
  },
  "engines": {
    "vscode": "^1.90.0"
  },
  "categories": [
    "Programming Languages"
  ],
  "browser": "./out/extension.js",
  "scripts": {
    "clean": "rm -Rf node_modules && rm -Rf out && rm -Rf media/*.woff",
    "build": "node ./build-font.js && node ./build.js",
    "build:watch": "node ./build-font.js && node ./build.js --watch",
    "build:font": "node ./build-font.js",
    "compile": "node ./build-font.js && tsc -p tsconfig.json",
    "package": "node ./build-font.js && node ./build.js --production && vsce package --dependencies -o out/mentor.vsix",
    "package:install": "npm run package && code --install-extension out/mentor.vsix --force",
    "test:web": "vscode-test-web --browserType=chromium --extensionDevelopmentPath=. .",
    "test": "npx jest",
    "lint": "eslint src --ext ts"
  },
  "devDependencies": {
    "@esbuild-plugins/node-globals-polyfill": "^0.2.3",
    "@rdfjs/types": "^2.0.1",
    "@types/jest": "^29.5.14",
    "@types/n3": "^1.24.2",
    "@types/node": "^22.14.0",
    "@types/vscode": "^1.90.0",
    "@typescript-eslint/eslint-plugin": "^8.29.1",
    "@typescript-eslint/parser": "^8.29.1",
    "@vscode/test-web": "^0.0.69",
    "esbuild": "^0.25.2",
    "esbuild-plugin-copy": "^2.0.1",
    "eslint": "^9.24.0",
    "glob": "^11.0.1",
    "svgtofont": "^6.3.2",
    "typescript": "^5.8.3"
  },
  "dependencies": {
    "@comunica/query-sparql-rdfjs-lite": "^4.2.0",
    "@faubulous/mentor-rdf": "^0.2.52",
    "millan": "^5.4.0",
    "n3": "^1.24.2",
    "sax-ts": "^1.2.13",
    "setimmediate": "^1.0.5",
    "vscode-languageclient": "^9.0.1",
    "vscode-languageserver": "^9.0.1",
    "vscode-languageserver-textdocument": "^1.0.11",
    "vscode-uri": "^3.0.8"
  },
  "activationEvents": [
    "onLanguage:xml",
    "onNotebook:mentor-notebook"
  ],
  "contributes": {
    "languages": [
      {
        "id": "ntriples",
        "aliases": [
          "N-Triples",
          "ntriples"
        ],
        "extensions": [
          ".nt",
          ".n3"
        ],
        "configuration": "./out/turtle-language-config.json",
        "icon": {
          "light": "./media/icons/ontology-light.svg",
          "dark": "./media/icons/ontology-dark.svg"
        }
      },
      {
        "id": "nquads",
        "aliases": [
          "N-Quads",
          "nquads"
        ],
        "extensions": [
          ".nq"
        ],
        "configuration": "./out/turtle-language-config.json",
        "icon": {
          "light": "./media/icons/ontology-light.svg",
          "dark": "./media/icons/ontology-dark.svg"
        }
      },
      {
        "id": "turtle",
        "aliases": [
          "Turtle",
          "ttl"
        ],
        "extensions": [
          ".ttl"
        ],
        "configuration": "./out/turtle-language-config.json",
        "icon": {
          "light": "./media/icons/ontology-light.svg",
          "dark": "./media/icons/ontology-dark.svg"
        }
      },
      {
        "id": "trig",
        "aliases": [
          "TriG",
          "trig"
        ],
        "extensions": [
          ".trig"
        ],
        "configuration": "./out/trig-language-config.json",
        "icon": {
          "light": "./media/icons/ontology-light.svg",
          "dark": "./media/icons/ontology-dark.svg"
        }
      },
      {
        "id": "sparql",
        "aliases": [
          "SPARQL",
          "sparql"
        ],
        "extensions": [
          ".sparql",
          ".rq"
        ],
        "configuration": "./out/sparql-language-config.json",
        "icon": {
          "light": "./media/icons/sparql-light.svg",
          "dark": "./media/icons/sparql-dark.svg"
        }
      },
      {
        "id": "xml",
        "aliases": [
          "RDF/XML",
          "rdf/xml"
        ],
        "extensions": [
          ".rdf"
        ],
        "icon": {
          "light": "./media/icons/ontology-light.svg",
          "dark": "./media/icons/ontology-dark.svg"
        }
      }
    ],
    "semanticTokenScopes": [
      {
        "language": "turtle",
        "scopes": {
          "namespace": [
            "storage.modifier.turtle"
          ]
        }
      },
      {
        "language": "trig",
        "scopes": {
          "namespace": [
            "storage.modifier.trig"
          ]
        }
      },
      {
        "language": "sparql",
        "scopes": {
          "namespace": [
            "storage.modifier.turtle"
          ]
        }
      }
    ],
    "icons": {
      "app-mentor": {
        "description": "Mentor icon",
        "default": {
          "fontPath": "./media/mentor-icons.woff",
          "fontCharacter": "\\e000"
        }
      },
      "rdf-class": {
        "description": "Class icon",
        "default": {
          "fontPath": "./media/mentor-icons.woff",
          "fontCharacter": "\\e001"
        }
      },
      "rdf-class-off": {
        "description": "Class icon",
        "default": {
          "fontPath": "./media/mentor-icons.woff",
          "fontCharacter": "\\e007"
        }
      },
      "rdf-class-i": {
        "description": "Instanced class icon",
        "default": {
          "fontPath": "./media/mentor-icons.woff",
          "fontCharacter": "\\e002"
        }
      },
      "rdf-class-ref": {
        "description": "Referenced class icon",
        "default": {
          "fontPath": "./media/mentor-icons.woff",
          "fontCharacter": "\\e003"
        }
      },
      "rdf-class-ref-i": {
        "description": "Instanced referenced class icon",
        "default": {
          "fontPath": "./media/mentor-icons.woff",
          "fontCharacter": "\\e004"
        }
      },
      "rdf-class-ref-off": {
        "description": "Referenced class icon",
        "default": {
          "fontPath": "./media/mentor-icons.woff",
          "fontCharacter": "\\e005"
        }
      },
      "rdf-individual": {
        "description": "Individual icon",
        "default": {
          "fontPath": "./media/mentor-icons.woff",
          "fontCharacter": "\\e006"
        }
      },
      "rdf-concept": {
        "description": "Concept icon",
        "default": {
          "fontPath": "./media/mentor-icons.woff",
          "fontCharacter": "\\e008"
        }
      },
      "rdf-concept-scheme": {
        "description": "Concept scheme icon",
        "default": {
          "fontPath": "./media/mentor-icons.woff",
          "fontCharacter": "\\e009"
        }
      },
      "rdf-ontology": {
        "description": "Ontology icon",
        "default": {
          "fontPath": "./media/mentor-icons.woff",
          "fontCharacter": "\\e00a"
        }
      },
      "rdf-ontology-ref": {
        "description": "Ontology reference icon",
        "default": {
          "fontPath": "./media/mentor-icons.woff",
          "fontCharacter": "\\e00e"
        }
      },
      "rdf-list": {
        "description": "List icon",
        "default": {
          "fontPath": "./media/mentor-icons.woff",
          "fontCharacter": "\\e00b"
        }
      },
      "rdf-tree": {
        "description": "Tree icon",
        "default": {
          "fontPath": "./media/mentor-icons.woff",
          "fontCharacter": "\\e00c"
        }
      },
      "rdf-collection": {
        "description": "Collection icon",
        "default": {
          "fontPath": "./media/mentor-icons.woff",
          "fontCharacter": "\\e00f"
        }
      },
      "rdf-collection-ordered": {
        "description": "Ordered collection icon",
        "default": {
          "fontPath": "./media/mentor-icons.woff",
          "fontCharacter": "\\e010"
        }
      },
      "rdf-object-property": {
        "description": "Object property icon",
        "default": {
          "fontPath": "./media/mentor-icons.woff",
          "fontCharacter": "\\e011"
        }
      },
      "rdf-object-property-ref": {
        "description": "Object property reference icon",
        "default": {
          "fontPath": "./media/mentor-icons.woff",
          "fontCharacter": "\\e012"
        }
      },
      "rdf-shape-node": {
        "description": "Node shape icon",
        "default": {
          "fontPath": "./media/mentor-icons.woff",
          "fontCharacter": "\\e015"
        }
      },
      "rdf-shape-property": {
        "description": "Property shape icon",
        "default": {
          "fontPath": "./media/mentor-icons.woff",
          "fontCharacter": "\\e016"
        }
      },
      "go-to-shape": {
        "description": "Go to shape icon",
        "default": {
          "fontPath": "./media/mentor-icons.woff",
          "fontCharacter": "\\e017"
        }
      },
      "rdf-tree-classes": {
        "description": "Classes tree icon",
        "default": {
          "fontPath": "./media/mentor-icons.woff",
          "fontCharacter": "\\e018"
        }
      },
      "select-language": {
        "description": "Select language icon",
        "default": {
          "fontPath": "./media/mentor-icons.woff",
          "fontCharacter": "\\e019"
        }
      }
    },
    "colors": [
      {
        "id": "mentor.color.concept",
        "description": "Color used for tree nodes representing concepts or concept references.",
        "defaults": {
          "light": "#901485",
          "dark": "#569cd6"
        }
      },
      {
        "id": "mentor.color.class",
        "description": "Color used for tree nodes representing class or class references.",
        "defaults": {
          "light": "#007acc",
          "dark": "#569cd6"
        }
      },
      {
        "id": "mentor.color.individual",
        "description": "Color used for tree nodes representing literals.",
        "defaults": {
          "light": "#007acc",
          "dark": "#569cd6"
        }
      },
      {
        "id": "mentor.color.objectProperty",
        "description": "Color used for tree nodes representing object properties.",
        "defaults": {
          "light": "#006bd5",
          "dark": "#569cd6"
        }
      },
      {
        "id": "mentor.color.dataProperty",
        "description": "Color used for tree nodes representing data property.",
        "defaults": {
          "light": "#a31515",
          "dark": "#ce9178"
        }
      }
    ],
    "views": {
      "mentor": [
        {
          "id": "mentor.view.workspaceTree",
          "name": "Workspace"
        },
        {
          "id": "mentor.view.definitionTree",
          "name": "Definitions"
        }
      ]
    },
    "viewsWelcome": [
      {
        "view": "mentor.view.workspaceTree",
        "contents": "Welcome to the Mentor extension for Visual Studio Code.\n\n This view shows all RDF files in your current workspace for quick access. To get started, create a file with one of the following extensions:\n\n[Open Explorer](command:workbench.view.explorer)\n\n*.ttl, *.trig, *.n3, *.nt, *.nq, *.rdf, *.sparql, *.rq",
        "when": "!mentor.workspace.isInitializing && mentor.workspace.isEmpty"
      }
    ],
    "viewsContainers": {
      "activitybar": [
        {
          "id": "mentor",
          "title": "Mentor",
          "icon": "media/glyphs/0-mentor.svg"
        }
      ]
    },
    "commands": [
      {
        "command": "mentor.action.createNotebook",
        "title": "Mentor: Create Notebook",
        "icon": "$(play)"
      },
      {
        "command": "mentor.action.createNotebookFromFile",
        "title": "Mentor: Create Notebook from File",
        "icon": "$(play)"
      },
      {
        "command": "mentor.action.openDocumentGraph",
        "title": "Mentor: Open a Document Graph"
      },
      {
        "command": "mentor.action.openDocumentInferenceGraph",
        "title": "Mentor: Open the active Document Inference Graph"
      },
      {
        "command": "mentor.action.analyzeWorkspace",
        "title": "Find Problems",
        "icon": "$(debug-alt)"
      },
      {
        "command": "mentor.action.updatePrefixes",
        "title": "Mentor: Update prefix definitions from prefix.cc",
        "icon": "$(cloud-download)"
      },
      {
        "command": "mentor.action.openSettings",
        "title": "Settings",
        "icon": "$(gear)"
      },
      {
        "command": "mentor.action.findReferences",
        "title": "Find All References",
        "group": "navigation"
      },
      {
        "command": "mentor.action.revealDefinition",
        "title": "Go to Definition",
        "icon": "$(go-to-file)"
      },
      {
        "command": "mentor.action.revealShapeDefinition",
        "title": "Go to Shape Definition",
        "icon": "$(go-to-shape)"
      },
      {
        "command": "mentor.action.openInBrowser",
        "title": "Open in Browser",
        "icon": "$(globe)"
      },
      {
        "command": "mentor.action.showAnnotatedLabels",
        "title": "Show Annotated Labels",
        "icon": "$(rdf-label-tag)"
      },
      {
        "command": "mentor.action.showUriLabels",
        "title": "Show URI Labels",
        "icon": "$(rdf-label-uri)"
      },
      {
        "command": "mentor.action.showUriLabelsWithPrefix",
        "title": "Show URI Labels with Prefix",
        "icon": "$(rdf-label-uri)"
      },
      {
        "command": "mentor.action.groupDefinitionsByType",
        "title": "Group by Type"
      },
      {
        "command": "mentor.action.groupDefinitionsBySource",
        "title": "Group by Source of Definition"
      },
      {
        "command": "mentor.action.refreshDefinitionsTree",
        "title": "Refresh",
        "icon": "$(refresh)"
      },
      {
        "command": "mentor.action.showReferences",
        "title": "Show Referenced Resources",
        "icon": "$(rdf-class)"
      },
      {
        "command": "mentor.action.hideReferences",
        "title": "Hide Referenced Resources",
        "icon": "$(rdf-class-ref)"
      },
      {
        "command": "mentor.action.showPropertyTypes",
        "title": "Show Property Types",
        "icon": "$(rdf-tree)"
      },
      {
        "command": "mentor.action.hidePropertyTypes",
        "title": "Hide Property Types",
        "icon": "$(rdf-list)"
      },
      {
        "command": "mentor.action.showIndividualTypes",
        "title": "Show Individual Types",
        "icon": "$(rdf-tree)"
      },
      {
        "command": "mentor.action.hideIndividualTypes",
        "title": "Hide Individual Types",
        "icon": "$(rdf-list)"
      },
      {
        "command": "mentor.action.deletePrefixes",
        "title": "Delete prefix definitions"
      },
      {
        "command": "mentor.action.implementPrefixes",
        "title": "Implement prefix definitions"
      },
      {
        "command": "mentor.action.sortPrefixes",
        "title": "Sort prefix definitions"
      },
      {
        "command": "mentor.action.selectActiveLanguage",
        "title": "Select Active Language",
        "icon": "$(select-language)"
      },
      {
        "command": "mentor.action.highlightNamespaceDefinitions",
        "title": "Mentor: Highlight Namespace Definitions"
      },
      {
        "command": "mentor.action.highlightTypeDefinitions",
        "title": "Mentor: Highlight Type Definitions"
      },
      {
        "command": "mentor.action.highlightTypeAssertions",
        "title": "Mentor: Highlight Type Assertions"
      },
      {
        "command": "mentor.action.highlightReferencedIris",
        "title": "Mentor: Highlight Referenced IRIs"
      }
    ],
    "menus": {
      "editor/title": [
        {
          "command": "mentor.action.createNotebookFromFile",
          "when": "editorLangId == 'sparql'",
          "group": "navigation@3"
        }
      ],
      "view/title": [
        {
          "command": "mentor.action.analyzeWorkspace",
          "when": "view == mentor.view.workspaceTree && !mentor.isInitializing && !mentor.workspace.isIndexing",
          "group": "navigation@3"
        },
        {
          "command": "mentor.action.groupDefinitionsByType",
          "when": "view == mentor.view.definitionTree",
          "group": "2_workspace "
        },
        {
          "command": "mentor.action.groupDefinitionsBySource",
          "when": "view == mentor.view.definitionTree",
          "group": "2_workspace "
        },
        {
          "command": "mentor.action.showAnnotatedLabels",
          "when": "view == mentor.view.definitionTree",
          "group": "4_search"
        },
        {
          "command": "mentor.action.showUriLabels",
          "when": "view == mentor.view.definitionTree",
          "group": "4_search"
        },
        {
          "command": "mentor.action.showUriLabelsWithPrefix",
          "when": "view == mentor.view.definitionTree",
          "group": "4_search"
        },
        {
          "command": "mentor.action.openSettings",
          "group": "z_commands",
          "when": "view == mentor.view.workspaceTree || view == mentor.view.definitionTree"
        },
        {
          "command": "mentor.action.showReferences",
          "when": "view == mentor.view.definitionTree && view.showReferences === false",
          "group": "navigation@2"
        },
        {
          "command": "mentor.action.hideReferences",
          "when": "view == mentor.view.definitionTree && view.showReferences === true",
          "group": "navigation@2"
        },
        {
          "command": "mentor.action.selectActiveLanguage",
          "when": "view == mentor.view.definitionTree",
          "group": "navigation@1"
        },
        {
          "command": "mentor.action.refreshDefinitionsTree",
          "when": "view == mentor.view.definitionTree",
          "group": "navigation@99"
        }
      ],
      "view/item/context": [
        {
          "command": "mentor.action.findReferences",
          "when": "viewItem =~ /resource/",
          "group": "4_search"
        },
        {
          "command": "mentor.action.openInBrowser",
          "when": "viewItem =~ /resource/",
          "group": "z_commands"
        },
        {
          "command": "mentor.action.revealShapeDefinition",
          "when": "viewItem != shapes && viewItem =~ / shape-target/",
          "group": "inline"
        },
        {
          "command": "mentor.action.showPropertyTypes",
          "when": "view.showPropertyTypes === false && viewItem == properties",
          "group": "inline"
        },
        {
          "command": "mentor.action.hidePropertyTypes",
          "when": "view.showPropertyTypes === true && viewItem == properties",
          "group": "inline"
        },
        {
          "command": "mentor.action.showIndividualTypes",
          "when": "view.showIndividualTypes === false && viewItem == individuals",
          "group": "inline"
        },
        {
          "command": "mentor.action.hideIndividualTypes",
          "when": "view.showIndividualTypes === true && viewItem == individuals",
          "group": "inline"
        }
      ]
    },
    "configurationDefaults": {
      "[sparql]": {
        "editor.wordBasedSuggestionsMode": "allDocuments",
        "editor.semanticHighlighting.enabled": true
      },
      "[turtle]": {
        "editor.wordBasedSuggestionsMode": "allDocuments",
        "editor.semanticHighlighting.enabled": true
      },
      "[trig]": {
        "editor.wordBasedSuggestionsMode": "allDocuments",
        "editor.semanticHighlighting.enabled": true
      },
      "[ntriples]": {
        "editor.wordBasedSuggestionsMode": "allDocuments",
        "editor.semanticHighlighting.enabled": true
      },
      "[nquads]": {
        "editor.wordBasedSuggestionsMode": "allDocuments",
        "editor.semanticHighlighting.enabled": true
      }
    },
    "configuration": [
      {
        "type": "object",
        "id": "mentorSettings",
        "title": "Mentor",
        "order": 1,
        "properties": {
          "mentor.definitionTree.labelStyle": {
            "type": "string",
            "title": "Default Tree Label Style",
            "description": "Set the standard style for rendering of tree labels.",
            "enum": [
              "AnnotatedLabels",
              "UriLabels",
              "UriLabelsWithPrefix"
            ],
            "enumDescriptions": [
              "Render labels from the annotated label predicates.",
              "Render the URI path element or fragment of the URI.",
              "Render the URI path element or fragment with namespace prefix."
            ],
            "default": "AnnotatedLabels"
          },
          "mentor.definitionTree.defaultLayout": {
            "type": "string",
            "title": "Default Definitions Tree Layout",
            "description": "Set the standard style for rendering the definitions tree hierarchy.",
            "enum": [
              "GroupByType",
              "GroupBySource"
            ],
            "enumDescriptions": [
              "Group all classes, properties and individuals in the definitions tree under common top level nodes for each type.",
              "Group classes, properties and invdividuals in the definitions tree under seperate nodes for each ontology or concept scheme."
            ],
            "default": "GroupBySource"
          },
          "mentor.definitionTree.defaultLanguageTag": {
            "type": "string",
            "title": "Default Language",
            "description": "Set the default language tag to be used for rendering of labels and descriptions in the definitions tree.",
            "default": "en"
          },
          "mentor.definitionTree.decorateMissingLanguageTags": {
            "type": "string",
            "title": "Decorate Missing Language Tags",
            "description": "Grey out all terms that do not have a value which is tagged in the currently selected language.",
            "enum": [
              "Disabled",
              "All",
              "Document"
            ],
            "enumDescriptions": [
              "Disable the decoration of missing language tags.",
              "Grey out missing language tags for definitions in all sources.",
              "Grey out missing language tags only for definitions in the active document."
            ],
            "default": "Document"
          },
          "mentor.internalBrowserEnabled": {
            "type": "boolean",
            "title": "Open URLs in interal browser",
            "description": "If enabled, URLs will be opened in the internal browser instead of the default browser.",
            "default": true
          },
          "mentor.predicates.label": {
            "type": "array",
            "title": "Label Predicates",
            "description": "Manage the predicates to be used for labels in the tree view for classes, properties and individuals. The first matching predicate will be used.",
            "default": [
              "http://purl.org/dc/terms/title",
              "http://purl.org/dc/elements/1.1/title",
              "http://www.w3.org/2004/02/skos/core#prefLabel",
              "http://www.w3.org/2000/01/rdf-schema#label",
              "https://schema.org/name",
              "http://schema.org/name",
              "http://www.w3.org/ns/shacl#path"
            ]
          },
          "mentor.predicates.description": {
            "type": "array",
            "title": "Description Predicates",
            "description": "Manage the predicates to be used for descriptions in the tree view for classes, properties and individuals. The first matching predicate will be used.",
            "default": [
              "http://www.w3.org/2004/02/skos/core#definition",
              "http://www.w3.org/2000/01/rdf-schema#comment",
              "http://purl.org/dc/terms/description",
              "http://purl.org/dc/terms/abstract",
              "https://schema.org/description",
              "http://schema.org/description",
              "http://www.w3.org/2004/02/skos/core#scopeNote"
            ]
          },
          "mentor.namespaces": {
            "type": "array",
            "title": "Namespaces",
            "description": "Manage the namespace URIs to be used in vocabularies.",
            "items": {
              "type": "object",
              "properties": {
                "uri": {
                  "type": "string",
                  "description": "The namespace URI."
                },
                "defaultPrefix": {
                  "type": "string",
                  "description": "The default abbreviation to be used for the namespace URI if no other is defined."
                }
              }
            },
            "default": [
              {
                "uri": "http://www.w3.org/1999/02/22-rdf-syntax-ns#",
                "defaultPrefix": "rdf"
              },
              {
                "uri": "http://www.w3.org/2000/01/rdf-schema#",
                "defaultPrefix": "rdfs"
              },
              {
                "uri": "http://www.w3.org/ns/rdfa#",
                "defaultPrefix": "rdfa"
              },
              {
                "uri": "http://www.w3.org/2002/07/owl#",
                "defaultPrefix": "owl"
              },
              {
                "uri": "http://www.w3.org/2004/02/skos/core#",
                "defaultPrefix": "skos"
              },
              {
                "uri": "http://schema.org/",
                "defaultPrefix": "schema"
              },
              {
                "uri": "https://schema.org/",
                "defaultPrefix": "schema"
              }
            ]
          },
          "mentor.index.useGitIgnore": {
            "type": "boolean",
            "title": "Use .gitignore",
            "description": "If enabled, the .gitignore file will be used to exclude files and folders from the workspace index.",
            "default": true
          },
          "mentor.index.ignoreFolders": {
            "type": "array",
            "title": "Excluded Folders",
            "description": "Manage the folders that should be skipped when indexing the workspace.",
            "default": [
              ".vscode",
              ".git",
              "node_modules"
            ]
          },
          "mentor.index.maxFileSize": {
            "type": "number",
            "title": "Max File Size",
            "description": "Files above the specified size (bytes) will not be automatically be indexed at application startup to improve performance. References and definitions in larger files will not be available in the text editors. Opening a larger file in an editor or running the 'Analyze Workspace' command will index files above this limit.",
            "default": 1500000
          },
          "mentor.editor.codeLensEnabled": {
            "type": "boolean",
            "title": "Enable Code Lenses",
            "description": "If enabled, the editor will show the number of total references and other metrics for each subject in a document.",
            "default": true
          },
          "mentor.prefixes.autoDefinePrefixes": {
            "type": "boolean",
            "title": "Auto Define Namespaces",
            "description": "If enabled, the extension will automatically declare namespaces in the document header. The namespaces that are defined in workspace documents are used in preference over the ones retrieved from prefix.cc.",
            "default": true
          },
          "mentor.prefixes.prefixDefinitionMode": {
            "type": "string",
            "title": "Prefix Definition Mode",
            "description": "Set the way prefixes are automatically defined in the document header.",
            "enum": [
              "Append",
              "Sorted"
            ],
            "enumDescriptions": [
              "Append new prefixes to the end of the prefix definition list in the document header.",
              "Maintain an alphabetical order of prefixes in the document header."
            ],
            "default": "Sorted"
          }
        },
        "mentor.language.turtle.maxNumberOfProblems": {
          "scope": "resource",
          "type": "number",
          "default": 100,
          "description": "Controls the maximum number of problems produced by the server."
        }
      }
    ],
    "notebooks": [
      {
        "type": "mentor-notebook",
        "displayName": "Mentor Notebook",
        "selector": [
          {
            "filenamePattern": "*.mnb"
          }
        ]
      }
    ]
  }
}
